; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28105.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7F8AB566_vcruntime_new@h DB 01H
__09340588_corecrt_math@h DB 01H
__24E9E95F_stdlib@h DB 01H
__2FC657CE_cstdlib DB 01H
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__5467428D_corecrt_wconio@h DB 01H
__4442441F_corecrt_wio@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__45F4AF76_corecrt_wtime@h DB 01H
__186FF47F_stat@h DB 01H
__534C724A_wchar@h DB 01H
__8A0D8D63_cstddef DB 01H
__289D9ECD_limits DB 01H
__C8593937_type_traits DB 01H
__B0C4CEA9_malloc@h DB 01H
__96AB3BB0_vcruntime_exception@h DB 01H
__A47A247F_exception DB 01H
__35D7DDB3_corecrt_memory@h DB 01H
__A29A7DFB_string@h DB 01H
__F3238959_xutility DB 01H
__725EB186_xmemory DB 01H
__4EB666AB_algorithm DB 01H
__70639AFA_cmath DB 01H
__D64083BB_tuple DB 01H
__2DF72A1A_xpolymorphic_allocator@h DB 01H
__068D371A_xstring DB 01H
__2D341E22_stdexcept DB 01H
__502C2D49_xcall_once@h DB 01H
__EF713F69_system_error DB 01H
__B69C91F9_vcruntime_typeinfo@h DB 01H
__83FC7A40_typeinfo DB 01H
__94339243_memory DB 01H
__B876C54C_xfacet DB 01H
__7242C389_ctype@h DB 01H
__9C759988_xlocinfo DB 01H
__D9B3432B_xlocale DB 01H
__A590EE9B_xiosbase DB 01H
__4734253C_xlocnum DB 01H
__1421D064_ios DB 01H
__113EAA92_xbit_ops@h DB 01H
__1FCC5A9C_xhash DB 01H
__C6677F44_functional DB 01H
__E0E014DF_string DB 01H
__1BF7C1A3_FuncAndBind@cpp DB 01H
__EFD44557_xstddef DB 01H
__EE132E02_initializer_list DB 01H
__A973ACD5_istream DB 01H
__CAA399EF_ostream DB 01H
__2F94A69E_streambuf DB 01H
__E4744B4B_iosfwd DB 01H
__18CBD245_utility DB 01H
__AE76A8A9_xatomic@h DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?run@FuncAndBind@@QEAAXXZ			; FuncAndBind::run
PUBLIC	?foo@FuncAndBind@@AEAAXXZ			; FuncAndBind::foo
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??0?$tuple@$$V@std@@QEAA@AEBV01@@Z		; std::tuple<>::tuple<>
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ; std::_Narrow_char_traits<char,int>::compare
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy
PUBLIC	?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??$forward@H@std@@YA$$QEAHAEAH@Z		; std::forward<int>
PUBLIC	??$forward_as_tuple@HH@std@@YA?AV?$tuple@$$QEAH$$QEAH@0@$$QEAH0@Z ; std::forward_as_tuple<int,int>
PUBLIC	??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z ; std::move<std::tuple<int &&,int &&> &>
PUBLIC	??$get@$0A@$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ; std::get<0,int &&,int &&>
PUBLIC	??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SA$$QEAHAEAU?$_Ph@$00@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z ; std::_Select_fixer<std::_Ph<1>,0,0,1>::_Fix<std::tuple<int &&,int &&> >
PUBLIC	??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$00@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ; std::_Fix_arg<std::_Ph<1>,std::tuple<int &&,int &&> >
PUBLIC	??$get@$00$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ; std::get<1,int &&,int &&>
PUBLIC	??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$01@std@@$0A@$0A@$01@std@@SA$$QEAHAEAU?$_Ph@$01@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z ; std::_Select_fixer<std::_Ph<2>,0,0,2>::_Fix<std::tuple<int &&,int &&> >
PUBLIC	??$_Fix_arg@U?$_Ph@$01@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$01@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ; std::_Fix_arg<std::_Ph<2>,std::tuple<int &&,int &&> >
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??R?$less@H@std@@QEBA_NAEBH0@Z			; std::less<int>::operator()
PUBLIC	??0?$initializer_list@H@std@@QEAA@PEBH0@Z	; std::initializer_list<int>::initializer_list<int>
PUBLIC	?begin@?$initializer_list@H@std@@QEBAPEBHXZ	; std::initializer_list<int>::begin
PUBLIC	?end@?$initializer_list@H@std@@QEBAPEBHXZ	; std::initializer_list<int>::end
PUBLIC	?__autoclassinit2@?$initializer_list@H@std@@QEAAX_K@Z ; std::initializer_list<int>::__autoclassinit2
PUBLIC	??$bind@U?$less@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$less@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z ; std::bind<std::less<int>,std::_Ph<1> const &,int>
PUBLIC	??0?$tuple@H@std@@QEAA@AEBV01@@Z		; std::tuple<int>::tuple<int>
PUBLIC	??0?$tuple@H@std@@QEAA@$$QEAV01@@Z		; std::tuple<int>::tuple<int>
PUBLIC	??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBV01@@Z ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int>
PUBLIC	??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@$$QEAV01@@Z ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int>
PUBLIC	?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$less@H@2@XZ ; std::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>::_Get_first
PUBLIC	??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z ; std::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>
PUBLIC	??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z ; std::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>
PUBLIC	??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>
PUBLIC	??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>
PUBLIC	??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>
PUBLIC	??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@@Z ; std::count_if<int const *,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
PUBLIC	??R?$less@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::operator()
PUBLIC	??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??R?$logical_and@_N@std@@QEBA_NAEB_N0@Z		; std::logical_and<bool>::operator()
PUBLIC	??R?$greater@H@std@@QEBA_NAEBH0@Z		; std::greater<int>::operator()
PUBLIC	??$bind@U?$greater@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$greater@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z ; std::bind<std::greater<int>,std::_Ph<1> const &,int>
PUBLIC	?_Get_first@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$greater@H@2@XZ ; std::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>::_Get_first
PUBLIC	??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z ; std::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>
PUBLIC	??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z ; std::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>
PUBLIC	??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z ; std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>
PUBLIC	??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z ; std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>
PUBLIC	??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z ; std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>
PUBLIC	??$bind@U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YA?AV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAU?$logical_and@_N@0@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@@Z ; std::bind<std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
PUBLIC	??0?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBV01@@Z ; std::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
PUBLIC	??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z ; std::_Tuple_val<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::_Tuple_val<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
PUBLIC	??0?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z ; std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
PUBLIC	??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z ; std::_Tuple_val<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >::_Tuple_val<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
PUBLIC	?_Get_first@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAAAEAU?$logical_and@_N@2@XZ ; std::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1>::_Get_first
PUBLIC	??0?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@AEBV01@@Z ; std::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1>::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1>
PUBLIC	??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ; std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
PUBLIC	??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z ; std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
PUBLIC	??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z ; std::count_if<int const *,std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> > >
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z ; std::_Traits_compare<std::char_traits<char> >
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Max_value<unsigned __int64>
PUBLIC	??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
PUBLIC	??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z ; std::forward<std::_Ph<2> const &>
PUBLIC	??$forward@U?$less@H@std@@@std@@YA$$QEAU?$less@H@0@AEAU10@@Z ; std::forward<std::less<int> >
PUBLIC	??$_Adl_verify_range@PEBHPEBH@std@@YAXAEBQEBH0@Z ; std::_Adl_verify_range<int const *,int const *>
PUBLIC	??$_Get_unwrapped@$$CBH@std@@YAPEBHQEBH@Z	; std::_Get_unwrapped<int const >
PUBLIC	??$forward@AEBH@std@@YAAEBHAEBH@Z		; std::forward<int const &>
PUBLIC	??$forward_as_tuple@AEBH@std@@YA?AV?$tuple@AEBH@0@AEBH@Z ; std::forward_as_tuple<int const &>
PUBLIC	??$get@$0A@U?$_Ph@$00@std@@H@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z ; std::get<0,std::_Ph<1>,int>
PUBLIC	??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
PUBLIC	??$get@$0A@AEBH@std@@YAAEBH$$QEAV?$tuple@AEBH@0@@Z ; std::get<0,int const &>
PUBLIC	??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SAAEBHAEAU?$_Ph@$00@1@$$QEAV?$tuple@AEBH@1@@Z ; std::_Select_fixer<std::_Ph<1>,0,0,1>::_Fix<std::tuple<int const &> >
PUBLIC	??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@AEBH@2@@std@@YAAEBHAEAU?$_Ph@$00@0@$$QEAV?$tuple@AEBH@0@@Z ; std::_Fix_arg<std::_Ph<1>,std::tuple<int const &> >
PUBLIC	??$get@$00U?$_Ph@$00@std@@H@std@@YAAEAHAEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z ; std::get<1,std::_Ph<1>,int>
PUBLIC	??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@H$0A@$0A@$0A@@std@@SAAEAHAEAH$$QEAV?$tuple@AEBH@1@@Z ; std::_Select_fixer<int,0,0,0>::_Fix<std::tuple<int const &> >
PUBLIC	??$_Fix_arg@HV?$tuple@AEBH@std@@@std@@YAAEAHAEAH$$QEAV?$tuple@AEBH@0@@Z ; std::_Fix_arg<int,std::tuple<int const &> >
PUBLIC	??$forward@AEAU?$less@H@std@@@std@@YAAEAU?$less@H@0@AEAU10@@Z ; std::forward<std::less<int> &>
PUBLIC	??$forward@AEAH@std@@YAAEAHAEAH@Z		; std::forward<int &>
PUBLIC	??$_Call@AEAU?$less@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z ; std::_Invoker_functor::_Call<std::less<int> &,int const &,int &>
PUBLIC	??$invoke@AEAU?$less@H@std@@AEBHAEAH@std@@YA_NAEAU?$less@H@0@AEBHAEAH@Z ; std::invoke<std::less<int> &,int const &,int &>
PUBLIC	??$_Call@AEAU?$less@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z ; std::_Invoker_ret<std::_Unforced,0>::_Call<std::less<int> &,int const &,int &>
PUBLIC	??$_Call_binder@U_Unforced@std@@$0A@$00U?$less@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$less@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z ; std::_Call_binder<std::_Unforced,0,1,std::less<int>,std::tuple<std::_Ph<1>,int>,std::tuple<int const &> >
PUBLIC	??$?RAEBH@?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::operator()<int const &>
PUBLIC	??$forward@U?$greater@H@std@@@std@@YA$$QEAU?$greater@H@0@AEAU10@@Z ; std::forward<std::greater<int> >
PUBLIC	??$forward@U?$logical_and@_N@std@@@std@@YA$$QEAU?$logical_and@_N@0@AEAU10@@Z ; std::forward<std::logical_and<bool> >
PUBLIC	??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
PUBLIC	??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
PUBLIC	??$get@$0A@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z ; std::get<0,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
PUBLIC	??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z ; std::_Select_fixer<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,0,1,0>::_Apply<std::tuple<int const &>,0>
PUBLIC	??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z ; std::_Select_fixer<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,0,1,0>::_Fix<std::tuple<int const &> >
PUBLIC	??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z ; std::_Fix_arg<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::tuple<int const &> >
PUBLIC	??$get@$00V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z ; std::get<1,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
PUBLIC	??$forward@AEAU?$greater@H@std@@@std@@YAAEAU?$greater@H@0@AEAU10@@Z ; std::forward<std::greater<int> &>
PUBLIC	??$_Call@AEAU?$greater@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z ; std::_Invoker_functor::_Call<std::greater<int> &,int const &,int &>
PUBLIC	??$invoke@AEAU?$greater@H@std@@AEBHAEAH@std@@YA_NAEAU?$greater@H@0@AEBHAEAH@Z ; std::invoke<std::greater<int> &,int const &,int &>
PUBLIC	??$_Call@AEAU?$greater@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z ; std::_Invoker_ret<std::_Unforced,0>::_Call<std::greater<int> &,int const &,int &>
PUBLIC	??$_Call_binder@U_Unforced@std@@$0A@$00U?$greater@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$greater@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z ; std::_Call_binder<std::_Unforced,0,1,std::greater<int>,std::tuple<std::_Ph<1>,int>,std::tuple<int const &> >
PUBLIC	??$?RAEBH@?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z ; std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>::operator()<int const &>
PUBLIC	??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z ; std::_Select_fixer<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0,1,0>::_Apply<std::tuple<int const &>,0>
PUBLIC	??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z ; std::_Select_fixer<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0,1,0>::_Fix<std::tuple<int const &> >
PUBLIC	??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z ; std::_Fix_arg<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,std::tuple<int const &> >
PUBLIC	??$forward@AEAU?$logical_and@_N@std@@@std@@YAAEAU?$logical_and@_N@0@AEAU10@@Z ; std::forward<std::logical_and<bool> &>
PUBLIC	??$forward@_N@std@@YA$$QEA_NAEA_N@Z		; std::forward<bool>
PUBLIC	??$_Call@AEAU?$logical_and@_N@std@@_N_N@_Invoker_functor@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z ; std::_Invoker_functor::_Call<std::logical_and<bool> &,bool,bool>
PUBLIC	??$invoke@AEAU?$logical_and@_N@std@@_N_N@std@@YA_NAEAU?$logical_and@_N@0@$$QEA_N1@Z ; std::invoke<std::logical_and<bool> &,bool,bool>
PUBLIC	??$_Call@AEAU?$logical_and@_N@std@@_N_N@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z ; std::_Invoker_ret<std::_Unforced,0>::_Call<std::logical_and<bool> &,bool,bool>
PUBLIC	??$_Call_binder@U_Unforced@std@@$0A@$00U?$logical_and@_N@2@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$logical_and@_N@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAV?$tuple@AEBH@0@@Z ; std::_Call_binder<std::_Unforced,0,1,std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,std::tuple<int const &> >
PUBLIC	??$?RAEBH@?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA_NAEBH@Z ; std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::operator()<int const &>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$?0U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ; std::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1>::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1><std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
PUBLIC	??$?0U?$greater@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z ; std::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1><std::greater<int>,std::_Ph<1> const &,int>
PUBLIC	??$?0U?$less@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z ; std::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1><std::less<int>,std::_Ph<1> const &,int>
PUBLIC	??$?0HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@$$QEAH0@Z ; std::tuple<int &&,int &&>::tuple<int &&,int &&><int,int,0>
PUBLIC	??$_Verify_range@H@std@@YAXQEBH0@Z		; std::_Verify_range<int>
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ; std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0>
PUBLIC	??$?0AEBU?$_Ph@$00@std@@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBU?$_Ph@$00@1@$$QEAH@Z ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int><std::_Ph<1> const &,int,0>
PUBLIC	??$?0AEBH$0A@@?$tuple@AEBH@std@@QEAA@AEBH@Z	; std::tuple<int const &>::tuple<int const &><int const &,0>
PUBLIC	??$?0U_Exact_args_t@std@@HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH1@Z ; std::tuple<int &&,int &&>::tuple<int &&,int &&><std::_Exact_args_t,int,int,0>
PUBLIC	??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ; std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Exact_args_t,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0>
PUBLIC	??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@$$QEAH@Z ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int><std::_Exact_args_t,std::_Ph<1> const &,int,0>
PUBLIC	??$?0U_Exact_args_t@std@@AEBH$$V$0A@@?$tuple@AEBH@std@@QEAA@U_Exact_args_t@1@AEBH@Z ; std::tuple<int const &>::tuple<int const &><std::_Exact_args_t,int const &,0>
PUBLIC	??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z ; std::tuple<int &&>::tuple<int &&><std::_Exact_args_t,int,0>
PUBLIC	??$?0H@?$_Tuple_val@$$QEAH@std@@QEAA@$$QEAH@Z	; std::_Tuple_val<int &&>::_Tuple_val<int &&><int>
PUBLIC	??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$V$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ; std::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Exact_args_t,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0>
PUBLIC	??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@@Z ; std::_Tuple_val<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >::_Tuple_val<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> ><std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
PUBLIC	??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@H@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z ; std::tuple<int>::tuple<int><std::_Exact_args_t,int,0>
PUBLIC	??$?0AEBU?$_Ph@$00@std@@@?$_Tuple_val@U?$_Ph@$00@std@@@std@@QEAA@AEBU?$_Ph@$00@1@@Z ; std::_Tuple_val<std::_Ph<1> >::_Tuple_val<std::_Ph<1> ><std::_Ph<1> const &>
PUBLIC	??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@U?$_Ph@$00@std@@U?$_Ph@$01@2@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z ; std::tuple<std::_Ph<1>,std::_Ph<2> >::tuple<std::_Ph<1>,std::_Ph<2> ><std::_Exact_args_t,std::_Ph<1> const &,std::_Ph<2> const &,0>
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$?0AEBH@?$_Tuple_val@AEBH@std@@QEAA@AEBH@Z	; std::_Tuple_val<int const &>::_Tuple_val<int const &><int const &>
PUBLIC	??$?0V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ; std::_Tuple_val<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::_Tuple_val<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
PUBLIC	??$?0H@?$_Tuple_val@H@std@@QEAA@$$QEAH@Z	; std::_Tuple_val<int>::_Tuple_val<int><int>
PUBLIC	??$?0U_Exact_args_t@std@@AEBU?$_Ph@$01@1@$$V$0A@@?$tuple@U?$_Ph@$01@std@@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$01@1@@Z ; std::tuple<std::_Ph<2> >::tuple<std::_Ph<2> ><std::_Exact_args_t,std::_Ph<2> const &,0>
PUBLIC	??$?0AEBU?$_Ph@$01@std@@@?$_Tuple_val@U?$_Ph@$01@std@@@std@@QEAA@AEBU?$_Ph@$01@1@@Z ; std::_Tuple_val<std::_Ph<2> >::_Tuple_val<std::_Ph<2> ><std::_Ph<2> const &>
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	?_1@placeholders@std@@3U?$_Ph@$00@2@B		; std::placeholders::_1
PUBLIC	?_2@placeholders@std@@3U?$_Ph@$01@2@B		; std::placeholders::_2
PUBLIC	??_C@_0L@PILJELGE@1?5count?3?$DN?5@		; `string'
PUBLIC	??_C@_04HOPFPECK@yyyy@				; `string'
PUBLIC	??_C@_04ODPAOBIJ@xxxx@				; `string'
PUBLIC	??_C@_09COJLMHPP@yyyy00000@			; `string'
PUBLIC	??_C@_09HJKHIHIA@xxxxyyyyy@			; `string'
PUBLIC	??_C@_06OBIAKENG@a2?5?3?$DN?5@			; `string'
PUBLIC	??_C@_06NAGILOEL@b2?5?3?$DN?5@			; `string'
PUBLIC	??_C@_0L@GBFLCNGF@2?5count?3?$DN?5@		; `string'
PUBLIC	??_C@_0GK@FAHAKJIH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@	; `string'
PUBLIC	??_C@_1NE@PFDEEMPK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ ; `string'
PUBLIC	??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_N@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	memcmp:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?run@FuncAndBind@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?run@FuncAndBind@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?foo@FuncAndBind@@AEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+1343
	DD	imagerel $unwind$?foo@FuncAndBind@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??foo@FuncAndBind@@AEAAXXZ@4HA DD imagerel ?dtor$0@?0??foo@FuncAndBind@@AEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??foo@FuncAndBind@@AEAAXXZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??foo@FuncAndBind@@AEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??foo@FuncAndBind@@AEAAXXZ@4HA DD imagerel ?dtor$1@?0??foo@FuncAndBind@@AEAAXXZ@4HA
	DD	imagerel ?dtor$1@?0??foo@FuncAndBind@@AEAAXXZ@4HA+39
	DD	imagerel $unwind$?dtor$1@?0??foo@FuncAndBind@@AEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0??foo@FuncAndBind@@AEAAXXZ@4HA DD imagerel ?dtor$2@?0??foo@FuncAndBind@@AEAAXXZ@4HA
	DD	imagerel ?dtor$2@?0??foo@FuncAndBind@@AEAAXXZ@4HA+39
	DD	imagerel $unwind$?dtor$2@?0??foo@FuncAndBind@@AEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+148
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+476
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+237
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+147
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tuple@$$V@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??0?$tuple@$$V@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+124
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+143
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+132
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+122
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+122
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+107
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+271
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+220
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+236
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+232
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+186
	DD	imagerel $unwind$?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+273
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+139
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+261
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?foo@A@?1??0FuncAndBind@@AEAAXXZ@QEAAHHH@Z DD imagerel ?foo@A@?1??0FuncAndBind@@AEAAXXZ@QEAAHHH@Z
	DD	imagerel ?foo@A@?1??0FuncAndBind@@AEAAXXZ@QEAAHHH@Z+89
	DD	imagerel $unwind$?foo@A@?1??0FuncAndBind@@AEAAXXZ@QEAAHHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$bind@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV1?1??23@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@5@@std@@YA?AV?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@0@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@0@AEBU?$_Ph@$01@0@@Z DD imagerel ??$bind@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV1?1??23@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@5@@std@@YA?AV?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@0@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@0@AEBU?$_Ph@$01@0@@Z
	DD	imagerel ??$bind@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV1?1??23@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@5@@std@@YA?AV?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@0@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@0@AEBU?$_Ph@$01@0@@Z+207
	DD	imagerel $unwind$??$bind@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV1?1??23@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@5@@std@@YA?AV?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@0@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@0@AEBU?$_Ph@$01@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZXZ DD imagerel ?_Get_first@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZXZ
	DD	imagerel ?_Get_first@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZXZ+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAA@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z DD imagerel ??0?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAA@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
	DD	imagerel ??0?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAA@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z+285
	DD	imagerel $unwind$??0?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAA@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@H@std@@YA$$QEAHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@H@std@@YA$$QEAHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward_as_tuple@HH@std@@YA?AV?$tuple@$$QEAH$$QEAH@0@$$QEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$??$forward_as_tuple@HH@std@@YA?AV?$tuple@$$QEAH$$QEAH@0@$$QEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$0A@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z DD imagerel ??$get@$0A@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
	DD	imagerel ??$get@$0A@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z+76
	DD	imagerel $unwind$??$get@$0A@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@$0A@$0A@$0A@@std@@SAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV2?1??34@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z DD imagerel ??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@$0A@$0A@$0A@@std@@SAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV2?1??34@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z
	DD	imagerel ??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@$0A@$0A@$0A@@std@@SAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV2?1??34@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z+76
	DD	imagerel $unwind$??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@$0A@$0A@$0A@@std@@SAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV2?1??34@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fix_arg@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@V?$tuple@$$QEAH$$QEAH@std@@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DD imagerel ??$_Fix_arg@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@V?$tuple@$$QEAH$$QEAH@std@@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
	DD	imagerel ??$_Fix_arg@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@V?$tuple@$$QEAH$$QEAH@std@@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z+96
	DD	imagerel $unwind$??$_Fix_arg@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@V?$tuple@$$QEAH$$QEAH@std@@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$00PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z DD imagerel ??$get@$00PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
	DD	imagerel ??$get@$00PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z+75
	DD	imagerel $unwind$??$get@$00PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$0A@$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$get@$0A@$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SA$$QEAHAEAU?$_Ph@$00@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SA$$QEAHAEAU?$_Ph@$00@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$00@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$00@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$01PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$01@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z DD imagerel ??$get@$01PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$01@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
	DD	imagerel ??$get@$01PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$01@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z+72
	DD	imagerel $unwind$??$get@$01PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$01@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$00$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$get@$00$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$01@std@@$0A@$0A@$01@std@@SA$$QEAHAEAU?$_Ph@$01@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$01@std@@$0A@$0A@$01@std@@SA$$QEAHAEAU?$_Ph@$01@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fix_arg@U?$_Ph@$01@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$01@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$_Fix_arg@U?$_Ph@$01@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$01@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z DD imagerel ??$forward@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z
	DD	imagerel ??$forward@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z+72
	DD	imagerel $unwind$??$forward@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z DD imagerel ??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z
	DD	imagerel ??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z+72
	DD	imagerel $unwind$??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@_Invoker_pmf_pointer@std@@SAHP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z DD imagerel ??$_Call@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@_Invoker_pmf_pointer@std@@SAHP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z
	DD	imagerel ??$_Call@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@_Invoker_pmf_pointer@std@@SAHP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z+181
	DD	imagerel $unwind$??$_Call@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@_Invoker_pmf_pointer@std@@SAHP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@std@@YAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@$$QEAH2@Z DD imagerel ??$invoke@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@std@@YAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@$$QEAH2@Z
	DD	imagerel ??$invoke@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@std@@YAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@$$QEAH2@Z+191
	DD	imagerel $unwind$??$invoke@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@std@@YAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@$$QEAH2@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z DD imagerel ??$_Call@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z
	DD	imagerel ??$_Call@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z+188
	DD	imagerel $unwind$??$_Call@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call_binder@U_Unforced@std@@$0A@$00$01P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@2@V?$tuple@$$QEAH$$QEAH@2@@std@@YAHU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00$01@0@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DD imagerel ??$_Call_binder@U_Unforced@std@@$0A@$00$01P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@2@V?$tuple@$$QEAH$$QEAH@2@@std@@YAHU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00$01@0@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
	DD	imagerel ??$_Call_binder@U_Unforced@std@@$0A@$00$01P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@2@V?$tuple@$$QEAH$$QEAH@2@@std@@YAHU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00$01@0@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z+302
	DD	imagerel $unwind$??$_Call_binder@U_Unforced@std@@$0A@$00$01P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@2@V?$tuple@$$QEAH$$QEAH@2@@std@@YAHU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00$01@0@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RHH@?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAAH$$QEAH0@Z DD imagerel ??$?RHH@?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAAH$$QEAH0@Z
	DD	imagerel ??$?RHH@?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAAH$$QEAH0@Z+271
	DD	imagerel $unwind$??$?RHH@?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAAH$$QEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN25
	DD	imagerel $LN25+1124
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+91
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$less@H@std@@QEBA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+123
	DD	imagerel $unwind$??R?$less@H@std@@QEBA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$initializer_list@H@std@@QEAA@PEBH0@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??0?$initializer_list@H@std@@QEAA@PEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$initializer_list@H@std@@QEBAPEBHXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?begin@?$initializer_list@H@std@@QEBAPEBHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$initializer_list@H@std@@QEBAPEBHXZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?end@?$initializer_list@H@std@@QEBAPEBHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$initializer_list@H@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?__autoclassinit2@?$initializer_list@H@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$bind@U?$less@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$less@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+176
	DD	imagerel $unwind$??$bind@U?$less@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$less@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tuple@H@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$??0?$tuple@H@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tuple@H@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$??0?$tuple@H@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+118
	DD	imagerel $unwind$??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+118
	DD	imagerel $unwind$??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$less@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$less@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+241
	DD	imagerel $unwind$??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+197
	DD	imagerel $unwind$??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$less@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??R?$less@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z DD imagerel $LN5
	DD	imagerel $LN5+123
	DD	imagerel $unwind$??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$logical_and@_N@std@@QEBA_NAEB_N0@Z DD imagerel $LN5
	DD	imagerel $LN5+131
	DD	imagerel $unwind$??R?$logical_and@_N@std@@QEBA_NAEB_N0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$greater@H@std@@QEBA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+123
	DD	imagerel $unwind$??R?$greater@H@std@@QEBA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$bind@U?$greater@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$greater@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+176
	DD	imagerel $unwind$??$bind@U?$greater@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$greater@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$greater@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$greater@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+241
	DD	imagerel $unwind$??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$bind@U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YA?AV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAU?$logical_and@_N@0@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+176
	DD	imagerel $unwind$??$bind@U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YA?AV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAU?$logical_and@_N@0@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+134
	DD	imagerel $unwind$??0?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+142
	DD	imagerel $unwind$??0?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAAAEAU?$logical_and@_N@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAAAEAU?$logical_and@_N@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+241
	DD	imagerel $unwind$??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+197
	DD	imagerel $unwind$??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+171
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+284
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+108
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+195
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z DD imagerel $LN6
	DD	imagerel $LN6+185
	DD	imagerel $unwind$??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+143
	DD	imagerel $unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z DD imagerel $LN3
	DD	imagerel $LN3+147
	DD	imagerel $unwind$??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+418
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+117
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+123
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+114
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z DD imagerel ??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z
	DD	imagerel ??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z+72
	DD	imagerel $unwind$??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z DD imagerel ??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z
	DD	imagerel ??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z+72
	DD	imagerel $unwind$??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$less@H@std@@@std@@YA$$QEAU?$less@H@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@U?$less@H@std@@@std@@YA$$QEAU?$less@H@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@PEBHPEBH@std@@YAXAEBQEBH0@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$??$_Adl_verify_range@PEBHPEBH@std@@YAXAEBQEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@$$CBH@std@@YAPEBHQEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Get_unwrapped@$$CBH@std@@YAPEBHQEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBH@std@@YAAEBHAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEBH@std@@YAAEBHAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward_as_tuple@AEBH@std@@YA?AV?$tuple@AEBH@0@AEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+106
	DD	imagerel $unwind$??$forward_as_tuple@AEBH@std@@YA?AV?$tuple@AEBH@0@AEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$0A@U?$_Ph@$00@std@@H@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$get@$0A@U?$_Ph@$00@std@@H@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$0A@AEBH@std@@YAAEBH$$QEAV?$tuple@AEBH@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$get@$0A@AEBH@std@@YAAEBH$$QEAV?$tuple@AEBH@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SAAEBHAEAU?$_Ph@$00@1@$$QEAV?$tuple@AEBH@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SAAEBHAEAU?$_Ph@$00@1@$$QEAV?$tuple@AEBH@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@AEBH@2@@std@@YAAEBHAEAU?$_Ph@$00@0@$$QEAV?$tuple@AEBH@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@AEBH@2@@std@@YAAEBHAEAU?$_Ph@$00@0@$$QEAV?$tuple@AEBH@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$00U?$_Ph@$00@std@@H@std@@YAAEAHAEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$get@$00U?$_Ph@$00@std@@H@std@@YAAEAHAEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@H$0A@$0A@$0A@@std@@SAAEAHAEAH$$QEAV?$tuple@AEBH@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@H$0A@$0A@$0A@@std@@SAAEAHAEAH$$QEAV?$tuple@AEBH@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fix_arg@HV?$tuple@AEBH@std@@@std@@YAAEAHAEAH$$QEAV?$tuple@AEBH@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$_Fix_arg@HV?$tuple@AEBH@std@@@std@@YAAEAHAEAH$$QEAV?$tuple@AEBH@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAU?$less@H@std@@@std@@YAAEAU?$less@H@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEAU?$less@H@std@@@std@@YAAEAU?$less@H@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAH@std@@YAAEAHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEAH@std@@YAAEAHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@AEAU?$less@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$??$_Call@AEAU?$less@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@AEAU?$less@H@std@@AEBHAEAH@std@@YA_NAEAU?$less@H@0@AEBHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$??$invoke@AEAU?$less@H@std@@AEBHAEAH@std@@YA_NAEAU?$less@H@0@AEBHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@AEAU?$less@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$??$_Call@AEAU?$less@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call_binder@U_Unforced@std@@$0A@$00U?$less@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$less@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+231
	DD	imagerel $unwind$??$_Call_binder@U_Unforced@std@@$0A@$00U?$less@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$less@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RAEBH@?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+225
	DD	imagerel $unwind$??$?RAEBH@?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$greater@H@std@@@std@@YA$$QEAU?$greater@H@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@U?$greater@H@std@@@std@@YA$$QEAU?$greater@H@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@U?$logical_and@_N@std@@@std@@YA$$QEAU?$logical_and@_N@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@U?$logical_and@_N@std@@@std@@YA$$QEAU?$logical_and@_N@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$0A@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$get@$0A@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$00V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$get@$00V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAU?$greater@H@std@@@std@@YAAEAU?$greater@H@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEAU?$greater@H@std@@@std@@YAAEAU?$greater@H@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@AEAU?$greater@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$??$_Call@AEAU?$greater@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@AEAU?$greater@H@std@@AEBHAEAH@std@@YA_NAEAU?$greater@H@0@AEBHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$??$invoke@AEAU?$greater@H@std@@AEBHAEAH@std@@YA_NAEAU?$greater@H@0@AEBHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@AEAU?$greater@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$??$_Call@AEAU?$greater@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call_binder@U_Unforced@std@@$0A@$00U?$greater@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$greater@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+231
	DD	imagerel $unwind$??$_Call_binder@U_Unforced@std@@$0A@$00U?$greater@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$greater@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RAEBH@?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+225
	DD	imagerel $unwind$??$?RAEBH@?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAU?$logical_and@_N@std@@@std@@YAAEAU?$logical_and@_N@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEAU?$logical_and@_N@std@@@std@@YAAEAU?$logical_and@_N@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@_N@std@@YA$$QEA_NAEA_N@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@_N@std@@YA$$QEA_NAEA_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@AEAU?$logical_and@_N@std@@_N_N@_Invoker_functor@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$??$_Call@AEAU?$logical_and@_N@std@@_N_N@_Invoker_functor@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@AEAU?$logical_and@_N@std@@_N_N@std@@YA_NAEAU?$logical_and@_N@0@$$QEA_N1@Z DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$??$invoke@AEAU?$logical_and@_N@std@@_N_N@std@@YA_NAEAU?$logical_and@_N@0@$$QEA_N1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@AEAU?$logical_and@_N@std@@_N_N@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z DD imagerel $LN3
	DD	imagerel $LN3+157
	DD	imagerel $unwind$??$_Call@AEAU?$logical_and@_N@std@@_N_N@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call_binder@U_Unforced@std@@$0A@$00U?$logical_and@_N@2@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$logical_and@_N@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAV?$tuple@AEBH@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+229
	DD	imagerel $unwind$??$_Call_binder@U_Unforced@std@@$0A@$00U?$logical_and@_N@2@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$logical_and@_N@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAV?$tuple@AEBH@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RAEBH@?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA_NAEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+225
	DD	imagerel $unwind$??$?RAEBH@?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA_NAEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+300
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+175
	DD	imagerel $unwind$??$?0U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$greater@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+175
	DD	imagerel $unwind$??$?0U?$greater@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$less@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+175
	DD	imagerel $unwind$??$?0U?$less@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV0?1??12@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z DD imagerel ??$?0P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV0?1??12@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
	DD	imagerel ??$?0P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV0?1??12@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z+218
	DD	imagerel $unwind$??$?0P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV0?1??12@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@$$QEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+201
	DD	imagerel $unwind$??$?0HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@$$QEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Verify_range@H@std@@YAXQEBH0@Z DD imagerel $LN12
	DD	imagerel $LN12+207
	DD	imagerel $unwind$??$_Verify_range@H@std@@YAXQEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+201
	DD	imagerel $unwind$??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBU?$_Ph@$00@std@@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBU?$_Ph@$00@1@$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+201
	DD	imagerel $unwind$??$?0AEBU?$_Ph@$00@std@@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBU?$_Ph@$00@1@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z DD imagerel ??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
	DD	imagerel ??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z+251
	DD	imagerel $unwind$??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBH$0A@@?$tuple@AEBH@std@@QEAA@AEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$??$?0AEBH$0A@@?$tuple@AEBH@std@@QEAA@AEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH1@Z DD imagerel $LN3
	DD	imagerel $LN3+207
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+207
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+207
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z DD imagerel ??$?0U_Exact_args_t@std@@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
	DD	imagerel ??$?0U_Exact_args_t@std@@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z+246
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@AEBH$$V$0A@@?$tuple@AEBH@std@@QEAA@U_Exact_args_t@1@AEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@AEBH$$V$0A@@?$tuple@AEBH@std@@QEAA@U_Exact_args_t@1@AEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0H@?$_Tuple_val@$$QEAH@std@@QEAA@$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+98
	DD	imagerel $unwind$??$?0H@?$_Tuple_val@$$QEAH@std@@QEAA@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$V$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$V$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@H@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@H@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBU?$_Ph@$00@std@@@?$_Tuple_val@U?$_Ph@$00@std@@@std@@QEAA@AEBU?$_Ph@$00@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??$?0AEBU?$_Ph@$00@std@@@?$_Tuple_val@U?$_Ph@$00@std@@@std@@QEAA@AEBU?$_Ph@$00@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@U?$_Ph@$00@std@@U?$_Ph@$01@2@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+206
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@U?$_Ph@$00@std@@U?$_Ph@$01@2@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@?$_Tuple_val@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@Z DD imagerel ??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@?$_Tuple_val@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@Z
	DD	imagerel ??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@?$_Tuple_val@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@Z+101
	DD	imagerel $unwind$??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@?$_Tuple_val@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBH@?$_Tuple_val@AEBH@std@@QEAA@AEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+98
	DD	imagerel $unwind$??$?0AEBH@?$_Tuple_val@AEBH@std@@QEAA@AEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$?0V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0H@?$_Tuple_val@H@std@@QEAA@$$QEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??$?0H@?$_Tuple_val@H@std@@QEAA@$$QEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@AEBU?$_Ph@$01@1@$$V$0A@@?$tuple@U?$_Ph@$01@std@@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$01@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@AEBU?$_Ph@$01@1@$$V$0A@@?$tuple@U?$_Ph@$01@std@@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$01@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBU?$_Ph@$01@std@@@?$_Tuple_val@U?$_Ph@$01@std@@@std@@QEAA@AEBU?$_Ph@$01@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??$?0AEBU?$_Ph@$01@std@@@?$_Tuple_val@U?$_Ph@$01@std@@@std@@QEAA@AEBU?$_Ph@$01@1@@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
CONST	SEGMENT
??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
CONST	SEGMENT
??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ DB '"'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'p', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'p', 00H, 'o'
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
CONST	SEGMENT
??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'f', 00H, 'y', 00H, '_', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@PFDEEMPK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@PFDEEMPK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'E'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'p', 00H, 'r', 00H
	DB	'i', 00H, 's', 00H, 'e', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
CONST	SEGMENT
??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@ DB 'transposed pointer ran'
	DB	'ge', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@FAHAKJIH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GK@FAHAKJIH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\T'
	DB	'ools\MSVC\14.23.28105\include\xutility', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@GBFLCNGF@2?5count?3?$DN?5@
CONST	SEGMENT
??_C@_0L@GBFLCNGF@2?5count?3?$DN?5@ DB '2 count:= ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06NAGILOEL@b2?5?3?$DN?5@
CONST	SEGMENT
??_C@_06NAGILOEL@b2?5?3?$DN?5@ DB 'b2 := ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06OBIAKENG@a2?5?3?$DN?5@
CONST	SEGMENT
??_C@_06OBIAKENG@a2?5?3?$DN?5@ DB 'a2 := ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09HJKHIHIA@xxxxyyyyy@
CONST	SEGMENT
??_C@_09HJKHIHIA@xxxxyyyyy@ DB 'xxxxyyyyy', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_09COJLMHPP@yyyy00000@
CONST	SEGMENT
??_C@_09COJLMHPP@yyyy00000@ DB 'yyyy00000', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_04ODPAOBIJ@xxxx@
CONST	SEGMENT
??_C@_04ODPAOBIJ@xxxx@ DB 'xxxx', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_04HOPFPECK@yyyy@
CONST	SEGMENT
??_C@_04HOPFPECK@yyyy@ DB 'yyyy', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@PILJELGE@1?5count?3?$DN?5@
CONST	SEGMENT
??_C@_0L@PILJELGE@1?5count?3?$DN?5@ DB '1 count:= ', 00H ; `string'
CONST	ENDS
;	COMDAT ?_2@placeholders@std@@3U?$_Ph@$01@2@B
CONST	SEGMENT
?_2@placeholders@std@@3U?$_Ph@$01@2@B	ORG $+1		; std::placeholders::_2
CONST	ENDS
;	COMDAT ?_1@placeholders@std@@3U?$_Ph@$00@2@B
CONST	SEGMENT
?_1@placeholders@std@@3U?$_Ph@$00@2@B	ORG $+1		; std::placeholders::_1
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'E'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'p', 00H, 'r', 00H
	DB	'i', 00H, 's', 00H, 'e', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\T'
	DB	'ools\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA DD 066H ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBU?$_Ph@$01@std@@@?$_Tuple_val@U?$_Ph@$01@std@@@std@@QEAA@AEBU?$_Ph@$01@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@AEBU?$_Ph@$01@1@$$V$0A@@?$tuple@U?$_Ph@$01@std@@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$01@1@@Z DD 025053301H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0H@?$_Tuple_val@H@std@@QEAA@$$QEAH@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBH@?$_Tuple_val@AEBH@std@@QEAA@AEBH@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DB 060H
	DD	imagerel $ip2state$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DD 025052e19H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@?$_Tuple_val@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@U?$_Ph@$00@std@@U?$_Ph@$01@2@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z DD 025053801H
	DD	011c2321H
	DD	070150025H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBU?$_Ph@$00@std@@@?$_Tuple_val@U?$_Ph@$00@std@@@std@@QEAA@AEBU?$_Ph@$00@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@H@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z DD 025053301H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$V$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z DD 025053301H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0H@?$_Tuple_val@$$QEAH@std@@QEAA@$$QEAH@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z DD 025053301H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@AEBH$$V$0A@@?$tuple@AEBH@std@@QEAA@U_Exact_args_t@1@AEBH@Z DD 025053301H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z DD 025053801H
	DD	011c2321H
	DD	07015002bH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@$$QEAH@Z DD 025053801H
	DD	011c2321H
	DD	070150025H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z DD 025053801H
	DD	011c2321H
	DD	070150025H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH1@Z DD 025053801H
	DD	011c2321H
	DD	070150025H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBH$0A@@?$tuple@AEBH@std@@QEAA@AEBH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEBH$0A@@?$tuple@AEBH@std@@QEAA@AEBH@Z DB 060H
	DD	imagerel $ip2state$??$?0AEBH$0A@@?$tuple@AEBH@std@@QEAA@AEBH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBH$0A@@?$tuple@AEBH@std@@QEAA@AEBH@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEBH$0A@@?$tuple@AEBH@std@@QEAA@AEBH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z DB 060H
	DD	imagerel $ip2state$??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z DD 035053919H
	DD	011d3322H
	DD	070160031H
	DD	05015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBU?$_Ph@$00@std@@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBU?$_Ph@$00@1@$$QEAH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEBU?$_Ph@$00@std@@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBU?$_Ph@$00@1@$$QEAH@Z DB 060H
	DD	imagerel $ip2state$??$?0AEBU?$_Ph@$00@std@@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBU?$_Ph@$00@1@$$QEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBU?$_Ph@$00@std@@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBU?$_Ph@$00@1@$$QEAH@Z DD 025053419H
	DD	0118231dH
	DD	07011002bH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEBU?$_Ph@$00@std@@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBU?$_Ph@$00@1@$$QEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z DB 060H
	DD	imagerel $ip2state$??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z DD 025053419H
	DD	0118231dH
	DD	07011002bH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Verify_range@H@std@@YAXQEBH0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Verify_range@H@std@@YAXQEBH0@Z DB 060H
	DD	imagerel $ip2state$??$_Verify_range@H@std@@YAXQEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Verify_range@H@std@@YAXQEBH0@Z DD 035052f19H
	DD	01133318H
	DD	0700c001fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Verify_range@H@std@@YAXQEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@$$QEAH0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@$$QEAH0@Z DB 060H
	DD	imagerel $ip2state$??$?0HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@$$QEAH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@$$QEAH0@Z DD 025053419H
	DD	0118231dH
	DD	07011002bH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@$$QEAH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV0?1??12@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z DD 025053801H
	DD	011c2321H
	DD	070150021H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$less@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z DD 025053801H
	DD	011c2321H
	DD	070150021H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$greater@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z DD 025053801H
	DD	011c2321H
	DD	070150021H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z DD 025053801H
	DD	011c2321H
	DD	070150021H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 035052a01H
	DD	010e3313H
	DD	07007002bH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DB 060H
	DD	imagerel $ip2state$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RAEBH@?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA_NAEBH@Z DD 035052f01H
	DD	01133318H
	DD	0700c003dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call_binder@U_Unforced@std@@$0A@$00U?$logical_and@_N@2@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$logical_and@_N@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAV?$tuple@AEBH@0@@Z DD 025053701H
	DD	011b2320H
	DD	070140029H
	DD	05013H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@AEAU?$logical_and@_N@std@@_N_N@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@AEAU?$logical_and@_N@std@@_N_N@std@@YA_NAEAU?$logical_and@_N@0@$$QEA_N1@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@AEAU?$logical_and@_N@std@@_N_N@_Invoker_functor@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@_N@std@@YA$$QEA_NAEA_N@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@_N@std@@YA$$QEA_NAEA_N@Z DB 060H
	DD	imagerel $ip2state$??$forward@_N@std@@YA$$QEA_NAEA_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@_N@std@@YA$$QEA_NAEA_N@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@_N@std@@YA$$QEA_NAEA_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEAU?$logical_and@_N@std@@@std@@YAAEAU?$logical_and@_N@0@AEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEAU?$logical_and@_N@std@@@std@@YAAEAU?$logical_and@_N@0@AEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEAU?$logical_and@_N@std@@@std@@YAAEAU?$logical_and@_N@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAU?$logical_and@_N@std@@@std@@YAAEAU?$logical_and@_N@0@AEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEAU?$logical_and@_N@std@@@std@@YAAEAU?$logical_and@_N@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RAEBH@?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z DD 035052f01H
	DD	01133318H
	DD	0700c003dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call_binder@U_Unforced@std@@$0A@$00U?$greater@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$greater@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z DD 025053701H
	DD	011b2320H
	DD	070140023H
	DD	05013H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@AEAU?$greater@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@AEAU?$greater@H@std@@AEBHAEAH@std@@YA_NAEAU?$greater@H@0@AEBHAEAH@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@AEAU?$greater@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEAU?$greater@H@std@@@std@@YAAEAU?$greater@H@0@AEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEAU?$greater@H@std@@@std@@YAAEAU?$greater@H@0@AEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEAU?$greater@H@std@@@std@@YAAEAU?$greater@H@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAU?$greater@H@std@@@std@@YAAEAU?$greater@H@0@AEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEAU?$greater@H@std@@@std@@YAAEAU?$greater@H@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get@$00V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get@$00V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z DB 060H
	DD	imagerel $ip2state$??$get@$00V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$00V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get@$00V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get@$0A@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get@$0A@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z DB 060H
	DD	imagerel $ip2state$??$get@$0A@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$0A@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get@$0A@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@U?$logical_and@_N@std@@@std@@YA$$QEAU?$logical_and@_N@0@AEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@U?$logical_and@_N@std@@@std@@YA$$QEAU?$logical_and@_N@0@AEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@U?$logical_and@_N@std@@@std@@YA$$QEAU?$logical_and@_N@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$logical_and@_N@std@@@std@@YA$$QEAU?$logical_and@_N@0@AEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@U?$logical_and@_N@std@@@std@@YA$$QEAU?$logical_and@_N@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@U?$greater@H@std@@@std@@YA$$QEAU?$greater@H@0@AEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@U?$greater@H@std@@@std@@YA$$QEAU?$greater@H@0@AEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@U?$greater@H@std@@@std@@YA$$QEAU?$greater@H@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$greater@H@std@@@std@@YA$$QEAU?$greater@H@0@AEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@U?$greater@H@std@@@std@@YA$$QEAU?$greater@H@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RAEBH@?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z DD 035052f01H
	DD	01133318H
	DD	0700c003dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call_binder@U_Unforced@std@@$0A@$00U?$less@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$less@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z DD 025053701H
	DD	011b2320H
	DD	070140023H
	DD	05013H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@AEAU?$less@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@AEAU?$less@H@std@@AEBHAEAH@std@@YA_NAEAU?$less@H@0@AEBHAEAH@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@AEAU?$less@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEAH@std@@YAAEAHAEAH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEAH@std@@YAAEAHAEAH@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEAH@std@@YAAEAHAEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAH@std@@YAAEAHAEAH@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEAH@std@@YAAEAHAEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEAU?$less@H@std@@@std@@YAAEAU?$less@H@0@AEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEAU?$less@H@std@@@std@@YAAEAU?$less@H@0@AEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEAU?$less@H@std@@@std@@YAAEAU?$less@H@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAU?$less@H@std@@@std@@YAAEAU?$less@H@0@AEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEAU?$less@H@std@@@std@@YAAEAU?$less@H@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fix_arg@HV?$tuple@AEBH@std@@@std@@YAAEAHAEAH$$QEAV?$tuple@AEBH@0@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@H$0A@$0A@$0A@@std@@SAAEAHAEAH$$QEAV?$tuple@AEBH@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get@$00U?$_Ph@$00@std@@H@std@@YAAEAHAEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get@$00U?$_Ph@$00@std@@H@std@@YAAEAHAEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z DB 060H
	DD	imagerel $ip2state$??$get@$00U?$_Ph@$00@std@@H@std@@YAAEAHAEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$00U?$_Ph@$00@std@@H@std@@YAAEAHAEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get@$00U?$_Ph@$00@std@@H@std@@YAAEAHAEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@AEBH@2@@std@@YAAEBHAEAU?$_Ph@$00@0@$$QEAV?$tuple@AEBH@0@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SAAEBHAEAU?$_Ph@$00@1@$$QEAV?$tuple@AEBH@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get@$0A@AEBH@std@@YAAEBH$$QEAV?$tuple@AEBH@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get@$0A@AEBH@std@@YAAEBH$$QEAV?$tuple@AEBH@0@@Z DB 060H
	DD	imagerel $ip2state$??$get@$0A@AEBH@std@@YAAEBH$$QEAV?$tuple@AEBH@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$0A@AEBH@std@@YAAEBH$$QEAV?$tuple@AEBH@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get@$0A@AEBH@std@@YAAEBH$$QEAV?$tuple@AEBH@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get@$0A@U?$_Ph@$00@std@@H@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get@$0A@U?$_Ph@$00@std@@H@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z DB 060H
	DD	imagerel $ip2state$??$get@$0A@U?$_Ph@$00@std@@H@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$0A@U?$_Ph@$00@std@@H@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get@$0A@U?$_Ph@$00@std@@H@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward_as_tuple@AEBH@std@@YA?AV?$tuple@AEBH@0@AEBH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward_as_tuple@AEBH@std@@YA?AV?$tuple@AEBH@0@AEBH@Z DB 060H
	DD	imagerel $ip2state$??$forward_as_tuple@AEBH@std@@YA?AV?$tuple@AEBH@0@AEBH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward_as_tuple@AEBH@std@@YA?AV?$tuple@AEBH@0@AEBH@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward_as_tuple@AEBH@std@@YA?AV?$tuple@AEBH@0@AEBH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEBH@std@@YAAEBHAEBH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEBH@std@@YAAEBHAEBH@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEBH@std@@YAAEBHAEBH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBH@std@@YAAEBHAEBH@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEBH@std@@YAAEBHAEBH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@$$CBH@std@@YAPEBHQEBH@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@PEBHPEBH@std@@YAXAEBQEBH0@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@U?$less@H@std@@@std@@YA$$QEAU?$less@H@0@AEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@U?$less@H@std@@@std@@YA$$QEAU?$less@H@0@AEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@U?$less@H@std@@@std@@YA$$QEAU?$less@H@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@U?$less@H@std@@@std@@YA$$QEAU?$less@H@0@AEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@U?$less@H@std@@@std@@YA$$QEAU?$less@H@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z DB 060H
	DD	imagerel $ip2state$??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z DB 060H
	DD	imagerel $ip2state$??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DB 060H
	DD	imagerel $ip2state$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z DD 025054a19H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0158H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z$rtcVarDesc DD 088H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z DD 025053901H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DB 060H
	DD	imagerel $ip2state$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DB 060H
	DD	imagerel $ip2state$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DB 060H
	DD	imagerel $ip2state$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z DB 060H
	DD	imagerel $ip2state$??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z DD 025053919H
	DD	011d2322H
	DD	070160021H
	DD	05015H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 06H
	DB	00H
	DB	00H
	DB	09eH
	DB	02H
	DB	0f1H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025052f11H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z DD 025053401H
	DD	0118231dH
	DD	070110029H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z DD 035053901H
	DD	011d3322H
	DD	070160033H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAAAEAU?$logical_and@_N@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAAAEAU?$logical_and@_N@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAAAEAU?$logical_and@_N@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAAAEAU?$logical_and@_N@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAAAEAU?$logical_and@_N@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$bind@U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YA?AV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAU?$logical_and@_N@0@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@@Z DD 025053901H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z DD 035053901H
	DD	011d3322H
	DD	070160033H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$greater@H@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$greater@H@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$greater@H@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$greater@H@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$greater@H@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$bind@U?$greater@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$greater@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z DD 025053901H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$greater@H@std@@QEBA_NAEBH0@Z DD 025053401H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$logical_and@_N@std@@QEBA_NAEB_N0@Z DD 025053401H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z DB 060H
	DD	imagerel $ip2state$??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z DD 025052f19H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$less@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@@Z DD 025053401H
	DD	0118231dH
	DD	070110029H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z DD 035053901H
	DD	011d3322H
	DD	070160033H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$less@H@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$less@H@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$less@H@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$less@H@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$less@H@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@$$QEAV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$tuple@H@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$tuple@H@std@@QEAA@$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$tuple@H@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tuple@H@std@@QEAA@$$QEAV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$tuple@H@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$tuple@H@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$tuple@H@std@@QEAA@AEBV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$tuple@H@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tuple@H@std@@QEAA@AEBV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$tuple@H@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$bind@U?$less@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$less@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z DD 025053901H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$initializer_list@H@std@@QEAAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$initializer_list@H@std@@QEBAPEBHXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?end@?$initializer_list@H@std@@QEBAPEBHXZ DB 060H
	DD	imagerel $ip2state$?end@?$initializer_list@H@std@@QEBAPEBHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$initializer_list@H@std@@QEBAPEBHXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?end@?$initializer_list@H@std@@QEBAPEBHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$initializer_list@H@std@@QEBAPEBHXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?begin@?$initializer_list@H@std@@QEBAPEBHXZ DB 060H
	DD	imagerel $ip2state$?begin@?$initializer_list@H@std@@QEBAPEBHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$initializer_list@H@std@@QEBAPEBHXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?begin@?$initializer_list@H@std@@QEBAPEBHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$initializer_list@H@std@@QEAA@PEBH0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$initializer_list@H@std@@QEAA@PEBH0@Z DB 060H
	DD	imagerel $ip2state$??0?$initializer_list@H@std@@QEAA@PEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$initializer_list@H@std@@QEAA@PEBH0@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$initializer_list@H@std@@QEAA@PEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$less@H@std@@QEBA_NAEBH0@Z DD 025053401H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	'9', 04H
	DB	02H
	DB	'<'
	DB	04H
	DB	0d1H, 0aH
	DB	02H
	DB	08aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 025054019H
	DD	01132318H
	DD	0700c0047H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0223H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0 DB 05fH ; std::operator<<<std::char_traits<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc DD 088H ; std::operator<<<std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0
	ORG $+48
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData DD 01H ; std::operator<<<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RHH@?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAAH$$QEAH0@Z DD 035053401H
	DD	0118331dH
	DD	070110041H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call_binder@U_Unforced@std@@$0A@$00$01P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@2@V?$tuple@$$QEAH$$QEAH@2@@std@@YAHU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00$01@0@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DD 025053701H
	DD	011b2320H
	DD	070140027H
	DD	05013H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z DD 025053901H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@std@@YAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@$$QEAH2@Z DD 025053901H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@_Invoker_pmf_pointer@std@@SAHP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z DD 025053901H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fix_arg@U?$_Ph@$01@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$01@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$01@std@@$0A@$0A@$01@std@@SA$$QEAHAEAU?$_Ph@$01@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get@$00$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get@$00$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DB 060H
	DD	imagerel $ip2state$??$get@$00$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$00$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get@$00$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get@$01PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$01@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get@$01PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$01@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z DB 060H
	DD	imagerel $ip2state$??$get@$01PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$01@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$01PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$01@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get@$01PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$01@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$00@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SA$$QEAHAEAU?$_Ph@$00@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get@$0A@$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get@$0A@$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DB 060H
	DD	imagerel $ip2state$??$get@$0A@$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$0A@$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get@$0A@$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get@$00PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get@$00PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z DB 060H
	DD	imagerel $ip2state$??$get@$00PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$00PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get@$00PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fix_arg@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@V?$tuple@$$QEAH$$QEAH@std@@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@$0A@$0A@$0A@@std@@SAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV2?1??34@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get@$0A@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get@$0A@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z DB 060H
	DD	imagerel $ip2state$??$get@$0A@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$0A@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get@$0A@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward_as_tuple@HH@std@@YA?AV?$tuple@$$QEAH$$QEAH@0@$$QEAH0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward_as_tuple@HH@std@@YA?AV?$tuple@$$QEAH$$QEAH@0@$$QEAH0@Z DB 060H
	DD	imagerel $ip2state$??$forward_as_tuple@HH@std@@YA?AV?$tuple@$$QEAH$$QEAH@0@$$QEAH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward_as_tuple@HH@std@@YA?AV?$tuple@$$QEAH$$QEAH@0@$$QEAH0@Z DD 025053419H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward_as_tuple@HH@std@@YA?AV?$tuple@$$QEAH$$QEAH@0@$$QEAH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@H@std@@YA$$QEAHAEAH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@H@std@@YA$$QEAHAEAH@Z DB 060H
	DD	imagerel $ip2state$??$forward@H@std@@YA$$QEAHAEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@H@std@@YA$$QEAHAEAH@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@H@std@@YA$$QEAHAEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAA@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z DD 035053901H
	DD	011d3322H
	DD	070160037H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZXZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$bind@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV1?1??23@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@5@@std@@YA?AV?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@0@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@0@AEBU?$_Ph@$01@0@@Z DD 035053901H
	DD	011d3322H
	DD	070160023H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?foo@A@?1??0FuncAndBind@@AEAAXXZ@QEAAHHH@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DB 060H
	DD	imagerel $ip2state$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 025052f19H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DB 060H
	DD	imagerel $ip2state$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 025054519H
	DD	0118231dH
	DD	070110025H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
	DD	011bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHAEBV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHAEBV12@@Z DB 060H
	DD	imagerel $ip2state$?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHAEBV12@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DB 060H
	DD	imagerel $ip2state$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 025053b19H
	DD	010e2313H
	DD	070070031H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
	DD	017bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 025053401H
	DD	0118231dH
	DD	070110029H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 025053b19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	013bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	031H
	DB	00H
	ORG $+11
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	01H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	0dcH
	DB	02H
	DB	'p'
	DB	04H
	DB	'R'
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD 025054019H
	DD	01132318H
	DD	0700c0031H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	0172H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	033H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1
	DD	044H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DB 060H
	DD	imagerel $ip2state$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DB 060H
	DD	imagerel $ip2state$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DB 060H
	DD	imagerel $ip2state$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD 025051e19H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DB 060H
	DD	imagerel $ip2state$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD 025052f19H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DB 060H
	DD	imagerel $ip2state$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 060H
	DD	imagerel $ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 060H
	DD	imagerel $ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 060H
	DD	imagerel $ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DB 060H
	DD	imagerel $ip2state$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$allocator@D@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$allocator@D@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$allocator@D@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$allocator@D@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$tuple@$$V@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$tuple@$$V@std@@QEAA@AEBV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$tuple@$$V@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$tuple@$$V@std@@QEAA@AEBV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$tuple@$$V@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	011bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DB 060H
	DD	imagerel $ip2state$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Convert_size@_K@std@@YA_K_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Convert_size@_K@std@@YA_K_K@Z DB 060H
	DD	imagerel $ip2state$??$_Convert_size@_K@std@@YA_K_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Convert_size@_K@std@@YA_K_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 035052f01H
	DD	01133318H
	DD	0700c002fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 025051e01H
	DD	010a230fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 060H
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 060H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 060H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@QEBDH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@QEBDH@Z DB 060H
	DD	imagerel $ip2state$??0exception@std@@QEAA@QEBDH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@QEBDH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max@?$numeric_limits@_J@std@@SA_JXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max@?$numeric_limits@_J@std@@SA_JXZ DB 060H
	DD	imagerel $ip2state$?max@?$numeric_limits@_J@std@@SA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 025051e19H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?max@?$numeric_limits@_J@std@@SA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??2@YAPEAX_KPEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??2@YAPEAX_KPEAX@Z DB 060H
	DD	imagerel $ip2state$??2@YAPEAX_KPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??2@YAPEAX_KPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0??foo@FuncAndBind@@AEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??foo@FuncAndBind@@AEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??foo@FuncAndBind@@AEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?foo@FuncAndBind@@AEAAXXZ DB 0eH
	DB	00H
	DB	00H
	DB	0c1H, 09H
	DB	02H
	DB	'('
	DB	04H
	DB	'@'
	DB	02H
	DB	01aH
	DB	00H
	DB	'h'
	DB	06H
	DB	0b8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?foo@FuncAndBind@@AEAAXXZ DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0??foo@FuncAndBind@@AEAAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??foo@FuncAndBind@@AEAAXXZ@4HA
	DB	05eH
	DD	imagerel ?dtor$2@?0??foo@FuncAndBind@@AEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?foo@FuncAndBind@@AEAAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?foo@FuncAndBind@@AEAAXXZ
	DD	imagerel $ip2state$?foo@FuncAndBind@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?foo@FuncAndBind@@AEAAXXZ DD 035053b19H
	DD	010e3313H
	DD	070070105H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?foo@FuncAndBind@@AEAAXXZ
	DD	0812H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?foo@FuncAndBind@@AEAAXXZ$rtcName$0 DB 061H		; FuncAndBind::foo
	DB	00H
	ORG $+2
?foo@FuncAndBind@@AEAAXXZ$rtcName$1 DB 066H		; FuncAndBind::foo
	DB	072H
	DB	00H
	ORG $+1
?foo@FuncAndBind@@AEAAXXZ$rtcName$2 DB 06cH		; FuncAndBind::foo
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+3
?foo@FuncAndBind@@AEAAXXZ$rtcName$3 DB 024H		; FuncAndBind::foo
	DB	053H
	DB	031H
	DB	00H
?foo@FuncAndBind@@AEAAXXZ$rtcName$4 DB 066H		; FuncAndBind::foo
	DB	072H
	DB	032H
	DB	00H
	ORG $+8
?foo@FuncAndBind@@AEAAXXZ$rtcVarDesc DD 0198H		; FuncAndBind::foo
	DD	010H
	DQ	FLAT:?foo@FuncAndBind@@AEAAXXZ$rtcName$4
	DD	0b8H
	DD	01cH
	DQ	FLAT:?foo@FuncAndBind@@AEAAXXZ$rtcName$3
	DD	088H
	DD	010H
	DQ	FLAT:?foo@FuncAndBind@@AEAAXXZ$rtcName$2
	DD	058H
	DD	018H
	DQ	FLAT:?foo@FuncAndBind@@AEAAXXZ$rtcName$1
	DD	034H
	DD	01H
	DQ	FLAT:?foo@FuncAndBind@@AEAAXXZ$rtcName$0
	ORG $+240
?foo@FuncAndBind@@AEAAXXZ$rtcFrameData DD 05H		; FuncAndBind::foo
	DD	00H
	DQ	FLAT:?foo@FuncAndBind@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?run@FuncAndBind@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX@Z
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0AEBU?$_Ph@$01@std@@@?$_Tuple_val@U?$_Ph@$01@std@@@std@@QEAA@AEBU?$_Ph@$01@1@@Z
_TEXT	SEGMENT
this$ = 224
_Arg$ = 232
??$?0AEBU?$_Ph@$01@std@@@?$_Tuple_val@U?$_Ph@$01@std@@@std@@QEAA@AEBU?$_Ph@$01@1@@Z PROC ; std::_Tuple_val<std::_Ph<2> >::_Tuple_val<std::_Ph<2> ><std::_Ph<2> const &>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Arg$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z ; std::forward<std::_Ph<2> const &>

; 156  :     }

  00047	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00055	5f		 pop	 rdi
  00056	5d		 pop	 rbp
  00057	c3		 ret	 0
??$?0AEBU?$_Ph@$01@std@@@?$_Tuple_val@U?$_Ph@$01@std@@@std@@QEAA@AEBU?$_Ph@$01@1@@Z ENDP ; std::_Tuple_val<std::_Ph<2> >::_Tuple_val<std::_Ph<2> ><std::_Ph<2> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@AEBU?$_Ph@$01@1@$$V$0A@@?$tuple@U?$_Ph@$01@std@@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$01@1@@Z
_TEXT	SEGMENT
$T1 = 196
tv81 = 216
this$ = 256
__formal$ = 264
_This_arg$ = 272
??$?0U_Exact_args_t@std@@AEBU?$_Ph@$01@1@$$V$0A@@?$tuple@U?$_Ph@$01@std@@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$01@1@@Z PROC ; std::tuple<std::_Ph<2> >::tuple<std::_Ph<2> ><std::_Exact_args_t,std::_Ph<2> const &,0>, COMDAT

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003f	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00046	48 8b f8	 mov	 rdi, rax
  00049	33 c0		 xor	 eax, eax
  0004b	b9 01 00 00 00	 mov	 ecx, 1
  00050	f3 aa		 rep stosb
  00052	0f b6 95 c4 00
	00 00		 movzx	 edx, BYTE PTR $T1[rbp]
  00059	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00065	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00073	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  0007a	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z ; std::forward<std::_Ph<2> const &>
  0007f	48 8b d0	 mov	 rdx, rax
  00082	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv81[rbp]
  00089	e8 00 00 00 00	 call	 ??$?0AEBU?$_Ph@$01@std@@@?$_Tuple_val@U?$_Ph@$01@std@@@std@@QEAA@AEBU?$_Ph@$01@1@@Z ; std::_Tuple_val<std::_Ph<2> >::_Tuple_val<std::_Ph<2> ><std::_Ph<2> const &>

; 243  :     }

  0008e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00095	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009c	5f		 pop	 rdi
  0009d	5d		 pop	 rbp
  0009e	c3		 ret	 0
??$?0U_Exact_args_t@std@@AEBU?$_Ph@$01@1@$$V$0A@@?$tuple@U?$_Ph@$01@std@@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$01@1@@Z ENDP ; std::tuple<std::_Ph<2> >::tuple<std::_Ph<2> ><std::_Exact_args_t,std::_Ph<2> const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0H@?$_Tuple_val@H@std@@QEAA@$$QEAH@Z
_TEXT	SEGMENT
this$ = 224
_Arg$ = 232
??$?0H@?$_Tuple_val@H@std@@QEAA@$$QEAH@Z PROC		; std::_Tuple_val<int>::_Tuple_val<int><int>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Arg$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00047	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	8b 00		 mov	 eax, DWORD PTR [rax]
  00050	89 01		 mov	 DWORD PTR [rcx], eax

; 156  :     }

  00052	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00059	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00060	5f		 pop	 rdi
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??$?0H@?$_Tuple_val@H@std@@QEAA@$$QEAH@Z ENDP		; std::_Tuple_val<int>::_Tuple_val<int><int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z
_TEXT	SEGMENT
tv71 = 192
this$ = 240
_Arg$ = 248
??$?0V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z PROC ; std::_Tuple_val<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::_Tuple_val<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  00049	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Arg$[rbp]
  00050	e8 00 00 00 00	 call	 ??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv71[rbp]
  0005f	e8 00 00 00 00	 call	 ??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z

; 156  :     }

  00064	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??$?0V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ENDP ; std::_Tuple_val<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::_Tuple_val<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0AEBH@?$_Tuple_val@AEBH@std@@QEAA@AEBH@Z
_TEXT	SEGMENT
this$ = 224
_Arg$ = 232
??$?0AEBH@?$_Tuple_val@AEBH@std@@QEAA@AEBH@Z PROC	; std::_Tuple_val<int const &>::_Tuple_val<int const &><int const &>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Arg$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  00047	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 156  :     }

  00051	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00058	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005f	5f		 pop	 rdi
  00060	5d		 pop	 rbp
  00061	c3		 ret	 0
??$?0AEBH@?$_Tuple_val@AEBH@std@@QEAA@AEBH@Z ENDP	; std::_Tuple_val<int const &>::_Tuple_val<int const &><int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT

; 214  :     constexpr tuple(_Tag) noexcept { // strengthened, construct from one arg per element

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	90		 npad	 1

; 215  :     }

  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@?$_Tuple_val@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@Z
_TEXT	SEGMENT
this$ = 224
_Arg$ = 232
??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@?$_Tuple_val@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@Z PROC ; std::_Tuple_val<`FuncAndBind::foo'::`2'::A *>::_Tuple_val<`FuncAndBind::foo'::`2'::A *><`FuncAndBind::foo'::`2'::A *>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Arg$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z ; std::forward<`FuncAndBind::foo'::`2'::A *>
  00047	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 01	 mov	 QWORD PTR [rcx], rax

; 156  :     }

  00054	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00062	5f		 pop	 rdi
  00063	5d		 pop	 rbp
  00064	c3		 ret	 0
??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@?$_Tuple_val@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@Z ENDP ; std::_Tuple_val<`FuncAndBind::foo'::`2'::A *>::_Tuple_val<`FuncAndBind::foo'::`2'::A *><`FuncAndBind::foo'::`2'::A *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@U?$_Ph@$00@std@@U?$_Ph@$01@2@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv87 = 248
tv80 = 248
this$ = 288
__formal$ = 296
_This_arg$ = 304
<_Rest_arg_0>$ = 312
??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@U?$_Ph@$00@std@@U?$_Ph@$01@2@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z PROC ; std::tuple<std::_Ph<1>,std::_Ph<2> >::tuple<std::_Ph<1>,std::_Ph<2> ><std::_Exact_args_t,std::_Ph<1> const &,std::_Ph<2> const &,0>, COMDAT

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00044	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  0004b	48 8b f8	 mov	 rdi, rax
  0004e	33 c0		 xor	 eax, eax
  00050	b9 01 00 00 00	 mov	 ecx, 1
  00055	f3 aa		 rep stosb
  00057	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rbp]
  0005e	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z ; std::forward<std::_Ph<2> const &>
  00063	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  0006a	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00071	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00077	4c 8b 85 f8 00
	00 00		 mov	 r8, QWORD PTR tv80[rbp]
  0007e	0f b6 95 e4 00
	00 00		 movzx	 edx, BYTE PTR $T2[rbp]
  00085	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008c	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@AEBU?$_Ph@$01@1@$$V$0A@@?$tuple@U?$_Ph@$01@std@@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$01@1@@Z ; std::tuple<std::_Ph<2> >::tuple<std::_Ph<2> ><std::_Exact_args_t,std::_Ph<2> const &,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00091	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00098	48 ff c0	 inc	 rax
  0009b	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  000a2	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  000a9	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
  000ae	48 8b d0	 mov	 rdx, rax
  000b1	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR tv87[rbp]
  000b8	e8 00 00 00 00	 call	 ??$?0AEBU?$_Ph@$00@std@@@?$_Tuple_val@U?$_Ph@$00@std@@@std@@QEAA@AEBU?$_Ph@$00@1@@Z ; std::_Tuple_val<std::_Ph<1> >::_Tuple_val<std::_Ph<1> ><std::_Ph<1> const &>

; 243  :     }

  000bd	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c4	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000cb	5f		 pop	 rdi
  000cc	5d		 pop	 rbp
  000cd	c3		 ret	 0
??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@U?$_Ph@$00@std@@U?$_Ph@$01@2@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z ENDP ; std::tuple<std::_Ph<1>,std::_Ph<2> >::tuple<std::_Ph<1>,std::_Ph<2> ><std::_Exact_args_t,std::_Ph<1> const &,std::_Ph<2> const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0AEBU?$_Ph@$00@std@@@?$_Tuple_val@U?$_Ph@$00@std@@@std@@QEAA@AEBU?$_Ph@$00@1@@Z
_TEXT	SEGMENT
this$ = 224
_Arg$ = 232
??$?0AEBU?$_Ph@$00@std@@@?$_Tuple_val@U?$_Ph@$00@std@@@std@@QEAA@AEBU?$_Ph@$00@1@@Z PROC ; std::_Tuple_val<std::_Ph<1> >::_Tuple_val<std::_Ph<1> ><std::_Ph<1> const &>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Arg$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>

; 156  :     }

  00047	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00055	5f		 pop	 rdi
  00056	5d		 pop	 rbp
  00057	c3		 ret	 0
??$?0AEBU?$_Ph@$00@std@@@?$_Tuple_val@U?$_Ph@$00@std@@@std@@QEAA@AEBU?$_Ph@$00@1@@Z ENDP ; std::_Tuple_val<std::_Ph<1> >::_Tuple_val<std::_Ph<1> ><std::_Ph<1> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@H@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z
_TEXT	SEGMENT
$T1 = 196
tv81 = 216
this$ = 256
__formal$ = 264
_This_arg$ = 272
??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@H@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z PROC ; std::tuple<int>::tuple<int><std::_Exact_args_t,int,0>, COMDAT

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003f	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00046	48 8b f8	 mov	 rdi, rax
  00049	33 c0		 xor	 eax, eax
  0004b	b9 01 00 00 00	 mov	 ecx, 1
  00050	f3 aa		 rep stosb
  00052	0f b6 95 c4 00
	00 00		 movzx	 edx, BYTE PTR $T1[rbp]
  00059	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00065	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00073	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  0007a	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  0007f	48 8b d0	 mov	 rdx, rax
  00082	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv81[rbp]
  00089	e8 00 00 00 00	 call	 ??$?0H@?$_Tuple_val@H@std@@QEAA@$$QEAH@Z ; std::_Tuple_val<int>::_Tuple_val<int><int>

; 243  :     }

  0008e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00095	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009c	5f		 pop	 rdi
  0009d	5d		 pop	 rbp
  0009e	c3		 ret	 0
??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@H@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z ENDP ; std::tuple<int>::tuple<int><std::_Exact_args_t,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@@Z
_TEXT	SEGMENT
tv71 = 192
this$ = 240
_Arg$ = 248
??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@@Z PROC ; std::_Tuple_val<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >::_Tuple_val<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> ><std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  00049	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Arg$[rbp]
  00050	e8 00 00 00 00	 call	 ??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv71[rbp]
  0005f	e8 00 00 00 00	 call	 ??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z

; 156  :     }

  00064	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@@Z ENDP ; std::_Tuple_val<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >::_Tuple_val<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> ><std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$V$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z
_TEXT	SEGMENT
$T1 = 196
tv81 = 216
this$ = 256
__formal$ = 264
_This_arg$ = 272
??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$V$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z PROC ; std::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Exact_args_t,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0>, COMDAT

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003f	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00046	48 8b f8	 mov	 rdi, rax
  00049	33 c0		 xor	 eax, eax
  0004b	b9 01 00 00 00	 mov	 ecx, 1
  00050	f3 aa		 rep stosb
  00052	0f b6 95 c4 00
	00 00		 movzx	 edx, BYTE PTR $T1[rbp]
  00059	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00065	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00073	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  0007a	e8 00 00 00 00	 call	 ??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
  0007f	48 8b d0	 mov	 rdx, rax
  00082	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv81[rbp]
  00089	e8 00 00 00 00	 call	 ??$?0V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ; std::_Tuple_val<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::_Tuple_val<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >

; 243  :     }

  0008e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00095	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009c	5f		 pop	 rdi
  0009d	5d		 pop	 rbp
  0009e	c3		 ret	 0
??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$V$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ENDP ; std::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Exact_args_t,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0H@?$_Tuple_val@$$QEAH@std@@QEAA@$$QEAH@Z
_TEXT	SEGMENT
this$ = 224
_Arg$ = 232
??$?0H@?$_Tuple_val@$$QEAH@std@@QEAA@$$QEAH@Z PROC	; std::_Tuple_val<int &&>::_Tuple_val<int &&><int>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Arg$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00047	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 156  :     }

  00051	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00058	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005f	5f		 pop	 rdi
  00060	5d		 pop	 rbp
  00061	c3		 ret	 0
??$?0H@?$_Tuple_val@$$QEAH@std@@QEAA@$$QEAH@Z ENDP	; std::_Tuple_val<int &&>::_Tuple_val<int &&><int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z
_TEXT	SEGMENT
$T1 = 196
tv81 = 216
this$ = 256
__formal$ = 264
_This_arg$ = 272
??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z PROC ; std::tuple<int &&>::tuple<int &&><std::_Exact_args_t,int,0>, COMDAT

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003f	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00046	48 8b f8	 mov	 rdi, rax
  00049	33 c0		 xor	 eax, eax
  0004b	b9 01 00 00 00	 mov	 ecx, 1
  00050	f3 aa		 rep stosb
  00052	0f b6 95 c4 00
	00 00		 movzx	 edx, BYTE PTR $T1[rbp]
  00059	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00065	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00073	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  0007a	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  0007f	48 8b d0	 mov	 rdx, rax
  00082	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv81[rbp]
  00089	e8 00 00 00 00	 call	 ??$?0H@?$_Tuple_val@$$QEAH@std@@QEAA@$$QEAH@Z ; std::_Tuple_val<int &&>::_Tuple_val<int &&><int>

; 243  :     }

  0008e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00095	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009c	5f		 pop	 rdi
  0009d	5d		 pop	 rbp
  0009e	c3		 ret	 0
??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z ENDP ; std::tuple<int &&>::tuple<int &&><std::_Exact_args_t,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@AEBH$$V$0A@@?$tuple@AEBH@std@@QEAA@U_Exact_args_t@1@AEBH@Z
_TEXT	SEGMENT
$T1 = 196
tv81 = 216
this$ = 256
__formal$ = 264
_This_arg$ = 272
??$?0U_Exact_args_t@std@@AEBH$$V$0A@@?$tuple@AEBH@std@@QEAA@U_Exact_args_t@1@AEBH@Z PROC ; std::tuple<int const &>::tuple<int const &><std::_Exact_args_t,int const &,0>, COMDAT

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003f	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00046	48 8b f8	 mov	 rdi, rax
  00049	33 c0		 xor	 eax, eax
  0004b	b9 01 00 00 00	 mov	 ecx, 1
  00050	f3 aa		 rep stosb
  00052	0f b6 95 c4 00
	00 00		 movzx	 edx, BYTE PTR $T1[rbp]
  00059	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00065	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00073	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  0007a	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  0007f	48 8b d0	 mov	 rdx, rax
  00082	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv81[rbp]
  00089	e8 00 00 00 00	 call	 ??$?0AEBH@?$_Tuple_val@AEBH@std@@QEAA@AEBH@Z ; std::_Tuple_val<int const &>::_Tuple_val<int const &><int const &>

; 243  :     }

  0008e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00095	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009c	5f		 pop	 rdi
  0009d	5d		 pop	 rbp
  0009e	c3		 ret	 0
??$?0U_Exact_args_t@std@@AEBH$$V$0A@@?$tuple@AEBH@std@@QEAA@U_Exact_args_t@1@AEBH@Z ENDP ; std::tuple<int const &>::tuple<int const &><std::_Exact_args_t,int const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
tv93 = 280
tv86 = 280
tv83 = 288
this$ = 336
__formal$ = 344
_This_arg$ = 352
<_Rest_arg_0>$ = 360
<_Rest_arg_1>$ = 368
??$?0U_Exact_args_t@std@@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z PROC ; std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> ><std::_Exact_args_t,`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &,0>, COMDAT

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00044	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  0004b	48 8b f8	 mov	 rdi, rax
  0004e	33 c0		 xor	 eax, eax
  00050	b9 01 00 00 00	 mov	 ecx, 1
  00055	f3 aa		 rep stosb
  00057	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_1>$[rbp]
  0005e	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z ; std::forward<std::_Ph<2> const &>
  00063	48 89 85 18 01
	00 00		 mov	 QWORD PTR tv86[rbp], rax
  0006a	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rbp]
  00071	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
  00076	48 89 85 20 01
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  0007d	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00084	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  0008a	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  00091	88 85 04 01 00
	00		 mov	 BYTE PTR $T3[rbp], al
  00097	4c 8b 8d 18 01
	00 00		 mov	 r9, QWORD PTR tv86[rbp]
  0009e	4c 8b 85 20 01
	00 00		 mov	 r8, QWORD PTR tv83[rbp]
  000a5	0f b6 95 04 01
	00 00		 movzx	 edx, BYTE PTR $T3[rbp]
  000ac	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b3	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@U?$_Ph@$00@std@@U?$_Ph@$01@2@@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z ; std::tuple<std::_Ph<1>,std::_Ph<2> >::tuple<std::_Ph<1>,std::_Ph<2> ><std::_Exact_args_t,std::_Ph<1> const &,std::_Ph<2> const &,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  000b8	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000bf	48 83 c0 08	 add	 rax, 8
  000c3	48 89 85 18 01
	00 00		 mov	 QWORD PTR tv93[rbp], rax
  000ca	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  000d1	e8 00 00 00 00	 call	 ??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z ; std::forward<`FuncAndBind::foo'::`2'::A *>
  000d6	48 8b d0	 mov	 rdx, rax
  000d9	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR tv93[rbp]
  000e0	e8 00 00 00 00	 call	 ??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@?$_Tuple_val@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@Z ; std::_Tuple_val<`FuncAndBind::foo'::`2'::A *>::_Tuple_val<`FuncAndBind::foo'::`2'::A *><`FuncAndBind::foo'::`2'::A *>

; 243  :     }

  000e5	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ec	48 8d a5 38 01
	00 00		 lea	 rsp, QWORD PTR [rbp+312]
  000f3	5f		 pop	 rdi
  000f4	5d		 pop	 rbp
  000f5	c3		 ret	 0
??$?0U_Exact_args_t@std@@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z ENDP ; std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> ><std::_Exact_args_t,`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@$$QEAH@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv87 = 248
tv80 = 248
this$ = 288
__formal$ = 296
_This_arg$ = 304
<_Rest_arg_0>$ = 312
??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@$$QEAH@Z PROC ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int><std::_Exact_args_t,std::_Ph<1> const &,int,0>, COMDAT

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00044	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  0004b	48 8b f8	 mov	 rdi, rax
  0004e	33 c0		 xor	 eax, eax
  00050	b9 01 00 00 00	 mov	 ecx, 1
  00055	f3 aa		 rep stosb
  00057	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rbp]
  0005e	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00063	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  0006a	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00071	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00077	4c 8b 85 f8 00
	00 00		 mov	 r8, QWORD PTR tv80[rbp]
  0007e	0f b6 95 e4 00
	00 00		 movzx	 edx, BYTE PTR $T2[rbp]
  00085	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008c	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@H@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z ; std::tuple<int>::tuple<int><std::_Exact_args_t,int,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00091	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00098	48 83 c0 04	 add	 rax, 4
  0009c	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  000a3	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  000aa	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
  000af	48 8b d0	 mov	 rdx, rax
  000b2	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR tv87[rbp]
  000b9	e8 00 00 00 00	 call	 ??$?0AEBU?$_Ph@$00@std@@@?$_Tuple_val@U?$_Ph@$00@std@@@std@@QEAA@AEBU?$_Ph@$00@1@@Z ; std::_Tuple_val<std::_Ph<1> >::_Tuple_val<std::_Ph<1> ><std::_Ph<1> const &>

; 243  :     }

  000be	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c5	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@$$QEAH@Z ENDP ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int><std::_Exact_args_t,std::_Ph<1> const &,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv87 = 248
tv80 = 248
this$ = 288
__formal$ = 296
_This_arg$ = 304
<_Rest_arg_0>$ = 312
??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z PROC ; std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Exact_args_t,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0>, COMDAT

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00044	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  0004b	48 8b f8	 mov	 rdi, rax
  0004e	33 c0		 xor	 eax, eax
  00050	b9 01 00 00 00	 mov	 ecx, 1
  00055	f3 aa		 rep stosb
  00057	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rbp]
  0005e	e8 00 00 00 00	 call	 ??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
  00063	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  0006a	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00071	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00077	4c 8b 85 f8 00
	00 00		 mov	 r8, QWORD PTR tv80[rbp]
  0007e	0f b6 95 e4 00
	00 00		 movzx	 edx, BYTE PTR $T2[rbp]
  00085	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008c	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$V$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ; std::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Exact_args_t,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00091	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00098	48 83 c0 08	 add	 rax, 8
  0009c	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  000a3	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  000aa	e8 00 00 00 00	 call	 ??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
  000af	48 8b d0	 mov	 rdx, rax
  000b2	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR tv87[rbp]
  000b9	e8 00 00 00 00	 call	 ??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@@Z ; std::_Tuple_val<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >::_Tuple_val<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> ><std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >

; 243  :     }

  000be	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c5	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ENDP ; std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Exact_args_t,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH1@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv87 = 248
tv80 = 248
this$ = 288
__formal$ = 296
_This_arg$ = 304
<_Rest_arg_0>$ = 312
??$?0U_Exact_args_t@std@@HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH1@Z PROC ; std::tuple<int &&,int &&>::tuple<int &&,int &&><std::_Exact_args_t,int,int,0>, COMDAT

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00044	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  0004b	48 8b f8	 mov	 rdi, rax
  0004e	33 c0		 xor	 eax, eax
  00050	b9 01 00 00 00	 mov	 ecx, 1
  00055	f3 aa		 rep stosb
  00057	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rbp]
  0005e	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00063	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  0006a	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00071	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00077	4c 8b 85 f8 00
	00 00		 mov	 r8, QWORD PTR tv80[rbp]
  0007e	0f b6 95 e4 00
	00 00		 movzx	 edx, BYTE PTR $T2[rbp]
  00085	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008c	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@H$$V$0A@@?$tuple@$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH@Z ; std::tuple<int &&>::tuple<int &&><std::_Exact_args_t,int,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00091	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00098	48 83 c0 08	 add	 rax, 8
  0009c	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  000a3	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  000aa	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  000af	48 8b d0	 mov	 rdx, rax
  000b2	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR tv87[rbp]
  000b9	e8 00 00 00 00	 call	 ??$?0H@?$_Tuple_val@$$QEAH@std@@QEAA@$$QEAH@Z ; std::_Tuple_val<int &&>::_Tuple_val<int &&><int>

; 243  :     }

  000be	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c5	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
??$?0U_Exact_args_t@std@@HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH1@Z ENDP ; std::tuple<int &&,int &&>::tuple<int &&,int &&><std::_Exact_args_t,int,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0AEBH$0A@@?$tuple@AEBH@std@@QEAA@AEBH@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_This_arg$ = 264
??$?0AEBH$0A@@?$tuple@AEBH@std@@QEAA@AEBH@Z PROC	; std::tuple<int const &>::tuple<int const &><int const &,0>, COMDAT

; 295  :         : tuple(_Exact_args_t{}, _This_arg, _Rest_arg...) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00043	48 8b f8	 mov	 rdi, rax
  00046	33 c0		 xor	 eax, eax
  00048	b9 01 00 00 00	 mov	 ecx, 1
  0004d	f3 aa		 rep stosb
  0004f	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR _This_arg$[rbp]
  00056	0f b6 95 c4 00
	00 00		 movzx	 edx, BYTE PTR $T1[rbp]
  0005d	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00064	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@AEBH$$V$0A@@?$tuple@AEBH@std@@QEAA@U_Exact_args_t@1@AEBH@Z ; std::tuple<int const &>::tuple<int const &><std::_Exact_args_t,int const &,0>
  00069	90		 npad	 1
  0006a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00071	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
??$?0AEBH$0A@@?$tuple@AEBH@std@@QEAA@AEBH@Z ENDP	; std::tuple<int const &>::tuple<int const &><int const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
$T4 = 292
tv88 = 312
tv85 = 320
tv82 = 328
this$ = 368
_This_arg$ = 376
<_Rest_arg_0>$ = 384
<_Rest_arg_1>$ = 392
??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z PROC ; std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> ><`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &,0>, COMDAT

; 310  :         : tuple(_Exact_args_t{}, _STD forward<_This2>(_This_arg), _STD forward<_Rest2>(_Rest_arg)...) {}

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  0001d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00045	90		 npad	 1
  00046	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  0004d	48 8b f8	 mov	 rdi, rax
  00050	33 c0		 xor	 eax, eax
  00052	b9 01 00 00 00	 mov	 ecx, 1
  00057	f3 aa		 rep stosb
  00059	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_1>$[rbp]
  00060	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z ; std::forward<std::_Ph<2> const &>
  00065	90		 npad	 1
  00066	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  0006d	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rbp]
  00074	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
  00079	90		 npad	 1
  0007a	48 89 85 40 01
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  00081	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  00088	e8 00 00 00 00	 call	 ??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z ; std::forward<`FuncAndBind::foo'::`2'::A *>
  0008d	90		 npad	 1
  0008e	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  00095	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  0009c	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  000a2	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  000a9	88 85 04 01 00
	00		 mov	 BYTE PTR $T3[rbp], al
  000af	0f b6 85 04 01
	00 00		 movzx	 eax, BYTE PTR $T3[rbp]
  000b6	88 85 24 01 00
	00		 mov	 BYTE PTR $T4[rbp], al
  000bc	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR tv88[rbp]
  000c3	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000c8	4c 8b 8d 40 01
	00 00		 mov	 r9, QWORD PTR tv85[rbp]
  000cf	4c 8b 85 48 01
	00 00		 mov	 r8, QWORD PTR tv82[rbp]
  000d6	0f b6 95 24 01
	00 00		 movzx	 edx, BYTE PTR $T4[rbp]
  000dd	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e4	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z ; std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> ><std::_Exact_args_t,`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &,0>
  000e9	90		 npad	 1
  000ea	48 8b 85 70 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f1	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  000f8	5f		 pop	 rdi
  000f9	5d		 pop	 rbp
  000fa	c3		 ret	 0
??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z ENDP ; std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> ><`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0AEBU?$_Ph@$00@std@@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBU?$_Ph@$00@1@$$QEAH@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
tv82 = 280
tv79 = 288
this$ = 336
_This_arg$ = 344
<_Rest_arg_0>$ = 352
??$?0AEBU?$_Ph@$00@std@@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBU?$_Ph@$00@1@$$QEAH@Z PROC ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int><std::_Ph<1> const &,int,0>, COMDAT

; 310  :         : tuple(_Exact_args_t{}, _STD forward<_This2>(_This_arg), _STD forward<_Rest2>(_Rest_arg)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1
  00041	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00048	48 8b f8	 mov	 rdi, rax
  0004b	33 c0		 xor	 eax, eax
  0004d	b9 01 00 00 00	 mov	 ecx, 1
  00052	f3 aa		 rep stosb
  00054	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rbp]
  0005b	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00060	90		 npad	 1
  00061	48 89 85 18 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  00068	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  0006f	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
  00074	90		 npad	 1
  00075	48 89 85 20 01
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  0007c	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00083	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00089	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  00090	88 85 04 01 00
	00		 mov	 BYTE PTR $T3[rbp], al
  00096	4c 8b 8d 18 01
	00 00		 mov	 r9, QWORD PTR tv82[rbp]
  0009d	4c 8b 85 20 01
	00 00		 mov	 r8, QWORD PTR tv79[rbp]
  000a4	0f b6 95 04 01
	00 00		 movzx	 edx, BYTE PTR $T3[rbp]
  000ab	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b2	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@AEBU?$_Ph@$00@1@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@U_Exact_args_t@1@AEBU?$_Ph@$00@1@$$QEAH@Z ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int><std::_Exact_args_t,std::_Ph<1> const &,int,0>
  000b7	90		 npad	 1
  000b8	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000bf	48 8d a5 38 01
	00 00		 lea	 rsp, QWORD PTR [rbp+312]
  000c6	5f		 pop	 rdi
  000c7	5d		 pop	 rbp
  000c8	c3		 ret	 0
??$?0AEBU?$_Ph@$00@std@@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBU?$_Ph@$00@1@$$QEAH@Z ENDP ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int><std::_Ph<1> const &,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
tv82 = 280
tv79 = 288
this$ = 336
_This_arg$ = 344
<_Rest_arg_0>$ = 352
??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z PROC ; std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0>, COMDAT

; 310  :         : tuple(_Exact_args_t{}, _STD forward<_This2>(_This_arg), _STD forward<_Rest2>(_Rest_arg)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1
  00041	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00048	48 8b f8	 mov	 rdi, rax
  0004b	33 c0		 xor	 eax, eax
  0004d	b9 01 00 00 00	 mov	 ecx, 1
  00052	f3 aa		 rep stosb
  00054	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rbp]
  0005b	e8 00 00 00 00	 call	 ??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
  00060	90		 npad	 1
  00061	48 89 85 18 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  00068	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  0006f	e8 00 00 00 00	 call	 ??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
  00074	90		 npad	 1
  00075	48 89 85 20 01
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  0007c	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00083	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00089	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  00090	88 85 04 01 00
	00		 mov	 BYTE PTR $T3[rbp], al
  00096	4c 8b 8d 18 01
	00 00		 mov	 r9, QWORD PTR tv82[rbp]
  0009d	4c 8b 85 20 01
	00 00		 mov	 r8, QWORD PTR tv79[rbp]
  000a4	0f b6 95 04 01
	00 00		 movzx	 edx, BYTE PTR $T3[rbp]
  000ab	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b2	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@U_Exact_args_t@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ; std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Exact_args_t,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0>
  000b7	90		 npad	 1
  000b8	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000bf	48 8d a5 38 01
	00 00		 lea	 rsp, QWORD PTR [rbp+312]
  000c6	5f		 pop	 rdi
  000c7	5d		 pop	 rbp
  000c8	c3		 ret	 0
??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ENDP ; std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00040	48 6b 85 f0 00
	00 00 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00052	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Verify_range@H@std@@YAXQEBH0@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
??$_Verify_range@H@std@@YAXQEBH0@Z PROC			; std::_Verify_range<int>, COMDAT

; 191  :     const _Ty* const _First, const _Ty* const _Last) noexcept { // special case range verification for pointers

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
$LN4@Verify_ran:

; 192  :     _STL_VERIFY(_First <= _Last, "transposed pointer range");

  0003c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Last$[rbp]
  00043	48 39 85 e0 00
	00 00		 cmp	 QWORD PTR _First$[rbp], rax
  0004a	77 02		 ja	 SHORT $LN7@Verify_ran
  0004c	eb 6d		 jmp	 SHORT $LN9@Verify_ran
$LN7@Verify_ran:
  0004e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
  00055	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00061	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00066	45 33 c9	 xor	 r9d, r9d
  00069	41 b8 c0 00 00
	00		 mov	 r8d, 192		; 000000c0H
  0006f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GK@FAHAKJIH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00076	b9 02 00 00 00	 mov	 ecx, 2
  0007b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00081	90		 npad	 1
  00082	83 f8 01	 cmp	 eax, 1
  00085	75 03		 jne	 SHORT $LN11@Verify_ran
  00087	cc		 int	 3
  00088	33 c0		 xor	 eax, eax
$LN11@Verify_ran:
  0008a	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00093	41 b9 c0 00 00
	00		 mov	 r9d, 192		; 000000c0H
  00099	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NE@PFDEEMPK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  000a7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
  000ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b4	90		 npad	 1
  000b5	33 c0		 xor	 eax, eax
  000b7	85 c0		 test	 eax, eax
  000b9	75 93		 jne	 SHORT $LN7@Verify_ran
$LN9@Verify_ran:
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	0f 85 77 ff ff
	ff		 jne	 $LN4@Verify_ran

; 193  : }

  000c5	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
??$_Verify_range@H@std@@YAXQEBH0@Z ENDP			; std::_Verify_range<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@$$QEAH0@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
tv82 = 280
tv79 = 288
this$ = 336
_This_arg$ = 344
<_Rest_arg_0>$ = 352
??$?0HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@$$QEAH0@Z PROC ; std::tuple<int &&,int &&>::tuple<int &&,int &&><int,int,0>, COMDAT

; 310  :         : tuple(_Exact_args_t{}, _STD forward<_This2>(_This_arg), _STD forward<_Rest2>(_Rest_arg)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1
  00041	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00048	48 8b f8	 mov	 rdi, rax
  0004b	33 c0		 xor	 eax, eax
  0004d	b9 01 00 00 00	 mov	 ecx, 1
  00052	f3 aa		 rep stosb
  00054	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rbp]
  0005b	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00060	90		 npad	 1
  00061	48 89 85 18 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  00068	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  0006f	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00074	90		 npad	 1
  00075	48 89 85 20 01
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  0007c	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00083	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00089	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  00090	88 85 04 01 00
	00		 mov	 BYTE PTR $T3[rbp], al
  00096	4c 8b 8d 18 01
	00 00		 mov	 r9, QWORD PTR tv82[rbp]
  0009d	4c 8b 85 20 01
	00 00		 mov	 r8, QWORD PTR tv79[rbp]
  000a4	0f b6 95 04 01
	00 00		 movzx	 edx, BYTE PTR $T3[rbp]
  000ab	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b2	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@U_Exact_args_t@1@$$QEAH1@Z ; std::tuple<int &&,int &&>::tuple<int &&,int &&><std::_Exact_args_t,int,int,0>
  000b7	90		 npad	 1
  000b8	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000bf	48 8d a5 38 01
	00 00		 lea	 rsp, QWORD PTR [rbp+312]
  000c6	5f		 pop	 rdi
  000c7	5d		 pop	 rbp
  000c8	c3		 ret	 0
??$?0HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@$$QEAH0@Z ENDP ; std::tuple<int &&,int &&>::tuple<int &&,int &&><int,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV0?1??12@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
_TEXT	SEGMENT
tv86 = 192
tv84 = 200
tv82 = 208
tv80 = 216
this$ = 256
__formal$ = 264
_Val1$ = 272
<_Val2_0>$ = 280
<_Val2_1>$ = 288
<_Val2_2>$ = 296
??$?0P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV0?1??12@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z PROC ; std::_Compressed_pair<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >,0>::_Compressed_pair<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >,0><int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>, COMDAT

; 1441 :         : _Myval1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00044	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _Val1$[rbp]
  0004b	e8 00 00 00 00	 call	 ??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z ; std::forward<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int)>
  00050	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00057	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005a	48 89 01	 mov	 QWORD PTR [rcx], rax
  0005d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 83 c0 08	 add	 rax, 8
  00068	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv86[rbp], rax
  0006f	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR <_Val2_2>$[rbp]
  00076	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z ; std::forward<std::_Ph<2> const &>
  0007b	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  00082	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR <_Val2_1>$[rbp]
  00089	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
  0008e	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  00095	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Val2_0>$[rbp]
  0009c	e8 00 00 00 00	 call	 ??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z ; std::forward<`FuncAndBind::foo'::`2'::A *>
  000a1	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  000a8	4c 8b 8d c8 00
	00 00		 mov	 r9, QWORD PTR tv84[rbp]
  000af	4c 8b 85 d0 00
	00 00		 mov	 r8, QWORD PTR tv82[rbp]
  000b6	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv80[rbp]
  000bd	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv86[rbp]
  000c4	e8 00 00 00 00	 call	 ??$?0PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@$0A@@?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@QEAA@$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z ; std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> ><`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &,0>
  000c9	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d0	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000d7	5f		 pop	 rdi
  000d8	5d		 pop	 rbp
  000d9	c3		 ret	 0
??$?0P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV0?1??12@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z ENDP ; std::_Compressed_pair<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >,0>::_Compressed_pair<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >,0><int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$less@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z
_TEXT	SEGMENT
tv83 = 192
tv81 = 200
tv79 = 208
this$ = 256
__formal$ = 264
_Val1$ = 272
<_Val2_0>$ = 280
<_Val2_1>$ = 288
??$?0U?$less@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z PROC ; std::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1><std::less<int>,std::_Ph<1> const &,int>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00044	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _Val1$[rbp]
  0004b	e8 00 00 00 00	 call	 ??$forward@U?$less@H@std@@@std@@YA$$QEAU?$less@H@0@AEAU10@@Z ; std::forward<std::less<int> >
  00050	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  0005e	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR <_Val2_1>$[rbp]
  00065	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  0006a	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00071	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Val2_0>$[rbp]
  00078	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
  0007d	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00084	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR tv81[rbp]
  0008b	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv79[rbp]
  00092	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv83[rbp]
  00099	e8 00 00 00 00	 call	 ??$?0AEBU?$_Ph@$00@std@@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBU?$_Ph@$00@1@$$QEAH@Z ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int><std::_Ph<1> const &,int,0>
  0009e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a5	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000ac	5f		 pop	 rdi
  000ad	5d		 pop	 rbp
  000ae	c3		 ret	 0
??$?0U?$less@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z ENDP ; std::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1><std::less<int>,std::_Ph<1> const &,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$greater@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z
_TEXT	SEGMENT
tv83 = 192
tv81 = 200
tv79 = 208
this$ = 256
__formal$ = 264
_Val1$ = 272
<_Val2_0>$ = 280
<_Val2_1>$ = 288
??$?0U?$greater@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z PROC ; std::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1><std::greater<int>,std::_Ph<1> const &,int>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00044	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _Val1$[rbp]
  0004b	e8 00 00 00 00	 call	 ??$forward@U?$greater@H@std@@@std@@YA$$QEAU?$greater@H@0@AEAU10@@Z ; std::forward<std::greater<int> >
  00050	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  0005e	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR <_Val2_1>$[rbp]
  00065	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  0006a	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00071	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Val2_0>$[rbp]
  00078	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
  0007d	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00084	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR tv81[rbp]
  0008b	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv79[rbp]
  00092	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv83[rbp]
  00099	e8 00 00 00 00	 call	 ??$?0AEBU?$_Ph@$00@std@@H$0A@@?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBU?$_Ph@$00@1@$$QEAH@Z ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int><std::_Ph<1> const &,int,0>
  0009e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a5	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000ac	5f		 pop	 rdi
  000ad	5d		 pop	 rbp
  000ae	c3		 ret	 0
??$?0U?$greater@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z ENDP ; std::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1><std::greater<int>,std::_Ph<1> const &,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z
_TEXT	SEGMENT
tv83 = 192
tv81 = 200
tv79 = 208
this$ = 256
__formal$ = 264
_Val1$ = 272
<_Val2_0>$ = 280
<_Val2_1>$ = 288
??$?0U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z PROC ; std::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1>::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1><std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00044	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _Val1$[rbp]
  0004b	e8 00 00 00 00	 call	 ??$forward@U?$logical_and@_N@std@@@std@@YA$$QEAU?$logical_and@_N@0@AEAU10@@Z ; std::forward<std::logical_and<bool> >
  00050	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  0005e	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR <_Val2_1>$[rbp]
  00065	e8 00 00 00 00	 call	 ??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
  0006a	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00071	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Val2_0>$[rbp]
  00078	e8 00 00 00 00	 call	 ??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
  0007d	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00084	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR tv81[rbp]
  0008b	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv79[rbp]
  00092	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv83[rbp]
  00099	e8 00 00 00 00	 call	 ??$?0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$0A@@?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ; std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> ><std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0>
  0009e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a5	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000ac	5f		 pop	 rdi
  000ad	5d		 pop	 rbp
  000ae	c3		 ret	 0
??$?0U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ENDP ; std::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1>::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1><std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 8
_Ptr_container$ = 40
_Ptr$ = 72
_Bytes$ = 320
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  00036	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR _Bytes$[rbp]
  0003d	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00041	48 89 45 08	 mov	 QWORD PTR _Block_size$[rbp], rax

; 86   :     if (_Block_size <= _Bytes) {

  00045	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR _Bytes$[rbp]
  0004c	48 39 45 08	 cmp	 QWORD PTR _Block_size$[rbp], rax
  00050	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00052	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00057	48 8b 4d 08	 mov	 rcx, QWORD PTR _Block_size$[rbp]
  0005b	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00060	48 89 45 28	 mov	 QWORD PTR _Ptr_container$[rbp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00064	48 83 7d 28 00	 cmp	 QWORD PTR _Ptr_container$[rbp], 0
  00069	74 02		 je	 SHORT $LN9@Allocate_m
  0006b	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  0006d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00074	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00079	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00080	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00085	45 33 c9	 xor	 r9d, r9d
  00088	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00095	b9 02 00 00 00	 mov	 ecx, 2
  0009a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000a0	83 f8 01	 cmp	 eax, 1
  000a3	75 03		 jne	 SHORT $LN12@Allocate_m
  000a5	cc		 int	 3
  000a6	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  000a8	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000b1	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000b7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
  000c5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000cc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000d2	33 c0		 xor	 eax, eax
  000d4	85 c0		 test	 eax, eax
  000d6	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000d8	33 c0		 xor	 eax, eax
  000da	85 c0		 test	 eax, eax
  000dc	75 86		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000de	48 8b 45 28	 mov	 rax, QWORD PTR _Ptr_container$[rbp]
  000e2	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000e6	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000ea	48 89 45 48	 mov	 QWORD PTR _Ptr$[rbp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000ee	b8 08 00 00 00	 mov	 eax, 8
  000f3	48 6b c0 ff	 imul	 rax, rax, -1
  000f7	48 8b 4d 48	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000fb	48 8b 55 28	 mov	 rdx, QWORD PTR _Ptr_container$[rbp]
  000ff	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  00103	b8 08 00 00 00	 mov	 eax, 8
  00108	48 6b c0 fe	 imul	 rax, rax, -2
  0010c	48 8b 4d 48	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00110	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  0011a	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0011e	48 8b 45 48	 mov	 rax, QWORD PTR _Ptr$[rbp]
$LN11@Allocate_m:

; 99   : }

  00122	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  00129	5f		 pop	 rdi
  0012a	5d		 pop	 rbp
  0012b	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  0003c	41 b8 01 00 00
	00		 mov	 r8d, 1
  00042	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00049	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  00050	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00055	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$?RAEBH@?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA_NAEBH@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 228
$T3 = 260
$T4 = 292
$T5 = 324
$T6 = 356
$T7 = 388
tv85 = 408
tv82 = 416
this$ = 464
<_Unbargs_0>$ = 472
??$?RAEBH@?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA_NAEBH@Z PROC ; std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::operator()<int const &>, COMDAT

; 1491 :     _CLASS_DEFINE_CONST(_BINDER_OPERATOR)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 01
	00 00		 sub	 rsp, 488		; 000001e8H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 7a 00 00 00	 mov	 ecx, 122		; 0000007aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	02 00 00	 mov	 rcx, QWORD PTR [rsp+520]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d d8 01
	00 00		 mov	 rcx, QWORD PTR <_Unbargs_0>$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00051	e8 00 00 00 00	 call	 ??$forward_as_tuple@AEBH@std@@YA?AV?$tuple@AEBH@0@AEBH@Z ; std::forward_as_tuple<int const &>
  00056	48 89 85 98 01
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  0005d	48 8b 85 d0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8b c8	 mov	 rcx, rax
  00067	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAAAEAU?$logical_and@_N@2@XZ ; std::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1>::_Get_first
  0006c	48 89 85 a0 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  00073	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  0007a	88 85 64 01 00
	00		 mov	 BYTE PTR $T6[rbp], al
  00080	0f b6 85 64 01
	00 00		 movzx	 eax, BYTE PTR $T6[rbp]
  00087	88 85 84 01 00
	00		 mov	 BYTE PTR $T7[rbp], al
  0008d	0f b6 85 04 01
	00 00		 movzx	 eax, BYTE PTR $T3[rbp]
  00094	88 85 24 01 00
	00		 mov	 BYTE PTR $T4[rbp], al
  0009a	0f b6 85 24 01
	00 00		 movzx	 eax, BYTE PTR $T4[rbp]
  000a1	88 85 44 01 00
	00		 mov	 BYTE PTR $T5[rbp], al
  000a7	48 8b 85 d0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ae	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR tv85[rbp]
  000b5	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000ba	4c 8b c8	 mov	 r9, rax
  000bd	4c 8b 85 a0 01
	00 00		 mov	 r8, QWORD PTR tv82[rbp]
  000c4	0f b6 95 84 01
	00 00		 movzx	 edx, BYTE PTR $T7[rbp]
  000cb	0f b6 8d 44 01
	00 00		 movzx	 ecx, BYTE PTR $T5[rbp]
  000d2	e8 00 00 00 00	 call	 ??$_Call_binder@U_Unforced@std@@$0A@$00U?$logical_and@_N@2@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$logical_and@_N@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAV?$tuple@AEBH@0@@Z ; std::_Call_binder<std::_Unforced,0,1,std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,std::tuple<int const &> >
  000d7	48 8d a5 b8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+440]
  000de	5f		 pop	 rdi
  000df	5d		 pop	 rbp
  000e0	c3		 ret	 0
??$?RAEBH@?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA_NAEBH@Z ENDP ; std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::operator()<int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Call_binder@U_Unforced@std@@$0A@$00U?$logical_and@_N@2@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$logical_and@_N@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAV?$tuple@AEBH@0@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv75 = 248
tv73 = 256
tv87 = 264
tv85 = 272
__formal$ = 320
__formal$ = 328
_Obj$ = 336
_Tpl$ = 344
_Ut$ = 352
??$_Call_binder@U_Unforced@std@@$0A@$00U?$logical_and@_N@2@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$logical_and@_N@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAV?$tuple@AEBH@0@@Z PROC ; std::_Call_binder<std::_Unforced,0,1,std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,std::tuple<int const &> >, COMDAT

; 1445 :         _Obj, _Fix_arg(_STD get<_Ix>(_Tpl), _STD move(_Ut))...)) { // bind() and bind<R>() invocation

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00012	55		 push	 rbp
  00013	57		 push	 rdi
  00014	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0001b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00020	48 8b fc	 mov	 rdi, rsp
  00023	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00028	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002d	f3 ab		 rep stosd
  0002f	0f b6 8c 24 68
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+360]
  00037	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  0003e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1446 :     return _Invoker_ret<_Ret>::_Call(_Obj, _Fix_arg(_STD get<_Ix>(_Tpl), _STD move(_Ut))...);

  00043	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  0004f	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00056	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR _Tpl$[rbp]
  0005d	e8 00 00 00 00	 call	 ??$get@$00V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z ; std::get<1,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
  00062	48 89 85 00 01
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  00069	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR tv75[rbp]
  00070	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR tv73[rbp]
  00077	e8 00 00 00 00	 call	 ??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z ; std::_Fix_arg<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,std::tuple<int const &> >
  0007c	88 85 c4 00 00
	00		 mov	 BYTE PTR $T1[rbp], al
  00082	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  00089	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  0008e	48 89 85 08 01
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  00095	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR _Tpl$[rbp]
  0009c	e8 00 00 00 00	 call	 ??$get@$0A@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z ; std::get<0,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
  000a1	48 89 85 10 01
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  000a8	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR tv87[rbp]
  000af	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR tv85[rbp]
  000b6	e8 00 00 00 00	 call	 ??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z ; std::_Fix_arg<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::tuple<int const &> >
  000bb	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  000c1	4c 8d 85 c4 00
	00 00		 lea	 r8, QWORD PTR $T1[rbp]
  000c8	48 8d 95 e4 00
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  000cf	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  000d6	e8 00 00 00 00	 call	 ??$_Call@AEAU?$logical_and@_N@std@@_N_N@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z ; std::_Invoker_ret<std::_Unforced,0>::_Call<std::logical_and<bool> &,bool,bool>

; 1447 : }

  000db	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  000e2	5f		 pop	 rdi
  000e3	5d		 pop	 rbp
  000e4	c3		 ret	 0
??$_Call_binder@U_Unforced@std@@$0A@$00U?$logical_and@_N@2@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$logical_and@_N@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAV?$tuple@AEBH@0@@Z ENDP ; std::_Call_binder<std::_Unforced,0,1,std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,std::tuple<int const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@AEAU?$logical_and@_N@std@@_N_N@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z
_TEXT	SEGMENT
tv79 = 192
tv77 = 200
tv75 = 208
<_Vals_0>$ = 256
<_Vals_1>$ = 264
<_Vals_2>$ = 272
??$_Call@AEAU?$logical_and@_N@std@@_N_N@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z PROC ; std::_Invoker_ret<std::_Unforced,0>::_Call<std::logical_and<bool> &,bool,bool>, COMDAT

; 1605 :         -> decltype(_STD invoke(_STD forward<_Valtys>(_Vals)...)) { // INVOKE, unchanged

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1606 :         return _STD invoke(_STD forward<_Valtys>(_Vals)...);

  00040	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_2>$[rbp]
  00047	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QEA_NAEA_N@Z ; std::forward<bool>
  0004c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00053	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_1>$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QEA_NAEA_N@Z ; std::forward<bool>
  0005f	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  00066	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_0>$[rbp]
  0006d	e8 00 00 00 00	 call	 ??$forward@AEAU?$logical_and@_N@std@@@std@@YAAEAU?$logical_and@_N@0@AEAU10@@Z ; std::forward<std::logical_and<bool> &>
  00072	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00079	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv79[rbp]
  00080	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv77[rbp]
  00087	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR tv75[rbp]
  0008e	e8 00 00 00 00	 call	 ??$invoke@AEAU?$logical_and@_N@std@@_N_N@std@@YA_NAEAU?$logical_and@_N@0@$$QEA_N1@Z ; std::invoke<std::logical_and<bool> &,bool,bool>

; 1607 :     }

  00093	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009a	5f		 pop	 rdi
  0009b	5d		 pop	 rbp
  0009c	c3		 ret	 0
??$_Call@AEAU?$logical_and@_N@std@@_N_N@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z ENDP ; std::_Invoker_ret<std::_Unforced,0>::_Call<std::logical_and<bool> &,bool,bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$invoke@AEAU?$logical_and@_N@std@@_N_N@std@@YA_NAEAU?$logical_and@_N@0@$$QEA_N1@Z
_TEXT	SEGMENT
tv79 = 192
tv77 = 200
tv75 = 208
_Obj$ = 256
<_Args_0>$ = 264
<_Args_1>$ = 272
??$invoke@AEAU?$logical_and@_N@std@@_N_N@std@@YA_NAEAU?$logical_and@_N@0@$$QEA_N1@Z PROC ; std::invoke<std::logical_and<bool> &,bool,bool>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  00047	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QEA_NAEA_N@Z ; std::forward<bool>
  0004c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00053	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QEA_NAEA_N@Z ; std::forward<bool>
  0005f	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  00066	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  0006d	e8 00 00 00 00	 call	 ??$forward@AEAU?$logical_and@_N@std@@@std@@YAAEAU?$logical_and@_N@0@AEAU10@@Z ; std::forward<std::logical_and<bool> &>
  00072	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00079	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv79[rbp]
  00080	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv77[rbp]
  00087	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR tv75[rbp]
  0008e	e8 00 00 00 00	 call	 ??$_Call@AEAU?$logical_and@_N@std@@_N_N@_Invoker_functor@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z ; std::_Invoker_functor::_Call<std::logical_and<bool> &,bool,bool>
  00093	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009a	5f		 pop	 rdi
  0009b	5d		 pop	 rbp
  0009c	c3		 ret	 0
??$invoke@AEAU?$logical_and@_N@std@@_N_N@std@@YA_NAEAU?$logical_and@_N@0@$$QEA_N1@Z ENDP ; std::invoke<std::logical_and<bool> &,bool,bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@AEAU?$logical_and@_N@std@@_N_N@_Invoker_functor@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z
_TEXT	SEGMENT
tv79 = 192
tv77 = 200
tv75 = 208
_Obj$ = 256
<_Args_0>$ = 264
<_Args_1>$ = 272
??$_Call@AEAU?$logical_and@_N@std@@_N_N@_Invoker_functor@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z PROC ; std::_Invoker_functor::_Call<std::logical_and<bool> &,bool,bool>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$forward@AEAU?$logical_and@_N@std@@@std@@YAAEAU?$logical_and@_N@0@AEAU10@@Z ; std::forward<std::logical_and<bool> &>
  0004c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00053	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QEA_NAEA_N@Z ; std::forward<bool>
  0005f	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  00066	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0006d	e8 00 00 00 00	 call	 ??$forward@_N@std@@YA$$QEA_NAEA_N@Z ; std::forward<bool>
  00072	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00079	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR tv77[rbp]
  00080	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv75[rbp]
  00087	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv79[rbp]
  0008e	e8 00 00 00 00	 call	 ??R?$logical_and@_N@std@@QEBA_NAEB_N0@Z ; std::logical_and<bool>::operator()
  00093	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009a	5f		 pop	 rdi
  0009b	5d		 pop	 rbp
  0009c	c3		 ret	 0
??$_Call@AEAU?$logical_and@_N@std@@_N_N@_Invoker_functor@std@@SA_NAEAU?$logical_and@_N@1@$$QEA_N1@Z ENDP ; std::_Invoker_functor::_Call<std::logical_and<bool> &,bool,bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@_N@std@@YA$$QEA_NAEA_N@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@_N@std@@YA$$QEA_NAEA_N@Z PROC		; std::forward<bool>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@_N@std@@YA$$QEA_NAEA_N@Z ENDP		; std::forward<bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAU?$logical_and@_N@std@@@std@@YAAEAU?$logical_and@_N@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAU?$logical_and@_N@std@@@std@@YAAEAU?$logical_and@_N@0@AEAU10@@Z PROC ; std::forward<std::logical_and<bool> &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEAU?$logical_and@_N@std@@@std@@YAAEAU?$logical_and@_N@0@AEAU10@@Z ENDP ; std::forward<std::logical_and<bool> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z
_TEXT	SEGMENT
_Tid$ = 224
_Ut$ = 232
??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z PROC ; std::_Fix_arg<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,std::tuple<int const &> >, COMDAT

; 1435 :     -> decltype(_Select_fixer<_Cv_TiD>::_Fix(_Tid, _STD move(_Ut))) { // translate an argument for bind

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1436 :     return _Select_fixer<_Cv_TiD>::_Fix(_Tid, _STD move(_Ut));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Tid$[rbp]
  00051	e8 00 00 00 00	 call	 ??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z ; std::_Select_fixer<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0,1,0>::_Fix<std::tuple<int const &> >

; 1437 : }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z ENDP ; std::_Fix_arg<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,std::tuple<int const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv71 = 248
_Tid$ = 288
_Ut$ = 296
??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z PROC ; std::_Select_fixer<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0,1,0>::_Fix<std::tuple<int const &> >, COMDAT

; 1409 :         make_index_sequence<tuple_size_v<_Untuple>>())) { // call a nested bind expression

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1410 :         return _Apply(_Tid, _STD move(_Ut), make_index_sequence<tuple_size_v<_Untuple>>());

  0003b	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00042	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00048	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  00054	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  0005b	44 0f b6 85 e4
	00 00 00	 movzx	 r8d, BYTE PTR $T2[rbp]
  00063	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR tv71[rbp]
  0006a	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR _Tid$[rbp]
  00071	e8 00 00 00 00	 call	 ??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z ; std::_Select_fixer<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0,1,0>::_Apply<std::tuple<int const &>,0>

; 1411 :     }

  00076	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z ENDP ; std::_Select_fixer<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0,1,0>::_Fix<std::tuple<int const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z
_TEXT	SEGMENT
_Tid$ = 224
_Ut$ = 232
__formal$ = 240
??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z PROC ; std::_Select_fixer<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0,1,0>::_Apply<std::tuple<int const &>,0>, COMDAT

; 1402 :         index_sequence<_Jx...>) -> decltype(_Tid(_STD get<_Jx>(_STD move(_Ut))...)) { // call a nested bind expression

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1403 :         return _Tid(_STD get<_Jx>(_STD move(_Ut))...);

  00040	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  00047	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  0004c	48 8b c8	 mov	 rcx, rax
  0004f	e8 00 00 00 00	 call	 ??$get@$0A@AEBH@std@@YAAEBH$$QEAV?$tuple@AEBH@0@@Z ; std::get<0,int const &>
  00054	48 8b d0	 mov	 rdx, rax
  00057	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Tid$[rbp]
  0005e	e8 00 00 00 00	 call	 ??$?RAEBH@?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z ; std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>::operator()<int const &>

; 1404 :     }

  00063	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006a	5f		 pop	 rdi
  0006b	5d		 pop	 rbp
  0006c	c3		 ret	 0
??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z ENDP ; std::_Select_fixer<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>,0,1,0>::_Apply<std::tuple<int const &>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$?RAEBH@?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 228
$T3 = 260
$T4 = 292
$T5 = 324
$T6 = 356
$T7 = 388
tv85 = 408
tv82 = 416
this$ = 464
<_Unbargs_0>$ = 472
??$?RAEBH@?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z PROC ; std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>::operator()<int const &>, COMDAT

; 1491 :     _CLASS_DEFINE_CONST(_BINDER_OPERATOR)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 01
	00 00		 sub	 rsp, 488		; 000001e8H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 7a 00 00 00	 mov	 ecx, 122		; 0000007aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	02 00 00	 mov	 rcx, QWORD PTR [rsp+520]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d d8 01
	00 00		 mov	 rcx, QWORD PTR <_Unbargs_0>$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00051	e8 00 00 00 00	 call	 ??$forward_as_tuple@AEBH@std@@YA?AV?$tuple@AEBH@0@AEBH@Z ; std::forward_as_tuple<int const &>
  00056	48 89 85 98 01
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  0005d	48 8b 85 d0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8b c8	 mov	 rcx, rax
  00067	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$greater@H@2@XZ ; std::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>::_Get_first
  0006c	48 89 85 a0 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  00073	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  0007a	88 85 64 01 00
	00		 mov	 BYTE PTR $T6[rbp], al
  00080	0f b6 85 64 01
	00 00		 movzx	 eax, BYTE PTR $T6[rbp]
  00087	88 85 84 01 00
	00		 mov	 BYTE PTR $T7[rbp], al
  0008d	0f b6 85 04 01
	00 00		 movzx	 eax, BYTE PTR $T3[rbp]
  00094	88 85 24 01 00
	00		 mov	 BYTE PTR $T4[rbp], al
  0009a	0f b6 85 24 01
	00 00		 movzx	 eax, BYTE PTR $T4[rbp]
  000a1	88 85 44 01 00
	00		 mov	 BYTE PTR $T5[rbp], al
  000a7	48 8b 85 d0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ae	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR tv85[rbp]
  000b5	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000ba	4c 8b c8	 mov	 r9, rax
  000bd	4c 8b 85 a0 01
	00 00		 mov	 r8, QWORD PTR tv82[rbp]
  000c4	0f b6 95 84 01
	00 00		 movzx	 edx, BYTE PTR $T7[rbp]
  000cb	0f b6 8d 44 01
	00 00		 movzx	 ecx, BYTE PTR $T5[rbp]
  000d2	e8 00 00 00 00	 call	 ??$_Call_binder@U_Unforced@std@@$0A@$00U?$greater@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$greater@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z ; std::_Call_binder<std::_Unforced,0,1,std::greater<int>,std::tuple<std::_Ph<1>,int>,std::tuple<int const &> >
  000d7	48 8d a5 b8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+440]
  000de	5f		 pop	 rdi
  000df	5d		 pop	 rbp
  000e0	c3		 ret	 0
??$?RAEBH@?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z ENDP ; std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>::operator()<int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Call_binder@U_Unforced@std@@$0A@$00U?$greater@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$greater@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z
_TEXT	SEGMENT
tv75 = 192
tv73 = 200
tv93 = 208
tv87 = 216
tv85 = 224
tv91 = 232
__formal$ = 272
__formal$ = 280
_Obj$ = 288
_Tpl$ = 296
_Ut$ = 304
??$_Call_binder@U_Unforced@std@@$0A@$00U?$greater@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$greater@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z PROC ; std::_Call_binder<std::_Unforced,0,1,std::greater<int>,std::tuple<std::_Ph<1>,int>,std::tuple<int const &> >, COMDAT

; 1445 :         _Obj, _Fix_arg(_STD get<_Ix>(_Tpl), _STD move(_Ut))...)) { // bind() and bind<R>() invocation

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00012	55		 push	 rbp
  00013	57		 push	 rdi
  00014	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0001b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00020	48 8b fc	 mov	 rdi, rsp
  00023	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00028	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002d	f3 ab		 rep stosd
  0002f	0f b6 8c 24 38
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+312]
  00037	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  0003e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1446 :     return _Invoker_ret<_Ret>::_Call(_Obj, _Fix_arg(_STD get<_Ix>(_Tpl), _STD move(_Ut))...);

  00043	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  0004f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00056	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Tpl$[rbp]
  0005d	e8 00 00 00 00	 call	 ??$get@$00U?$_Ph@$00@std@@H@std@@YAAEAHAEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z ; std::get<1,std::_Ph<1>,int>
  00062	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  00069	48 8b 95 c0 00
	00 00		 mov	 rdx, QWORD PTR tv75[rbp]
  00070	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR tv73[rbp]
  00077	e8 00 00 00 00	 call	 ??$_Fix_arg@HV?$tuple@AEBH@std@@@std@@YAAEAHAEAH$$QEAV?$tuple@AEBH@0@@Z ; std::_Fix_arg<int,std::tuple<int const &> >
  0007c	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv93[rbp], rax
  00083	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  0008a	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  0008f	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  00096	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Tpl$[rbp]
  0009d	e8 00 00 00 00	 call	 ??$get@$0A@U?$_Ph@$00@std@@H@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z ; std::get<0,std::_Ph<1>,int>
  000a2	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  000a9	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv87[rbp]
  000b0	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR tv85[rbp]
  000b7	e8 00 00 00 00	 call	 ??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@AEBH@2@@std@@YAAEBHAEAU?$_Ph@$00@0@$$QEAV?$tuple@AEBH@0@@Z ; std::_Fix_arg<std::_Ph<1>,std::tuple<int const &> >
  000bc	48 89 85 e8 00
	00 00		 mov	 QWORD PTR tv91[rbp], rax
  000c3	4c 8b 85 d0 00
	00 00		 mov	 r8, QWORD PTR tv93[rbp]
  000ca	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR tv91[rbp]
  000d1	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  000d8	e8 00 00 00 00	 call	 ??$_Call@AEAU?$greater@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z ; std::_Invoker_ret<std::_Unforced,0>::_Call<std::greater<int> &,int const &,int &>

; 1447 : }

  000dd	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  000e4	5f		 pop	 rdi
  000e5	5d		 pop	 rbp
  000e6	c3		 ret	 0
??$_Call_binder@U_Unforced@std@@$0A@$00U?$greater@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$greater@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z ENDP ; std::_Call_binder<std::_Unforced,0,1,std::greater<int>,std::tuple<std::_Ph<1>,int>,std::tuple<int const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@AEAU?$greater@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z
_TEXT	SEGMENT
tv79 = 192
tv77 = 200
tv75 = 208
<_Vals_0>$ = 256
<_Vals_1>$ = 264
<_Vals_2>$ = 272
??$_Call@AEAU?$greater@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z PROC ; std::_Invoker_ret<std::_Unforced,0>::_Call<std::greater<int> &,int const &,int &>, COMDAT

; 1605 :         -> decltype(_STD invoke(_STD forward<_Valtys>(_Vals)...)) { // INVOKE, unchanged

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1606 :         return _STD invoke(_STD forward<_Valtys>(_Vals)...);

  00040	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_2>$[rbp]
  00047	e8 00 00 00 00	 call	 ??$forward@AEAH@std@@YAAEAHAEAH@Z ; std::forward<int &>
  0004c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00053	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_1>$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  0005f	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  00066	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_0>$[rbp]
  0006d	e8 00 00 00 00	 call	 ??$forward@AEAU?$greater@H@std@@@std@@YAAEAU?$greater@H@0@AEAU10@@Z ; std::forward<std::greater<int> &>
  00072	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00079	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv79[rbp]
  00080	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv77[rbp]
  00087	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR tv75[rbp]
  0008e	e8 00 00 00 00	 call	 ??$invoke@AEAU?$greater@H@std@@AEBHAEAH@std@@YA_NAEAU?$greater@H@0@AEBHAEAH@Z ; std::invoke<std::greater<int> &,int const &,int &>

; 1607 :     }

  00093	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009a	5f		 pop	 rdi
  0009b	5d		 pop	 rbp
  0009c	c3		 ret	 0
??$_Call@AEAU?$greater@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z ENDP ; std::_Invoker_ret<std::_Unforced,0>::_Call<std::greater<int> &,int const &,int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$invoke@AEAU?$greater@H@std@@AEBHAEAH@std@@YA_NAEAU?$greater@H@0@AEBHAEAH@Z
_TEXT	SEGMENT
tv79 = 192
tv77 = 200
tv75 = 208
_Obj$ = 256
<_Args_0>$ = 264
<_Args_1>$ = 272
??$invoke@AEAU?$greater@H@std@@AEBHAEAH@std@@YA_NAEAU?$greater@H@0@AEBHAEAH@Z PROC ; std::invoke<std::greater<int> &,int const &,int &>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  00047	e8 00 00 00 00	 call	 ??$forward@AEAH@std@@YAAEAHAEAH@Z ; std::forward<int &>
  0004c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00053	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  0005f	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  00066	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  0006d	e8 00 00 00 00	 call	 ??$forward@AEAU?$greater@H@std@@@std@@YAAEAU?$greater@H@0@AEAU10@@Z ; std::forward<std::greater<int> &>
  00072	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00079	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv79[rbp]
  00080	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv77[rbp]
  00087	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR tv75[rbp]
  0008e	e8 00 00 00 00	 call	 ??$_Call@AEAU?$greater@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z ; std::_Invoker_functor::_Call<std::greater<int> &,int const &,int &>
  00093	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009a	5f		 pop	 rdi
  0009b	5d		 pop	 rbp
  0009c	c3		 ret	 0
??$invoke@AEAU?$greater@H@std@@AEBHAEAH@std@@YA_NAEAU?$greater@H@0@AEBHAEAH@Z ENDP ; std::invoke<std::greater<int> &,int const &,int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@AEAU?$greater@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z
_TEXT	SEGMENT
tv79 = 192
tv77 = 200
tv75 = 208
_Obj$ = 256
<_Args_0>$ = 264
<_Args_1>$ = 272
??$_Call@AEAU?$greater@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z PROC ; std::_Invoker_functor::_Call<std::greater<int> &,int const &,int &>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$forward@AEAU?$greater@H@std@@@std@@YAAEAU?$greater@H@0@AEAU10@@Z ; std::forward<std::greater<int> &>
  0004c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00053	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$forward@AEAH@std@@YAAEAHAEAH@Z ; std::forward<int &>
  0005f	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  00066	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0006d	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  00072	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00079	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR tv77[rbp]
  00080	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv75[rbp]
  00087	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv79[rbp]
  0008e	e8 00 00 00 00	 call	 ??R?$greater@H@std@@QEBA_NAEBH0@Z ; std::greater<int>::operator()
  00093	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009a	5f		 pop	 rdi
  0009b	5d		 pop	 rbp
  0009c	c3		 ret	 0
??$_Call@AEAU?$greater@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$greater@H@1@AEBHAEAH@Z ENDP ; std::_Invoker_functor::_Call<std::greater<int> &,int const &,int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAU?$greater@H@std@@@std@@YAAEAU?$greater@H@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAU?$greater@H@std@@@std@@YAAEAU?$greater@H@0@AEAU10@@Z PROC ; std::forward<std::greater<int> &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEAU?$greater@H@std@@@std@@YAAEAU?$greater@H@0@AEAU10@@Z ENDP ; std::forward<std::greater<int> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$00V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$00V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z PROC ; std::get<1,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tuple$[rbp]

; 652  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$get@$00V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z ENDP ; std::get<1,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z
_TEXT	SEGMENT
_Tid$ = 224
_Ut$ = 232
??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z PROC ; std::_Fix_arg<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::tuple<int const &> >, COMDAT

; 1435 :     -> decltype(_Select_fixer<_Cv_TiD>::_Fix(_Tid, _STD move(_Ut))) { // translate an argument for bind

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1436 :     return _Select_fixer<_Cv_TiD>::_Fix(_Tid, _STD move(_Ut));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Tid$[rbp]
  00051	e8 00 00 00 00	 call	 ??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z ; std::_Select_fixer<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,0,1,0>::_Fix<std::tuple<int const &> >

; 1437 : }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??$_Fix_arg@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$tuple@AEBH@2@@std@@YA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$tuple@AEBH@0@@Z ENDP ; std::_Fix_arg<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::tuple<int const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv71 = 248
_Tid$ = 288
_Ut$ = 296
??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z PROC ; std::_Select_fixer<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,0,1,0>::_Fix<std::tuple<int const &> >, COMDAT

; 1409 :         make_index_sequence<tuple_size_v<_Untuple>>())) { // call a nested bind expression

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1410 :         return _Apply(_Tid, _STD move(_Ut), make_index_sequence<tuple_size_v<_Untuple>>());

  0003b	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00042	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00048	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  0004f	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  00054	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  0005b	44 0f b6 85 e4
	00 00 00	 movzx	 r8d, BYTE PTR $T2[rbp]
  00063	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR tv71[rbp]
  0006a	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR _Tid$[rbp]
  00071	e8 00 00 00 00	 call	 ??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z ; std::_Select_fixer<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,0,1,0>::_Apply<std::tuple<int const &>,0>

; 1411 :     }

  00076	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@@Z ENDP ; std::_Select_fixer<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,0,1,0>::_Fix<std::tuple<int const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z
_TEXT	SEGMENT
_Tid$ = 224
_Ut$ = 232
__formal$ = 240
??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z PROC ; std::_Select_fixer<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,0,1,0>::_Apply<std::tuple<int const &>,0>, COMDAT

; 1402 :         index_sequence<_Jx...>) -> decltype(_Tid(_STD get<_Jx>(_STD move(_Ut))...)) { // call a nested bind expression

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1403 :         return _Tid(_STD get<_Jx>(_STD move(_Ut))...);

  00040	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  00047	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  0004c	48 8b c8	 mov	 rcx, rax
  0004f	e8 00 00 00 00	 call	 ??$get@$0A@AEBH@std@@YAAEBH$$QEAV?$tuple@AEBH@0@@Z ; std::get<0,int const &>
  00054	48 8b d0	 mov	 rdx, rax
  00057	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Tid$[rbp]
  0005e	e8 00 00 00 00	 call	 ??$?RAEBH@?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::operator()<int const &>

; 1404 :     }

  00063	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006a	5f		 pop	 rdi
  0006b	5d		 pop	 rbp
  0006c	c3		 ret	 0
??$_Apply@V?$tuple@AEBH@std@@$0A@@?$_Select_fixer@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@$0A@$00$0A@@std@@SA_NAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$tuple@AEBH@1@U?$integer_sequence@_K$0A@@1@@Z ENDP ; std::_Select_fixer<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,0,1,0>::_Apply<std::tuple<int const &>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$0A@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$0A@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z PROC ; std::get<0,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tuple$[rbp]
  0003e	48 83 c0 08	 add	 rax, 8

; 652  : }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$get@$0A@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YAAEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z ENDP ; std::get<0,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z PROC ; std::forward<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ENDP ; std::forward<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z PROC ; std::forward<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ENDP ; std::forward<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@U?$logical_and@_N@std@@@std@@YA$$QEAU?$logical_and@_N@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@U?$logical_and@_N@std@@@std@@YA$$QEAU?$logical_and@_N@0@AEAU10@@Z PROC ; std::forward<std::logical_and<bool> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@U?$logical_and@_N@std@@@std@@YA$$QEAU?$logical_and@_N@0@AEAU10@@Z ENDP ; std::forward<std::logical_and<bool> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@U?$greater@H@std@@@std@@YA$$QEAU?$greater@H@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@U?$greater@H@std@@@std@@YA$$QEAU?$greater@H@0@AEAU10@@Z PROC ; std::forward<std::greater<int> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@U?$greater@H@std@@@std@@YA$$QEAU?$greater@H@0@AEAU10@@Z ENDP ; std::forward<std::greater<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$?RAEBH@?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 228
$T3 = 260
$T4 = 292
$T5 = 324
$T6 = 356
$T7 = 388
tv85 = 408
tv82 = 416
this$ = 464
<_Unbargs_0>$ = 472
??$?RAEBH@?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z PROC ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::operator()<int const &>, COMDAT

; 1491 :     _CLASS_DEFINE_CONST(_BINDER_OPERATOR)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 01
	00 00		 sub	 rsp, 488		; 000001e8H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 7a 00 00 00	 mov	 ecx, 122		; 0000007aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	02 00 00	 mov	 rcx, QWORD PTR [rsp+520]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d d8 01
	00 00		 mov	 rcx, QWORD PTR <_Unbargs_0>$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00051	e8 00 00 00 00	 call	 ??$forward_as_tuple@AEBH@std@@YA?AV?$tuple@AEBH@0@AEBH@Z ; std::forward_as_tuple<int const &>
  00056	48 89 85 98 01
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  0005d	48 8b 85 d0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8b c8	 mov	 rcx, rax
  00067	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$less@H@2@XZ ; std::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>::_Get_first
  0006c	48 89 85 a0 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  00073	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  0007a	88 85 64 01 00
	00		 mov	 BYTE PTR $T6[rbp], al
  00080	0f b6 85 64 01
	00 00		 movzx	 eax, BYTE PTR $T6[rbp]
  00087	88 85 84 01 00
	00		 mov	 BYTE PTR $T7[rbp], al
  0008d	0f b6 85 04 01
	00 00		 movzx	 eax, BYTE PTR $T3[rbp]
  00094	88 85 24 01 00
	00		 mov	 BYTE PTR $T4[rbp], al
  0009a	0f b6 85 24 01
	00 00		 movzx	 eax, BYTE PTR $T4[rbp]
  000a1	88 85 44 01 00
	00		 mov	 BYTE PTR $T5[rbp], al
  000a7	48 8b 85 d0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ae	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR tv85[rbp]
  000b5	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000ba	4c 8b c8	 mov	 r9, rax
  000bd	4c 8b 85 a0 01
	00 00		 mov	 r8, QWORD PTR tv82[rbp]
  000c4	0f b6 95 84 01
	00 00		 movzx	 edx, BYTE PTR $T7[rbp]
  000cb	0f b6 8d 44 01
	00 00		 movzx	 ecx, BYTE PTR $T5[rbp]
  000d2	e8 00 00 00 00	 call	 ??$_Call_binder@U_Unforced@std@@$0A@$00U?$less@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$less@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z ; std::_Call_binder<std::_Unforced,0,1,std::less<int>,std::tuple<std::_Ph<1>,int>,std::tuple<int const &> >
  000d7	48 8d a5 b8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+440]
  000de	5f		 pop	 rdi
  000df	5d		 pop	 rbp
  000e0	c3		 ret	 0
??$?RAEBH@?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z ENDP ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::operator()<int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Call_binder@U_Unforced@std@@$0A@$00U?$less@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$less@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z
_TEXT	SEGMENT
tv75 = 192
tv73 = 200
tv93 = 208
tv87 = 216
tv85 = 224
tv91 = 232
__formal$ = 272
__formal$ = 280
_Obj$ = 288
_Tpl$ = 296
_Ut$ = 304
??$_Call_binder@U_Unforced@std@@$0A@$00U?$less@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$less@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z PROC ; std::_Call_binder<std::_Unforced,0,1,std::less<int>,std::tuple<std::_Ph<1>,int>,std::tuple<int const &> >, COMDAT

; 1445 :         _Obj, _Fix_arg(_STD get<_Ix>(_Tpl), _STD move(_Ut))...)) { // bind() and bind<R>() invocation

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00012	55		 push	 rbp
  00013	57		 push	 rdi
  00014	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0001b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00020	48 8b fc	 mov	 rdi, rsp
  00023	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00028	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002d	f3 ab		 rep stosd
  0002f	0f b6 8c 24 38
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+312]
  00037	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  0003e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1446 :     return _Invoker_ret<_Ret>::_Call(_Obj, _Fix_arg(_STD get<_Ix>(_Tpl), _STD move(_Ut))...);

  00043	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  0004f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00056	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Tpl$[rbp]
  0005d	e8 00 00 00 00	 call	 ??$get@$00U?$_Ph@$00@std@@H@std@@YAAEAHAEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z ; std::get<1,std::_Ph<1>,int>
  00062	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  00069	48 8b 95 c0 00
	00 00		 mov	 rdx, QWORD PTR tv75[rbp]
  00070	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR tv73[rbp]
  00077	e8 00 00 00 00	 call	 ??$_Fix_arg@HV?$tuple@AEBH@std@@@std@@YAAEAHAEAH$$QEAV?$tuple@AEBH@0@@Z ; std::_Fix_arg<int,std::tuple<int const &> >
  0007c	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv93[rbp], rax
  00083	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  0008a	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  0008f	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  00096	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Tpl$[rbp]
  0009d	e8 00 00 00 00	 call	 ??$get@$0A@U?$_Ph@$00@std@@H@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z ; std::get<0,std::_Ph<1>,int>
  000a2	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  000a9	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv87[rbp]
  000b0	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR tv85[rbp]
  000b7	e8 00 00 00 00	 call	 ??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@AEBH@2@@std@@YAAEBHAEAU?$_Ph@$00@0@$$QEAV?$tuple@AEBH@0@@Z ; std::_Fix_arg<std::_Ph<1>,std::tuple<int const &> >
  000bc	48 89 85 e8 00
	00 00		 mov	 QWORD PTR tv91[rbp], rax
  000c3	4c 8b 85 d0 00
	00 00		 mov	 r8, QWORD PTR tv93[rbp]
  000ca	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR tv91[rbp]
  000d1	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  000d8	e8 00 00 00 00	 call	 ??$_Call@AEAU?$less@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z ; std::_Invoker_ret<std::_Unforced,0>::_Call<std::less<int> &,int const &,int &>

; 1447 : }

  000dd	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  000e4	5f		 pop	 rdi
  000e5	5d		 pop	 rbp
  000e6	c3		 ret	 0
??$_Call_binder@U_Unforced@std@@$0A@$00U?$less@H@2@V?$tuple@U?$_Ph@$00@std@@H@2@V?$tuple@AEBH@2@@std@@YA_NU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00@0@AEAU?$less@H@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@$$QEAV?$tuple@AEBH@0@@Z ENDP ; std::_Call_binder<std::_Unforced,0,1,std::less<int>,std::tuple<std::_Ph<1>,int>,std::tuple<int const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@AEAU?$less@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z
_TEXT	SEGMENT
tv79 = 192
tv77 = 200
tv75 = 208
<_Vals_0>$ = 256
<_Vals_1>$ = 264
<_Vals_2>$ = 272
??$_Call@AEAU?$less@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z PROC ; std::_Invoker_ret<std::_Unforced,0>::_Call<std::less<int> &,int const &,int &>, COMDAT

; 1605 :         -> decltype(_STD invoke(_STD forward<_Valtys>(_Vals)...)) { // INVOKE, unchanged

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1606 :         return _STD invoke(_STD forward<_Valtys>(_Vals)...);

  00040	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_2>$[rbp]
  00047	e8 00 00 00 00	 call	 ??$forward@AEAH@std@@YAAEAHAEAH@Z ; std::forward<int &>
  0004c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00053	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_1>$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  0005f	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  00066	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_0>$[rbp]
  0006d	e8 00 00 00 00	 call	 ??$forward@AEAU?$less@H@std@@@std@@YAAEAU?$less@H@0@AEAU10@@Z ; std::forward<std::less<int> &>
  00072	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00079	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv79[rbp]
  00080	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv77[rbp]
  00087	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR tv75[rbp]
  0008e	e8 00 00 00 00	 call	 ??$invoke@AEAU?$less@H@std@@AEBHAEAH@std@@YA_NAEAU?$less@H@0@AEBHAEAH@Z ; std::invoke<std::less<int> &,int const &,int &>

; 1607 :     }

  00093	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009a	5f		 pop	 rdi
  0009b	5d		 pop	 rbp
  0009c	c3		 ret	 0
??$_Call@AEAU?$less@H@std@@AEBHAEAH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z ENDP ; std::_Invoker_ret<std::_Unforced,0>::_Call<std::less<int> &,int const &,int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$invoke@AEAU?$less@H@std@@AEBHAEAH@std@@YA_NAEAU?$less@H@0@AEBHAEAH@Z
_TEXT	SEGMENT
tv79 = 192
tv77 = 200
tv75 = 208
_Obj$ = 256
<_Args_0>$ = 264
<_Args_1>$ = 272
??$invoke@AEAU?$less@H@std@@AEBHAEAH@std@@YA_NAEAU?$less@H@0@AEBHAEAH@Z PROC ; std::invoke<std::less<int> &,int const &,int &>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  00047	e8 00 00 00 00	 call	 ??$forward@AEAH@std@@YAAEAHAEAH@Z ; std::forward<int &>
  0004c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00053	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  0005f	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  00066	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  0006d	e8 00 00 00 00	 call	 ??$forward@AEAU?$less@H@std@@@std@@YAAEAU?$less@H@0@AEAU10@@Z ; std::forward<std::less<int> &>
  00072	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00079	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv79[rbp]
  00080	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv77[rbp]
  00087	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR tv75[rbp]
  0008e	e8 00 00 00 00	 call	 ??$_Call@AEAU?$less@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z ; std::_Invoker_functor::_Call<std::less<int> &,int const &,int &>
  00093	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009a	5f		 pop	 rdi
  0009b	5d		 pop	 rbp
  0009c	c3		 ret	 0
??$invoke@AEAU?$less@H@std@@AEBHAEAH@std@@YA_NAEAU?$less@H@0@AEBHAEAH@Z ENDP ; std::invoke<std::less<int> &,int const &,int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@AEAU?$less@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z
_TEXT	SEGMENT
tv79 = 192
tv77 = 200
tv75 = 208
_Obj$ = 256
<_Args_0>$ = 264
<_Args_1>$ = 272
??$_Call@AEAU?$less@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z PROC ; std::_Invoker_functor::_Call<std::less<int> &,int const &,int &>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$forward@AEAU?$less@H@std@@@std@@YAAEAU?$less@H@0@AEAU10@@Z ; std::forward<std::less<int> &>
  0004c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00053	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$forward@AEAH@std@@YAAEAHAEAH@Z ; std::forward<int &>
  0005f	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  00066	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0006d	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  00072	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00079	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR tv77[rbp]
  00080	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv75[rbp]
  00087	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv79[rbp]
  0008e	e8 00 00 00 00	 call	 ??R?$less@H@std@@QEBA_NAEBH0@Z ; std::less<int>::operator()
  00093	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009a	5f		 pop	 rdi
  0009b	5d		 pop	 rbp
  0009c	c3		 ret	 0
??$_Call@AEAU?$less@H@std@@AEBHAEAH@_Invoker_functor@std@@SA_NAEAU?$less@H@1@AEBHAEAH@Z ENDP ; std::_Invoker_functor::_Call<std::less<int> &,int const &,int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAH@std@@YAAEAHAEAH@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAH@std@@YAAEAHAEAH@Z PROC			; std::forward<int &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEAH@std@@YAAEAHAEAH@Z ENDP			; std::forward<int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAU?$less@H@std@@@std@@YAAEAU?$less@H@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAU?$less@H@std@@@std@@YAAEAU?$less@H@0@AEAU10@@Z PROC ; std::forward<std::less<int> &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEAU?$less@H@std@@@std@@YAAEAU?$less@H@0@AEAU10@@Z ENDP ; std::forward<std::less<int> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Fix_arg@HV?$tuple@AEBH@std@@@std@@YAAEAHAEAH$$QEAV?$tuple@AEBH@0@@Z
_TEXT	SEGMENT
_Tid$ = 224
_Ut$ = 232
??$_Fix_arg@HV?$tuple@AEBH@std@@@std@@YAAEAHAEAH$$QEAV?$tuple@AEBH@0@@Z PROC ; std::_Fix_arg<int,std::tuple<int const &> >, COMDAT

; 1435 :     -> decltype(_Select_fixer<_Cv_TiD>::_Fix(_Tid, _STD move(_Ut))) { // translate an argument for bind

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1436 :     return _Select_fixer<_Cv_TiD>::_Fix(_Tid, _STD move(_Ut));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Tid$[rbp]
  00051	e8 00 00 00 00	 call	 ??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@H$0A@$0A@$0A@@std@@SAAEAHAEAH$$QEAV?$tuple@AEBH@1@@Z ; std::_Select_fixer<int,0,0,0>::_Fix<std::tuple<int const &> >

; 1437 : }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??$_Fix_arg@HV?$tuple@AEBH@std@@@std@@YAAEAHAEAH$$QEAV?$tuple@AEBH@0@@Z ENDP ; std::_Fix_arg<int,std::tuple<int const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@H$0A@$0A@$0A@@std@@SAAEAHAEAH$$QEAV?$tuple@AEBH@1@@Z
_TEXT	SEGMENT
_Tid$ = 224
__formal$ = 232
??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@H$0A@$0A@$0A@@std@@SAAEAHAEAH$$QEAV?$tuple@AEBH@1@@Z PROC ; std::_Select_fixer<int,0,0,0>::_Fix<std::tuple<int const &> >, COMDAT

; 1417 :     static _Cv_TiD& _Fix(_Cv_TiD& _Tid, _Untuple&&) { // pass a bound argument as an lvalue (important!)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1418 :         return _Tid;

  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tid$[rbp]

; 1419 :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@H$0A@$0A@$0A@@std@@SAAEAHAEAH$$QEAV?$tuple@AEBH@1@@Z ENDP ; std::_Select_fixer<int,0,0,0>::_Fix<std::tuple<int const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$00U?$_Ph@$00@std@@H@std@@YAAEAHAEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$00U?$_Ph@$00@std@@H@std@@YAAEAHAEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z PROC ; std::get<1,std::_Ph<1>,int>, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tuple$[rbp]

; 652  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$get@$00U?$_Ph@$00@std@@H@std@@YAAEAHAEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z ENDP ; std::get<1,std::_Ph<1>,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@AEBH@2@@std@@YAAEBHAEAU?$_Ph@$00@0@$$QEAV?$tuple@AEBH@0@@Z
_TEXT	SEGMENT
_Tid$ = 224
_Ut$ = 232
??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@AEBH@2@@std@@YAAEBHAEAU?$_Ph@$00@0@$$QEAV?$tuple@AEBH@0@@Z PROC ; std::_Fix_arg<std::_Ph<1>,std::tuple<int const &> >, COMDAT

; 1435 :     -> decltype(_Select_fixer<_Cv_TiD>::_Fix(_Tid, _STD move(_Ut))) { // translate an argument for bind

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1436 :     return _Select_fixer<_Cv_TiD>::_Fix(_Tid, _STD move(_Ut));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Tid$[rbp]
  00051	e8 00 00 00 00	 call	 ??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SAAEBHAEAU?$_Ph@$00@1@$$QEAV?$tuple@AEBH@1@@Z ; std::_Select_fixer<std::_Ph<1>,0,0,1>::_Fix<std::tuple<int const &> >

; 1437 : }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@AEBH@2@@std@@YAAEBHAEAU?$_Ph@$00@0@$$QEAV?$tuple@AEBH@0@@Z ENDP ; std::_Fix_arg<std::_Ph<1>,std::tuple<int const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SAAEBHAEAU?$_Ph@$00@1@$$QEAV?$tuple@AEBH@1@@Z
_TEXT	SEGMENT
__formal$ = 224
_Ut$ = 232
??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SAAEBHAEAU?$_Ph@$00@1@$$QEAV?$tuple@AEBH@1@@Z PROC ; std::_Select_fixer<std::_Ph<1>,0,0,1>::_Fix<std::tuple<int const &> >, COMDAT

; 1428 :         -> decltype(_STD get<_Jx - 1>(_STD move(_Ut))) { // choose the Jth unbound argument (1-based indexing)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1429 :         return _STD get<_Jx - 1>(_STD move(_Ut));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ; std::move<std::tuple<int const &> &>
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$get@$0A@AEBH@std@@YAAEBH$$QEAV?$tuple@AEBH@0@@Z ; std::get<0,int const &>

; 1430 :     }

  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
??$_Fix@V?$tuple@AEBH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SAAEBHAEAU?$_Ph@$00@1@$$QEAV?$tuple@AEBH@1@@Z ENDP ; std::_Select_fixer<std::_Ph<1>,0,0,1>::_Fix<std::tuple<int const &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$0A@AEBH@std@@YAAEBH$$QEAV?$tuple@AEBH@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$0A@AEBH@std@@YAAEBH$$QEAV?$tuple@AEBH@0@@Z PROC	; std::get<0,int const &>, COMDAT

; 661  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>&& get(tuple<_Types...>&& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 662  :     using _Ty    = tuple_element_t<_Index, tuple<_Types...>>;
; 663  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 664  :     return static_cast<_Ty&&>(static_cast<_Ttype&>(_Tuple)._Myfirst._Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tuple$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 665  : }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??$get@$0A@AEBH@std@@YAAEBH$$QEAV?$tuple@AEBH@0@@Z ENDP	; std::get<0,int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z PROC ; std::move<std::tuple<int const &> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAV?$tuple@AEBH@std@@@std@@YA$$QEAV?$tuple@AEBH@0@AEAV10@@Z ENDP ; std::move<std::tuple<int const &> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$0A@U?$_Ph@$00@std@@H@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$0A@U?$_Ph@$00@std@@H@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z PROC ; std::get<0,std::_Ph<1>,int>, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tuple$[rbp]
  0003e	48 83 c0 04	 add	 rax, 4

; 652  : }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$get@$0A@U?$_Ph@$00@std@@H@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@U?$_Ph@$00@std@@H@0@@Z ENDP ; std::get<0,std::_Ph<1>,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$forward_as_tuple@AEBH@std@@YA?AV?$tuple@AEBH@0@AEBH@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 224
<_Args_0>$ = 232
??$forward_as_tuple@AEBH@std@@YA?AV?$tuple@AEBH@0@AEBH@Z PROC ; std::forward_as_tuple<int const &>, COMDAT

; 732  : _NODISCARD constexpr tuple<_Types&&...> forward_as_tuple(_Types&&... _Args) noexcept { // forward arguments in a tuple

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 733  :     return tuple<_Types&&...>(_STD forward<_Types>(_Args)...);

  0003c	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00043	e8 00 00 00 00	 call	 ??$forward@AEBH@std@@YAAEBHAEBH@Z ; std::forward<int const &>
  00048	90		 npad	 1
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00053	e8 00 00 00 00	 call	 ??$?0AEBH$0A@@?$tuple@AEBH@std@@QEAA@AEBH@Z ; std::tuple<int const &>::tuple<int const &><int const &,0>
  00058	90		 npad	 1
  00059	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 734  : }

  00060	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??$forward_as_tuple@AEBH@std@@YA?AV?$tuple@AEBH@0@AEBH@Z ENDP ; std::forward_as_tuple<int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBH@std@@YAAEBHAEBH@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBH@std@@YAAEBHAEBH@Z PROC			; std::forward<int const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEBH@std@@YAAEBHAEBH@Z ENDP			; std::forward<int const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@$$CBH@std@@YAPEBHQEBH@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Get_unwrapped@$$CBH@std@@YAPEBHQEBH@Z PROC		; std::_Get_unwrapped<int const >, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 276  :     return _Ptr;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]

; 277  : }

  0003d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00044	5f		 pop	 rdi
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
??$_Get_unwrapped@$$CBH@std@@YAPEBHQEBH@Z ENDP		; std::_Get_unwrapped<int const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@PEBHPEBH@std@@YAXAEBQEBH0@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
??$_Adl_verify_range@PEBHPEBH@std@@YAXAEBQEBH0@Z PROC	; std::_Adl_verify_range<int const *,int const *>, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  0003b	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Last$[rbp]
  00042	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00045	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  0004c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0004f	e8 00 00 00 00	 call	 ??$_Verify_range@H@std@@YAXQEBH0@Z ; std::_Verify_range<int>

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00054	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005b	5f		 pop	 rdi
  0005c	5d		 pop	 rbp
  0005d	c3		 ret	 0
??$_Adl_verify_range@PEBHPEBH@std@@YAXAEBQEBH0@Z ENDP	; std::_Adl_verify_range<int const *,int const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@U?$less@H@std@@@std@@YA$$QEAU?$less@H@0@AEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@U?$less@H@std@@@std@@YA$$QEAU?$less@H@0@AEAU10@@Z PROC ; std::forward<std::less<int> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@U?$less@H@std@@@std@@YA$$QEAU?$less@H@0@AEAU10@@Z ENDP ; std::forward<std::less<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z PROC ; std::forward<std::_Ph<2> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z ENDP ; std::forward<std::_Ph<2> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z PROC ; std::forward<std::_Ph<1> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ENDP ; std::forward<std::_Ph<1> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z PROC ; std::forward<`FuncAndBind::foo'::`2'::A *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z ENDP ; std::forward<`FuncAndBind::foo'::`2'::A *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z PROC ; std::forward<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z ENDP ; std::forward<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Max_possible$1 = 40
_Count$ = 288
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  00036	c6 45 04 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0003a	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  00044	48 89 45 28	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 30   :             if (_Count > _Max_possible) {

  00048	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  00052	48 39 85 20 01
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00059	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  0005b	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00060	48 6b 85 20 01
	00 00 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
$LN3@Get_size_o:

; 36   : }

  00068	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 224
_Bytes$ = 232
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003c	48 81 bd e8 00
	00 00 00 10 00
	00		 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  00047	72 14		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  00049	48 8d 95 e8 00
	00 00		 lea	 rdx, QWORD PTR _Bytes$[rbp]
  00050	48 8d 8d e0 00
	00 00		 lea	 rcx, QWORD PTR _Ptr$[rbp]
  00057	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0005c	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0005d	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Bytes$[rbp]
  00064	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0006b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00070	90		 npad	 1

; 192  : }

  00071	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00036	48 81 bd e0 00
	00 00 00 10 00
	00		 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  00041	72 0e		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Bytes$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0004f	eb 1a		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00051	48 83 bd e0 00
	00 00 00	 cmp	 QWORD PTR _Bytes$[rbp], 0
  00059	74 0e		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0005b	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00062	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00067	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00069	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0006b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Count$ = 256
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  00036	c6 45 04 00	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 0

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 30   :             if (_Count > _Max_possible) {
; 31   :                 _Throw_bad_array_new_length(); // multiply overflow
; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  0003a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]

; 36   : }

  00041	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 200
_Obj$ = 256
<_Args_0>$ = 264
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00043	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  00048	90		 npad	 1
  00049	48 8b d0	 mov	 rdx, rax
  0004c	b9 08 00 00 00	 mov	 ecx, 8
  00051	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00056	90		 npad	 1
  00057	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0005e	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	e8 00 00 00 00	 call	 ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ; std::forward<char * const &>
  0006a	90		 npad	 1
  0006b	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00072	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00075	48 89 01	 mov	 QWORD PTR [rcx], rax

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00078	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z
_TEXT	SEGMENT
_Old_capacity$ = 8
_New_capacity$ = 40
_Al$ = 72
_New_ptr$ = 104
__$ArrayPad$ = 312
this$ = 352
_New_size$ = 360
_Fn$ = 368
<_Args_0>$ = 376
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>, COMDAT

; 4082 :     basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR [rsp+392]
  00039	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00040	48 33 c5	 xor	 rax, rbp
  00043	48 89 85 38 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00051	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4083 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4084 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4085 :         if (_New_size > max_size()) {

  00056	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005d	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00062	48 39 85 68 01
	00 00		 cmp	 QWORD PTR _New_size$[rbp], rax
  00069	76 05		 jbe	 SHORT $LN2@Reallocate

; 4086 :             _Xlen(); // result too long

  0006b	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4087 :         }
; 4088 : 
; 4089 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  00070	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00077	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0007b	48 89 45 08	 mov	 QWORD PTR _Old_capacity$[rbp], rax

; 4090 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  0007f	48 8b 95 68 01
	00 00		 mov	 rdx, QWORD PTR _New_size$[rbp]
  00086	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008d	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00092	48 89 45 28	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 4091 :         auto& _Al                     = _Getal();

  00096	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0009d	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000a2	48 89 45 48	 mov	 QWORD PTR _Al$[rbp], rax

; 4092 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000a6	48 8b 45 28	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  000aa	48 83 c0 01	 add	 rax, 1
  000ae	48 c7 c1 ff ff
	ff ff		 mov	 rcx, -1
  000b5	48 0f 42 c1	 cmovb	 rax, rcx
  000b9	48 8b d0	 mov	 rdx, rax
  000bc	48 8b 4d 48	 mov	 rcx, QWORD PTR _Al$[rbp]
  000c0	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000c5	48 89 45 68	 mov	 QWORD PTR _New_ptr$[rbp], rax

; 4093 :         _Mypair._Myval2._Orphan_all();

  000c9	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d0	48 8b c8	 mov	 rcx, rax
  000d3	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4094 :         _Mypair._Myval2._Mysize = _New_size;

  000d8	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000df	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR _New_size$[rbp]
  000e6	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4095 :         _Mypair._Myval2._Myres  = _New_capacity;

  000ea	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f1	48 8b 4d 28	 mov	 rcx, QWORD PTR _New_capacity$[rbp]
  000f5	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4096 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  000f9	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  000fd	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00102	4c 8b 8d 78 01
	00 00		 mov	 r9, QWORD PTR <_Args_0>$[rbp]
  00109	4c 8b 85 68 01
	00 00		 mov	 r8, QWORD PTR _New_size$[rbp]
  00110	48 8b d0	 mov	 rdx, rax
  00113	48 8d 8d 70 01
	00 00		 lea	 rcx, QWORD PTR _Fn$[rbp]
  0011a	e8 00 00 00 00	 call	 ??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()

; 4097 :         if (_BUF_SIZE <= _Old_capacity) {

  0011f	48 83 7d 08 10	 cmp	 QWORD PTR _Old_capacity$[rbp], 16
  00124	72 2f		 jb	 SHORT $LN3@Reallocate

; 4098 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  00126	48 8b 45 08	 mov	 rax, QWORD PTR _Old_capacity$[rbp]
  0012a	48 ff c0	 inc	 rax
  0012d	4c 8b c0	 mov	 r8, rax
  00130	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00137	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0013b	48 8b 4d 48	 mov	 rcx, QWORD PTR _Al$[rbp]
  0013f	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4099 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00144	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0014b	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  0014f	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4100 :         } else {

  00153	eb 17		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4101 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00155	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0015c	48 83 c0 08	 add	 rax, 8
  00160	48 8d 55 68	 lea	 rdx, QWORD PTR _New_ptr$[rbp]
  00164	48 8b c8	 mov	 rcx, rax
  00167	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4102 :         }
; 4103 : 
; 4104 :         return *this;

  0016c	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
$LN5@Reallocate:

; 4105 :     }

  00173	48 8b f8	 mov	 rdi, rax
  00176	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0017a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z$rtcFrameData
  00181	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00186	48 8b c7	 mov	 rax, rdi
  00189	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00190	48 33 cd	 xor	 rcx, rbp
  00193	e8 00 00 00 00	 call	 __security_check_cookie
  00198	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  0019f	5f		 pop	 rdi
  001a0	5d		 pop	 rbp
  001a1	c3		 ret	 0
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_New_ptr$ = 264
_Count$ = 272
_Ptr$ = 280
??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator(), COMDAT

; 2856 :             },

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

  00045	4c 8b 85 10 01
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  0004c	48 8b 95 18 01
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00053	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  0005a	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  0005f	c6 85 c4 00 00
	00 00		 mov	 BYTE PTR $T1[rbp], 0
  00066	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  0006d	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  00074	48 03 c8	 add	 rcx, rax
  00077	48 8b c1	 mov	 rax, rcx
  0007a	48 8d 95 c4 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00081	48 8b c8	 mov	 rcx, rax
  00084	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2856 :             },

  00089	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00090	5f		 pop	 rdi
  00091	5d		 pop	 rbp
  00092	c3		 ret	 0
??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 200
tv65 = 216
_Left$ = 256
_Right$ = 264
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Max_value<unsigned __int64>, COMDAT

; 32   :     _NOEXCEPT_COND(noexcept(_Left < _Right)) { // return larger of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__18CBD245_utility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 33   :     return _Left < _Right ? _Right : _Left;

  0003c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00043	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00050	73 10		 jae	 SHORT $LN3@Max_value
  00052	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00059	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv65[rbp], rax
  00060	eb 0e		 jmp	 SHORT $LN4@Max_value
$LN3@Max_value:
  00062	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00069	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv65[rbp], rax
$LN4@Max_value:
  00070	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv65[rbp]
  00077	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0007e	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR $T1[rbp]

; 34   : }

  00085	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008c	5f		 pop	 rdi
  0008d	5d		 pop	 rbp
  0008e	c3		 ret	 0
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Max_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 224
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 322  :     _Obj.~_Ty();
; 323  : }

  00037	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003e	5f		 pop	 rdi
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 294  :     return _Ptr;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]

; 295  : }

  0003d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00044	5f		 pop	 rdi
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00041	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  00046	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 8b c8	 mov	 rcx, rax
  00050	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00055	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 294  :     return _Ptr;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]

; 295  : }

  0003d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00044	5f		 pop	 rdi
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z
_TEXT	SEGMENT
_Ans$ = 4
_Left$ = 256
_Left_size$ = 264
_Right$ = 272
_Right_size$ = 280
??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z PROC ; std::_Traits_compare<std::char_traits<char> >, COMDAT

; 519  :     _In_reads_(_Right_size) const _Traits_ptr_t<_Traits> _Right, const size_t _Right_size) noexcept {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00045	90		 npad	 1

; 520  :     // compare [_Left, _Left + _Left_size) to [_Right, _Right + _Right_size) using _Traits
; 521  :     const int _Ans = _Traits::compare(_Left, _Right, _Min_value(_Left_size, _Right_size));

  00046	48 8d 95 18 01
	00 00		 lea	 rdx, QWORD PTR _Right_size$[rbp]
  0004d	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR _Left_size$[rbp]
  00054	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  00059	90		 npad	 1
  0005a	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0005d	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  00064	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  0006b	e8 00 00 00 00	 call	 ?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ; std::_Narrow_char_traits<char,int>::compare
  00070	90		 npad	 1
  00071	89 45 04	 mov	 DWORD PTR _Ans$[rbp], eax

; 522  : 
; 523  :     if (_Ans != 0) {

  00074	83 7d 04 00	 cmp	 DWORD PTR _Ans$[rbp], 0
  00078	74 05		 je	 SHORT $LN2@Traits_com

; 524  :         return _Ans;

  0007a	8b 45 04	 mov	 eax, DWORD PTR _Ans$[rbp]
  0007d	eb 30		 jmp	 SHORT $LN1@Traits_com
$LN2@Traits_com:

; 525  :     }
; 526  : 
; 527  :     if (_Left_size < _Right_size) {

  0007f	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR _Right_size$[rbp]
  00086	48 39 85 08 01
	00 00		 cmp	 QWORD PTR _Left_size$[rbp], rax
  0008d	73 07		 jae	 SHORT $LN3@Traits_com

; 528  :         return -1;

  0008f	b8 ff ff ff ff	 mov	 eax, -1
  00094	eb 19		 jmp	 SHORT $LN1@Traits_com
$LN3@Traits_com:

; 529  :     }
; 530  : 
; 531  :     if (_Left_size > _Right_size) {

  00096	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR _Right_size$[rbp]
  0009d	48 39 85 08 01
	00 00		 cmp	 QWORD PTR _Left_size$[rbp], rax
  000a4	76 07		 jbe	 SHORT $LN4@Traits_com

; 532  :         return 1;

  000a6	b8 01 00 00 00	 mov	 eax, 1
  000ab	eb 02		 jmp	 SHORT $LN1@Traits_com
$LN4@Traits_com:

; 533  :     }
; 534  : 
; 535  :     return 0;

  000ad	33 c0		 xor	 eax, eax
$LN1@Traits_com:

; 536  : }

  000af	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b6	5f		 pop	 rdi
  000b7	5d		 pop	 rbp
  000b8	c3		 ret	 0
??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z ENDP ; std::_Traits_compare<std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1383 :         if (_Ptr) {

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00042	74 1b		 je	 SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00055	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00059	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  0005e	90		 npad	 1
$LN2@Container_:

; 1385 :         }
; 1386 :     }

  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Al_$ = 264
_Mycont$ = 272
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

  00040	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Al_$[rbp]
  0004e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00052	ba 01 00 00 00	 mov	 edx, 1
  00057	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Al_$[rbp]
  0005e	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00063	48 8b c8	 mov	 rcx, rax
  00066	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0006b	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00072	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00075	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _Mycont$[rbp]
  0007c	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  00081	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00088	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  0008f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00096	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00099	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

  0009e	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR _Mycont$[rbp]
  000a5	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000ac	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000af	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1373 :     }

  000b2	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b9	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000c0	5f		 pop	 rdi
  000c1	5d		 pop	 rbp
  000c2	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  0003c	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
  0004f	90		 npad	 1

; 1114 : }

  00050	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00042	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 224
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 130  :         explicit __CLR_OR_THIS_CALL operator bool() const { // test if stream state okay

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 131  :             return _Ok;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]

; 132  :         }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 115  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 116  : #if _HAS_EXCEPTIONS
; 117  :             if (!_STD uncaught_exception()) { // TRANSITION, OS#15518458

  00037	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  0003c	90		 npad	 1
  0003d	0f b6 c0	 movzx	 eax, al
  00040	85 c0		 test	 eax, eax
  00042	75 11		 jne	 SHORT $LN2@sentry

; 118  :                 this->_Myostr._Osfx();

  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0004e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00054	90		 npad	 1
$LN2@sentry:

; 119  :             }
; 120  : #else // _HAS_EXCEPTIONS
; 121  :             this->_Myostr._Osfx();
; 122  : #endif // _HAS_EXCEPTIONS
; 123  :         }

  00055	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005c	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00061	90		 npad	 1
  00062	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 90   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr)

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 91   :             : _Sentry_base(_Ostr) { // construct locking and testing stream

  0003b	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Ostr$[rbp]
  00042	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
  0004e	90		 npad	 1

; 92   :             if (!_Ostr.good()) {

  0004f	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00056	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00059	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0005d	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00064	48 03 c8	 add	 rcx, rax
  00067	48 8b c1	 mov	 rax, rcx
  0006a	48 8b c8	 mov	 rcx, rax
  0006d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  00073	0f b6 c0	 movzx	 eax, al
  00076	85 c0		 test	 eax, eax
  00078	75 10		 jne	 SHORT $LN2@sentry

; 93   :                 _Ok = false;

  0007a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00081	c6 40 08 00	 mov	 BYTE PTR [rax+8], 0

; 94   :                 return;

  00085	e9 81 00 00 00	 jmp	 $LN1@sentry
$LN2@sentry:

; 95   :             }
; 96   : 
; 97   :             const auto _Tied = _Ostr.tie();

  0008a	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00091	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00094	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00098	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0009f	48 03 c8	 add	 rcx, rax
  000a2	48 8b c1	 mov	 rax, rcx
  000a5	48 8b c8	 mov	 rcx, rax
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  000ae	48 89 45 08	 mov	 QWORD PTR _Tied$[rbp], rax

; 98   :             if (!_Tied || _Tied == &_Ostr) {

  000b2	48 83 7d 08 00	 cmp	 QWORD PTR _Tied$[rbp], 0
  000b7	74 0d		 je	 SHORT $LN4@sentry
  000b9	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000c0	48 39 45 08	 cmp	 QWORD PTR _Tied$[rbp], rax
  000c4	75 0d		 jne	 SHORT $LN3@sentry
$LN4@sentry:

; 99   :                 _Ok = true;

  000c6	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000cd	c6 40 08 01	 mov	 BYTE PTR [rax+8], 1

; 100  :                 return;

  000d1	eb 38		 jmp	 SHORT $LN1@sentry
$LN3@sentry:

; 101  :             }
; 102  : 
; 103  : 
; 104  :             _Tied->flush();

  000d3	48 8b 4d 08	 mov	 rcx, QWORD PTR _Tied$[rbp]
  000d7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 105  :             _Ok = _Ostr.good(); // store test only after flushing tie

  000dd	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000e4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000e7	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000eb	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000f2	48 03 c8	 add	 rcx, rax
  000f5	48 8b c1	 mov	 rax, rcx
  000f8	48 8b c8	 mov	 rcx, rax
  000fb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  00101	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00108	88 41 08	 mov	 BYTE PTR [rcx+8], al
$LN1@sentry:

; 106  :         }

  0010b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00112	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00119	5f		 pop	 rdi
  0011a	5d		 pop	 rbp
  0011b	c3		 ret	 0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Rdbuf$ = 8
tv72 = 216
this$ = 256
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 76   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 77   :             const auto _Rdbuf = _Myostr.rdbuf();

  00037	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv72[rbp], rax
  00048	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv72[rbp]
  0004f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00052	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00056	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv72[rbp]
  0005d	48 03 c8	 add	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
  00063	48 8b c8	 mov	 rcx, rax
  00066	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0006c	90		 npad	 1
  0006d	48 89 45 08	 mov	 QWORD PTR _Rdbuf$[rbp], rax

; 78   :             if (_Rdbuf) {

  00071	48 83 7d 08 00	 cmp	 QWORD PTR _Rdbuf$[rbp], 0
  00076	74 0f		 je	 SHORT $LN2@Sentry_bas

; 79   :                 _Rdbuf->_Unlock();

  00078	48 8b 45 08	 mov	 rax, QWORD PTR _Rdbuf$[rbp]
  0007c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007f	48 8b 4d 08	 mov	 rcx, QWORD PTR _Rdbuf$[rbp]
  00083	ff 50 10	 call	 QWORD PTR [rax+16]
  00086	90		 npad	 1
$LN2@Sentry_bas:

; 80   :             }
; 81   :         }

  00087	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008e	5f		 pop	 rdi
  0008f	5d		 pop	 rbp
  00090	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Rdbuf$ = 8
tv73 = 216
this$ = 256
_Ostr$ = 264
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 69   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx

; 70   :             const auto _Rdbuf = _Myostr.rdbuf();

  0004c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00056	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  0005d	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv73[rbp]
  00064	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00067	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0006b	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv73[rbp]
  00072	48 03 c8	 add	 rcx, rax
  00075	48 8b c1	 mov	 rax, rcx
  00078	48 8b c8	 mov	 rcx, rax
  0007b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00081	48 89 45 08	 mov	 QWORD PTR _Rdbuf$[rbp], rax

; 71   :             if (_Rdbuf) {

  00085	48 83 7d 08 00	 cmp	 QWORD PTR _Rdbuf$[rbp], 0
  0008a	74 0e		 je	 SHORT $LN2@Sentry_bas

; 72   :                 _Rdbuf->_Lock();

  0008c	48 8b 45 08	 mov	 rax, QWORD PTR _Rdbuf$[rbp]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 8b 4d 08	 mov	 rcx, QWORD PTR _Rdbuf$[rbp]
  00097	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Sentry_bas:

; 73   :             }
; 74   :         }

  0009a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a1	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000a8	5f		 pop	 rdi
  000a9	5d		 pop	 rbp
  000aa	c3		 ret	 0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_Count$ = 72
_First$ = 320
_Last$ = 328
_Pred$ = 336
??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z PROC ; std::count_if<int const *,std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> > >, COMDAT

; 216  : _NODISCARD _Iter_diff_t<_InIt> count_if(_InIt _First, _InIt _Last, _Pr _Pred) { // count elements satisfying _Pred

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4EB666AB_algorithm
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 217  :     _Adl_verify_range(_First, _Last);

  00040	48 8d 95 48 01
	00 00		 lea	 rdx, QWORD PTR _Last$[rbp]
  00047	48 8d 8d 40 01
	00 00		 lea	 rcx, QWORD PTR _First$[rbp]
  0004e	e8 00 00 00 00	 call	 ??$_Adl_verify_range@PEBHPEBH@std@@YAXAEBQEBH0@Z ; std::_Adl_verify_range<int const *,int const *>

; 218  :     auto _UFirst               = _Get_unwrapped(_First);

  00053	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBH@std@@YAPEBHQEBH@Z ; std::_Get_unwrapped<int const >
  0005f	48 89 45 08	 mov	 QWORD PTR _UFirst$[rbp], rax

; 219  :     const auto _ULast          = _Get_unwrapped(_Last);

  00063	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0006a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBH@std@@YAPEBHQEBH@Z ; std::_Get_unwrapped<int const >
  0006f	48 89 45 28	 mov	 QWORD PTR _ULast$[rbp], rax

; 220  :     _Iter_diff_t<_InIt> _Count = 0;

  00073	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR _Count$[rbp], 0

; 221  :     for (; _UFirst != _ULast; ++_UFirst) {

  0007b	eb 0c		 jmp	 SHORT $LN4@count_if
$LN2@count_if:
  0007d	48 8b 45 08	 mov	 rax, QWORD PTR _UFirst$[rbp]
  00081	48 83 c0 04	 add	 rax, 4
  00085	48 89 45 08	 mov	 QWORD PTR _UFirst$[rbp], rax
$LN4@count_if:
  00089	48 8b 45 28	 mov	 rax, QWORD PTR _ULast$[rbp]
  0008d	48 39 45 08	 cmp	 QWORD PTR _UFirst$[rbp], rax
  00091	74 24		 je	 SHORT $LN3@count_if

; 222  :         if (_Pred(*_UFirst)) {

  00093	48 8b 55 08	 mov	 rdx, QWORD PTR _UFirst$[rbp]
  00097	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR _Pred$[rbp]
  0009e	e8 00 00 00 00	 call	 ??$?RAEBH@?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA_NAEBH@Z ; std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::operator()<int const &>
  000a3	0f b6 c0	 movzx	 eax, al
  000a6	85 c0		 test	 eax, eax
  000a8	74 0b		 je	 SHORT $LN5@count_if

; 223  :             ++_Count;

  000aa	48 8b 45 48	 mov	 rax, QWORD PTR _Count$[rbp]
  000ae	48 ff c0	 inc	 rax
  000b1	48 89 45 48	 mov	 QWORD PTR _Count$[rbp], rax
$LN5@count_if:

; 224  :         }
; 225  :     }

  000b5	eb c6		 jmp	 SHORT $LN2@count_if
$LN3@count_if:

; 226  : 
; 227  :     return _Count;

  000b7	48 8b 45 48	 mov	 rax, QWORD PTR _Count$[rbp]

; 228  : }

  000bb	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  000c2	5f		 pop	 rdi
  000c3	5d		 pop	 rbp
  000c4	c3		 ret	 0
??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z ENDP ; std::count_if<int const *,std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
tv78 = 192
this$ = 240
__that$ = 248
??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z PROC ; std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0003d	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@AEBV01@@Z
  00053	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z ENDP ; std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
$T4 = 292
tv91 = 312
tv89 = 320
tv86 = 328
tv83 = 336
this$ = 384
_Func$ = 392
<_Args_0>$ = 400
<_Args_1>$ = 408
??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z PROC ; std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >, COMDAT

; 1476 :     explicit _Binder(_Fx&& _Func, _Types&&... _Args)

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 98 01
	00 00		 sub	 rsp, 408		; 00000198H
  0001d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 66 00 00 00	 mov	 ecx, 102		; 00000066H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 b8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+440]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1477 :         : _Mypair(_One_then_variadic_args_t(), _STD forward<_Fx>(_Func),

  00045	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv91[rbp], rax
  00053	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
  0005f	48 89 85 40 01
	00 00		 mov	 QWORD PTR tv89[rbp], rax
  00066	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0006d	e8 00 00 00 00	 call	 ??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
  00072	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv86[rbp], rax
  00079	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR _Func$[rbp]
  00080	e8 00 00 00 00	 call	 ??$forward@U?$logical_and@_N@std@@@std@@YA$$QEAU?$logical_and@_N@0@AEAU10@@Z ; std::forward<std::logical_and<bool> >
  00085	48 89 85 50 01
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  0008c	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00093	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00099	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  000a0	88 85 04 01 00
	00		 mov	 BYTE PTR $T3[rbp], al
  000a6	0f b6 85 04 01
	00 00		 movzx	 eax, BYTE PTR $T3[rbp]
  000ad	88 85 24 01 00
	00		 mov	 BYTE PTR $T4[rbp], al
  000b3	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR tv89[rbp]
  000ba	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000bf	4c 8b 8d 48 01
	00 00		 mov	 r9, QWORD PTR tv86[rbp]
  000c6	4c 8b 85 50 01
	00 00		 mov	 r8, QWORD PTR tv83[rbp]
  000cd	0f b6 95 24 01
	00 00		 movzx	 edx, BYTE PTR $T4[rbp]
  000d4	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR tv91[rbp]
  000db	e8 00 00 00 00	 call	 ??$?0U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ; std::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1>::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1><std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >

; 1478 :             _STD forward<_Types>(_Args)...) { // construct from forwarded callable object and arguments
; 1479 :     }

  000e0	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e7	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  000ee	5f		 pop	 rdi
  000ef	5d		 pop	 rbp
  000f0	c3		 ret	 0
??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ENDP ; std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
tv78 = 192
this$ = 240
__that$ = 248
??0?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@AEBV01@@Z PROC ; std::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1>::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1>, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0003d	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z ; std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
  00053	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAA@AEBV01@@Z ENDP ; std::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1>::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAAAEAU?$logical_and@_N@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAAAEAU?$logical_and@_N@2@XZ PROC ; std::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :         return *this;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1422 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$logical_and@_N@std@@V?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@2@$00@std@@QEAAAEAU?$logical_and@_N@2@XZ ENDP ; std::_Compressed_pair<std::logical_and<bool>,std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
tv70 = 192
this$ = 240
__that$ = 248
??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z PROC ; std::_Tuple_val<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >::_Tuple_val<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv70[rbp], rax
  0003d	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv70[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z
  00053	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z ENDP ; std::_Tuple_val<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >::_Tuple_val<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\FuncAndBind.cpp
;	COMDAT ??0?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
tv80 = 192
this$ = 240
__that$ = 248
??0?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z PROC ; std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >, COMDAT

; 43   : }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1BF7C1A3_FuncAndBind@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00043	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004a	e8 00 00 00 00	 call	 ??0?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBV01@@Z ; std::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
  0004f	90		 npad	 1
  00050	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 83 c0 08	 add	 rax, 8
  0005b	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  00062	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00069	48 83 c0 08	 add	 rax, 8
  0006d	48 8b d0	 mov	 rdx, rax
  00070	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv80[rbp]
  00077	e8 00 00 00 00	 call	 ??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z
  0007c	90		 npad	 1
  0007d	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00084	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0008b	5f		 pop	 rdi
  0008c	5d		 pop	 rbp
  0008d	c3		 ret	 0
??0?$tuple@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z ENDP ; std::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
tv70 = 192
this$ = 240
__that$ = 248
??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z PROC ; std::_Tuple_val<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::_Tuple_val<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv70[rbp], rax
  0003d	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv70[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z
  00053	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z ENDP ; std::_Tuple_val<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::_Tuple_val<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\FuncAndBind.cpp
;	COMDAT ??0?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
tv80 = 192
this$ = 240
__that$ = 248
??0?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBV01@@Z PROC ; std::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >, COMDAT

; 43   : }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1BF7C1A3_FuncAndBind@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00043	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004a	e8 00 00 00 00	 call	 ??0?$tuple@$$V@std@@QEAA@AEBV01@@Z ; std::tuple<>::tuple<>
  0004f	90		 npad	 1
  00050	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  0005e	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00065	48 8b d0	 mov	 rdx, rax
  00068	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv80[rbp]
  0006f	e8 00 00 00 00	 call	 ??0?$_Tuple_val@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBU01@@Z
  00074	90		 npad	 1
  00075	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007c	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00083	5f		 pop	 rdi
  00084	5d		 pop	 rbp
  00085	c3		 ret	 0
??0?$tuple@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::tuple<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$bind@U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YA?AV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAU?$logical_and@_N@0@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@@Z
_TEXT	SEGMENT
tv80 = 192
tv78 = 200
tv76 = 208
__$ReturnUdt$ = 256
_Func$ = 264
<_Args_0>$ = 272
<_Args_1>$ = 280
??$bind@U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YA?AV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAU?$logical_and@_N@0@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@@Z PROC ; std::bind<std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >, COMDAT

; 1498 :     _Fx&& _Func, _Types&&... _Args) { // bind a callable object with an implicit return type

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1499 :     return _Binder<_Unforced, _Fx, _Types...>(_STD forward<_Fx>(_Func), _STD forward<_Types>(_Args)...);

  00045	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0004c	e8 00 00 00 00	 call	 ??$forward@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
  00051	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  00058	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0005f	e8 00 00 00 00	 call	 ??$forward@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@AEAV10@@Z ; std::forward<std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
  00064	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0006b	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Func$[rbp]
  00072	e8 00 00 00 00	 call	 ??$forward@U?$logical_and@_N@std@@@std@@YA$$QEAU?$logical_and@_N@0@AEAU10@@Z ; std::forward<std::logical_and<bool> >
  00077	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0007e	4c 8b 8d c0 00
	00 00		 mov	 r9, QWORD PTR tv80[rbp]
  00085	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR tv78[rbp]
  0008c	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv76[rbp]
  00093	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0009a	e8 00 00 00 00	 call	 ??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@$$QEAU?$logical_and@_N@1@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@1@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@1@@Z ; std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
  0009f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1500 : }

  000a6	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000ad	5f		 pop	 rdi
  000ae	5d		 pop	 rbp
  000af	c3		 ret	 0
??$bind@U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YA?AV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAU?$logical_and@_N@0@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@@Z ENDP ; std::bind<std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
tv78 = 192
this$ = 240
__that$ = 248
??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z PROC ; std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0003d	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z
  00053	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
tv78 = 192
this$ = 240
__that$ = 248
??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z PROC ; std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0003d	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z
  00053	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z ENDP ; std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
$T4 = 292
tv91 = 312
tv89 = 320
tv86 = 328
tv83 = 336
this$ = 384
_Func$ = 392
<_Args_0>$ = 400
<_Args_1>$ = 408
??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z PROC ; std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>, COMDAT

; 1476 :     explicit _Binder(_Fx&& _Func, _Types&&... _Args)

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 98 01
	00 00		 sub	 rsp, 408		; 00000198H
  0001d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 66 00 00 00	 mov	 ecx, 102		; 00000066H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 b8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+440]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1477 :         : _Mypair(_One_then_variadic_args_t(), _STD forward<_Fx>(_Func),

  00045	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv91[rbp], rax
  00053	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  0005f	48 89 85 40 01
	00 00		 mov	 QWORD PTR tv89[rbp], rax
  00066	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0006d	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
  00072	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv86[rbp], rax
  00079	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR _Func$[rbp]
  00080	e8 00 00 00 00	 call	 ??$forward@U?$greater@H@std@@@std@@YA$$QEAU?$greater@H@0@AEAU10@@Z ; std::forward<std::greater<int> >
  00085	48 89 85 50 01
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  0008c	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00093	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00099	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  000a0	88 85 04 01 00
	00		 mov	 BYTE PTR $T3[rbp], al
  000a6	0f b6 85 04 01
	00 00		 movzx	 eax, BYTE PTR $T3[rbp]
  000ad	88 85 24 01 00
	00		 mov	 BYTE PTR $T4[rbp], al
  000b3	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR tv89[rbp]
  000ba	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000bf	4c 8b 8d 48 01
	00 00		 mov	 r9, QWORD PTR tv86[rbp]
  000c6	4c 8b 85 50 01
	00 00		 mov	 r8, QWORD PTR tv83[rbp]
  000cd	0f b6 95 24 01
	00 00		 movzx	 edx, BYTE PTR $T4[rbp]
  000d4	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR tv91[rbp]
  000db	e8 00 00 00 00	 call	 ??$?0U?$greater@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z ; std::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1><std::greater<int>,std::_Ph<1> const &,int>

; 1478 :             _STD forward<_Types>(_Args)...) { // construct from forwarded callable object and arguments
; 1479 :     }

  000e0	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e7	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  000ee	5f		 pop	 rdi
  000ef	5d		 pop	 rbp
  000f0	c3		 ret	 0
??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z ENDP ; std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
tv78 = 192
this$ = 240
__that$ = 248
??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z PROC ; std::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0003d	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@$$QEAV01@@Z ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int>
  00053	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
tv78 = 192
this$ = 240
__that$ = 248
??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z PROC ; std::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0003d	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBV01@@Z ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int>
  00053	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z ENDP ; std::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$greater@H@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$greater@H@2@XZ PROC ; std::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :         return *this;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1422 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$greater@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$greater@H@2@XZ ENDP ; std::_Compressed_pair<std::greater<int>,std::tuple<std::_Ph<1>,int>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$bind@U?$greater@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$greater@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z
_TEXT	SEGMENT
tv80 = 192
tv78 = 200
tv76 = 208
__$ReturnUdt$ = 256
_Func$ = 264
<_Args_0>$ = 272
<_Args_1>$ = 280
??$bind@U?$greater@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$greater@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z PROC ; std::bind<std::greater<int>,std::_Ph<1> const &,int>, COMDAT

; 1498 :     _Fx&& _Func, _Types&&... _Args) { // bind a callable object with an implicit return type

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1499 :     return _Binder<_Unforced, _Fx, _Types...>(_STD forward<_Fx>(_Func), _STD forward<_Types>(_Args)...);

  00045	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0004c	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00051	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  00058	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0005f	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
  00064	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0006b	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Func$[rbp]
  00072	e8 00 00 00 00	 call	 ??$forward@U?$greater@H@std@@@std@@YA$$QEAU?$greater@H@0@AEAU10@@Z ; std::forward<std::greater<int> >
  00077	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0007e	4c 8b 8d c0 00
	00 00		 mov	 r9, QWORD PTR tv80[rbp]
  00085	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR tv78[rbp]
  0008c	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv76[rbp]
  00093	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0009a	e8 00 00 00 00	 call	 ??0?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$greater@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z ; std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int>
  0009f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1500 : }

  000a6	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000ad	5f		 pop	 rdi
  000ae	5d		 pop	 rbp
  000af	c3		 ret	 0
??$bind@U?$greater@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$greater@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z ENDP ; std::bind<std::greater<int>,std::_Ph<1> const &,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??R?$greater@H@std@@QEBA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 192
this$ = 240
_Left$ = 248
_Right$ = 256
??R?$greater@H@std@@QEBA_NAEBH0@Z PROC			; std::greater<int>::operator(), COMDAT

; 110  :     constexpr bool operator()(const _Ty& _Left, const _Ty& _Right) const { // apply operator> to operands

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 111  :         return _Left > _Right;

  00040	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00047	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004e	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00050	39 08		 cmp	 DWORD PTR [rax], ecx
  00052	7e 0c		 jle	 SHORT $LN3@operator
  00054	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv65[rbp], 1
  0005e	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00060	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv65[rbp], 0
$LN4@operator:
  0006a	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv65[rbp]

; 112  :     }

  00071	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
??R?$greater@H@std@@QEBA_NAEBH0@Z ENDP			; std::greater<int>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??R?$logical_and@_N@std@@QEBA_NAEB_N0@Z
_TEXT	SEGMENT
tv68 = 192
this$ = 240
_Left$ = 248
_Right$ = 256
??R?$logical_and@_N@std@@QEBA_NAEB_N0@Z PROC		; std::logical_and<bool>::operator(), COMDAT

; 94   :     constexpr bool operator()(const _Ty& _Left, const _Ty& _Right) const { // apply operator&& to operands

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 95   :         return _Left && _Right;

  00040	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00047	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  0004a	85 c0		 test	 eax, eax
  0004c	74 1a		 je	 SHORT $LN3@operator
  0004e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00055	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  00058	85 c0		 test	 eax, eax
  0005a	74 0c		 je	 SHORT $LN3@operator
  0005c	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv68[rbp], 1
  00066	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00068	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv68[rbp], 0
$LN4@operator:
  00072	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv68[rbp]

; 96   :     }

  00079	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00080	5f		 pop	 rdi
  00081	5d		 pop	 rbp
  00082	c3		 ret	 0
??R?$logical_and@_N@std@@QEBA_NAEB_N0@Z ENDP		; std::logical_and<bool>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z
_TEXT	SEGMENT
tv68 = 192
_Left$ = 240
_Right$ = 248
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z PROC ; std::operator<<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 4370 :     const basic_string<_Elem, _Traits, _Alloc>& _Right) noexcept { // test if string < string

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 4371 :     return _Left.compare(_Right) < 0;

  0003c	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  00043	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  0004a	e8 00 00 00 00	 call	 ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
  0004f	90		 npad	 1
  00050	85 c0		 test	 eax, eax
  00052	7d 0c		 jge	 SHORT $LN3@operator
  00054	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv68[rbp], 1
  0005e	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00060	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv68[rbp], 0
$LN4@operator:
  0006a	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv68[rbp]

; 4372 : }

  00071	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ENDP ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??R?$less@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z
_TEXT	SEGMENT
this$ = 224
_Left$ = 232
_Right$ = 240
??R?$less@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z PROC ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::operator(), COMDAT

; 122  :     constexpr bool operator()(const _Ty& _Left, const _Ty& _Right) const { // apply operator< to operands

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 123  :         return _Left < _Right;

  00040	48 8b 95 f0 00
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  00047	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  0004e	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >

; 124  :     }

  00053	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005a	5f		 pop	 rdi
  0005b	5d		 pop	 rbp
  0005c	c3		 ret	 0
??R?$less@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ENDP ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_Count$ = 72
_First$ = 320
_Last$ = 328
_Pred$ = 336
??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@@Z PROC ; std::count_if<int const *,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >, COMDAT

; 216  : _NODISCARD _Iter_diff_t<_InIt> count_if(_InIt _First, _InIt _Last, _Pr _Pred) { // count elements satisfying _Pred

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4EB666AB_algorithm
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 217  :     _Adl_verify_range(_First, _Last);

  00040	48 8d 95 48 01
	00 00		 lea	 rdx, QWORD PTR _Last$[rbp]
  00047	48 8d 8d 40 01
	00 00		 lea	 rcx, QWORD PTR _First$[rbp]
  0004e	e8 00 00 00 00	 call	 ??$_Adl_verify_range@PEBHPEBH@std@@YAXAEBQEBH0@Z ; std::_Adl_verify_range<int const *,int const *>

; 218  :     auto _UFirst               = _Get_unwrapped(_First);

  00053	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBH@std@@YAPEBHQEBH@Z ; std::_Get_unwrapped<int const >
  0005f	48 89 45 08	 mov	 QWORD PTR _UFirst$[rbp], rax

; 219  :     const auto _ULast          = _Get_unwrapped(_Last);

  00063	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0006a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@$$CBH@std@@YAPEBHQEBH@Z ; std::_Get_unwrapped<int const >
  0006f	48 89 45 28	 mov	 QWORD PTR _ULast$[rbp], rax

; 220  :     _Iter_diff_t<_InIt> _Count = 0;

  00073	48 c7 45 48 00
	00 00 00	 mov	 QWORD PTR _Count$[rbp], 0

; 221  :     for (; _UFirst != _ULast; ++_UFirst) {

  0007b	eb 0c		 jmp	 SHORT $LN4@count_if
$LN2@count_if:
  0007d	48 8b 45 08	 mov	 rax, QWORD PTR _UFirst$[rbp]
  00081	48 83 c0 04	 add	 rax, 4
  00085	48 89 45 08	 mov	 QWORD PTR _UFirst$[rbp], rax
$LN4@count_if:
  00089	48 8b 45 28	 mov	 rax, QWORD PTR _ULast$[rbp]
  0008d	48 39 45 08	 cmp	 QWORD PTR _UFirst$[rbp], rax
  00091	74 24		 je	 SHORT $LN3@count_if

; 222  :         if (_Pred(*_UFirst)) {

  00093	48 8b 55 08	 mov	 rdx, QWORD PTR _UFirst$[rbp]
  00097	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR _Pred$[rbp]
  0009e	e8 00 00 00 00	 call	 ??$?RAEBH@?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA_NAEBH@Z ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::operator()<int const &>
  000a3	0f b6 c0	 movzx	 eax, al
  000a6	85 c0		 test	 eax, eax
  000a8	74 0b		 je	 SHORT $LN5@count_if

; 223  :             ++_Count;

  000aa	48 8b 45 48	 mov	 rax, QWORD PTR _Count$[rbp]
  000ae	48 ff c0	 inc	 rax
  000b1	48 89 45 48	 mov	 QWORD PTR _Count$[rbp], rax
$LN5@count_if:

; 224  :         }
; 225  :     }

  000b5	eb c6		 jmp	 SHORT $LN2@count_if
$LN3@count_if:

; 226  : 
; 227  :     return _Count;

  000b7	48 8b 45 48	 mov	 rax, QWORD PTR _Count$[rbp]

; 228  : }

  000bb	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  000c2	5f		 pop	 rdi
  000c3	5d		 pop	 rbp
  000c4	c3		 ret	 0
??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@@Z ENDP ; std::count_if<int const *,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
tv78 = 192
this$ = 240
__that$ = 248
??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z PROC ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0003d	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z
  00053	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
tv78 = 192
this$ = 240
__that$ = 248
??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z PROC ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0003d	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z
  00053	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@AEBV01@@Z ENDP ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
$T4 = 292
tv91 = 312
tv89 = 320
tv86 = 328
tv83 = 336
this$ = 384
_Func$ = 392
<_Args_0>$ = 400
<_Args_1>$ = 408
??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z PROC ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>, COMDAT

; 1476 :     explicit _Binder(_Fx&& _Func, _Types&&... _Args)

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 98 01
	00 00		 sub	 rsp, 408		; 00000198H
  0001d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 66 00 00 00	 mov	 ecx, 102		; 00000066H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 b8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+440]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1477 :         : _Mypair(_One_then_variadic_args_t(), _STD forward<_Fx>(_Func),

  00045	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv91[rbp], rax
  00053	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  0005f	48 89 85 40 01
	00 00		 mov	 QWORD PTR tv89[rbp], rax
  00066	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0006d	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
  00072	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv86[rbp], rax
  00079	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR _Func$[rbp]
  00080	e8 00 00 00 00	 call	 ??$forward@U?$less@H@std@@@std@@YA$$QEAU?$less@H@0@AEAU10@@Z ; std::forward<std::less<int> >
  00085	48 89 85 50 01
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  0008c	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00093	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00099	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  000a0	88 85 04 01 00
	00		 mov	 BYTE PTR $T3[rbp], al
  000a6	0f b6 85 04 01
	00 00		 movzx	 eax, BYTE PTR $T3[rbp]
  000ad	88 85 24 01 00
	00		 mov	 BYTE PTR $T4[rbp], al
  000b3	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR tv89[rbp]
  000ba	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000bf	4c 8b 8d 48 01
	00 00		 mov	 r9, QWORD PTR tv86[rbp]
  000c6	4c 8b 85 50 01
	00 00		 mov	 r8, QWORD PTR tv83[rbp]
  000cd	0f b6 95 24 01
	00 00		 movzx	 edx, BYTE PTR $T4[rbp]
  000d4	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR tv91[rbp]
  000db	e8 00 00 00 00	 call	 ??$?0U?$less@H@std@@AEBU?$_Ph@$00@1@H@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z ; std::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1><std::less<int>,std::_Ph<1> const &,int>

; 1478 :             _STD forward<_Types>(_Args)...) { // construct from forwarded callable object and arguments
; 1479 :     }

  000e0	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e7	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  000ee	5f		 pop	 rdi
  000ef	5d		 pop	 rbp
  000f0	c3		 ret	 0
??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z ENDP ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
tv78 = 192
this$ = 240
__that$ = 248
??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z PROC ; std::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0003d	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@$$QEAV01@@Z ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int>
  00053	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
tv78 = 192
this$ = 240
__that$ = 248
??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z PROC ; std::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00036	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0003d	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00044	48 8b d0	 mov	 rdx, rax
  00047	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBV01@@Z ; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int>
  00053	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAA@AEBV01@@Z ENDP ; std::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$less@H@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$less@H@2@XZ PROC ; std::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :         return *this;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1422 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$less@H@std@@V?$tuple@U?$_Ph@$00@std@@H@2@$00@std@@QEAAAEAU?$less@H@2@XZ ENDP ; std::_Compressed_pair<std::less<int>,std::tuple<std::_Ph<1>,int>,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\FuncAndBind.cpp
;	COMDAT ??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@$$QEAV01@@Z PROC	; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int>, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1BF7C1A3_FuncAndBind@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004a	e8 00 00 00 00	 call	 ??0?$tuple@H@std@@QEAA@$$QEAV01@@Z ; std::tuple<int>::tuple<int>
  0004f	90		 npad	 1
  00050	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00057	0f b6 40 04	 movzx	 eax, BYTE PTR [rax+4]
  0005b	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00062	88 41 04	 mov	 BYTE PTR [rcx+4], al
  00065	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00073	5f		 pop	 rdi
  00074	5d		 pop	 rbp
  00075	c3		 ret	 0
??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@$$QEAV01@@Z ENDP	; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\FuncAndBind.cpp
;	COMDAT ??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBV01@@Z PROC	; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int>, COMDAT

; 43   : }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1BF7C1A3_FuncAndBind@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004a	e8 00 00 00 00	 call	 ??0?$tuple@H@std@@QEAA@AEBV01@@Z ; std::tuple<int>::tuple<int>
  0004f	90		 npad	 1
  00050	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00057	0f b6 40 04	 movzx	 eax, BYTE PTR [rax+4]
  0005b	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00062	88 41 04	 mov	 BYTE PTR [rcx+4], al
  00065	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00073	5f		 pop	 rdi
  00074	5d		 pop	 rbp
  00075	c3		 ret	 0
??0?$tuple@U?$_Ph@$00@std@@H@std@@QEAA@AEBV01@@Z ENDP	; std::tuple<std::_Ph<1>,int>::tuple<std::_Ph<1>,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\FuncAndBind.cpp
;	COMDAT ??0?$tuple@H@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0?$tuple@H@std@@QEAA@$$QEAV01@@Z PROC			; std::tuple<int>::tuple<int>, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1BF7C1A3_FuncAndBind@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004a	e8 00 00 00 00	 call	 ??0?$tuple@$$V@std@@QEAA@AEBV01@@Z ; std::tuple<>::tuple<>
  0004f	90		 npad	 1
  00050	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	89 01		 mov	 DWORD PTR [rcx], eax
  00062	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00069	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00070	5f		 pop	 rdi
  00071	5d		 pop	 rbp
  00072	c3		 ret	 0
??0?$tuple@H@std@@QEAA@$$QEAV01@@Z ENDP			; std::tuple<int>::tuple<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\FuncAndBind.cpp
;	COMDAT ??0?$tuple@H@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0?$tuple@H@std@@QEAA@AEBV01@@Z PROC			; std::tuple<int>::tuple<int>, COMDAT

; 43   : }

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1BF7C1A3_FuncAndBind@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004a	e8 00 00 00 00	 call	 ??0?$tuple@$$V@std@@QEAA@AEBV01@@Z ; std::tuple<>::tuple<>
  0004f	90		 npad	 1
  00050	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __that$[rbp]
  00057	8b 00		 mov	 eax, DWORD PTR [rax]
  00059	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	89 01		 mov	 DWORD PTR [rcx], eax
  00062	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00069	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00070	5f		 pop	 rdi
  00071	5d		 pop	 rbp
  00072	c3		 ret	 0
??0?$tuple@H@std@@QEAA@AEBV01@@Z ENDP			; std::tuple<int>::tuple<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$bind@U?$less@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$less@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z
_TEXT	SEGMENT
tv80 = 192
tv78 = 200
tv76 = 208
__$ReturnUdt$ = 256
_Func$ = 264
<_Args_0>$ = 272
<_Args_1>$ = 280
??$bind@U?$less@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$less@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z PROC ; std::bind<std::less<int>,std::_Ph<1> const &,int>, COMDAT

; 1498 :     _Fx&& _Func, _Types&&... _Args) { // bind a callable object with an implicit return type

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1499 :     return _Binder<_Unforced, _Fx, _Types...>(_STD forward<_Fx>(_Func), _STD forward<_Types>(_Args)...);

  00045	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0004c	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00051	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  00058	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0005f	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
  00064	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0006b	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Func$[rbp]
  00072	e8 00 00 00 00	 call	 ??$forward@U?$less@H@std@@@std@@YA$$QEAU?$less@H@0@AEAU10@@Z ; std::forward<std::less<int> >
  00077	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0007e	4c 8b 8d c0 00
	00 00		 mov	 r9, QWORD PTR tv80[rbp]
  00085	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR tv78[rbp]
  0008c	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv76[rbp]
  00093	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0009a	e8 00 00 00 00	 call	 ??0?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@QEAA@$$QEAU?$less@H@1@AEBU?$_Ph@$00@1@$$QEAH@Z ; std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>
  0009f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1500 : }

  000a6	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000ad	5f		 pop	 rdi
  000ae	5d		 pop	 rbp
  000af	c3		 ret	 0
??$bind@U?$less@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$less@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z ENDP ; std::bind<std::less<int>,std::_Ph<1> const &,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$initializer_list@H@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$initializer_list@H@std@@QEAAX_K@Z PROC ; std::initializer_list<int>::__autoclassinit2, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  00034	33 c0		 xor	 eax, eax
  00036	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR classSize$[rbp]
  0003d	f3 aa		 rep stosb
  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?__autoclassinit2@?$initializer_list@H@std@@QEAAX_K@Z ENDP ; std::initializer_list<int>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ?end@?$initializer_list@H@std@@QEBAPEBHXZ
_TEXT	SEGMENT
this$ = 224
?end@?$initializer_list@H@std@@QEBAPEBHXZ PROC		; std::initializer_list<int>::end, COMDAT

; 38   :     _NODISCARD constexpr const _Elem* end() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EE132E02_initializer_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 39   :         return _Last;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 40   :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?end@?$initializer_list@H@std@@QEBAPEBHXZ ENDP		; std::initializer_list<int>::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ?begin@?$initializer_list@H@std@@QEBAPEBHXZ
_TEXT	SEGMENT
this$ = 224
?begin@?$initializer_list@H@std@@QEBAPEBHXZ PROC	; std::initializer_list<int>::begin, COMDAT

; 34   :     _NODISCARD constexpr const _Elem* begin() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EE132E02_initializer_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 35   :         return _First;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 36   :     }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?begin@?$initializer_list@H@std@@QEBAPEBHXZ ENDP	; std::initializer_list<int>::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\initializer_list
;	COMDAT ??0?$initializer_list@H@std@@QEAA@PEBH0@Z
_TEXT	SEGMENT
this$ = 224
_First_arg$ = 232
_Last_arg$ = 240
??0?$initializer_list@H@std@@QEAA@PEBH0@Z PROC		; std::initializer_list<int>::initializer_list<int>, COMDAT

; 32   :         : _First(_First_arg), _Last(_Last_arg) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EE132E02_initializer_list
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1
  00041	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _First_arg$[rbp]
  0004f	48 89 08	 mov	 QWORD PTR [rax], rcx
  00052	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00059	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Last_arg$[rbp]
  00060	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx
  00064	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??0?$initializer_list@H@std@@QEAA@PEBH0@Z ENDP		; std::initializer_list<int>::initializer_list<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??R?$less@H@std@@QEBA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 192
this$ = 240
_Left$ = 248
_Right$ = 256
??R?$less@H@std@@QEBA_NAEBH0@Z PROC			; std::less<int>::operator(), COMDAT

; 122  :     constexpr bool operator()(const _Ty& _Left, const _Ty& _Right) const { // apply operator< to operands

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 123  :         return _Left < _Right;

  00040	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00047	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004e	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00050	39 08		 cmp	 DWORD PTR [rax], ecx
  00052	7d 0c		 jge	 SHORT $LN3@operator
  00054	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv65[rbp], 1
  0005e	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00060	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv65[rbp], 0
$LN4@operator:
  0006a	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv65[rbp]

; 124  :     }

  00071	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
??R?$less@H@std@@QEBA_NAEBH0@Z ENDP			; std::less<int>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
tv80 = 192
_Ostr$ = 240
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 950  :     basic_ostream<_Elem, _Traits>& _Ostr) { // insert newline and flush stream

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 951  :     _Ostr.put(_Ostr.widen('\n'));

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00044	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  00058	b2 0a		 mov	 dl, 10
  0005a	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv80[rbp]
  00061	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  00067	0f b6 d0	 movzx	 edx, al
  0006a	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00071	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z

; 952  :     _Ostr.flush();

  00077	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 953  :     return _Ostr;

  00084	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]

; 954  : }

  0008b	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 738  :     const char* _Val) { // insert NTBS into char stream

$LN25:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 38 02
	00 00		 sub	 rsp, 568		; 00000238H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 8e 00 00 00	 mov	 ecx, 142		; 0000008eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 58
	02 00 00	 mov	 rcx, QWORD PTR [rsp+600]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 00 02
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 739  :     using _Elem = char;
; 740  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 741  : 
; 742  :     ios_base::iostate _State = ios_base::goodbit;

  0004c	c7 45 04 00 00
	00 00		 mov	 DWORD PTR _State$[rbp], 0

; 743  :     streamsize _Count        = static_cast<streamsize>(_Traits::length(_Val));

  00053	48 8b 8d 38 02
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  0005a	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0005f	48 89 45 28	 mov	 QWORD PTR _Count$[rbp], rax

; 744  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

  00063	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0006a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00071	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00078	48 03 c8	 add	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 8b c8	 mov	 rcx, rax
  00081	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  00087	48 85 c0	 test	 rax, rax
  0008a	7e 5b		 jle	 SHORT $LN17@operator
  0008c	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00093	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00096	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0009a	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000a1	48 03 c8	 add	 rcx, rax
  000a4	48 8b c1	 mov	 rax, rcx
  000a7	48 8b c8	 mov	 rcx, rax
  000aa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  000b0	48 3b 45 28	 cmp	 rax, QWORD PTR _Count$[rbp]
  000b4	7e 31		 jle	 SHORT $LN17@operator
  000b6	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000bd	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c0	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000c4	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000cb	48 03 c8	 add	 rcx, rax
  000ce	48 8b c1	 mov	 rax, rcx
  000d1	48 8b c8	 mov	 rcx, rax
  000d4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  000da	48 2b 45 28	 sub	 rax, QWORD PTR _Count$[rbp]
  000de	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv137[rbp], rax
  000e5	eb 0b		 jmp	 SHORT $LN18@operator
$LN17@operator:
  000e7	48 c7 85 e8 01
	00 00 00 00 00
	00		 mov	 QWORD PTR tv137[rbp], 0
$LN18@operator:
  000f2	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv137[rbp]
  000f9	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax

; 745  :     const typename _Myos::sentry _Ok(_Ostr);

  000fd	48 8b 95 30 02
	00 00		 mov	 rdx, QWORD PTR _Ostr$[rbp]
  00104	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00108	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  0010d	90		 npad	 1

; 746  : 
; 747  :     if (!_Ok) {

  0010e	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00112	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  00117	0f b6 c0	 movzx	 eax, al
  0011a	85 c0		 test	 eax, eax
  0011c	75 0e		 jne	 SHORT $LN8@operator

; 748  :         _State |= ios_base::badbit;

  0011e	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  00121	83 c8 04	 or	 eax, 4
  00124	89 45 04	 mov	 DWORD PTR _State$[rbp], eax

; 749  :     } else { // state okay, insert

  00127	e9 b6 02 00 00	 jmp	 $LN9@operator
$LN8@operator:

; 750  :         _TRY_IO_BEGIN
; 751  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

  0012c	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00133	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00136	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0013a	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00141	48 03 c8	 add	 rcx, rax
  00144	48 8b c1	 mov	 rax, rcx
  00147	48 8b c8	 mov	 rcx, rax
  0014a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
  00150	89 85 e4 01 00
	00		 mov	 DWORD PTR tv139[rbp], eax
  00156	8b 85 e4 01 00
	00		 mov	 eax, DWORD PTR tv139[rbp]
  0015c	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  00161	83 f8 40	 cmp	 eax, 64			; 00000040H
  00164	0f 84 e3 00 00
	00		 je	 $LN11@operator

; 752  :             for (; 0 < _Pad; --_Pad) { // pad on left

  0016a	eb 0b		 jmp	 SHORT $LN4@operator
$LN2@operator:
  0016c	48 8b 45 48	 mov	 rax, QWORD PTR _Pad$[rbp]
  00170	48 ff c8	 dec	 rax
  00173	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax
$LN4@operator:
  00177	48 83 7d 48 00	 cmp	 QWORD PTR _Pad$[rbp], 0
  0017c	0f 8e cb 00 00
	00		 jle	 $LN11@operator

; 753  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

  00182	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00189	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0018c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00190	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00197	48 03 c8	 add	 rcx, rax
  0019a	48 8b c1	 mov	 rax, rcx
  0019d	48 8b c8	 mov	 rcx, rax
  001a0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  001a6	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv311[rbp], rax
  001ad	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv311[rbp]
  001b4	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv194[rbp], rax
  001bb	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  001c2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001c5	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  001c9	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  001d0	48 03 c8	 add	 rcx, rax
  001d3	48 8b c1	 mov	 rax, rcx
  001d6	48 8b c8	 mov	 rcx, rax
  001d9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  001df	88 85 f8 01 00
	00		 mov	 BYTE PTR tv312[rbp], al
  001e5	0f b6 85 f8 01
	00 00		 movzx	 eax, BYTE PTR tv312[rbp]
  001ec	88 85 f9 01 00
	00		 mov	 BYTE PTR tv192[rbp], al
  001f2	0f b6 95 f9 01
	00 00		 movzx	 edx, BYTE PTR tv192[rbp]
  001f9	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR tv194[rbp]
  00200	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  00206	89 85 fc 01 00
	00		 mov	 DWORD PTR tv313[rbp], eax
  0020c	8b 85 fc 01 00
	00		 mov	 eax, DWORD PTR tv313[rbp]
  00212	89 85 54 01 00
	00		 mov	 DWORD PTR $T4[rbp], eax
  00218	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0021d	89 85 74 01 00
	00		 mov	 DWORD PTR $T5[rbp], eax
  00223	48 8d 95 54 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  0022a	48 8d 8d 74 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00231	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00236	0f b6 c0	 movzx	 eax, al
  00239	85 c0		 test	 eax, eax
  0023b	74 0b		 je	 SHORT $LN12@operator

; 754  :                     _State |= ios_base::badbit; // insertion failed, quit

  0023d	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  00240	83 c8 04	 or	 eax, 4
  00243	89 45 04	 mov	 DWORD PTR _State$[rbp], eax

; 755  :                     break;

  00246	eb 05		 jmp	 SHORT $LN11@operator
$LN12@operator:

; 756  :                 }
; 757  :             }

  00248	e9 1f ff ff ff	 jmp	 $LN2@operator
$LN11@operator:

; 758  :         }
; 759  : 
; 760  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

  0024d	83 7d 04 00	 cmp	 DWORD PTR _State$[rbp], 0
  00251	75 6e		 jne	 SHORT $LN13@operator
  00253	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0025a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0025d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00261	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00268	48 03 c8	 add	 rcx, rax
  0026b	48 8b c1	 mov	 rax, rcx
  0026e	48 8b c8	 mov	 rcx, rax
  00271	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00277	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv314[rbp], rax
  0027e	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv314[rbp]
  00285	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv219[rbp], rax
  0028c	4c 8b 45 28	 mov	 r8, QWORD PTR _Count$[rbp]
  00290	48 8b 95 38 02
	00 00		 mov	 rdx, QWORD PTR _Val$[rbp]
  00297	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR tv219[rbp]
  0029e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
  002a4	48 89 85 f8 01
	00 00		 mov	 QWORD PTR tv315[rbp], rax
  002ab	48 8b 45 28	 mov	 rax, QWORD PTR _Count$[rbp]
  002af	48 39 85 f8 01
	00 00		 cmp	 QWORD PTR tv315[rbp], rax
  002b6	74 09		 je	 SHORT $LN13@operator

; 761  :             _State |= ios_base::badbit;

  002b8	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  002bb	83 c8 04	 or	 eax, 4
  002be	89 45 04	 mov	 DWORD PTR _State$[rbp], eax
$LN13@operator:

; 762  :         }
; 763  : 
; 764  :         if (_State == ios_base::goodbit) {

  002c1	83 7d 04 00	 cmp	 DWORD PTR _State$[rbp], 0
  002c5	0f 85 e3 00 00
	00		 jne	 $LN14@operator

; 765  :             for (; 0 < _Pad; --_Pad) { // pad on right

  002cb	eb 0b		 jmp	 SHORT $LN7@operator
$LN5@operator:
  002cd	48 8b 45 48	 mov	 rax, QWORD PTR _Pad$[rbp]
  002d1	48 ff c8	 dec	 rax
  002d4	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax
$LN7@operator:
  002d8	48 83 7d 48 00	 cmp	 QWORD PTR _Pad$[rbp], 0
  002dd	0f 8e cb 00 00
	00		 jle	 $LN14@operator

; 766  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

  002e3	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  002ea	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002ed	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  002f1	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  002f8	48 03 c8	 add	 rcx, rax
  002fb	48 8b c1	 mov	 rax, rcx
  002fe	48 8b c8	 mov	 rcx, rax
  00301	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00307	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv316[rbp], rax
  0030e	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv316[rbp]
  00315	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv256[rbp], rax
  0031c	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00323	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00326	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0032a	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00331	48 03 c8	 add	 rcx, rax
  00334	48 8b c1	 mov	 rax, rcx
  00337	48 8b c8	 mov	 rcx, rax
  0033a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  00340	88 85 f8 01 00
	00		 mov	 BYTE PTR tv317[rbp], al
  00346	0f b6 85 f8 01
	00 00		 movzx	 eax, BYTE PTR tv317[rbp]
  0034d	88 85 f9 01 00
	00		 mov	 BYTE PTR tv254[rbp], al
  00353	0f b6 95 f9 01
	00 00		 movzx	 edx, BYTE PTR tv254[rbp]
  0035a	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR tv256[rbp]
  00361	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  00367	89 85 fc 01 00
	00		 mov	 DWORD PTR tv318[rbp], eax
  0036d	8b 85 fc 01 00
	00		 mov	 eax, DWORD PTR tv318[rbp]
  00373	89 85 94 01 00
	00		 mov	 DWORD PTR $T6[rbp], eax
  00379	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0037e	89 85 b4 01 00
	00		 mov	 DWORD PTR $T7[rbp], eax
  00384	48 8d 95 94 01
	00 00		 lea	 rdx, QWORD PTR $T6[rbp]
  0038b	48 8d 8d b4 01
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  00392	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00397	0f b6 c0	 movzx	 eax, al
  0039a	85 c0		 test	 eax, eax
  0039c	74 0b		 je	 SHORT $LN15@operator

; 767  :                     _State |= ios_base::badbit; // insertion failed, quit

  0039e	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  003a1	83 c8 04	 or	 eax, 4
  003a4	89 45 04	 mov	 DWORD PTR _State$[rbp], eax

; 768  :                     break;

  003a7	eb 05		 jmp	 SHORT $LN14@operator
$LN15@operator:

; 769  :                 }
; 770  :             }

  003a9	e9 1f ff ff ff	 jmp	 $LN5@operator
$LN14@operator:

; 771  :         }
; 772  : 
; 773  :         _Ostr.width(0);

  003ae	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  003b5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003b8	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  003bc	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  003c3	48 03 c8	 add	 rcx, rax
  003c6	48 8b c1	 mov	 rax, rcx
  003c9	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv277[rbp], rax
  003d0	33 d2		 xor	 edx, edx
  003d2	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR tv277[rbp]
  003d9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
  003df	90		 npad	 1
  003e0	eb 00		 jmp	 SHORT $LN9@operator
$LN23@operator:
$LN9@operator:

; 774  :         _CATCH_IO_(ios_base, _Ostr)
; 775  :     }
; 776  : 
; 777  :     _Ostr.setstate(_State);

  003e2	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  003e9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003ec	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  003f0	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  003f7	48 03 c8	 add	 rcx, rax
  003fa	48 8b c1	 mov	 rax, rcx
  003fd	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv306[rbp], rax
  00404	45 33 c0	 xor	 r8d, r8d
  00407	8b 55 04	 mov	 edx, DWORD PTR _State$[rbp]
  0040a	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR tv306[rbp]
  00411	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 778  :     return _Ostr;

  00417	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0041e	48 89 85 d8 01
	00 00		 mov	 QWORD PTR $T8[rbp], rax
  00425	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00429	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0042e	48 8b 85 d8 01
	00 00		 mov	 rax, QWORD PTR $T8[rbp]

; 779  : }

  00435	48 8b f8	 mov	 rdi, rax
  00438	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0043c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData
  00443	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00448	48 8b c7	 mov	 rax, rdi
  0044b	48 8b 8d 00 02
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00452	48 33 cd	 xor	 rcx, rbp
  00455	e8 00 00 00 00	 call	 __security_check_cookie
  0045a	48 8d a5 18 02
	00 00		 lea	 rsp, QWORD PTR [rbp+536]
  00461	5f		 pop	 rdi
  00462	5d		 pop	 rbp
  00463	c3		 ret	 0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00018	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 774  :         _CATCH_IO_(ios_base, _Ostr)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00014	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0001b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00022	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00029	48 03 c8	 add	 rcx, rax
  0002c	48 8b c1	 mov	 rax, rcx
  0002f	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv291[rbp], rax
  00036	41 b0 01	 mov	 r8b, 1
  00039	ba 04 00 00 00	 mov	 edx, 4
  0003e	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR tv291[rbp]
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  0004b	90		 npad	 1
  0004c	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  00053	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00018	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 774  :         _CATCH_IO_(ios_base, _Ostr)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00014	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0001b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00022	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00029	48 03 c8	 add	 rcx, rax
  0002c	48 8b c1	 mov	 rax, rcx
  0002f	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv291[rbp], rax
  00036	41 b0 01	 mov	 r8b, 1
  00039	ba 04 00 00 00	 mov	 edx, 4
  0003e	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR tv291[rbp]
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  0004b	90		 npad	 1
  0004c	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  00053	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$?RHH@?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAAH$$QEAH0@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 244
$T3 = 276
$T4 = 308
$T5 = 340
$T6 = 372
$T7 = 404
tv76 = 424
tv74 = 432
tv92 = 440
tv89 = 448
this$ = 496
<_Unbargs_0>$ = 504
<_Unbargs_1>$ = 512
??$?RHH@?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAAH$$QEAH0@Z PROC ; std::_Binder<std::_Unforced,int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>::operator()<int,int>, COMDAT

; 1491 :     _CLASS_DEFINE_CONST(_BINDER_OPERATOR)

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 02
	00 00		 sub	 rsp, 520		; 00000208H
  00018	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 82 00 00 00	 mov	 ecx, 130		; 00000082H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	02 00 00	 mov	 rcx, QWORD PTR [rsp+552]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 8d 00 02
	00 00		 mov	 rcx, QWORD PTR <_Unbargs_1>$[rbp]
  00047	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  0004c	48 89 85 a8 01
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  00053	48 8b 8d f8 01
	00 00		 mov	 rcx, QWORD PTR <_Unbargs_0>$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  0005f	48 89 85 b0 01
	00 00		 mov	 QWORD PTR tv74[rbp], rax
  00066	4c 8b 85 a8 01
	00 00		 mov	 r8, QWORD PTR tv76[rbp]
  0006d	48 8b 95 b0 01
	00 00		 mov	 rdx, QWORD PTR tv74[rbp]
  00074	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0007b	e8 00 00 00 00	 call	 ??$forward_as_tuple@HH@std@@YA?AV?$tuple@$$QEAH$$QEAH@0@$$QEAH0@Z ; std::forward_as_tuple<int,int>
  00080	48 89 85 b8 01
	00 00		 mov	 QWORD PTR tv92[rbp], rax
  00087	48 8b 85 f0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008e	48 8b c8	 mov	 rcx, rax
  00091	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZXZ ; std::_Compressed_pair<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >,0>::_Get_first
  00096	48 89 85 c0 01
	00 00		 mov	 QWORD PTR tv89[rbp], rax
  0009d	0f b6 85 f4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  000a4	88 85 74 01 00
	00		 mov	 BYTE PTR $T6[rbp], al
  000aa	0f b6 85 74 01
	00 00		 movzx	 eax, BYTE PTR $T6[rbp]
  000b1	88 85 94 01 00
	00		 mov	 BYTE PTR $T7[rbp], al
  000b7	0f b6 85 14 01
	00 00		 movzx	 eax, BYTE PTR $T3[rbp]
  000be	88 85 34 01 00
	00		 mov	 BYTE PTR $T4[rbp], al
  000c4	0f b6 85 34 01
	00 00		 movzx	 eax, BYTE PTR $T4[rbp]
  000cb	88 85 54 01 00
	00		 mov	 BYTE PTR $T5[rbp], al
  000d1	48 8b 85 f0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d8	48 83 c0 08	 add	 rax, 8
  000dc	48 8b 8d b8 01
	00 00		 mov	 rcx, QWORD PTR tv92[rbp]
  000e3	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000e8	4c 8b c8	 mov	 r9, rax
  000eb	4c 8b 85 c0 01
	00 00		 mov	 r8, QWORD PTR tv89[rbp]
  000f2	0f b6 95 94 01
	00 00		 movzx	 edx, BYTE PTR $T7[rbp]
  000f9	0f b6 8d 54 01
	00 00		 movzx	 ecx, BYTE PTR $T5[rbp]
  00100	e8 00 00 00 00	 call	 ??$_Call_binder@U_Unforced@std@@$0A@$00$01P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@2@V?$tuple@$$QEAH$$QEAH@2@@std@@YAHU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00$01@0@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ; std::_Call_binder<std::_Unforced,0,1,2,int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >,std::tuple<int &&,int &&> >
  00105	48 8d a5 d8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+472]
  0010c	5f		 pop	 rdi
  0010d	5d		 pop	 rbp
  0010e	c3		 ret	 0
??$?RHH@?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAAH$$QEAH0@Z ENDP ; std::_Binder<std::_Unforced,int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>::operator()<int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Call_binder@U_Unforced@std@@$0A@$00$01P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@2@V?$tuple@$$QEAH$$QEAH@2@@std@@YAHU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00$01@0@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
_TEXT	SEGMENT
tv75 = 192
tv73 = 200
tv139 = 208
tv87 = 216
tv85 = 224
tv137 = 232
tv131 = 240
tv129 = 248
tv135 = 256
__formal$ = 304
__formal$ = 312
_Obj$ = 320
_Tpl$ = 328
_Ut$ = 336
??$_Call_binder@U_Unforced@std@@$0A@$00$01P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@2@V?$tuple@$$QEAH$$QEAH@2@@std@@YAHU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00$01@0@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z PROC ; std::_Call_binder<std::_Unforced,0,1,2,int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >,std::tuple<int &&,int &&> >, COMDAT

; 1445 :         _Obj, _Fix_arg(_STD get<_Ix>(_Tpl), _STD move(_Ut))...)) { // bind() and bind<R>() invocation

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00012	55		 push	 rbp
  00013	57		 push	 rdi
  00014	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  0001b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00020	48 8b fc	 mov	 rdi, rsp
  00023	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  00028	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002d	f3 ab		 rep stosd
  0002f	0f b6 8c 24 58
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+344]
  00037	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  0003e	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1446 :     return _Invoker_ret<_Ret>::_Call(_Obj, _Fix_arg(_STD get<_Ix>(_Tpl), _STD move(_Ut))...);

  00043	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z ; std::move<std::tuple<int &&,int &&> &>
  0004f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00056	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR _Tpl$[rbp]
  0005d	e8 00 00 00 00	 call	 ??$get@$01PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$01@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z ; std::get<2,`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >
  00062	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  00069	48 8b 95 c0 00
	00 00		 mov	 rdx, QWORD PTR tv75[rbp]
  00070	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR tv73[rbp]
  00077	e8 00 00 00 00	 call	 ??$_Fix_arg@U?$_Ph@$01@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$01@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ; std::_Fix_arg<std::_Ph<2>,std::tuple<int &&,int &&> >
  0007c	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv139[rbp], rax
  00083	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  0008a	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z ; std::move<std::tuple<int &&,int &&> &>
  0008f	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  00096	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR _Tpl$[rbp]
  0009d	e8 00 00 00 00	 call	 ??$get@$00PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z ; std::get<1,`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >
  000a2	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  000a9	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv87[rbp]
  000b0	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR tv85[rbp]
  000b7	e8 00 00 00 00	 call	 ??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$00@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ; std::_Fix_arg<std::_Ph<1>,std::tuple<int &&,int &&> >
  000bc	48 89 85 e8 00
	00 00		 mov	 QWORD PTR tv137[rbp], rax
  000c3	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  000ca	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z ; std::move<std::tuple<int &&,int &&> &>
  000cf	48 89 85 f0 00
	00 00		 mov	 QWORD PTR tv131[rbp], rax
  000d6	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR _Tpl$[rbp]
  000dd	e8 00 00 00 00	 call	 ??$get@$0A@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z ; std::get<0,`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >
  000e2	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv129[rbp], rax
  000e9	48 8b 95 f0 00
	00 00		 mov	 rdx, QWORD PTR tv131[rbp]
  000f0	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR tv129[rbp]
  000f7	e8 00 00 00 00	 call	 ??$_Fix_arg@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@V?$tuple@$$QEAH$$QEAH@std@@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ; std::_Fix_arg<`FuncAndBind::foo'::`2'::A *,std::tuple<int &&,int &&> >
  000fc	48 89 85 00 01
	00 00		 mov	 QWORD PTR tv135[rbp], rax
  00103	4c 8b 8d d0 00
	00 00		 mov	 r9, QWORD PTR tv139[rbp]
  0010a	4c 8b 85 e8 00
	00 00		 mov	 r8, QWORD PTR tv137[rbp]
  00111	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR tv135[rbp]
  00118	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  0011f	e8 00 00 00 00	 call	 ??$_Call@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z ; std::_Invoker_ret<std::_Unforced,0>::_Call<int (__cdecl `FuncAndBind::foo'::`2'::A::*&)(int,int),`FuncAndBind::foo'::`2'::A * &,int,int>

; 1447 : }

  00124	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  0012b	5f		 pop	 rdi
  0012c	5d		 pop	 rbp
  0012d	c3		 ret	 0
??$_Call_binder@U_Unforced@std@@$0A@$00$01P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@2@V?$tuple@$$QEAH$$QEAH@2@@std@@YAHU?$_Invoker_ret@U_Unforced@std@@$0A@@0@U?$integer_sequence@_K$0A@$00$01@0@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ENDP ; std::_Call_binder<std::_Unforced,0,1,2,int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >,std::tuple<int &&,int &&> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z
_TEXT	SEGMENT
tv84 = 192
tv82 = 200
tv80 = 208
tv78 = 216
<_Vals_0>$ = 256
<_Vals_1>$ = 264
<_Vals_2>$ = 272
<_Vals_3>$ = 280
??$_Call@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z PROC ; std::_Invoker_ret<std::_Unforced,0>::_Call<int (__cdecl `FuncAndBind::foo'::`2'::A::*&)(int,int),`FuncAndBind::foo'::`2'::A * &,int,int>, COMDAT

; 1605 :         -> decltype(_STD invoke(_STD forward<_Valtys>(_Vals)...)) { // INVOKE, unchanged

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1606 :         return _STD invoke(_STD forward<_Valtys>(_Vals)...);

  00045	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_3>$[rbp]
  0004c	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00051	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  00058	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_2>$[rbp]
  0005f	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00064	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  0006b	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_1>$[rbp]
  00072	e8 00 00 00 00	 call	 ??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z ; std::forward<`FuncAndBind::foo'::`2'::A * &>
  00077	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  0007e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_0>$[rbp]
  00085	e8 00 00 00 00	 call	 ??$forward@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z ; std::forward<int (__cdecl `FuncAndBind::foo'::`2'::A::*&)(int,int)>
  0008a	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  00091	4c 8b 8d c0 00
	00 00		 mov	 r9, QWORD PTR tv84[rbp]
  00098	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR tv82[rbp]
  0009f	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv80[rbp]
  000a6	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  000ad	e8 00 00 00 00	 call	 ??$invoke@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@std@@YAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@$$QEAH2@Z ; std::invoke<int (__cdecl `FuncAndBind::foo'::`2'::A::*&)(int,int),`FuncAndBind::foo'::`2'::A * &,int,int>

; 1607 :     }

  000b2	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b9	5f		 pop	 rdi
  000ba	5d		 pop	 rbp
  000bb	c3		 ret	 0
??$_Call@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@?$_Invoker_ret@U_Unforced@std@@$0A@@std@@SAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z ENDP ; std::_Invoker_ret<std::_Unforced,0>::_Call<int (__cdecl `FuncAndBind::foo'::`2'::A::*&)(int,int),`FuncAndBind::foo'::`2'::A * &,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$invoke@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@std@@YAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@$$QEAH2@Z
_TEXT	SEGMENT
tv84 = 192
tv82 = 200
tv80 = 208
tv78 = 216
_Obj$ = 256
<_Args_0>$ = 264
<_Args_1>$ = 272
<_Args_2>$ = 280
??$invoke@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@std@@YAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@$$QEAH2@Z PROC ; std::invoke<int (__cdecl `FuncAndBind::foo'::`2'::A::*&)(int,int),`FuncAndBind::foo'::`2'::A * &,int,int>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00045	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Args_2>$[rbp]
  0004c	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00051	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  00058	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0005f	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00064	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  0006b	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00072	e8 00 00 00 00	 call	 ??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z ; std::forward<`FuncAndBind::foo'::`2'::A * &>
  00077	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  0007e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00085	e8 00 00 00 00	 call	 ??$forward@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z ; std::forward<int (__cdecl `FuncAndBind::foo'::`2'::A::*&)(int,int)>
  0008a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008d	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  00094	4c 8b 8d c0 00
	00 00		 mov	 r9, QWORD PTR tv84[rbp]
  0009b	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR tv82[rbp]
  000a2	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv80[rbp]
  000a9	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  000b0	e8 00 00 00 00	 call	 ??$_Call@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@_Invoker_pmf_pointer@std@@SAHP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z ; std::_Invoker_pmf_pointer::_Call<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A * &,int,int>
  000b5	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000bc	5f		 pop	 rdi
  000bd	5d		 pop	 rbp
  000be	c3		 ret	 0
??$invoke@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@std@@YAHAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@$$QEAH2@Z ENDP ; std::invoke<int (__cdecl `FuncAndBind::foo'::`2'::A::*&)(int,int),`FuncAndBind::foo'::`2'::A * &,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@_Invoker_pmf_pointer@std@@SAHP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z
_TEXT	SEGMENT
tv79 = 192
tv81 = 200
tv77 = 208
tv75 = 212
_Pmf$ = 256
_Arg1$ = 264
<_Args2_0>$ = 272
<_Args2_1>$ = 280
??$_Call@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@_Invoker_pmf_pointer@std@@SAHP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z PROC ; std::_Invoker_pmf_pointer::_Call<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A * &,int,int>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00045	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Arg1$[rbp]
  0004c	e8 00 00 00 00	 call	 ??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z ; std::forward<`FuncAndBind::foo'::`2'::A * &>
  00051	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00054	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  0005b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Pmf$[rbp]
  00062	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00069	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Args2_1>$[rbp]
  00070	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00075	8b 00		 mov	 eax, DWORD PTR [rax]
  00077	89 85 d0 00 00
	00		 mov	 DWORD PTR tv77[rbp], eax
  0007d	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args2_0>$[rbp]
  00084	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00089	8b 00		 mov	 eax, DWORD PTR [rax]
  0008b	89 85 d4 00 00
	00		 mov	 DWORD PTR tv75[rbp], eax
  00091	44 8b 85 d0 00
	00 00		 mov	 r8d, DWORD PTR tv77[rbp]
  00098	8b 95 d4 00 00
	00		 mov	 edx, DWORD PTR tv75[rbp]
  0009e	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv79[rbp]
  000a5	ff 95 c8 00 00
	00		 call	 QWORD PTR tv81[rbp]
  000ab	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b2	5f		 pop	 rdi
  000b3	5d		 pop	 rbp
  000b4	c3		 ret	 0
??$_Call@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV1?1??23@AEAAXXZ@HH@_Invoker_pmf_pointer@std@@SAHP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAPEAV2?1??34@AEAAXXZ@$$QEAH2@Z ENDP ; std::_Invoker_pmf_pointer::_Call<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A * &,int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z PROC ; std::forward<`FuncAndBind::foo'::`2'::A * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z ENDP ; std::forward<`FuncAndBind::foo'::`2'::A * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z PROC ; std::forward<int (__cdecl `FuncAndBind::foo'::`2'::A::*&)(int,int)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z ENDP ; std::forward<int (__cdecl `FuncAndBind::foo'::`2'::A::*&)(int,int)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Fix_arg@U?$_Ph@$01@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$01@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
_TEXT	SEGMENT
_Tid$ = 224
_Ut$ = 232
??$_Fix_arg@U?$_Ph@$01@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$01@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z PROC ; std::_Fix_arg<std::_Ph<2>,std::tuple<int &&,int &&> >, COMDAT

; 1435 :     -> decltype(_Select_fixer<_Cv_TiD>::_Fix(_Tid, _STD move(_Ut))) { // translate an argument for bind

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1436 :     return _Select_fixer<_Cv_TiD>::_Fix(_Tid, _STD move(_Ut));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z ; std::move<std::tuple<int &&,int &&> &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Tid$[rbp]
  00051	e8 00 00 00 00	 call	 ??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$01@std@@$0A@$0A@$01@std@@SA$$QEAHAEAU?$_Ph@$01@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z ; std::_Select_fixer<std::_Ph<2>,0,0,2>::_Fix<std::tuple<int &&,int &&> >

; 1437 : }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??$_Fix_arg@U?$_Ph@$01@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$01@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ENDP ; std::_Fix_arg<std::_Ph<2>,std::tuple<int &&,int &&> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$01@std@@$0A@$0A@$01@std@@SA$$QEAHAEAU?$_Ph@$01@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z
_TEXT	SEGMENT
__formal$ = 224
_Ut$ = 232
??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$01@std@@$0A@$0A@$01@std@@SA$$QEAHAEAU?$_Ph@$01@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z PROC ; std::_Select_fixer<std::_Ph<2>,0,0,2>::_Fix<std::tuple<int &&,int &&> >, COMDAT

; 1428 :         -> decltype(_STD get<_Jx - 1>(_STD move(_Ut))) { // choose the Jth unbound argument (1-based indexing)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1429 :         return _STD get<_Jx - 1>(_STD move(_Ut));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z ; std::move<std::tuple<int &&,int &&> &>
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$get@$00$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ; std::get<1,int &&,int &&>

; 1430 :     }

  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$01@std@@$0A@$0A@$01@std@@SA$$QEAHAEAU?$_Ph@$01@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z ENDP ; std::_Select_fixer<std::_Ph<2>,0,0,2>::_Fix<std::tuple<int &&,int &&> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$00$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$00$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z PROC ; std::get<1,int &&,int &&>, COMDAT

; 661  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>&& get(tuple<_Types...>&& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 662  :     using _Ty    = tuple_element_t<_Index, tuple<_Types...>>;
; 663  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 664  :     return static_cast<_Ty&&>(static_cast<_Ttype&>(_Tuple)._Myfirst._Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tuple$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 665  : }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??$get@$00$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ENDP ; std::get<1,int &&,int &&>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$01PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$01@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$01PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$01@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z PROC ; std::get<2,`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tuple$[rbp]

; 652  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$get@$01PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$01@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z ENDP ; std::get<2,`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$00@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
_TEXT	SEGMENT
_Tid$ = 224
_Ut$ = 232
??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$00@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z PROC ; std::_Fix_arg<std::_Ph<1>,std::tuple<int &&,int &&> >, COMDAT

; 1435 :     -> decltype(_Select_fixer<_Cv_TiD>::_Fix(_Tid, _STD move(_Ut))) { // translate an argument for bind

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1436 :     return _Select_fixer<_Cv_TiD>::_Fix(_Tid, _STD move(_Ut));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z ; std::move<std::tuple<int &&,int &&> &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Tid$[rbp]
  00051	e8 00 00 00 00	 call	 ??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SA$$QEAHAEAU?$_Ph@$00@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z ; std::_Select_fixer<std::_Ph<1>,0,0,1>::_Fix<std::tuple<int &&,int &&> >

; 1437 : }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??$_Fix_arg@U?$_Ph@$00@std@@V?$tuple@$$QEAH$$QEAH@2@@std@@YA$$QEAHAEAU?$_Ph@$00@0@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ENDP ; std::_Fix_arg<std::_Ph<1>,std::tuple<int &&,int &&> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SA$$QEAHAEAU?$_Ph@$00@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z
_TEXT	SEGMENT
__formal$ = 224
_Ut$ = 232
??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SA$$QEAHAEAU?$_Ph@$00@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z PROC ; std::_Select_fixer<std::_Ph<1>,0,0,1>::_Fix<std::tuple<int &&,int &&> >, COMDAT

; 1428 :         -> decltype(_STD get<_Jx - 1>(_STD move(_Ut))) { // choose the Jth unbound argument (1-based indexing)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1429 :         return _STD get<_Jx - 1>(_STD move(_Ut));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z ; std::move<std::tuple<int &&,int &&> &>
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$get@$0A@$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ; std::get<0,int &&,int &&>

; 1430 :     }

  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@U?$_Ph@$00@std@@$0A@$0A@$00@std@@SA$$QEAHAEAU?$_Ph@$00@1@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z ENDP ; std::_Select_fixer<std::_Ph<1>,0,0,1>::_Fix<std::tuple<int &&,int &&> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$0A@$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$0A@$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z PROC ; std::get<0,int &&,int &&>, COMDAT

; 661  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>&& get(tuple<_Types...>&& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 662  :     using _Ty    = tuple_element_t<_Index, tuple<_Types...>>;
; 663  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 664  :     return static_cast<_Ty&&>(static_cast<_Ttype&>(_Tuple)._Myfirst._Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tuple$[rbp]
  0003e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 665  : }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$get@$0A@$$QEAH$$QEAH@std@@YA$$QEAH$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ENDP ; std::get<0,int &&,int &&>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$00PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$00PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z PROC ; std::get<1,`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tuple$[rbp]
  0003e	48 ff c0	 inc	 rax

; 652  : }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??$get@$00PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAU?$_Ph@$00@0@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z ENDP ; std::get<1,`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Fix_arg@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@V?$tuple@$$QEAH$$QEAH@std@@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z
_TEXT	SEGMENT
_Tid$ = 224
_Ut$ = 232
??$_Fix_arg@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@V?$tuple@$$QEAH$$QEAH@std@@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z PROC ; std::_Fix_arg<`FuncAndBind::foo'::`2'::A *,std::tuple<int &&,int &&> >, COMDAT

; 1435 :     -> decltype(_Select_fixer<_Cv_TiD>::_Fix(_Tid, _STD move(_Ut))) { // translate an argument for bind

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1436 :     return _Select_fixer<_Cv_TiD>::_Fix(_Tid, _STD move(_Ut));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ut$[rbp]
  00042	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z ; std::move<std::tuple<int &&,int &&> &>
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Tid$[rbp]
  00051	e8 00 00 00 00	 call	 ??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@$0A@$0A@$0A@@std@@SAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV2?1??34@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z ; std::_Select_fixer<`FuncAndBind::foo'::`2'::A *,0,0,0>::_Fix<std::tuple<int &&,int &&> >

; 1437 : }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??$_Fix_arg@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@V?$tuple@$$QEAH$$QEAH@std@@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@0@@Z ENDP ; std::_Fix_arg<`FuncAndBind::foo'::`2'::A *,std::tuple<int &&,int &&> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@$0A@$0A@$0A@@std@@SAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV2?1??34@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z
_TEXT	SEGMENT
_Tid$ = 224
__formal$ = 232
??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@$0A@$0A@$0A@@std@@SAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV2?1??34@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z PROC ; std::_Select_fixer<`FuncAndBind::foo'::`2'::A *,0,0,0>::_Fix<std::tuple<int &&,int &&> >, COMDAT

; 1417 :     static _Cv_TiD& _Fix(_Cv_TiD& _Tid, _Untuple&&) { // pass a bound argument as an lvalue (important!)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1418 :         return _Tid;

  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tid$[rbp]

; 1419 :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$_Fix@V?$tuple@$$QEAH$$QEAH@std@@@?$_Select_fixer@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@$0A@$0A@$0A@@std@@SAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV2?1??34@AEAAXXZ@$$QEAV?$tuple@$$QEAH$$QEAH@1@@Z ENDP ; std::_Select_fixer<`FuncAndBind::foo'::`2'::A *,0,0,0>::_Fix<std::tuple<int &&,int &&> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z PROC ; std::move<std::tuple<int &&,int &&> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAV?$tuple@$$QEAH$$QEAH@std@@@std@@YA$$QEAV?$tuple@$$QEAH$$QEAH@0@AEAV10@@Z ENDP ; std::move<std::tuple<int &&,int &&> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$0A@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$0A@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z PROC ; std::get<0,`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tuple$[rbp]
  0003e	48 83 c0 08	 add	 rax, 8

; 652  : }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$get@$0A@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@YAAEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@0@@Z ENDP ; std::get<0,`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$forward_as_tuple@HH@std@@YA?AV?$tuple@$$QEAH$$QEAH@0@$$QEAH0@Z
_TEXT	SEGMENT
tv75 = 192
tv73 = 200
__$ReturnUdt$ = 240
<_Args_0>$ = 248
<_Args_1>$ = 256
??$forward_as_tuple@HH@std@@YA?AV?$tuple@$$QEAH$$QEAH@0@$$QEAH0@Z PROC ; std::forward_as_tuple<int,int>, COMDAT

; 732  : _NODISCARD constexpr tuple<_Types&&...> forward_as_tuple(_Types&&... _Args) noexcept { // forward arguments in a tuple

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 733  :     return tuple<_Types&&...>(_STD forward<_Types>(_Args)...);

  00041	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  00048	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  0004d	90		 npad	 1
  0004e	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00055	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0005c	e8 00 00 00 00	 call	 ??$forward@H@std@@YA$$QEAHAEAH@Z ; std::forward<int>
  00061	90		 npad	 1
  00062	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  00069	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv75[rbp]
  00070	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv73[rbp]
  00077	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0007e	e8 00 00 00 00	 call	 ??$?0HH$0A@@?$tuple@$$QEAH$$QEAH@std@@QEAA@$$QEAH0@Z ; std::tuple<int &&,int &&>::tuple<int &&,int &&><int,int,0>
  00083	90		 npad	 1
  00084	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 734  : }

  0008b	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
??$forward_as_tuple@HH@std@@YA?AV?$tuple@$$QEAH$$QEAH@0@$$QEAH0@Z ENDP ; std::forward_as_tuple<int,int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@H@std@@YA$$QEAHAEAH@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@H@std@@YA$$QEAHAEAH@Z PROC			; std::forward<int>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@H@std@@YA$$QEAHAEAH@Z ENDP			; std::forward<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAA@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
$T4 = 292
$T5 = 324
tv129 = 344
tv95 = 352
tv92 = 360
tv89 = 368
tv86 = 376
this$ = 416
_Func$ = 424
<_Args_0>$ = 432
<_Args_1>$ = 440
<_Args_2>$ = 448
??0?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAA@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z PROC ; std::_Binder<std::_Unforced,int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>::_Binder<std::_Unforced,int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>, COMDAT

; 1476 :     explicit _Binder(_Fx&& _Func, _Types&&... _Args)

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec b8 01
	00 00		 sub	 rsp, 440		; 000001b8H
  0001d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 6e 00 00 00	 mov	 ecx, 110		; 0000006eH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 d8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+472]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1477 :         : _Mypair(_One_then_variadic_args_t(), _STD forward<_Fx>(_Func),

  00045	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 89 85 58 01
	00 00		 mov	 QWORD PTR tv129[rbp], rax
  00053	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR <_Args_2>$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z ; std::forward<std::_Ph<2> const &>
  0005f	48 89 85 60 01
	00 00		 mov	 QWORD PTR tv95[rbp], rax
  00066	48 8b 8d b8 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0006d	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
  00072	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv92[rbp], rax
  00079	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00080	e8 00 00 00 00	 call	 ??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z ; std::forward<`FuncAndBind::foo'::`2'::A *>
  00085	48 89 85 70 01
	00 00		 mov	 QWORD PTR tv89[rbp], rax
  0008c	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Func$[rbp]
  00093	e8 00 00 00 00	 call	 ??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z ; std::forward<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int)>
  00098	48 89 85 78 01
	00 00		 mov	 QWORD PTR tv86[rbp], rax
  0009f	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  000a6	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  000ac	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  000b3	88 85 04 01 00
	00		 mov	 BYTE PTR $T3[rbp], al
  000b9	0f b6 85 04 01
	00 00		 movzx	 eax, BYTE PTR $T3[rbp]
  000c0	88 85 24 01 00
	00		 mov	 BYTE PTR $T4[rbp], al
  000c6	0f b6 85 24 01
	00 00		 movzx	 eax, BYTE PTR $T4[rbp]
  000cd	88 85 44 01 00
	00		 mov	 BYTE PTR $T5[rbp], al
  000d3	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR tv95[rbp]
  000da	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000df	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR tv92[rbp]
  000e6	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000eb	4c 8b 8d 70 01
	00 00		 mov	 r9, QWORD PTR tv89[rbp]
  000f2	4c 8b 85 78 01
	00 00		 mov	 r8, QWORD PTR tv86[rbp]
  000f9	0f b6 95 44 01
	00 00		 movzx	 edx, BYTE PTR $T5[rbp]
  00100	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR tv129[rbp]
  00107	e8 00 00 00 00	 call	 ??$?0P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV0?1??12@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@4@@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z ; std::_Compressed_pair<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >,0>::_Compressed_pair<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >,0><int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>

; 1478 :             _STD forward<_Types>(_Args)...) { // construct from forwarded callable object and arguments
; 1479 :     }

  0010c	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00113	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  0011a	5f		 pop	 rdi
  0011b	5d		 pop	 rbp
  0011c	c3		 ret	 0
??0?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAA@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z ENDP ; std::_Binder<std::_Unforced,int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>::_Binder<std::_Unforced,int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZXZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZXZ PROC ; std::_Compressed_pair<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >,0>::_Get_first, COMDAT

; 1443 :     _Ty1& _Get_first() noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1444 :         return _Myval1;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1445 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZV?$tuple@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@U?$_Ph@$00@std@@U?$_Ph@$01@5@@std@@$0A@@std@@QEAAAEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZXZ ENDP ; std::_Compressed_pair<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),std::tuple<`FuncAndBind::foo'::`2'::A *,std::_Ph<1>,std::_Ph<2> >,0>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$bind@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV1?1??23@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@5@@std@@YA?AV?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@0@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@0@AEBU?$_Ph@$01@0@@Z
_TEXT	SEGMENT
tv85 = 192
tv83 = 200
tv81 = 208
tv79 = 216
__$ReturnUdt$ = 256
_Func$ = 264
<_Args_0>$ = 272
<_Args_1>$ = 280
<_Args_2>$ = 288
??$bind@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV1?1??23@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@5@@std@@YA?AV?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@0@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@0@AEBU?$_Ph@$01@0@@Z PROC ; std::bind<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>, COMDAT

; 1498 :     _Fx&& _Func, _Types&&... _Args) { // bind a callable object with an implicit return type

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0001d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1499 :     return _Binder<_Unforced, _Fx, _Types...>(_STD forward<_Fx>(_Func), _STD forward<_Types>(_Args)...);

  00045	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR <_Args_2>$[rbp]
  0004c	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$01@std@@@std@@YAAEBU?$_Ph@$01@0@AEBU10@@Z ; std::forward<std::_Ph<2> const &>
  00051	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  00058	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0005f	e8 00 00 00 00	 call	 ??$forward@AEBU?$_Ph@$00@std@@@std@@YAAEBU?$_Ph@$00@0@AEBU10@@Z ; std::forward<std::_Ph<1> const &>
  00064	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  0006b	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00072	e8 00 00 00 00	 call	 ??$forward@PEAVA@?1??foo@FuncAndBind@@AEAAXXZ@@std@@YA$$QEAPEAVA@?1??foo@FuncAndBind@@AEAAXXZ@AEAPEAV1?1??23@AEAAXXZ@@Z ; std::forward<`FuncAndBind::foo'::`2'::A *>
  00077	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  0007e	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Func$[rbp]
  00085	e8 00 00 00 00	 call	 ??$forward@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z@std@@YA$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZAEAP81?1??23@AEAAXXZ@EAAHHH@Z@Z ; std::forward<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int)>
  0008a	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00091	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv85[rbp]
  00098	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0009d	4c 8b 8d c8 00
	00 00		 mov	 r9, QWORD PTR tv83[rbp]
  000a4	4c 8b 85 d0 00
	00 00		 mov	 r8, QWORD PTR tv81[rbp]
  000ab	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv79[rbp]
  000b2	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000b9	e8 00 00 00 00	 call	 ??0?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAA@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@1@AEBU?$_Ph@$01@1@@Z ; std::_Binder<std::_Unforced,int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>::_Binder<std::_Unforced,int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>
  000be	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1500 : }

  000c5	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
??$bind@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV1?1??23@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@5@@std@@YA?AV?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@0@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@0@AEBU?$_Ph@$01@0@@Z ENDP ; std::bind<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\FuncAndBind.cpp
;	COMDAT ?foo@A@?1??0FuncAndBind@@AEAAXXZ@QEAAHHH@Z
_TEXT	SEGMENT
this$ = 224
x$ = 232
y$ = 240
?foo@A@?1??0FuncAndBind@@AEAAXXZ@QEAAHHH@Z PROC		; `FuncAndBind::foo'::`2'::A::foo, COMDAT

; 18   : 		int foo(int x, int y) {

  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1BF7C1A3_FuncAndBind@cpp
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 19   : 			return x + y;

  0003f	8b 85 f0 00 00
	00		 mov	 eax, DWORD PTR y$[rbp]
  00045	8b 8d e8 00 00
	00		 mov	 ecx, DWORD PTR x$[rbp]
  0004b	03 c8		 add	 ecx, eax
  0004d	8b c1		 mov	 eax, ecx

; 20   : 		}

  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?foo@A@?1??0FuncAndBind@@AEAAXXZ@QEAAHHH@Z ENDP		; `FuncAndBind::foo'::`2'::A::foo
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  00039	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00040	5f		 pop	 rdi
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1425 :         return *this;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1426 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :         return *this;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1422 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4198 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 4199 :         return _Mypair._Get_first();

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
  00046	90		 npad	 1

; 4200 :     }

  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4194 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 4195 :         return _Mypair._Get_first();

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
  00046	90		 npad	 1

; 4196 :     }

  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 4180 :     [[noreturn]] static void _Xlen() { // report a length_error

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4181 :         _Xlength_error("string too long");

  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  00031	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 4182 :     }

  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 8
_Al$2 = 40
$T3 = 260
this$ = 320
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4164 :     void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 4165 :         _Mypair._Myval2._Orphan_all();

  00037	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  00046	90		 npad	 1

; 4166 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00047	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 8b c8	 mov	 rcx, rax
  00051	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00056	90		 npad	 1
  00057	0f b6 c0	 movzx	 eax, al
  0005a	85 c0		 test	 eax, eax
  0005c	74 53		 je	 SHORT $LN2@Tidy_deall

; 4167 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  0005e	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00065	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00069	48 89 45 08	 mov	 QWORD PTR _Ptr$1[rbp], rax

; 4168 :             auto& _Al          = _Getal();

  0006d	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00074	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00079	90		 npad	 1
  0007a	48 89 45 28	 mov	 QWORD PTR _Al$2[rbp], rax

; 4169 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  0007e	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00085	48 83 c0 08	 add	 rax, 8
  00089	48 8b c8	 mov	 rcx, rax
  0008c	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>
  00091	90		 npad	 1

; 4170 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00092	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00099	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0009d	48 ff c0	 inc	 rax
  000a0	4c 8b c0	 mov	 r8, rax
  000a3	48 8b 55 08	 mov	 rdx, QWORD PTR _Ptr$1[rbp]
  000a7	48 8b 4d 28	 mov	 rcx, QWORD PTR _Al$2[rbp]
  000ab	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
  000b0	90		 npad	 1
$LN2@Tidy_deall:

; 4171 :         }
; 4172 : 
; 4173 :         _Mypair._Myval2._Mysize = 0;

  000b1	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b8	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4174 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000c0	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c7	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4175 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4176 :         // write can alias this
; 4177 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000cf	c6 85 04 01 00
	00 00		 mov	 BYTE PTR $T3[rbp], 0
  000d6	b8 01 00 00 00	 mov	 eax, 1
  000db	48 6b c0 00	 imul	 rax, rax, 0
  000df	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e6	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000eb	48 8d 95 04 01
	00 00		 lea	 rdx, QWORD PTR $T3[rbp]
  000f2	48 8b c8	 mov	 rcx, rax
  000f5	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
  000fa	90		 npad	 1

; 4178 :     }

  000fb	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  00102	5f		 pop	 rdi
  00103	5d		 pop	 rbp
  00104	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
$T1 = 196
this$ = 256
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4156 :     void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 4157 :         _Mypair._Myval2._Mysize = 0;

  00037	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4158 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00046	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4159 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4160 :         // write can alias this
; 4161 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00055	c6 85 c4 00 00
	00 00		 mov	 BYTE PTR $T1[rbp], 0
  0005c	b8 01 00 00 00	 mov	 eax, 1
  00061	48 6b c0 00	 imul	 rax, rax, 0
  00065	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006c	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  00071	48 8d 95 c4 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00078	48 8b c8	 mov	 rcx, rax
  0007b	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
  00080	90		 npad	 1

; 4162 :     }

  00081	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00088	5f		 pop	 rdi
  00089	5d		 pop	 rbp
  0008a	c3		 ret	 0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
tv76 = 192
tv74 = 200
this$ = 240
_Requested$ = 248
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4077 :     _NODISCARD size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 4078 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  0003c	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00043	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00048	90		 npad	 1
  00049	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  00050	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0005b	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv74[rbp], rax
  00062	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv76[rbp]
  00069	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv74[rbp]
  00070	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Requested$[rbp]
  00077	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  0007c	90		 npad	 1

; 4079 :     }

  0007d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00084	5f		 pop	 rdi
  00085	5d		 pop	 rbp
  00086	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 8
$T4 = 232
__$ArrayPad$ = 248
_Requested$ = 288
_Old$ = 296
_Max$ = 304
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4064 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c5	 xor	 rax, rbp
  0003e	48 89 85 f8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00045	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  0004c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00051	90		 npad	 1

; 4065 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00052	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR _Requested$[rbp]
  00059	48 83 c8 0f	 or	 rax, 15
  0005d	48 89 45 08	 mov	 QWORD PTR _Masked$[rbp], rax

; 4066 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00061	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR _Max$[rbp]
  00068	48 39 45 08	 cmp	 QWORD PTR _Masked$[rbp], rax
  0006c	76 09		 jbe	 SHORT $LN2@Calculate_

; 4067 :             return _Max;

  0006e	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR _Max$[rbp]
  00075	eb 69		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4068 :         }
; 4069 : 
; 4070 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00077	33 d2		 xor	 edx, edx
  00079	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Old$[rbp]
  00080	b9 02 00 00 00	 mov	 ecx, 2
  00085	48 f7 f1	 div	 rcx
  00088	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _Max$[rbp]
  0008f	48 2b c8	 sub	 rcx, rax
  00092	48 8b c1	 mov	 rax, rcx
  00095	48 39 85 28 01
	00 00		 cmp	 QWORD PTR _Old$[rbp], rax
  0009c	76 09		 jbe	 SHORT $LN3@Calculate_

; 4071 :             return _Max;

  0009e	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR _Max$[rbp]
  000a5	eb 39		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4072 :         }
; 4073 : 
; 4074 :         return _Max_value(_Masked, _Old + _Old / 2);

  000a7	33 d2		 xor	 edx, edx
  000a9	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Old$[rbp]
  000b0	b9 02 00 00 00	 mov	 ecx, 2
  000b5	48 f7 f1	 div	 rcx
  000b8	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Old$[rbp]
  000bf	48 03 c8	 add	 rcx, rax
  000c2	48 8b c1	 mov	 rax, rcx
  000c5	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000cc	48 8d 95 e8 00
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  000d3	48 8d 4d 08	 lea	 rcx, QWORD PTR _Masked$[rbp]
  000d7	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  000dc	90		 npad	 1
  000dd	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4075 :     }

  000e0	48 8b f8	 mov	 rdi, rax
  000e3	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000e7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData
  000ee	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f3	90		 npad	 1
  000f4	48 8b c7	 mov	 rax, rdi
  000f7	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000fe	48 33 cd	 xor	 rcx, rbp
  00101	e8 00 00 00 00	 call	 __security_check_cookie
  00106	90		 npad	 1
  00107	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0010e	5f		 pop	 rdi
  0010f	5d		 pop	 rbp
  00110	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHAEBV12@@Z
_TEXT	SEGMENT
tv90 = 192
tv88 = 200
tv86 = 208
tv84 = 216
this$ = 256
_Right$ = 264
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare, COMDAT

; 3986 :     _NODISCARD int compare(const basic_string& _Right) const noexcept { // compare [0, size()) with _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 3987 :         return _Traits_compare<_Traits>(_Mypair._Myval2._Myptr(), _Mypair._Myval2._Mysize,

  0003c	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00043	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00047	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv90[rbp], rax
  0004e	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00055	48 8b c8	 mov	 rcx, rax
  00058	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0005d	90		 npad	 1
  0005e	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  00065	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00070	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv86[rbp], rax
  00077	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007e	48 8b c8	 mov	 rcx, rax
  00081	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00086	90		 npad	 1
  00087	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  0008e	4c 8b 8d c0 00
	00 00		 mov	 r9, QWORD PTR tv90[rbp]
  00095	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR tv88[rbp]
  0009c	48 8b 95 d0 00
	00 00		 mov	 rdx, QWORD PTR tv86[rbp]
  000a3	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv84[rbp]
  000aa	e8 00 00 00 00	 call	 ??$_Traits_compare@U?$char_traits@D@std@@@std@@YAHQEBD_K01@Z ; std::_Traits_compare<std::char_traits<char> >
  000af	90		 npad	 1

; 3988 :             _Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);
; 3989 :     }

  000b0	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b7	5f		 pop	 rdi
  000b8	5d		 pop	 rbp
  000b9	c3		 ret	 0
?compare@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAHAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 8
_Storage_max$ = 40
$T4 = 264
$T5 = 296
$T6 = 328
__$ArrayPad$ = 344
this$ = 384
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3570 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 58 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 3571 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  00048	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00054	90		 npad	 1
  00055	48 8b c8	 mov	 rcx, rax
  00058	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  0005d	90		 npad	 1
  0005e	48 89 45 08	 mov	 QWORD PTR _Alloc_max$[rbp], rax

; 3572 :         const size_type _Storage_max = // can always store small string

  00062	48 c7 85 08 01
	00 00 10 00 00
	00		 mov	 QWORD PTR $T4[rbp], 16
  0006d	48 8d 95 08 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00074	48 8d 4d 08	 lea	 rcx, QWORD PTR _Alloc_max$[rbp]
  00078	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0007d	90		 npad	 1
  0007e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00081	48 89 45 28	 mov	 QWORD PTR _Storage_max$[rbp], rax

; 3573 :             _Max_value(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3574 :         return _Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00085	48 8b 45 28	 mov	 rax, QWORD PTR _Storage_max$[rbp]
  00089	48 ff c8	 dec	 rax
  0008c	48 89 85 28 01
	00 00		 mov	 QWORD PTR $T5[rbp], rax
  00093	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00098	90		 npad	 1
  00099	48 89 85 48 01
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  000a0	48 8d 95 28 01
	00 00		 lea	 rdx, QWORD PTR $T5[rbp]
  000a7	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  000ae	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  000b3	90		 npad	 1
  000b4	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3575 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3576 :         );
; 3577 :     }

  000b7	48 8b f8	 mov	 rdi, rax
  000ba	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData
  000c5	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000ca	90		 npad	 1
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000d5	48 33 cd	 xor	 rcx, rbp
  000d8	e8 00 00 00 00	 call	 __security_check_cookie
  000dd	90		 npad	 1
  000de	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  000e5	5f		 pop	 rdi
  000e6	5d		 pop	 rbp
  000e7	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2860 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2861 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00042	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  0004f	4c 8b c0	 mov	 r8, rax
  00052	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00059	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2862 :     }

  00065	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 8
$T2 = 228
$T3 = 260
this$ = 320
_Ptr$ = 328
_Count$ = 336
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2841 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2842 :         // assign [_Ptr, _Ptr + _Count)
; 2843 :         if (_Count <= _Mypair._Myval2._Myres) {

  00040	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0004b	48 39 85 50 01
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00052	77 6c		 ja	 SHORT $LN2@assign

; 2844 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00054	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00063	48 89 45 08	 mov	 QWORD PTR _Old_ptr$1[rbp], rax

; 2845 :             _Mypair._Myval2._Mysize = _Count;

  00067	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006e	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00075	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2846 :             _Traits::move(_Old_ptr, _Ptr, _Count);

  00079	4c 8b 85 50 01
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  00080	48 8b 95 48 01
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00087	48 8b 4d 08	 mov	 rcx, QWORD PTR _Old_ptr$1[rbp]
  0008b	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2847 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00090	c6 85 e4 00 00
	00 00		 mov	 BYTE PTR $T2[rbp], 0
  00097	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  0009e	48 8b 4d 08	 mov	 rcx, QWORD PTR _Old_ptr$1[rbp]
  000a2	48 03 c8	 add	 rcx, rax
  000a5	48 8b c1	 mov	 rax, rcx
  000a8	48 8d 95 e4 00
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  000af	48 8b c8	 mov	 rcx, rax
  000b2	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2848 :             return *this;

  000b7	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000be	eb 22		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 2849 :         }
; 2850 : 
; 2851 :         return _Reallocate_for(

  000c0	4c 8b 8d 48 01
	00 00		 mov	 r9, QWORD PTR _Ptr$[rbp]
  000c7	44 0f b6 85 04
	01 00 00	 movzx	 r8d, BYTE PTR $T3[rbp]
  000cf	48 8b 95 50 01
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  000d6	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000dd	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
$LN1@assign:

; 2852 :             _Count,
; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 2856 :             },
; 2857 :             _Ptr);
; 2858 :     }

  000e2	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  000e9	5f		 pop	 rdi
  000ea	5d		 pop	 rbp
  000eb	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S11$ = 36
_To_delete$ = 72
__$ArrayPad$ = 280
this$ = 320
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2597 :     ~basic_string() noexcept { // destroy the string

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 18 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 2598 :         _Tidy_deallocate();

  00048	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004f	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
  00054	90		 npad	 1

; 2599 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2600 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00055	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00061	90		 npad	 1
  00062	48 8b d0	 mov	 rdx, rax
  00065	48 8d 4d 24	 lea	 rcx, QWORD PTR $S11$[rbp]
  00069	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0006e	90		 npad	 1
  0006f	48 8d 45 24	 lea	 rax, QWORD PTR $S11$[rbp]
  00073	48 89 45 08	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 2601 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  00077	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00081	48 89 45 48	 mov	 QWORD PTR _To_delete$[rbp], rax

; 2602 :         _Mypair._Myval2._Myproxy = nullptr;

  00085	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008c	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2603 :         _Delete_plain_internal(_Alproxy, _To_delete);

  00093	48 8b 55 48	 mov	 rdx, QWORD PTR _To_delete$[rbp]
  00097	48 8b 4d 08	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  0009b	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  000a0	90		 npad	 1

; 2604 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2605 :     }

  000a1	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a8	48 8b c8	 mov	 rcx, rax
  000ab	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  000b0	90		 npad	 1
  000b1	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000b5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData
  000bc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000c1	90		 npad	 1
  000c2	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000c9	48 33 cd	 xor	 rcx, rbp
  000cc	e8 00 00 00 00	 call	 __security_check_cookie
  000d1	90		 npad	 1
  000d2	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  000d9	5f		 pop	 rdi
  000da	5d		 pop	 rbp
  000db	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_Alproxy$ = 8
$S13$ = 36
_Proxy$ = 72
$T5 = 308
tv69 = 328
__$ArrayPad$ = 336
this$ = 384
_Ptr$ = 392
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2297 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t()) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 50 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004c	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  0005a	0f b6 95 34 01
	00 00		 movzx	 edx, BYTE PTR $T5[rbp]
  00061	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv69[rbp]
  00068	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  0006d	90		 npad	 1

; 2298 :         // construct from [_Ptr, <null>)
; 2299 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0006e	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00075	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0007a	48 8b d0	 mov	 rdx, rax
  0007d	48 8d 4d 24	 lea	 rcx, QWORD PTR $S13$[rbp]
  00081	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00086	48 8d 45 24	 lea	 rax, QWORD PTR $S13$[rbp]
  0008a	48 89 45 08	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 2300 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  0008e	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00095	4c 8b c0	 mov	 r8, rax
  00098	48 8b 55 08	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  0009c	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000a0	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000a5	90		 npad	 1

; 2301 :         _Tidy_init();

  000a6	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000ad	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2302 :         assign(_Ptr);

  000b2	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  000b9	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000c0	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2303 :         _Proxy._Release();

  000c5	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000c9	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000ce	90		 npad	 1

; 2304 :     }

  000cf	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000d3	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000d8	90		 npad	 1
  000d9	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e0	48 8b f8	 mov	 rdi, rax
  000e3	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000e7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData
  000ee	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f3	48 8b c7	 mov	 rax, rdi
  000f6	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000fd	48 33 cd	 xor	 rcx, rbp
  00100	e8 00 00 00 00	 call	 __security_check_cookie
  00105	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  0010c	5f		 pop	 rdi
  0010d	5d		 pop	 rbp
  0010e	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S13$ = 36
_Proxy$ = 72
$T5 = 308
tv69 = 328
__$ArrayPad$ = 336
this$ = 384
_Ptr$ = 392
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S13$ = 36
_Proxy$ = 72
$T5 = 308
tv69 = 328
__$ArrayPad$ = 336
this$ = 384
_Ptr$ = 392
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S13$ = 36
_Proxy$ = 72
$T5 = 308
tv69 = 328
__$ArrayPad$ = 336
this$ = 384
_Ptr$ = 392
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S13$ = 36
_Proxy$ = 72
$T5 = 308
tv69 = 328
__$ArrayPad$ = 336
this$ = 384
_Ptr$ = 392
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00031	48 83 c0 08	 add	 rax, 8
  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0003d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00044	5f		 pop	 rdi
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2148 :         ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003e	5f		 pop	 rdi
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2146 :         _Bxty() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00044	5f		 pop	 rdi
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 192
this$ = 240
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2120 :     bool _Large_string_engaged() const { // returns whether the large string mode (allocated memory) is engaged

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2121 :         return _BUF_SIZE <= _Myres;

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 78 20 10	 cmp	 QWORD PTR [rax+32], 16
  00042	72 0c		 jb	 SHORT $LN3@Large_stri
  00044	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv66[rbp], 1
  0004e	eb 0a		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  00050	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv66[rbp], 0
$LN4@Large_stri:
  0005a	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv66[rbp]

; 2122 :     }

  00061	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00068	5f		 pop	 rdi
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 8
this$ = 256
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2111 :     const value_type* _Myptr() const { // determine current pointer to buffer for immutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2112 :         const value_type* _Result = _Bx._Buf;

  00036	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 89 45 08	 mov	 QWORD PTR _Result$[rbp], rax

; 2113 :         if (_Large_string_engaged()) {

  00045	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004c	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00051	0f b6 c0	 movzx	 eax, al
  00054	85 c0		 test	 eax, eax
  00056	74 14		 je	 SHORT $LN2@Myptr

; 2114 :             _Result = _Unfancy(_Bx._Ptr);

  00058	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00063	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00068	48 89 45 08	 mov	 QWORD PTR _Result$[rbp], rax
$LN2@Myptr:

; 2115 :         }
; 2116 : 
; 2117 :         return _Result;

  0006c	48 8b 45 08	 mov	 rax, QWORD PTR _Result$[rbp]

; 2118 :     }

  00070	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00077	5f		 pop	 rdi
  00078	5d		 pop	 rbp
  00079	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 8
this$ = 256
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2102 :     value_type* _Myptr() { // determine current pointer to buffer for mutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2103 :         value_type* _Result = _Bx._Buf;

  00036	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 89 45 08	 mov	 QWORD PTR _Result$[rbp], rax

; 2104 :         if (_Large_string_engaged()) {

  00045	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004c	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00051	0f b6 c0	 movzx	 eax, al
  00054	85 c0		 test	 eax, eax
  00056	74 14		 je	 SHORT $LN2@Myptr

; 2105 :             _Result = _Unfancy(_Bx._Ptr);

  00058	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00063	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00068	48 89 45 08	 mov	 QWORD PTR _Result$[rbp], rax
$LN2@Myptr:

; 2106 :         }
; 2107 : 
; 2108 :         return _Result;

  0006c	48 8b 45 08	 mov	 rax, QWORD PTR _Result$[rbp]

; 2109 :     }

  00070	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00077	5f		 pop	 rdi
  00078	5d		 pop	 rbp
  00079	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2092 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 83 c0 08	 add	 rax, 8
  0004d	48 8b c8	 mov	 rcx, rax
  00050	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
  00055	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005c	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00064	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
  00073	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00081	5f		 pop	 rdi
  00082	5d		 pop	 rbp
  00083	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 224
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00037	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 768  :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 200
tv65 = 216
_Left$ = 256
_Right$ = 264
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__18CBD245_utility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 26   :     return _Right < _Left ? _Right : _Left;

  0003c	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00043	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00050	73 10		 jae	 SHORT $LN3@Min_value
  00052	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00059	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv65[rbp], rax
  00060	eb 0e		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00062	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00069	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv65[rbp], rax
$LN4@Min_value:
  00070	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv65[rbp]
  00077	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0007e	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR $T1[rbp]

; 27   : }

  00085	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008c	5f		 pop	 rdi
  0008d	5d		 pop	 rbp
  0008e	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT

; 410  :     _NODISCARD static constexpr int_type eof() noexcept { // return end-of-file metacharacter

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	90		 npad	 1

; 411  :         return static_cast<int_type>(EOF);

  0002b	b8 ff ff ff ff	 mov	 eax, -1

; 412  :     }

  00030	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 192
_Left$ = 240
_Right$ = 248
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT

; 401  :     _NODISCARD static constexpr bool eq_int_type(const int_type& _Left, const int_type& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 402  :         // test for metacharacter equality
; 403  :         return _Left == _Right;

  0003c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00043	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004a	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0004c	39 08		 cmp	 DWORD PTR [rax], ecx
  0004e	75 0c		 jne	 SHORT $LN3@eq_int_typ
  00050	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv65[rbp], 1
  0005a	eb 0a		 jmp	 SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
  0005c	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv65[rbp], 0
$LN4@eq_int_typ:
  00066	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv65[rbp]

; 404  :     }

  0006d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 224
_Right$ = 232
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 377  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept { // assign an element

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 378  :         _Left = _Right;

  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00043	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004a	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  0004d	88 08		 mov	 BYTE PTR [rax], cl

; 379  :     }

  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 224
_First2$ = 232
_Count$ = 240
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::move, COMDAT

; 366  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 367  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 368  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00041	4c 8b 85 f0 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  00048	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _First2$[rbp]
  0004f	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _First1$[rbp]
  00056	e8 00 00 00 00	 call	 memmove
  0005b	90		 npad	 1

; 369  :     }

  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 224
_First2$ = 232
_Count$ = 240
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::copy, COMDAT

; 331  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 332  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 333  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00041	4c 8b 85 f0 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  00048	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _First2$[rbp]
  0004f	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _First1$[rbp]
  00056	e8 00 00 00 00	 call	 memcpy
  0005b	90		 npad	 1

; 334  :     }

  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
tv68 = 192
tv69 = 200
_First$ = 240
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 310  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept { // strengthened

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 311  :         // find length of null-terminated string
; 312  : #if _HAS_CXX17
; 313  : #if _HAS_CHAR8_T
; 314  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 315  : #if _HAS_U8_INTRINSICS
; 316  :             return __builtin_u8strlen(_First);
; 317  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 318  :             return _Char_traits<_Elem, _Int_type>::length(_First);
; 319  : #endif // _HAS_U8_INTRINSICS
; 320  :         } else
; 321  : #endif // _HAS_CHAR8_T
; 322  :         {
; 323  :             return __builtin_strlen(_First);

  00037	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  0003e	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv68[rbp], rax
  00045	48 c7 85 c8 00
	00 00 ff ff ff
	ff		 mov	 QWORD PTR tv69[rbp], -1
$LL3@length:
  00050	48 ff 85 c8 00
	00 00		 inc	 QWORD PTR tv69[rbp]
  00057	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv68[rbp]
  0005e	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR tv69[rbp]
  00065	80 3c 08 00	 cmp	 BYTE PTR [rax+rcx], 0
  00069	75 e5		 jne	 SHORT $LL3@length
  0006b	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR tv69[rbp]

; 324  :         }
; 325  : #else // _HAS_CXX17
; 326  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));
; 327  : #endif // _HAS_CXX17
; 328  :     }

  00072	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00079	5f		 pop	 rdi
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z
_TEXT	SEGMENT
_First1$ = 224
_First2$ = 232
_Count$ = 240
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z PROC ; std::_Narrow_char_traits<char,int>::compare, COMDAT

; 294  :         _In_reads_(_Count) const _Elem* const _First2, const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 295  :         // compare [_First1, _First1 + _Count) with [_First2, ...)
; 296  : #if _HAS_CXX17
; 297  : #if _HAS_U8_INTRINSICS
; 298  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 299  :             return __builtin_u8memcmp(_First1, _First2, _Count);
; 300  :         } else
; 301  : #endif // _HAS_U8_INTRINSICS
; 302  :         {
; 303  :             return __builtin_memcmp(_First1, _First2, _Count);

  00041	4c 8b 85 f0 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  00048	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _First2$[rbp]
  0004f	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _First1$[rbp]
  00056	e8 00 00 00 00	 call	 memcmp
  0005b	90		 npad	 1

; 304  :         }
; 305  : #else // _HAS_CXX17
; 306  :         return _CSTD memcmp(_First1, _First2, _Count);
; 307  : #endif // _HAS_CXX17
; 308  :     }

  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
?compare@?$_Narrow_char_traits@DH@std@@SAHQEBD0_K@Z ENDP ; std::_Narrow_char_traits<char,int>::compare
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00042	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YA_K_K@Z ; std::_Get_size_of_n<1>
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00040	48 8b 95 f0 00
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  00047	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0004e	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  00053	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005a	5f		 pop	 rdi
  0005b	5d		 pop	 rbp
  0005c	c3		 ret	 0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??0?$tuple@$$V@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??0?$tuple@$$V@std@@QEAA@AEBV01@@Z PROC			; std::tuple<>::tuple<>, COMDAT

; 204  :     constexpr tuple(const tuple&) noexcept {} // strengthened, TRANSITION, for binary compatibility

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??0?$tuple@$$V@std@@QEAA@AEBV01@@Z ENDP			; std::tuple<>::tuple<>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1349 :         _Ptr = nullptr;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1350 :     }

  00045	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004c	5f		 pop	 rdi
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 200
tv78 = 216
_Obj$ = 256
<_Args_0>$ = 264
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00043	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  00048	90		 npad	 1
  00049	48 8b d0	 mov	 rdx, rax
  0004c	b9 10 00 00 00	 mov	 ecx, 16
  00051	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00056	90		 npad	 1
  00057	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0005e	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  0006a	90		 npad	 1
  0006b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006e	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  00075	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv78[rbp]
  0007c	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00083	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
  00088	90		 npad	 1

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00089	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00090	5f		 pop	 rdi
  00091	5d		 pop	 rbp
  00092	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 4
_Pnext$5 = 40
__$ArrayPad$ = 248
this$ = 288
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 f8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  00048	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 6d		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00055	ba 03 00 00 00	 mov	 edx, 3
  0005a	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00064	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  00065	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006f	48 83 c0 08	 add	 rax, 8
  00073	48 89 45 28	 mov	 QWORD PTR _Pnext$5[rbp], rax
  00077	eb 12		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  00079	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$5[rbp]
  0007d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00080	48 8b 4d 28	 mov	 rcx, QWORD PTR _Pnext$5[rbp]
  00084	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00088	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  0008b	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$5[rbp]
  0008f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00093	74 10		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  00095	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$5[rbp]
  00099	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009c	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  000a3	eb d4		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  000a5	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ac	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000af	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  000b7	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  000c2	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000c6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000cd	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d2	90		 npad	 1
  000d3	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000da	48 33 cd	 xor	 rcx, rbp
  000dd	e8 00 00 00 00	 call	 __security_check_cookie
  000e2	90		 npad	 1
  000e3	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000ea	5f		 pop	 rdi
  000eb	5d		 pop	 rbp
  000ec	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 224
_Mycont_$ = 232
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Mycont_$[rbp]
  0004a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0004d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0005c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00063	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006a	5f		 pop	 rdi
  0006b	5d		 pop	 rbp
  0006c	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 224
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 1073 : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1074 :     // convert size_t to size_t, unchanged
; 1075 :     return _Len;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Len$[rbp]

; 1076 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 8
_Ptr_container$ = 40
_Min_back_shift$ = 72
_Back_shift$ = 104
_Ptr$ = 352
_Bytes$ = 360
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  0003b	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR _Bytes$[rbp]
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00049	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00050	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00053	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 89 45 08	 mov	 QWORD PTR _Ptr_user$[rbp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00061	b8 08 00 00 00	 mov	 eax, 8
  00066	48 6b c0 ff	 imul	 rax, rax, -1
  0006a	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptr_user$[rbp]
  0006e	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00072	48 89 45 28	 mov	 QWORD PTR _Ptr_container$[rbp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  00076	b8 08 00 00 00	 mov	 eax, 8
  0007b	48 6b c0 fe	 imul	 rax, rax, -2
  0007f	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptr_user$[rbp]
  00083	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  0008d	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00091	75 02		 jne	 SHORT $LN14@Adjust_man
  00093	eb 77		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  00095	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  0009b	83 c0 09	 add	 eax, 9
  0009e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  000a5	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  000aa	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000b1	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000b6	45 33 c9	 xor	 r9d, r9d
  000b9	44 8b c0	 mov	 r8d, eax
  000bc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000c3	b9 02 00 00 00	 mov	 ecx, 2
  000c8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ce	83 f8 01	 cmp	 eax, 1
  000d1	75 03		 jne	 SHORT $LN19@Adjust_man
  000d3	cc		 int	 3
  000d4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000d6	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  000dc	83 c0 09	 add	 eax, 9
  000df	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000e8	44 8b c8	 mov	 r9d, eax
  000eb	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000f2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000f9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  00100	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00106	33 c0		 xor	 eax, eax
  00108	85 c0		 test	 eax, eax
  0010a	75 89		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  0010c	33 c0		 xor	 eax, eax
  0010e	85 c0		 test	 eax, eax
  00110	0f 85 60 ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  00116	48 c7 45 48 10
	00 00 00	 mov	 QWORD PTR _Min_back_shift$[rbp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0011e	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  00125	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ptr_container$[rbp]
  00129	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0012c	48 2b c1	 sub	 rax, rcx
  0012f	48 89 45 68	 mov	 QWORD PTR _Back_shift$[rbp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00133	48 83 7d 68 10	 cmp	 QWORD PTR _Back_shift$[rbp], 16
  00138	72 09		 jb	 SHORT $LN16@Adjust_man
  0013a	48 83 7d 68 2f	 cmp	 QWORD PTR _Back_shift$[rbp], 47 ; 0000002fH
  0013f	77 02		 ja	 SHORT $LN16@Adjust_man
  00141	eb 77		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00143	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  00149	83 c0 13	 add	 eax, 19
  0014c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00153	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00158	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0015f	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00164	45 33 c9	 xor	 r9d, r9d
  00167	44 8b c0	 mov	 r8d, eax
  0016a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00171	b9 02 00 00 00	 mov	 ecx, 2
  00176	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0017c	83 f8 01	 cmp	 eax, 1
  0017f	75 03		 jne	 SHORT $LN20@Adjust_man
  00181	cc		 int	 3
  00182	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  00184	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  0018a	83 c0 13	 add	 eax, 19
  0018d	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00196	44 8b c8	 mov	 r9d, eax
  00199	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  001a0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  001a7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  001ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  001b4	33 c0		 xor	 eax, eax
  001b6	85 c0		 test	 eax, eax
  001b8	75 89		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  001ba	33 c0		 xor	 eax, eax
  001bc	85 c0		 test	 eax, eax
  001be	0f 85 6f ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  001c4	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  001cb	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ptr_container$[rbp]
  001cf	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001d2	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  001d9	5f		 pop	 rdi
  001da	5d		 pop	 rbp
  001db	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 47   :         return ::operator new(_Bytes);

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Bytes$[rbp]
  0003d	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 200
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A47A247F_exception
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 324  :     _THROW(bad_array_new_length{});

  0002a	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00031	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  0003d	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00044	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00049	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  00050	5f		 pop	 rdi
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx
  00053	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 137  :         : bad_alloc("bad array new length")

  00037	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  0003e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00045	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0004a	90		 npad	 1

; 138  :     {

  0004b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  00059	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0005c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00063	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006a	5f		 pop	 rdi
  0006b	5d		 pop	 rbp
  0006c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx
  00053	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 126  :         : exception(_Message, 1)

  0003c	41 b8 01 00 00
	00		 mov	 r8d, 1
  00042	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Message$[rbp]
  00049	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00050	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00055	90		 npad	 1

; 127  :     {

  00056	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00064	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00067	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00075	5f		 pop	 rdi
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 192
this$ = 240
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00042	74 14		 je	 SHORT $LN3@what
  00044	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00056	eb 0e		 jmp	 SHORT $LN4@what
$LN3@what:
  00058	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0005f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
$LN4@what:
  00066	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv69[rbp]

; 93   :     }

  0006d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  00048	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 83 c0 08	 add	 rax, 8
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 __std_exception_destroy
  0005b	90		 npad	 1

; 88   :     }

  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0004a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  0004d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	48 83 c0 08	 add	 rax, 8
  00058	48 8b f8	 mov	 rdi, rax
  0005b	33 c0		 xor	 eax, eax
  0005d	b9 10 00 00 00	 mov	 ecx, 16
  00062	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00064	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 83 c0 08	 add	 rax, 8
  0006f	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Other$[rbp]
  00076	48 83 c1 08	 add	 rcx, 8
  0007a	48 8b d0	 mov	 rdx, rax
  0007d	e8 00 00 00 00	 call	 __std_exception_copy
  00082	90		 npad	 1

; 71   :     }

  00083	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00091	5f		 pop	 rdi
  00092	5d		 pop	 rbp
  00093	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
__formal$ = 240
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1
  00041	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0004f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  00052	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00059	48 83 c0 08	 add	 rax, 8
  0005d	48 8b f8	 mov	 rdi, rax
  00060	33 c0		 xor	 eax, eax
  00062	b9 10 00 00 00	 mov	 ecx, 16
  00067	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00069	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00070	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Message$[rbp]
  00077	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  0007b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00082	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00089	5f		 pop	 rdi
  0008a	5d		 pop	 rbp
  0008b	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__289D9ECD_limits
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	90		 npad	 1

; 645  :         return LLONG_MAX;

  0002b	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  00035	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003c	5f		 pop	 rdi
  0003d	5d		 pop	 rbp
  0003e	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 224
_Where$ = 232
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7F8AB566_vcruntime_new@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 169  :         (void)_Size;
; 170  :         return _Where;

  0003c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Where$[rbp]

; 171  :     }

  00043	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\FuncAndBind.cpp
;	COMDAT ?foo@FuncAndBind@@AEAAXXZ
_TEXT	SEGMENT
a$ = 4
fr$ = 40
list$ = 88
$S1$ = 136
count$ = 200
a1$ = 228
b1$ = 260
a2$ = 292
b2$ = 324
fr2$ = 360
count2$ = 408
$T8 = 1016
$T9 = 1048
$T10 = 1076
$T11 = 1108
$T12 = 1176
$T13 = 1208
$T14 = 1236
$T15 = 1268
$T16 = 1300
$T17 = 1332
$T18 = 1364
$T19 = 1396
$T20 = 1432
$T21 = 1496
$T22 = 1560
$T23 = 1624
$T24 = 1684
$T25 = 1716
$T26 = 1748
$T27 = 1780
$T28 = 1812
$T29 = 1844
$T30 = 1876
$T31 = 1912
$T32 = 1960
tv77 = 1972
tv287 = 1976
tv279 = 1976
tv260 = 1976
tv237 = 1976
tv225 = 1976
tv197 = 1976
tv148 = 1976
tv140 = 1976
tv82 = 1976
tv296 = 1984
tv292 = 1984
tv277 = 1984
tv258 = 1984
tv242 = 1984
tv230 = 1984
tv153 = 1984
tv138 = 1984
tv275 = 1992
tv217 = 1992
tv136 = 1992
tv298 = 2000
tv215 = 2008
__$ArrayPad$ = 2016
this$ = 2064
?foo@FuncAndBind@@AEAAXXZ PROC				; FuncAndBind::foo, COMDAT

; 15   : {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 08
	00 00		 sub	 rsp, 2088		; 00000828H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 0a 02 00 00	 mov	 ecx, 522		; 0000020aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	08 00 00	 mov	 rcx, QWORD PTR [rsp+2120]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 e0 07
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1BF7C1A3_FuncAndBind@cpp
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 16   : 	class A {
; 17   : 	public:
; 18   : 		int foo(int x, int y) {
; 19   : 			return x + y;
; 20   : 		}
; 21   : 	};
; 22   : 	A a;
; 23   : 	auto fr = std::bind(&A::foo, &a, std::placeholders::_1, std::placeholders::_2);

  00047	48 8d 45 04	 lea	 rax, QWORD PTR a$[rbp]
  0004b	48 89 85 f8 03
	00 00		 mov	 QWORD PTR $T8[rbp], rax
  00052	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?foo@A@?1??0FuncAndBind@@AEAAXXZ@QEAAHHH@Z ; `FuncAndBind::foo'::`2'::A::foo
  00059	48 89 85 18 04
	00 00		 mov	 QWORD PTR $T9[rbp], rax
  00060	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_2@placeholders@std@@3U?$_Ph@$01@2@B ; std::placeholders::_2
  00067	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006c	4c 8d 0d 00 00
	00 00		 lea	 r9, OFFSET FLAT:?_1@placeholders@std@@3U?$_Ph@$00@2@B ; std::placeholders::_1
  00073	4c 8d 85 f8 03
	00 00		 lea	 r8, QWORD PTR $T8[rbp]
  0007a	48 8d 95 18 04
	00 00		 lea	 rdx, QWORD PTR $T9[rbp]
  00081	48 8d 4d 28	 lea	 rcx, QWORD PTR fr$[rbp]
  00085	e8 00 00 00 00	 call	 ??$bind@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV1?1??23@AEAAXXZ@AEBU?$_Ph@$00@std@@AEBU?$_Ph@$01@5@@std@@YA?AV?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@0@$$QEAP8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@Z$$QEAPEAV2?1??34@AEAAXXZ@AEBU?$_Ph@$00@0@AEBU?$_Ph@$01@0@@Z ; std::bind<int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>

; 24   : 	std::cout << fr(1, 2) << std::endl;

  0008a	c7 85 34 04 00
	00 02 00 00 00	 mov	 DWORD PTR $T10[rbp], 2
  00094	c7 85 54 04 00
	00 01 00 00 00	 mov	 DWORD PTR $T11[rbp], 1
  0009e	4c 8d 85 34 04
	00 00		 lea	 r8, QWORD PTR $T10[rbp]
  000a5	48 8d 95 54 04
	00 00		 lea	 rdx, QWORD PTR $T11[rbp]
  000ac	48 8d 4d 28	 lea	 rcx, QWORD PTR fr$[rbp]
  000b0	e8 00 00 00 00	 call	 ??$?RHH@?$_Binder@U_Unforced@std@@P8A@?1??foo@FuncAndBind@@AEAAXXZ@EAAHHH@ZPEAV3?1??45@AEAAXXZ@AEBU?$_Ph@$00@2@AEBU?$_Ph@$01@2@@std@@QEAAH$$QEAH0@Z ; std::_Binder<std::_Unforced,int (__cdecl `FuncAndBind::foo'::`2'::A::*)(int,int),`FuncAndBind::foo'::`2'::A *,std::_Ph<1> const &,std::_Ph<2> const &>::operator()<int,int>
  000b5	89 85 b4 07 00
	00		 mov	 DWORD PTR tv77[rbp], eax
  000bb	8b 95 b4 07 00
	00		 mov	 edx, DWORD PTR tv77[rbp]
  000c1	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  000c8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
  000ce	48 89 85 b8 07
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  000d5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  000dc	48 8b 8d b8 07
	00 00		 mov	 rcx, QWORD PTR tv82[rbp]
  000e3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 25   : 
; 26   : 	std::less<int>();
; 27   : 	std::initializer_list<int> list{ 1,2,3,4,5,6,7 };

  000e9	ba 10 00 00 00	 mov	 edx, 16
  000ee	48 8d 4d 58	 lea	 rcx, QWORD PTR list$[rbp]
  000f2	e8 00 00 00 00	 call	 ?__autoclassinit2@?$initializer_list@H@std@@QEAAX_K@Z
  000f7	c7 85 88 00 00
	00 01 00 00 00	 mov	 DWORD PTR $S1$[rbp], 1
  00101	c7 85 8c 00 00
	00 02 00 00 00	 mov	 DWORD PTR $S1$[rbp+4], 2
  0010b	c7 85 90 00 00
	00 03 00 00 00	 mov	 DWORD PTR $S1$[rbp+8], 3
  00115	c7 85 94 00 00
	00 04 00 00 00	 mov	 DWORD PTR $S1$[rbp+12], 4
  0011f	c7 85 98 00 00
	00 05 00 00 00	 mov	 DWORD PTR $S1$[rbp+16], 5
  00129	c7 85 9c 00 00
	00 06 00 00 00	 mov	 DWORD PTR $S1$[rbp+20], 6
  00133	c7 85 a0 00 00
	00 07 00 00 00	 mov	 DWORD PTR $S1$[rbp+24], 7
  0013d	48 8d 85 a4 00
	00 00		 lea	 rax, QWORD PTR $S1$[rbp+28]
  00144	4c 8b c0	 mov	 r8, rax
  00147	48 8d 95 88 00
	00 00		 lea	 rdx, QWORD PTR $S1$[rbp]
  0014e	48 8d 4d 58	 lea	 rcx, QWORD PTR list$[rbp]
  00152	e8 00 00 00 00	 call	 ??0?$initializer_list@H@std@@QEAA@PEBH0@Z ; std::initializer_list<int>::initializer_list<int>

; 28   : 	//std::vector<int> list{ 1,2,3,4,5,6,7 };
; 29   : 	auto count = std::count_if(list.begin(), list.end(), std::bind(std::less<int>(), std::placeholders::_1, 5));

  00157	48 8d 85 98 04
	00 00		 lea	 rax, QWORD PTR $T12[rbp]
  0015e	48 89 85 b8 04
	00 00		 mov	 QWORD PTR $T13[rbp], rax
  00165	c7 85 d4 04 00
	00 05 00 00 00	 mov	 DWORD PTR $T14[rbp], 5
  0016f	4c 8d 8d d4 04
	00 00		 lea	 r9, QWORD PTR $T14[rbp]
  00176	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:?_1@placeholders@std@@3U?$_Ph@$00@2@B ; std::placeholders::_1
  0017d	48 8d 95 f4 04
	00 00		 lea	 rdx, QWORD PTR $T15[rbp]
  00184	48 8b 8d b8 04
	00 00		 mov	 rcx, QWORD PTR $T13[rbp]
  0018b	e8 00 00 00 00	 call	 ??$bind@U?$less@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$less@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z ; std::bind<std::less<int>,std::_Ph<1> const &,int>
  00190	48 89 85 b8 07
	00 00		 mov	 QWORD PTR tv140[rbp], rax
  00197	48 8d 4d 58	 lea	 rcx, QWORD PTR list$[rbp]
  0019b	e8 00 00 00 00	 call	 ?end@?$initializer_list@H@std@@QEBAPEBHXZ ; std::initializer_list<int>::end
  001a0	48 89 85 c0 07
	00 00		 mov	 QWORD PTR tv138[rbp], rax
  001a7	48 8d 4d 58	 lea	 rcx, QWORD PTR list$[rbp]
  001ab	e8 00 00 00 00	 call	 ?begin@?$initializer_list@H@std@@QEBAPEBHXZ ; std::initializer_list<int>::begin
  001b0	48 89 85 c8 07
	00 00		 mov	 QWORD PTR tv136[rbp], rax
  001b7	4c 8b 85 b8 07
	00 00		 mov	 r8, QWORD PTR tv140[rbp]
  001be	48 8b 95 c0 07
	00 00		 mov	 rdx, QWORD PTR tv138[rbp]
  001c5	48 8b 8d c8 07
	00 00		 mov	 rcx, QWORD PTR tv136[rbp]
  001cc	e8 00 00 00 00	 call	 ??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@@Z ; std::count_if<int const *,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int> >
  001d1	48 89 85 c8 00
	00 00		 mov	 QWORD PTR count$[rbp], rax

; 30   : 	std::cout << "1 count:= " << count << std::endl;

  001d8	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@PILJELGE@1?5count?3?$DN?5@
  001df	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  001e6	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  001eb	48 89 85 b8 07
	00 00		 mov	 QWORD PTR tv148[rbp], rax
  001f2	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR count$[rbp]
  001f9	48 8b 8d b8 07
	00 00		 mov	 rcx, QWORD PTR tv148[rbp]
  00200	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z
  00206	48 89 85 c0 07
	00 00		 mov	 QWORD PTR tv153[rbp], rax
  0020d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  00214	48 8b 8d c0 07
	00 00		 mov	 rcx, QWORD PTR tv153[rbp]
  0021b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 31   : 
; 32   : 	auto a1 = std::less<int>()(1, 2);

  00221	c7 85 34 05 00
	00 02 00 00 00	 mov	 DWORD PTR $T17[rbp], 2
  0022b	c7 85 54 05 00
	00 01 00 00 00	 mov	 DWORD PTR $T18[rbp], 1
  00235	4c 8d 85 34 05
	00 00		 lea	 r8, QWORD PTR $T17[rbp]
  0023c	48 8d 95 54 05
	00 00		 lea	 rdx, QWORD PTR $T18[rbp]
  00243	48 8d 8d 14 05
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  0024a	e8 00 00 00 00	 call	 ??R?$less@H@std@@QEBA_NAEBH0@Z ; std::less<int>::operator()
  0024f	88 85 e4 00 00
	00		 mov	 BYTE PTR a1$[rbp], al

; 33   : 	auto b1 = 1 < 2;

  00255	c6 85 04 01 00
	00 01		 mov	 BYTE PTR b1$[rbp], 1

; 34   : 	auto a2 = std::less<const std::string>()("xxxx", "yyyy");

  0025c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04HOPFPECK@yyyy@
  00263	48 8d 8d 98 05
	00 00		 lea	 rcx, QWORD PTR $T20[rbp]
  0026a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0026f	90		 npad	 1
  00270	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_04ODPAOBIJ@xxxx@
  00277	48 8d 8d d8 05
	00 00		 lea	 rcx, QWORD PTR $T21[rbp]
  0027e	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00283	90		 npad	 1
  00284	4c 8d 85 98 05
	00 00		 lea	 r8, QWORD PTR $T20[rbp]
  0028b	48 8d 95 d8 05
	00 00		 lea	 rdx, QWORD PTR $T21[rbp]
  00292	48 8d 8d 74 05
	00 00		 lea	 rcx, QWORD PTR $T19[rbp]
  00299	e8 00 00 00 00	 call	 ??R?$less@$$CBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@std@@QEBA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@0@Z ; std::less<std::basic_string<char,std::char_traits<char>,std::allocator<char> > const >::operator()
  0029e	88 85 24 01 00
	00		 mov	 BYTE PTR a2$[rbp], al
  002a4	48 8d 8d d8 05
	00 00		 lea	 rcx, QWORD PTR $T21[rbp]
  002ab	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  002b0	90		 npad	 1
  002b1	48 8d 8d 98 05
	00 00		 lea	 rcx, QWORD PTR $T20[rbp]
  002b8	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 35   : 	auto b2 = (std::string("xxxxyyyyy") < std::string("yyyy00000"));

  002bd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09COJLMHPP@yyyy00000@
  002c4	48 8d 8d 18 06
	00 00		 lea	 rcx, QWORD PTR $T22[rbp]
  002cb	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  002d0	48 89 85 b8 07
	00 00		 mov	 QWORD PTR tv197[rbp], rax
  002d7	48 8b 85 b8 07
	00 00		 mov	 rax, QWORD PTR tv197[rbp]
  002de	48 89 85 c0 07
	00 00		 mov	 QWORD PTR tv296[rbp], rax
  002e5	48 8b 85 c0 07
	00 00		 mov	 rax, QWORD PTR tv296[rbp]
  002ec	48 89 85 c8 07
	00 00		 mov	 QWORD PTR tv217[rbp], rax
  002f3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_09HJKHIHIA@xxxxyyyyy@
  002fa	48 8d 8d 58 06
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  00301	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00306	48 89 85 d0 07
	00 00		 mov	 QWORD PTR tv298[rbp], rax
  0030d	48 8b 85 d0 07
	00 00		 mov	 rax, QWORD PTR tv298[rbp]
  00314	48 89 85 d8 07
	00 00		 mov	 QWORD PTR tv215[rbp], rax
  0031b	48 8b 95 c8 07
	00 00		 mov	 rdx, QWORD PTR tv217[rbp]
  00322	48 8b 8d d8 07
	00 00		 mov	 rcx, QWORD PTR tv215[rbp]
  00329	e8 00 00 00 00	 call	 ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z ; std::operator<<char,std::char_traits<char>,std::allocator<char> >
  0032e	88 85 44 01 00
	00		 mov	 BYTE PTR b2$[rbp], al
  00334	48 8d 8d 58 06
	00 00		 lea	 rcx, QWORD PTR $T23[rbp]
  0033b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00340	90		 npad	 1
  00341	48 8d 8d 18 06
	00 00		 lea	 rcx, QWORD PTR $T22[rbp]
  00348	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 36   : 	std::cout << "a2 := " << a2 << std::endl;

  0034d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06OBIAKENG@a2?5?3?$DN?5@
  00354	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0035b	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00360	48 89 85 b8 07
	00 00		 mov	 QWORD PTR tv225[rbp], rax
  00367	0f b6 95 24 01
	00 00		 movzx	 edx, BYTE PTR a2$[rbp]
  0036e	48 8b 8d b8 07
	00 00		 mov	 rcx, QWORD PTR tv225[rbp]
  00375	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_N@Z
  0037b	48 89 85 c0 07
	00 00		 mov	 QWORD PTR tv230[rbp], rax
  00382	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  00389	48 8b 8d c0 07
	00 00		 mov	 rcx, QWORD PTR tv230[rbp]
  00390	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 37   : 	std::cout << "b2 := " << b2 << std::endl;

  00396	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06NAGILOEL@b2?5?3?$DN?5@
  0039d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  003a4	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  003a9	48 89 85 b8 07
	00 00		 mov	 QWORD PTR tv237[rbp], rax
  003b0	0f b6 95 44 01
	00 00		 movzx	 edx, BYTE PTR b2$[rbp]
  003b7	48 8b 8d b8 07
	00 00		 mov	 rcx, QWORD PTR tv237[rbp]
  003be	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_N@Z
  003c4	48 89 85 c0 07
	00 00		 mov	 QWORD PTR tv242[rbp], rax
  003cb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  003d2	48 8b 8d c0 07
	00 00		 mov	 rcx, QWORD PTR tv242[rbp]
  003d9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 38   : 	auto fr2 = std::bind(std::logical_and<bool>(),

  003df	c7 85 94 06 00
	00 03 00 00 00	 mov	 DWORD PTR $T24[rbp], 3
  003e9	4c 8d 8d 94 06
	00 00		 lea	 r9, QWORD PTR $T24[rbp]
  003f0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:?_1@placeholders@std@@3U?$_Ph@$00@2@B ; std::placeholders::_1
  003f7	48 8d 95 b4 06
	00 00		 lea	 rdx, QWORD PTR $T25[rbp]
  003fe	48 8d 8d d4 06
	00 00		 lea	 rcx, QWORD PTR $T26[rbp]
  00405	e8 00 00 00 00	 call	 ??$bind@U?$greater@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$greater@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z ; std::bind<std::greater<int>,std::_Ph<1> const &,int>
  0040a	48 89 85 b8 07
	00 00		 mov	 QWORD PTR tv260[rbp], rax
  00411	c7 85 f4 06 00
	00 03 00 00 00	 mov	 DWORD PTR $T27[rbp], 3
  0041b	4c 8d 8d f4 06
	00 00		 lea	 r9, QWORD PTR $T27[rbp]
  00422	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:?_1@placeholders@std@@3U?$_Ph@$00@2@B ; std::placeholders::_1
  00429	48 8d 95 14 07
	00 00		 lea	 rdx, QWORD PTR $T28[rbp]
  00430	48 8d 8d 34 07
	00 00		 lea	 rcx, QWORD PTR $T29[rbp]
  00437	e8 00 00 00 00	 call	 ??$bind@U?$less@H@std@@AEBU?$_Ph@$00@2@H@std@@YA?AV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAU?$less@H@0@AEBU?$_Ph@$00@0@$$QEAH@Z ; std::bind<std::less<int>,std::_Ph<1> const &,int>
  0043c	48 89 85 c0 07
	00 00		 mov	 QWORD PTR tv258[rbp], rax
  00443	4c 8b 8d b8 07
	00 00		 mov	 r9, QWORD PTR tv260[rbp]
  0044a	4c 8b 85 c0 07
	00 00		 mov	 r8, QWORD PTR tv258[rbp]
  00451	48 8d 95 54 07
	00 00		 lea	 rdx, QWORD PTR $T30[rbp]
  00458	48 8d 8d 68 01
	00 00		 lea	 rcx, QWORD PTR fr2$[rbp]
  0045f	e8 00 00 00 00	 call	 ??$bind@U?$logical_and@_N@std@@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@YA?AV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@$$QEAU?$logical_and@_N@0@$$QEAV?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@0@$$QEAV?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@0@@Z ; std::bind<std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> >

; 39   : 		std::bind(std::less<int>(), std::placeholders::_1, 3),
; 40   : 		std::bind(std::greater<int>(), std::placeholders::_1, 3));
; 41   : 	auto count2 = std::count_if(list.begin(), list.end(), fr2);

  00464	48 8d 85 78 07
	00 00		 lea	 rax, QWORD PTR $T31[rbp]
  0046b	48 89 85 a8 07
	00 00		 mov	 QWORD PTR $T32[rbp], rax
  00472	48 8d 95 68 01
	00 00		 lea	 rdx, QWORD PTR fr2$[rbp]
  00479	48 8b 8d a8 07
	00 00		 mov	 rcx, QWORD PTR $T32[rbp]
  00480	e8 00 00 00 00	 call	 ??0?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@QEAA@AEBV01@@Z
  00485	48 89 85 b8 07
	00 00		 mov	 QWORD PTR tv279[rbp], rax
  0048c	48 8d 4d 58	 lea	 rcx, QWORD PTR list$[rbp]
  00490	e8 00 00 00 00	 call	 ?end@?$initializer_list@H@std@@QEBAPEBHXZ ; std::initializer_list<int>::end
  00495	48 89 85 c0 07
	00 00		 mov	 QWORD PTR tv277[rbp], rax
  0049c	48 8d 4d 58	 lea	 rcx, QWORD PTR list$[rbp]
  004a0	e8 00 00 00 00	 call	 ?begin@?$initializer_list@H@std@@QEBAPEBHXZ ; std::initializer_list<int>::begin
  004a5	48 89 85 c8 07
	00 00		 mov	 QWORD PTR tv275[rbp], rax
  004ac	4c 8b 85 b8 07
	00 00		 mov	 r8, QWORD PTR tv279[rbp]
  004b3	48 8b 95 c0 07
	00 00		 mov	 rdx, QWORD PTR tv277[rbp]
  004ba	48 8b 8d c8 07
	00 00		 mov	 rcx, QWORD PTR tv275[rbp]
  004c1	e8 00 00 00 00	 call	 ??$count_if@PEBHV?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@std@@@std@@YA_JPEBH0V?$_Binder@U_Unforced@std@@U?$logical_and@_N@2@V?$_Binder@U_Unforced@std@@U?$less@H@2@AEBU?$_Ph@$00@2@H@2@V?$_Binder@U_Unforced@std@@U?$greater@H@2@AEBU?$_Ph@$00@2@H@2@@0@@Z ; std::count_if<int const *,std::_Binder<std::_Unforced,std::logical_and<bool>,std::_Binder<std::_Unforced,std::less<int>,std::_Ph<1> const &,int>,std::_Binder<std::_Unforced,std::greater<int>,std::_Ph<1> const &,int> > >
  004c6	48 89 85 98 01
	00 00		 mov	 QWORD PTR count2$[rbp], rax

; 42   : 	std::cout << "2 count:= " << count2 << std::endl;

  004cd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@GBFLCNGF@2?5count?3?$DN?5@
  004d4	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  004db	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  004e0	48 89 85 b8 07
	00 00		 mov	 QWORD PTR tv287[rbp], rax
  004e7	48 8b 95 98 01
	00 00		 mov	 rdx, QWORD PTR count2$[rbp]
  004ee	48 8b 8d b8 07
	00 00		 mov	 rcx, QWORD PTR tv287[rbp]
  004f5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z
  004fb	48 89 85 c0 07
	00 00		 mov	 QWORD PTR tv292[rbp], rax
  00502	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  00509	48 8b 8d c0 07
	00 00		 mov	 rcx, QWORD PTR tv292[rbp]
  00510	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 43   : }

  00516	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  0051a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?foo@FuncAndBind@@AEAAXXZ$rtcFrameData
  00521	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00526	48 8b 8d e0 07
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0052d	48 33 cd	 xor	 rcx, rbp
  00530	e8 00 00 00 00	 call	 __security_check_cookie
  00535	48 8d a5 f8 07
	00 00		 lea	 rsp, QWORD PTR [rbp+2040]
  0053c	5f		 pop	 rdi
  0053d	5d		 pop	 rbp
  0053e	c3		 ret	 0
?foo@FuncAndBind@@AEAAXXZ ENDP				; FuncAndBind::foo
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
a$ = 4
fr$ = 40
list$ = 88
$S1$ = 136
count$ = 200
a1$ = 228
b1$ = 260
a2$ = 292
b2$ = 324
fr2$ = 360
count2$ = 408
$T8 = 1016
$T9 = 1048
$T10 = 1076
$T11 = 1108
$T12 = 1176
$T13 = 1208
$T14 = 1236
$T15 = 1268
$T16 = 1300
$T17 = 1332
$T18 = 1364
$T19 = 1396
$T20 = 1432
$T21 = 1496
$T22 = 1560
$T23 = 1624
$T24 = 1684
$T25 = 1716
$T26 = 1748
$T27 = 1780
$T28 = 1812
$T29 = 1844
$T30 = 1876
$T31 = 1912
$T32 = 1960
tv77 = 1972
tv287 = 1976
tv279 = 1976
tv260 = 1976
tv237 = 1976
tv225 = 1976
tv197 = 1976
tv148 = 1976
tv140 = 1976
tv82 = 1976
tv296 = 1984
tv292 = 1984
tv277 = 1984
tv258 = 1984
tv242 = 1984
tv230 = 1984
tv153 = 1984
tv138 = 1984
tv275 = 1992
tv217 = 1992
tv136 = 1992
tv298 = 2000
tv215 = 2008
__$ArrayPad$ = 2016
this$ = 2064
?dtor$0@?0??foo@FuncAndBind@@AEAAXXZ@4HA PROC		; `FuncAndBind::foo'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 98 05
	00 00		 lea	 rcx, QWORD PTR $T20[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0??foo@FuncAndBind@@AEAAXXZ@4HA ENDP		; `FuncAndBind::foo'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
a$ = 4
fr$ = 40
list$ = 88
$S1$ = 136
count$ = 200
a1$ = 228
b1$ = 260
a2$ = 292
b2$ = 324
fr2$ = 360
count2$ = 408
$T8 = 1016
$T9 = 1048
$T10 = 1076
$T11 = 1108
$T12 = 1176
$T13 = 1208
$T14 = 1236
$T15 = 1268
$T16 = 1300
$T17 = 1332
$T18 = 1364
$T19 = 1396
$T20 = 1432
$T21 = 1496
$T22 = 1560
$T23 = 1624
$T24 = 1684
$T25 = 1716
$T26 = 1748
$T27 = 1780
$T28 = 1812
$T29 = 1844
$T30 = 1876
$T31 = 1912
$T32 = 1960
tv77 = 1972
tv287 = 1976
tv279 = 1976
tv260 = 1976
tv237 = 1976
tv225 = 1976
tv197 = 1976
tv148 = 1976
tv140 = 1976
tv82 = 1976
tv296 = 1984
tv292 = 1984
tv277 = 1984
tv258 = 1984
tv242 = 1984
tv230 = 1984
tv153 = 1984
tv138 = 1984
tv275 = 1992
tv217 = 1992
tv136 = 1992
tv298 = 2000
tv215 = 2008
__$ArrayPad$ = 2016
this$ = 2064
?dtor$1@?0??foo@FuncAndBind@@AEAAXXZ@4HA PROC		; `FuncAndBind::foo'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d d8 05
	00 00		 lea	 rcx, QWORD PTR $T21[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0??foo@FuncAndBind@@AEAAXXZ@4HA ENDP		; `FuncAndBind::foo'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
a$ = 4
fr$ = 40
list$ = 88
$S1$ = 136
count$ = 200
a1$ = 228
b1$ = 260
a2$ = 292
b2$ = 324
fr2$ = 360
count2$ = 408
$T8 = 1016
$T9 = 1048
$T10 = 1076
$T11 = 1108
$T12 = 1176
$T13 = 1208
$T14 = 1236
$T15 = 1268
$T16 = 1300
$T17 = 1332
$T18 = 1364
$T19 = 1396
$T20 = 1432
$T21 = 1496
$T22 = 1560
$T23 = 1624
$T24 = 1684
$T25 = 1716
$T26 = 1748
$T27 = 1780
$T28 = 1812
$T29 = 1844
$T30 = 1876
$T31 = 1912
$T32 = 1960
tv77 = 1972
tv287 = 1976
tv279 = 1976
tv260 = 1976
tv237 = 1976
tv225 = 1976
tv197 = 1976
tv148 = 1976
tv140 = 1976
tv82 = 1976
tv296 = 1984
tv292 = 1984
tv277 = 1984
tv258 = 1984
tv242 = 1984
tv230 = 1984
tv153 = 1984
tv138 = 1984
tv275 = 1992
tv217 = 1992
tv136 = 1992
tv298 = 2000
tv215 = 2008
__$ArrayPad$ = 2016
this$ = 2064
?dtor$2@?0??foo@FuncAndBind@@AEAAXXZ@4HA PROC		; `FuncAndBind::foo'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 18 06
	00 00		 lea	 rcx, QWORD PTR $T22[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0??foo@FuncAndBind@@AEAAXXZ@4HA ENDP		; `FuncAndBind::foo'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
a$ = 4
fr$ = 40
list$ = 88
$S1$ = 136
count$ = 200
a1$ = 228
b1$ = 260
a2$ = 292
b2$ = 324
fr2$ = 360
count2$ = 408
$T8 = 1016
$T9 = 1048
$T10 = 1076
$T11 = 1108
$T12 = 1176
$T13 = 1208
$T14 = 1236
$T15 = 1268
$T16 = 1300
$T17 = 1332
$T18 = 1364
$T19 = 1396
$T20 = 1432
$T21 = 1496
$T22 = 1560
$T23 = 1624
$T24 = 1684
$T25 = 1716
$T26 = 1748
$T27 = 1780
$T28 = 1812
$T29 = 1844
$T30 = 1876
$T31 = 1912
$T32 = 1960
tv77 = 1972
tv287 = 1976
tv279 = 1976
tv260 = 1976
tv237 = 1976
tv225 = 1976
tv197 = 1976
tv148 = 1976
tv140 = 1976
tv82 = 1976
tv296 = 1984
tv292 = 1984
tv277 = 1984
tv258 = 1984
tv242 = 1984
tv230 = 1984
tv153 = 1984
tv138 = 1984
tv275 = 1992
tv217 = 1992
tv136 = 1992
tv298 = 2000
tv215 = 2008
__$ArrayPad$ = 2016
this$ = 2064
?dtor$0@?0??foo@FuncAndBind@@AEAAXXZ@4HA PROC		; `FuncAndBind::foo'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 98 05
	00 00		 lea	 rcx, QWORD PTR $T20[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0??foo@FuncAndBind@@AEAAXXZ@4HA ENDP		; `FuncAndBind::foo'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
a$ = 4
fr$ = 40
list$ = 88
$S1$ = 136
count$ = 200
a1$ = 228
b1$ = 260
a2$ = 292
b2$ = 324
fr2$ = 360
count2$ = 408
$T8 = 1016
$T9 = 1048
$T10 = 1076
$T11 = 1108
$T12 = 1176
$T13 = 1208
$T14 = 1236
$T15 = 1268
$T16 = 1300
$T17 = 1332
$T18 = 1364
$T19 = 1396
$T20 = 1432
$T21 = 1496
$T22 = 1560
$T23 = 1624
$T24 = 1684
$T25 = 1716
$T26 = 1748
$T27 = 1780
$T28 = 1812
$T29 = 1844
$T30 = 1876
$T31 = 1912
$T32 = 1960
tv77 = 1972
tv287 = 1976
tv279 = 1976
tv260 = 1976
tv237 = 1976
tv225 = 1976
tv197 = 1976
tv148 = 1976
tv140 = 1976
tv82 = 1976
tv296 = 1984
tv292 = 1984
tv277 = 1984
tv258 = 1984
tv242 = 1984
tv230 = 1984
tv153 = 1984
tv138 = 1984
tv275 = 1992
tv217 = 1992
tv136 = 1992
tv298 = 2000
tv215 = 2008
__$ArrayPad$ = 2016
this$ = 2064
?dtor$1@?0??foo@FuncAndBind@@AEAAXXZ@4HA PROC		; `FuncAndBind::foo'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d d8 05
	00 00		 lea	 rcx, QWORD PTR $T21[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0??foo@FuncAndBind@@AEAAXXZ@4HA ENDP		; `FuncAndBind::foo'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
a$ = 4
fr$ = 40
list$ = 88
$S1$ = 136
count$ = 200
a1$ = 228
b1$ = 260
a2$ = 292
b2$ = 324
fr2$ = 360
count2$ = 408
$T8 = 1016
$T9 = 1048
$T10 = 1076
$T11 = 1108
$T12 = 1176
$T13 = 1208
$T14 = 1236
$T15 = 1268
$T16 = 1300
$T17 = 1332
$T18 = 1364
$T19 = 1396
$T20 = 1432
$T21 = 1496
$T22 = 1560
$T23 = 1624
$T24 = 1684
$T25 = 1716
$T26 = 1748
$T27 = 1780
$T28 = 1812
$T29 = 1844
$T30 = 1876
$T31 = 1912
$T32 = 1960
tv77 = 1972
tv287 = 1976
tv279 = 1976
tv260 = 1976
tv237 = 1976
tv225 = 1976
tv197 = 1976
tv148 = 1976
tv140 = 1976
tv82 = 1976
tv296 = 1984
tv292 = 1984
tv277 = 1984
tv258 = 1984
tv242 = 1984
tv230 = 1984
tv153 = 1984
tv138 = 1984
tv275 = 1992
tv217 = 1992
tv136 = 1992
tv298 = 2000
tv215 = 2008
__$ArrayPad$ = 2016
this$ = 2064
?dtor$2@?0??foo@FuncAndBind@@AEAAXXZ@4HA PROC		; `FuncAndBind::foo'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 18 06
	00 00		 lea	 rcx, QWORD PTR $T22[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0??foo@FuncAndBind@@AEAAXXZ@4HA ENDP		; `FuncAndBind::foo'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\FuncAndBind.cpp
;	COMDAT ?run@FuncAndBind@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?run@FuncAndBind@@QEAAXXZ PROC				; FuncAndBind::run, COMDAT

; 10   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1BF7C1A3_FuncAndBind@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 11   : 	this->foo();

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ?foo@FuncAndBind@@AEAAXXZ ; FuncAndBind::foo

; 12   : }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?run@FuncAndBind@@QEAAXXZ ENDP				; FuncAndBind::run
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\FuncAndBind.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
__formal$ = 240
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1BF7C1A3_FuncAndBind@cpp
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1
  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\FuncAndBind.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1BF7C1A3_FuncAndBind@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\FuncAndBind.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1BF7C1A3_FuncAndBind@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\FuncAndBind.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__1BF7C1A3_FuncAndBind@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003e	5f		 pop	 rdi
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
