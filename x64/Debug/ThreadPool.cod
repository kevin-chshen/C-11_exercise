; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28105.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7F8AB566_vcruntime_new@h DB 01H
__09340588_corecrt_math@h DB 01H
__24E9E95F_stdlib@h DB 01H
__2FC657CE_cstdlib DB 01H
__70639AFA_cmath DB 01H
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__8A0D8D63_cstddef DB 01H
__C8593937_type_traits DB 01H
__B0C4CEA9_malloc@h DB 01H
__96AB3BB0_vcruntime_exception@h DB 01H
__A47A247F_exception DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__35D7DDB3_corecrt_memory@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__A29A7DFB_string@h DB 01H
__5467428D_corecrt_wconio@h DB 01H
__4442441F_corecrt_wio@h DB 01H
__45F4AF76_corecrt_wtime@h DB 01H
__186FF47F_stat@h DB 01H
__534C724A_wchar@h DB 01H
__289D9ECD_limits DB 01H
__F3238959_xutility DB 01H
__725EB186_xmemory DB 01H
__D64083BB_tuple DB 01H
__2DF72A1A_xpolymorphic_allocator@h DB 01H
__068D371A_xstring DB 01H
__2D341E22_stdexcept DB 01H
__502C2D49_xcall_once@h DB 01H
__EF713F69_system_error DB 01H
__B69C91F9_vcruntime_typeinfo@h DB 01H
__83FC7A40_typeinfo DB 01H
__94339243_memory DB 01H
__B876C54C_xfacet DB 01H
__7242C389_ctype@h DB 01H
__9C759988_xlocinfo DB 01H
__D9B3432B_xlocale DB 01H
__A590EE9B_xiosbase DB 01H
__4734253C_xlocnum DB 01H
__1421D064_ios DB 01H
__1CD00354_ratio DB 01H
__8AA3BE86_time@h DB 01H
__4C709847_chrono DB 01H
__F1833197_xthreads@h DB 01H
__4F7EEAF5_thread DB 01H
__0E7D0904_mutex DB 01H
__113EAA92_xbit_ops@h DB 01H
__1FCC5A9C_xhash DB 01H
__C6677F44_functional DB 01H
__43A8C20F_atomic DB 01H
__DDDD6958_condition_variable DB 01H
__F6C047B0_shared_mutex DB 01H
__2EF0BD34_list DB 01H
__573757CE_ThreadPool@cpp DB 01H
__D006B14F_SyncQueue@h DB 01H
__A973ACD5_istream DB 01H
__CAA399EF_ostream DB 01H
__2F94A69E_streambuf DB 01H
__E4744B4B_iosfwd DB 01H
__18CBD245_utility DB 01H
__EFD44557_xstddef DB 01H
__AE76A8A9_xatomic@h DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??0exception@std@@QEAA@QEBD@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	??0exception_ptr@std@@QEAA@XZ			; std::exception_ptr::exception_ptr
PUBLIC	??1exception_ptr@std@@QEAA@XZ			; std::exception_ptr::~exception_ptr
PUBLIC	??0exception_ptr@std@@QEAA@AEBV01@@Z		; std::exception_ptr::exception_ptr
PUBLIC	??4exception_ptr@std@@QEAAAEAV01@AEBV01@@Z	; std::exception_ptr::operator=
PUBLIC	??Bexception_ptr@std@@QEBA_NXZ			; std::exception_ptr::operator bool
PUBLIC	?_Current_exception@exception_ptr@std@@SA?AV12@XZ ; std::exception_ptr::_Current_exception
PUBLIC	?__autoclassinit2@exception_ptr@std@@QEAAX_K@Z	; std::exception_ptr::__autoclassinit2
PUBLIC	?current_exception@std@@YA?AVexception_ptr@1@XZ	; std::current_exception
PUBLIC	?rethrow_exception@std@@YAXVexception_ptr@1@@Z	; std::rethrow_exception
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??$_Convert_size@_K@std@@YA_K_K@Z		; std::_Convert_size<unsigned __int64>
PUBLIC	?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z	; std::_Iterator_base0::_Adopt
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??0?$allocator@D@std@@QEAA@XZ			; std::allocator<char>::allocator<char>
PUBLIC	?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z	; std::allocator<char>::deallocate
PUBLIC	?allocate@?$allocator@D@std@@QEAAPEAD_K@Z	; std::allocator<char>::allocate
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy
PUBLIC	?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move
PUBLIC	?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
PUBLIC	??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
PUBLIC	?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
PUBLIC	??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
PUBLIC	??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
PUBLIC	??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
PUBLIC	?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
PUBLIC	?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
PUBLIC	??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
PUBLIC	?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
PUBLIC	?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
PUBLIC	?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
PUBLIC	?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
PUBLIC	?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
PUBLIC	?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
PUBLIC	?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
PUBLIC	?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
PUBLIC	??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
PUBLIC	??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
PUBLIC	??1runtime_error@std@@UEAA@XZ			; std::runtime_error::~runtime_error
PUBLIC	??0runtime_error@std@@QEAA@AEBV01@@Z		; std::runtime_error::runtime_error
PUBLIC	??_Gruntime_error@std@@UEAAPEAXI@Z		; std::runtime_error::`scalar deleting destructor'
PUBLIC	??0once_flag@std@@QEAA@XZ			; std::once_flag::once_flag
PUBLIC	?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z ; std::make_error_code
PUBLIC	?generic_category@std@@YAAEBVerror_category@1@XZ ; std::generic_category
PUBLIC	??0error_category@std@@QEAA@XZ			; std::error_category::error_category
PUBLIC	??1error_category@std@@UEAA@XZ			; std::error_category::~error_category
PUBLIC	?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ; std::error_category::default_error_condition
PUBLIC	?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z ; std::error_category::equivalent
PUBLIC	?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ; std::error_category::equivalent
PUBLIC	??8error_category@std@@QEBA_NAEBV01@@Z		; std::error_category::operator==
PUBLIC	??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_code::error_code
PUBLIC	?value@error_code@std@@QEBAHXZ			; std::error_code::value
PUBLIC	?category@error_code@std@@QEBAAEBVerror_category@2@XZ ; std::error_code::category
PUBLIC	?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::error_code::message
PUBLIC	??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_condition::error_condition
PUBLIC	?value@error_condition@std@@QEBAHXZ		; std::error_condition::value
PUBLIC	?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ; std::error_condition::category
PUBLIC	??8std@@YA_NAEBVerror_condition@0@0@Z		; std::operator==
PUBLIC	?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
PUBLIC	??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
PUBLIC	??1_System_error@std@@UEAA@XZ			; std::_System_error::~_System_error
PUBLIC	??0_System_error@std@@QEAA@AEBV01@@Z		; std::_System_error::_System_error
PUBLIC	??_G_System_error@std@@UEAAPEAXI@Z		; std::_System_error::`scalar deleting destructor'
PUBLIC	??0system_error@std@@QEAA@Verror_code@1@@Z	; std::system_error::system_error
PUBLIC	??1system_error@std@@UEAA@XZ			; std::system_error::~system_error
PUBLIC	??0system_error@std@@QEAA@AEBV01@@Z		; std::system_error::system_error
PUBLIC	??_Gsystem_error@std@@UEAAPEAXI@Z		; std::system_error::`scalar deleting destructor'
PUBLIC	?_Throw_system_error@std@@YAXW4errc@1@@Z	; std::_Throw_system_error
PUBLIC	??0_Generic_error_category@std@@QEAA@XZ		; std::_Generic_error_category::_Generic_error_category
PUBLIC	?name@_Generic_error_category@std@@UEBAPEBDXZ	; std::_Generic_error_category::name
PUBLIC	?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ; std::_Generic_error_category::message
PUBLIC	??1_Generic_error_category@std@@UEAA@XZ		; std::_Generic_error_category::~_Generic_error_category
PUBLIC	??_G_Generic_error_category@std@@UEAAPEAXI@Z	; std::_Generic_error_category::`scalar deleting destructor'
PUBLIC	??$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@0@XZ ; std::_Immortalize<std::_Generic_error_category>
PUBLIC	??0_Ref_count_base@std@@IEAA@XZ			; std::_Ref_count_base::_Ref_count_base
PUBLIC	??1_Ref_count_base@std@@UEAA@XZ			; std::_Ref_count_base::~_Ref_count_base
PUBLIC	?_Incref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Incref
PUBLIC	?_Decref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decref
PUBLIC	?_Decwref@_Ref_count_base@std@@QEAAXXZ		; std::_Ref_count_base::_Decwref
PUBLIC	?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z ; std::_Ref_count_base::_Get_deleter
PUBLIC	?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ ; std::chrono::system_clock::now
PUBLIC	?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
PUBLIC	??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
PUBLIC	?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>
PUBLIC	?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now
PUBLIC	?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
PUBLIC	??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
PUBLIC	??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=
PUBLIC	??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
PUBLIC	?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
PUBLIC	?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
PUBLIC	?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
PUBLIC	?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
PUBLIC	?_Check_C_return@std@@YAHH@Z			; std::_Check_C_return
PUBLIC	??1thread@std@@QEAA@XZ				; std::thread::~thread
PUBLIC	?joinable@thread@std@@QEBA_NXZ			; std::thread::joinable
PUBLIC	?join@thread@std@@QEAAXXZ			; std::thread::join
PUBLIC	??_Gthread@std@@QEAAPEAXI@Z			; std::thread::`scalar deleting destructor'
PUBLIC	?get_id@this_thread@std@@YA?AVid@thread@2@XZ	; std::this_thread::get_id
PUBLIC	??0id@thread@std@@AEAA@I@Z			; std::thread::id::id
PUBLIC	??0_Mutex_base@std@@QEAA@H@Z			; std::_Mutex_base::_Mutex_base
PUBLIC	??1_Mutex_base@std@@QEAA@XZ			; std::_Mutex_base::~_Mutex_base
PUBLIC	?lock@_Mutex_base@std@@QEAAXXZ			; std::_Mutex_base::lock
PUBLIC	?unlock@_Mutex_base@std@@QEAAXXZ		; std::_Mutex_base::unlock
PUBLIC	?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
PUBLIC	??0mutex@std@@QEAA@XZ				; std::mutex::mutex
PUBLIC	??1mutex@std@@QEAA@XZ				; std::mutex::~mutex
PUBLIC	??_Gmutex@std@@QEAAPEAXI@Z			; std::mutex::`scalar deleting destructor'
PUBLIC	??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
PUBLIC	??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ	; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
PUBLIC	?lock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ	; std::unique_lock<std::mutex>::lock
PUBLIC	?unlock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ	; std::unique_lock<std::mutex>::unlock
PUBLIC	?_Validate@?$unique_lock@Vmutex@std@@@std@@AEBAXXZ ; std::unique_lock<std::mutex>::_Validate
PUBLIC	?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QEAAX_K@Z ; std::unique_lock<std::mutex>::__autoclassinit2
PUBLIC	??0?$lock_guard@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ; std::lock_guard<std::mutex>::lock_guard<std::mutex>
PUBLIC	??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ	; std::lock_guard<std::mutex>::~lock_guard<std::mutex>
PUBLIC	??0condition_variable_any@std@@QEAA@XZ		; std::condition_variable_any::condition_variable_any
PUBLIC	??1condition_variable_any@std@@QEAA@XZ		; std::condition_variable_any::~condition_variable_any
PUBLIC	?notify_one@condition_variable_any@std@@QEAAXXZ	; std::condition_variable_any::notify_one
PUBLIC	?notify_all@condition_variable_any@std@@QEAAXXZ	; std::condition_variable_any::notify_all
PUBLIC	?get@?$_Ptr_base@Vmutex@std@@@std@@IEBAPEAVmutex@2@XZ ; std::_Ptr_base<std::mutex>::get
PUBLIC	??0?$_Ptr_base@Vmutex@std@@@std@@IEAA@XZ	; std::_Ptr_base<std::mutex>::_Ptr_base<std::mutex>
PUBLIC	?_Decref@?$_Ptr_base@Vmutex@std@@@std@@IEAAXXZ	; std::_Ptr_base<std::mutex>::_Decref
PUBLIC	?_Swap@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<std::mutex>::_Swap
PUBLIC	??0?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ	; std::shared_ptr<std::mutex>::shared_ptr<std::mutex>
PUBLIC	??0?$shared_ptr@Vmutex@std@@@std@@QEAA@AEBV01@@Z ; std::shared_ptr<std::mutex>::shared_ptr<std::mutex>
PUBLIC	??0?$shared_ptr@Vmutex@std@@@std@@QEAA@$$QEAV01@@Z ; std::shared_ptr<std::mutex>::shared_ptr<std::mutex>
PUBLIC	??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ	; std::shared_ptr<std::mutex>::~shared_ptr<std::mutex>
PUBLIC	??4?$shared_ptr@Vmutex@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::shared_ptr<std::mutex>::operator=
PUBLIC	?swap@?$shared_ptr@Vmutex@std@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<std::mutex>::swap
PUBLIC	?__autoclassinit2@?$shared_ptr@Vmutex@std@@@std@@QEAAX_K@Z ; std::shared_ptr<std::mutex>::__autoclassinit2
PUBLIC	?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ ; std::condition_variable_any::_Mycnd
PUBLIC	??$?CVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAPEAVmutex@1@XZ ; std::shared_ptr<std::mutex>::operator-><std::mutex,0>
PUBLIC	??$?DVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAAEAVmutex@1@XZ ; std::shared_ptr<std::mutex>::operator*<std::mutex,0>
PUBLIC	??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ ; std::make_shared<std::mutex>
PUBLIC	??0?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ	; std::_Func_class<void,enum EnumEvent>::_Func_class<void,enum EnumEvent>
PUBLIC	??R?$_Func_class@XW4EnumEvent@@@std@@QEBAXW4EnumEvent@@@Z ; std::_Func_class<void,enum EnumEvent>::operator()
PUBLIC	??1?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ	; std::_Func_class<void,enum EnumEvent>::~_Func_class<void,enum EnumEvent>
PUBLIC	?_Empty@?$_Func_class@XW4EnumEvent@@@std@@IEBA_NXZ ; std::_Func_class<void,enum EnumEvent>::_Empty
PUBLIC	?_Reset_move@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV12@@Z ; std::_Func_class<void,enum EnumEvent>::_Reset_move
PUBLIC	?_Tidy@?$_Func_class@XW4EnumEvent@@@std@@IEAAXXZ ; std::_Func_class<void,enum EnumEvent>::_Tidy
PUBLIC	?_Local@?$_Func_class@XW4EnumEvent@@@std@@AEBA_NXZ ; std::_Func_class<void,enum EnumEvent>::_Local
PUBLIC	?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ ; std::_Func_class<void,enum EnumEvent>::_Getimpl
PUBLIC	?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z ; std::_Func_class<void,enum EnumEvent>::_Set
PUBLIC	??0?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@$$QEAV01@@Z ; std::function<void __cdecl(enum EnumEvent)>::function<void __cdecl(enum EnumEvent)>
PUBLIC	??1?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@XZ ; std::function<void __cdecl(enum EnumEvent)>::~function<void __cdecl(enum EnumEvent)>
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z ; std::operator<<<char,std::char_traits<char> >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??0ThreadPool@@QEAA@H@Z				; ThreadPool::ThreadPool
PUBLIC	??1ThreadPool@@QEAA@XZ				; ThreadPool::~ThreadPool
PUBLIC	?Stop@ThreadPool@@QEAAXXZ			; ThreadPool::Stop
PUBLIC	?AddTask@ThreadPool@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z ; ThreadPool::AddTask
PUBLIC	?AddTask@ThreadPool@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z ; ThreadPool::AddTask
PUBLIC	?Start@ThreadPool@@AEAAXH@Z			; ThreadPool::Start
PUBLIC	?StopThreadGroup@ThreadPool@@AEAAXXZ		; ThreadPool::StopThreadGroup
PUBLIC	?Runable@ThreadPool@@AEAAXXZ			; ThreadPool::Runable
PUBLIC	??0?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAA@XZ ; std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >
PUBLIC	?deallocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z ; std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z ; std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >::allocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@QEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::deallocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::max_size
PUBLIC	??0?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >
PUBLIC	??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::~list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >
PUBLIC	?_Unchecked_begin@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Unchecked_end
PUBLIC	?max_size@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEBA_KXZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::max_size
PUBLIC	?clear@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAXXZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::clear
PUBLIC	?_Tidy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Tidy
PUBLIC	?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Alloc_sentinel_and_proxy
PUBLIC	?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Getal
PUBLIC	?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Getal
PUBLIC	??0?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAA@XZ ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >
PUBLIC	?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >::_Orphan_non_end
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1>::_Get_first
PUBLIC	??0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>
PUBLIC	??1?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@XZ ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::~SyncQueue<std::function<void __cdecl(void)>,std::mutex>
PUBLIC	?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Put
PUBLIC	?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Put
PUBLIC	?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take
PUBLIC	?Stop@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXXZ ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Stop
PUBLIC	?NotEmpty@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::NotEmpty
PUBLIC	?NotFull@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::NotFull
PUBLIC	??0?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAA@XZ ; std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >
PUBLIC	?deallocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z ; std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >::deallocate
PUBLIC	?allocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z ; std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >::allocate
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@QEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::deallocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::max_size
PUBLIC	??0?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
PUBLIC	?_Move_assign@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Move_assign
PUBLIC	??4?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::operator=
PUBLIC	?_Swap_val@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Swap_val
PUBLIC	??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
PUBLIC	?_Unchecked_begin@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Unchecked_end
PUBLIC	?size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::size
PUBLIC	?max_size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::max_size
PUBLIC	?empty@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_NXZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::empty
PUBLIC	?clear@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAXXZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::clear
PUBLIC	?_Tidy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Tidy
PUBLIC	?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Alloc_sentinel_and_proxy
PUBLIC	?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal
PUBLIC	?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal
PUBLIC	??0?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAA@XZ ; std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >
PUBLIC	?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ ; std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >::_Orphan_non_end
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1>::_Get_first
PUBLIC	?__autoclassinit2@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAX_K@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::__autoclassinit2
PUBLIC	?store@?$_Atomic_storage@_N$00@std@@QEAAX_N@Z	; std::_Atomic_storage<bool,1>::store
PUBLIC	?load@?$_Atomic_storage@_N$00@std@@QEBA_NXZ	; std::_Atomic_storage<bool,1>::load
PUBLIC	??4?$atomic@_N@std@@QEAA_N_N@Z			; std::atomic<bool>::operator=
PUBLIC	??B?$atomic@_N@std@@QEBA_NXZ			; std::atomic<bool>::operator bool
PUBLIC	??0?$_Atomic_storage@H$03@std@@QEAA@H@Z		; std::_Atomic_storage<int,4>::_Atomic_storage<int,4>
PUBLIC	?load@?$_Atomic_storage@H$03@std@@QEBAHXZ	; std::_Atomic_storage<int,4>::load
PUBLIC	??E?$_Atomic_integral@H$03@std@@QEAAHH@Z	; std::_Atomic_integral<int,4>::operator++
PUBLIC	??0?$_Atomic_integral@H$03@std@@QEAA@H@Z	; std::_Atomic_integral<int,4>::_Atomic_integral<int,4>
PUBLIC	??0?$_Atomic_integral_facade@H@std@@QEAA@H@Z	; std::_Atomic_integral_facade<int>::_Atomic_integral_facade<int>
PUBLIC	??B?$atomic@H@std@@QEBAHXZ			; std::atomic<int>::operator int
PUBLIC	??0?$atomic@H@std@@QEAA@H@Z			; std::atomic<int>::atomic<int>
PUBLIC	??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z ; std::forward<enum EnumEvent>
PUBLIC	??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::forward<std::function<void __cdecl(void)> >
PUBLIC	??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ; std::make_shared<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>
PUBLIC	?get@?$_Ptr_base@Vthread@std@@@std@@IEBAPEAVthread@2@XZ ; std::_Ptr_base<std::thread>::get
PUBLIC	??0?$_Ptr_base@Vthread@std@@@std@@IEAA@XZ	; std::_Ptr_base<std::thread>::_Ptr_base<std::thread>
PUBLIC	?_Decref@?$_Ptr_base@Vthread@std@@@std@@IEAAXXZ	; std::_Ptr_base<std::thread>::_Decref
PUBLIC	??0?$shared_ptr@Vthread@std@@@std@@QEAA@XZ	; std::shared_ptr<std::thread>::shared_ptr<std::thread>
PUBLIC	??0?$shared_ptr@Vthread@std@@@std@@QEAA@$$QEAV01@@Z ; std::shared_ptr<std::thread>::shared_ptr<std::thread>
PUBLIC	??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ	; std::shared_ptr<std::thread>::~shared_ptr<std::thread>
PUBLIC	?__autoclassinit2@?$shared_ptr@Vthread@std@@@std@@QEAAX_K@Z ; std::shared_ptr<std::thread>::__autoclassinit2
PUBLIC	??_G?$shared_ptr@Vthread@std@@@std@@QEAAPEAXI@Z	; std::shared_ptr<std::thread>::`scalar deleting destructor'
PUBLIC	??$emplace_back@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::emplace_back<std::shared_ptr<std::thread> >
PUBLIC	??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z ; std::forward<std::shared_ptr<std::thread> >
PUBLIC	??$_Emplace@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@QEAU21@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Emplace<std::shared_ptr<std::thread> >
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>
PUBLIC	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$function@$$A6AXXZ@1@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator*
PUBLIC	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator++
PUBLIC	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator==
PUBLIC	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator!=
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >
PUBLIC	??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEBAAEAV?$function@$$A6AXXZ@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::operator*
PUBLIC	??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::operator++
PUBLIC	?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAX_K@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::__autoclassinit2
PUBLIC	??0?$_Func_class@X$$V@std@@QEAA@XZ		; std::_Func_class<void>::_Func_class<void>
PUBLIC	??R?$_Func_class@X$$V@std@@QEBAXXZ		; std::_Func_class<void>::operator()
PUBLIC	??1?$_Func_class@X$$V@std@@QEAA@XZ		; std::_Func_class<void>::~_Func_class<void>
PUBLIC	?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ	; std::_Func_class<void>::_Empty
PUBLIC	?_Reset_copy@?$_Func_class@X$$V@std@@IEAAXAEBV12@@Z ; std::_Func_class<void>::_Reset_copy
PUBLIC	?_Reset_move@?$_Func_class@X$$V@std@@IEAAX$$QEAV12@@Z ; std::_Func_class<void>::_Reset_move
PUBLIC	?_Tidy@?$_Func_class@X$$V@std@@IEAAXXZ		; std::_Func_class<void>::_Tidy
PUBLIC	?_Local@?$_Func_class@X$$V@std@@AEBA_NXZ	; std::_Func_class<void>::_Local
PUBLIC	?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ ; std::_Func_class<void>::_Getimpl
PUBLIC	?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z ; std::_Func_class<void>::_Set
PUBLIC	??0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z	; std::function<void __cdecl(void)>::function<void __cdecl(void)>
PUBLIC	??0?$function@$$A6AXXZ@std@@QEAA@$$QEAV01@@Z	; std::function<void __cdecl(void)>::function<void __cdecl(void)>
PUBLIC	??1?$function@$$A6AXXZ@std@@QEAA@XZ		; std::function<void __cdecl(void)>::~function<void __cdecl(void)>
PUBLIC	??_G?$function@$$A6AXXZ@std@@QEAAPEAXI@Z	; std::function<void __cdecl(void)>::`scalar deleting destructor'
PUBLIC	??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><int,void>
PUBLIC	??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z ; std::this_thread::sleep_for<__int64,std::ratio<1,1000> >
PUBLIC	??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>
PUBLIC	??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$shared_ptr@Vthread@std@@@1@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator*
PUBLIC	??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator++
PUBLIC	??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator==
PUBLIC	??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator!=
PUBLIC	??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >
PUBLIC	??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEBAAEAV?$shared_ptr@Vthread@std@@@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::operator*
PUBLIC	??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::operator++
PUBLIC	?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::__autoclassinit2
PUBLIC	??$?CVthread@std@@$0A@@?$shared_ptr@Vthread@std@@@std@@QEBAPEAVthread@1@XZ ; std::shared_ptr<std::thread>::operator-><std::thread,0>
PUBLIC	??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z ; std::_Atomic_address_as<long,std::_Atomic_padded<int> >
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::function<void __cdecl(void)>,void *> >
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1><>
PUBLIC	??R<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEBA@XZ ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`2'::<lambda_1>::operator()
PUBLIC	??0<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEAA@PEAV2@@Z ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`2'::<lambda_1>::<lambda_1>
PUBLIC	??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@1@@Z@@Z ; std::condition_variable_any::wait<std::unique_lock<std::mutex>,`SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`2'::<lambda_1> >
PUBLIC	??$move@AEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YA$$QEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z ; std::move<std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > &>
PUBLIC	??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >
PUBLIC	??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>
PUBLIC	??$forward@V?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z ; std::forward<std::function<void __cdecl(enum EnumEvent)> >
PUBLIC	??$_Free_non_head@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::shared_ptr<std::thread>,void *>::_Free_non_head<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
PUBLIC	??$?0U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::shared_ptr<std::thread>,void *> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1><>
PUBLIC	??$move@AEAV?$shared_ptr@Vmutex@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vmutex@std@@@0@AEAV10@@Z ; std::move<std::shared_ptr<std::mutex> &>
PUBLIC	??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z ; std::addressof<std::mutex>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Unfancy@D@std@@YAPEADPEAD@Z			; std::_Unfancy<char>
PUBLIC	??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
PUBLIC	??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
PUBLIC	??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@H@std@@@std@@YAPEDJAEBU?$_Atomic_padded@H@0@@Z ; std::_Atomic_address_as<long const ,std::_Atomic_padded<int> const >
PUBLIC	??$_Atomic_address_as@$$CBD$$CBU?$_Atomic_padded@_N@std@@@std@@YAPEDDAEBU?$_Atomic_padded@_N@0@@Z ; std::_Atomic_address_as<char const ,std::_Atomic_padded<bool> const >
PUBLIC	??$_Atomic_address_as@DU?$_Atomic_padded@_N@std@@@std@@YAPECDAEAU?$_Atomic_padded@_N@0@@Z ; std::_Atomic_address_as<char,std::_Atomic_padded<bool> >
PUBLIC	??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z	; std::_Atomic_reinterpret_as<char,bool>
PUBLIC	??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *,std::_List_node<std::function<void __cdecl(void)>,void *> * &>
PUBLIC	??$_Free_non_head@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::function<void __cdecl(void)>,void *>::_Free_non_head<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
PUBLIC	??$_Freenode0@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::function<void __cdecl(void)>,void *>::_Freenode0<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
PUBLIC	??$addressof@V?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YAPEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z ; std::addressof<std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >
PUBLIC	??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *,std::_List_node<std::shared_ptr<std::thread>,void *> * &>
PUBLIC	??$_Freenode0@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::shared_ptr<std::thread>,void *>::_Freenode0<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
PUBLIC	??$move@AEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z ; std::move<std::function<void __cdecl(enum EnumEvent)> &>
PUBLIC	??0?$_Func_base@XW4EnumEvent@@@std@@QEAA@XZ	; std::_Func_base<void,enum EnumEvent>::_Func_base<void,enum EnumEvent>
PUBLIC	??$_Move_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAX$$QEAV01@@Z ; std::_Ptr_base<std::mutex>::_Move_construct_from<std::mutex>
PUBLIC	??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z	; std::_Destroy_in_place<char *>
PUBLIC	??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Max_value<unsigned __int64>
PUBLIC	??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()
PUBLIC	??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
PUBLIC	??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>::operator()
PUBLIC	??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
PUBLIC	??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
PUBLIC	??$_Get_size_of_n@$00@std@@YA_K_K@Z		; std::_Get_size_of_n<1>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Pocma@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@0@Z ; std::_Pocma<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
PUBLIC	??$_Get_size_of_n@$0FA@@std@@YA_K_K@Z		; std::_Get_size_of_n<80>
PUBLIC	??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z		; std::_Get_size_of_n<32>
PUBLIC	??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z ; std::swap<std::mutex *,void>
PUBLIC	??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>
PUBLIC	??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
PUBLIC	??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
PUBLIC	??$_Swap_adl@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z ; std::_Swap_adl<std::_List_node<std::function<void __cdecl(void)>,void *> *>
PUBLIC	??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z ; std::swap<std::_List_node<std::function<void __cdecl(void)>,void *> *,void>
PUBLIC	??$swap@_KX@std@@YAXAEA_K0@Z			; std::swap<unsigned __int64,void>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Immortalize_impl@V_Generic_error_category@std@@@std@@YAHPEAX0PEAPEAX@Z ; std::_Immortalize_impl<std::_Generic_error_category>
PUBLIC	??1?$_Ref_count_obj2@Vmutex@std@@@std@@UEAA@XZ	; std::_Ref_count_obj2<std::mutex>::~_Ref_count_obj2<std::mutex>
PUBLIC	?_Destroy@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ ; std::_Ref_count_obj2<std::mutex>::_Destroy
PUBLIC	?_Delete_this@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ ; std::_Ref_count_obj2<std::mutex>::_Delete_this
PUBLIC	??_G?$_Ref_count_obj2@Vmutex@std@@@std@@UEAAPEAXI@Z ; std::_Ref_count_obj2<std::mutex>::`scalar deleting destructor'
PUBLIC	??$?0$$V@?$_Ref_count_obj2@Vmutex@std@@@std@@QEAA@XZ ; std::_Ref_count_obj2<std::mutex>::_Ref_count_obj2<std::mutex><>
PUBLIC	??$_Set_ptr_rep_and_enable_shared@Vmutex@std@@@?$shared_ptr@Vmutex@std@@@std@@AEAAXQEAVmutex@1@QEAV_Ref_count_base@1@@Z ; std::shared_ptr<std::mutex>::_Set_ptr_rep_and_enable_shared<std::mutex>
PUBLIC	??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z ; std::_Callback_once<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>,std::integer_sequence<unsigned __int64,0>,1>
PUBLIC	??1?$_Ref_count_obj2@Vthread@std@@@std@@UEAA@XZ	; std::_Ref_count_obj2<std::thread>::~_Ref_count_obj2<std::thread>
PUBLIC	?_Destroy@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ ; std::_Ref_count_obj2<std::thread>::_Destroy
PUBLIC	?_Delete_this@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ ; std::_Ref_count_obj2<std::thread>::_Delete_this
PUBLIC	??_G?$_Ref_count_obj2@Vthread@std@@@std@@UEAAPEAXI@Z ; std::_Ref_count_obj2<std::thread>::`scalar deleting destructor'
PUBLIC	??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z ; std::forward<void (__cdecl ThreadPool::*)(void)>
PUBLIC	??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ; std::forward<ThreadPool *>
PUBLIC	??$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ; std::_Ref_count_obj2<std::thread>::_Ref_count_obj2<std::thread><void (__cdecl ThreadPool::*)(void),ThreadPool *>
PUBLIC	??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z ; std::addressof<std::thread>
PUBLIC	??$_Set_ptr_rep_and_enable_shared@Vthread@std@@@?$shared_ptr@Vthread@std@@@std@@AEAAXQEAVthread@1@QEAV_Ref_count_base@1@@Z ; std::shared_ptr<std::thread>::_Set_ptr_rep_and_enable_shared<std::thread>
PUBLIC	??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
PUBLIC	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Allocate
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
PUBLIC	??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
PUBLIC	?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Transfer_before
PUBLIC	??$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > ><std::shared_ptr<std::thread> >
PUBLIC	??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ; std::chrono::operator+<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000> >
PUBLIC	??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z ; std::condition_variable_any::wait<std::unique_lock<std::mutex> >
PUBLIC	??R<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`2'::<lambda_1>::operator()
PUBLIC	??0<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`2'::<lambda_1>::<lambda_1>
PUBLIC	??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@1@@Z@@Z ; std::condition_variable_any::wait<std::unique_lock<std::mutex>,`SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`2'::<lambda_1> >
PUBLIC	??$emplace_back@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@$$QEAV?$function@$$A6AXXZ@1@@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::emplace_back<std::function<void __cdecl(void)> >
PUBLIC	??$_Emplace@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@$$QEAV?$function@$$A6AXXZ@1@@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Emplace<std::function<void __cdecl(void)> >
PUBLIC	??R<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`2'::<lambda_1>::operator()
PUBLIC	??0<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`2'::<lambda_1>::<lambda_1>
PUBLIC	??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@1@@Z@@Z ; std::condition_variable_any::wait<std::unique_lock<std::mutex>,`SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`2'::<lambda_1> >
PUBLIC	??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z ; std::forward<std::function<void __cdecl(void)> const &>
PUBLIC	??$emplace_back@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@AEBV?$function@$$A6AXXZ@1@@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::emplace_back<std::function<void __cdecl(void)> const &>
PUBLIC	??$_Emplace@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@AEBV?$function@$$A6AXXZ@1@@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Emplace<std::function<void __cdecl(void)> const &>
PUBLIC	??$_Freenode@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::shared_ptr<std::thread>,void *>::_Freenode<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
PUBLIC	??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
PUBLIC	??$addressof@$$CB_N@std@@YAPEB_NAEB_N@Z		; std::addressof<bool const >
PUBLIC	??$addressof@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z ; std::addressof<std::_List_node<std::function<void __cdecl(void)>,void *> *>
PUBLIC	??$forward@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z ; std::forward<std::_List_node<std::function<void __cdecl(void)>,void *> * &>
PUBLIC	??$_Freenode@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::function<void __cdecl(void)>,void *>::_Freenode<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
PUBLIC	??$_Destroy_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *>
PUBLIC	??$addressof@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z ; std::addressof<std::_List_node<std::shared_ptr<std::thread>,void *> *>
PUBLIC	??$forward@AEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z ; std::forward<std::_List_node<std::shared_ptr<std::thread>,void *> * &>
PUBLIC	??$_Destroy_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *>
PUBLIC	??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z	; std::addressof<char *>
PUBLIC	??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z	; std::forward<char * const &>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$move@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@AEAV10@@Z ; std::move<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > &>
PUBLIC	??$move@AEAPEAVmutex@std@@@std@@YA$$QEAPEAVmutex@0@AEAPEAV10@@Z ; std::move<std::mutex * &>
PUBLIC	??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
PUBLIC	??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z		; std::move<unsigned __int64 &>
PUBLIC	??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z ; std::_Construct_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *,std::_List_node<std::shared_ptr<std::thread>,void *> * const &>
PUBLIC	??$addressof@V?$shared_ptr@Vthread@std@@@std@@@std@@YAPEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z ; std::addressof<std::shared_ptr<std::thread> >
PUBLIC	??$destroy@V?$shared_ptr@Vthread@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::destroy<std::shared_ptr<std::thread> >
PUBLIC	??$_Destroy_in_place@Vthread@std@@@std@@YAXAEAVthread@0@@Z ; std::_Destroy_in_place<std::thread>
PUBLIC	??$_Destroy_in_place@Vmutex@std@@@std@@YAXAEAVmutex@0@@Z ; std::_Destroy_in_place<std::mutex>
PUBLIC	??$move@AEAV?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z ; std::move<std::shared_ptr<std::thread> &>
PUBLIC	??$_Move_construct_from@Vthread@std@@@?$_Ptr_base@Vthread@std@@@std@@IEAAX$$QEAV01@@Z ; std::_Ptr_base<std::thread>::_Move_construct_from<std::thread>
PUBLIC	??$move@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z ; std::move<std::_List_node<std::function<void __cdecl(void)>,void *> * &>
PUBLIC	??$_Construct_in_place@Vmutex@std@@$$V@std@@YAXAEAVmutex@0@@Z ; std::_Construct_in_place<std::mutex>
PUBLIC	??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z ; std::forward<std::exception_ptr &>
PUBLIC	??$_Construct_in_place@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YAXAEAVthread@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ; std::_Construct_in_place<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>
PUBLIC	??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ; std::thread::thread<void (__cdecl ThreadPool::*)(void),ThreadPool *,void>
PUBLIC	??$construct@V?$shared_ptr@Vthread@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::construct<std::shared_ptr<std::thread>,std::shared_ptr<std::thread> >
PUBLIC	??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ; std::chrono::operator+<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000> >
PUBLIC	??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Relock@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@CAXAEAV?$unique_lock@Vmutex@std@@@1@@Z ; std::condition_variable_any::_Relock<std::unique_lock<std::mutex> >
PUBLIC	??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
PUBLIC	?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Allocate
PUBLIC	??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
PUBLIC	??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
PUBLIC	?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Transfer_before
PUBLIC	??$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> >
PUBLIC	??$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> const &>
PUBLIC	??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::addressof<std::function<void __cdecl(void)> >
PUBLIC	??$destroy@V?$function@$$A6AXXZ@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::destroy<std::function<void __cdecl(void)> >
PUBLIC	??$forward@AEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z ; std::forward<std::_List_node<std::shared_ptr<std::thread>,void *> * const &>
PUBLIC	??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z ; std::_Construct_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *,std::_List_node<std::function<void __cdecl(void)>,void *> * const &>
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Copy_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEBV?$shared_ptr@Vmutex@std@@@1@@Z ; std::_Ptr_base<std::mutex>::_Copy_construct_from<std::mutex>
PUBLIC	??$?0U_Exact_args_t@std@@AEAVexception_ptr@1@$$V$0A@@?$tuple@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@AEAVexception_ptr@1@@Z ; std::tuple<std::exception_ptr &>::tuple<std::exception_ptr &><std::_Exact_args_t,std::exception_ptr &,0>
PUBLIC	??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000>,void>
PUBLIC	??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
PUBLIC	??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
PUBLIC	??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,void>
PUBLIC	??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,void>
PUBLIC	??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,void>
PUBLIC	??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
PUBLIC	??$construct@V?$function@$$A6AXXZ@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@AEBV31@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> const &>
PUBLIC	??$forward@AEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z ; std::forward<std::_List_node<std::function<void __cdecl(void)>,void *> * const &>
PUBLIC	??$make_unique@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@P8ThreadPool@@EAAXXZPEAV3@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ; std::make_unique<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,void (__cdecl ThreadPool::*)(void),ThreadPool *,0>
PUBLIC	??R?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@QEBAXPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z ; std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >::operator()
PUBLIC	??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::~unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >
PUBLIC	??D?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@XZ ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::operator*
PUBLIC	?get@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::get
PUBLIC	?release@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::release
PUBLIC	?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,1>::_Get_first
PUBLIC	?__autoclassinit2@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAX_K@Z ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::__autoclassinit2
PUBLIC	??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z ; std::thread::_Invoke<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,0,1>
PUBLIC	??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>
PUBLIC	??$?0AEAVexception_ptr@std@@@?$_Tuple_val@AEAVexception_ptr@std@@@std@@QEAA@AEAVexception_ptr@1@@Z ; std::_Tuple_val<std::exception_ptr &>::_Tuple_val<std::exception_ptr &><std::exception_ptr &>
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000>,void>
PUBLIC	??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,void>
PUBLIC	??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,void>
PUBLIC	??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,void>
PUBLIC	??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
PUBLIC	??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,void>
PUBLIC	??$exchange@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@PEAV12@@std@@YAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@$$QEAPEAV10@@Z ; std::exchange<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *>
PUBLIC	??$move@AEAV?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::move<std::function<void __cdecl(void)> &>
PUBLIC	??$?0P8ThreadPool@@EAAXXZPEAV0@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ; std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *><void (__cdecl ThreadPool::*)(void),ThreadPool *,0>
PUBLIC	??$?0U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > ><std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,0>
PUBLIC	??$get@$0A@P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAP8ThreadPool@@EAAXXZAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z ; std::get<0,void (__cdecl ThreadPool::*)(void),ThreadPool *>
PUBLIC	??$move@AEAP8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z ; std::move<void (__cdecl ThreadPool::*&)(void)>
PUBLIC	??$get@$00P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAPEAVThreadPool@@AEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z ; std::get<1,void (__cdecl ThreadPool::*)(void),ThreadPool *>
PUBLIC	??$move@AEAPEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ; std::move<ThreadPool * &>
PUBLIC	??$_Call@P8ThreadPool@@EAAXXZPEAV1@$$V@_Invoker_pmf_pointer@std@@SAXP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ; std::_Invoker_pmf_pointer::_Call<void (__cdecl ThreadPool::*)(void),ThreadPool *>
PUBLIC	??$invoke@P8ThreadPool@@EAAXXZPEAV1@@std@@YAX$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV1@@Z ; std::invoke<void (__cdecl ThreadPool::*)(void),ThreadPool *>
PUBLIC	??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,void>
PUBLIC	??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>
PUBLIC	??$?0U_Exact_args_t@std@@P8ThreadPool@@EAAXXZPEAV2@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@U_Exact_args_t@1@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV3@@Z ; std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *><std::_Exact_args_t,void (__cdecl ThreadPool::*)(void),ThreadPool *,0>
PUBLIC	??$?0AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,1><std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> * &>
PUBLIC	??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
PUBLIC	??$?0U_Exact_args_t@std@@PEAVThreadPool@@$$V$0A@@?$tuple@PEAVThreadPool@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVThreadPool@@@Z ; std::tuple<ThreadPool *>::tuple<ThreadPool *><std::_Exact_args_t,ThreadPool *,0>
PUBLIC	??$?0P8ThreadPool@@EAAXXZ@?$_Tuple_val@P8ThreadPool@@EAAXXZ@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ@Z ; std::_Tuple_val<void (__cdecl ThreadPool::*)(void)>::_Tuple_val<void (__cdecl ThreadPool::*)(void)><void (__cdecl ThreadPool::*)(void)>
PUBLIC	??$forward@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@YAAEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@@Z ; std::forward<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> * &>
PUBLIC	??$?0PEAVThreadPool@@@?$_Tuple_val@PEAVThreadPool@@@std@@QEAA@$$QEAPEAVThreadPool@@@Z ; std::_Tuple_val<ThreadPool *>::_Tuple_val<ThreadPool *><ThreadPool *>
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_7runtime_error@std@@6B@			; std::runtime_error::`vftable'
PUBLIC	??_R0?AVruntime_error@std@@@8			; std::runtime_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
PUBLIC	??_7_System_error@std@@6B@			; std::_System_error::`vftable'
PUBLIC	??_C@_02LMMGGCAJ@?3?5@				; `string'
PUBLIC	??_7system_error@std@@6B@			; std::system_error::`vftable'
PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	_TI4?AVsystem_error@std@@
PUBLIC	_CTA4?AVsystem_error@std@@
PUBLIC	??_R0?AVsystem_error@std@@@8			; std::system_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40
PUBLIC	??_R0?AV_System_error@std@@@8			; std::_System_error `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40
PUBLIC	??_7_Generic_error_category@std@@6B@		; std::_Generic_error_category::`vftable'
PUBLIC	??_C@_07DCLBNMLN@generic@			; `string'
PUBLIC	??_C@_05JCNIFBKL@?5___?5@			; `string'
PUBLIC	??_C@_0M@CCLFAFBA@______e?5?3?$DN?5@		; `string'
PUBLIC	??_C@_0P@FHKAOMPO@call?5once?5stop@		; `string'
PUBLIC	??_C@_05FAGFPHJG@start@				; `string'
PUBLIC	??_C@_07JEDMOLAO@runable@			; `string'
PUBLIC	??_C@_0BG@GPONIBBL@_finish_task_count?3?$DN?5@	; `string'
PUBLIC	??_C@_0BE@GFBIAGP@?0?5this?5thread?5id?3?$DN?5@	; `string'
PUBLIC	??_C@_0P@NGJDHBOA@SyncQueue?5Add?5@		; `string'
PUBLIC	??_C@_0BD@BKEGLPGN@?5this?5thread?5id?3?$DN?5@	; `string'
PUBLIC	??_C@_0CL@KMJOIDCD@cache?5buffer?5is?5empty?0?5please?5w@ ; `string'
PUBLIC	?_Flag@?1???$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@1@XZ@4PEAXEA ; `std::_Immortalize<std::_Generic_error_category>'::`2'::_Flag
PUBLIC	?_Storage@?1???$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@1@XZ@4T?$_Align_type@N$0BA@@1@A ; `std::_Immortalize<std::_Generic_error_category>'::`2'::_Storage
PUBLIC	??_7?$_Ref_count_obj2@Vmutex@std@@@std@@6B@	; std::_Ref_count_obj2<std::mutex>::`vftable'
PUBLIC	??_7?$_Ref_count_obj2@Vthread@std@@@std@@6B@	; std::_Ref_count_obj2<std::thread>::`vftable'
PUBLIC	??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_0DD@FIHHIPGM@cache?5buffer?5is?5full?0?5please?5wa@ ; `string'
PUBLIC	??_C@_0BA@JFNIOLAK@string?5too?5long@		; `string'
PUBLIC	??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4runtime_error@std@@6B@			; std::runtime_error::`RTTI Complete Object Locator'
PUBLIC	??_R3runtime_error@std@@8			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2runtime_error@std@@8			; std::runtime_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@runtime_error@std@@8		; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVerror_category@std@@@8			; std::error_category `RTTI Type Descriptor'
PUBLIC	??_R3error_category@std@@8			; std::error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2error_category@std@@8			; std::error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@error_category@std@@8		; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_System_error@std@@6B@			; std::_System_error::`RTTI Complete Object Locator'
PUBLIC	??_R3_System_error@std@@8			; std::_System_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_System_error@std@@8			; std::_System_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_System_error@std@@8		; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4system_error@std@@6B@			; std::system_error::`RTTI Complete Object Locator'
PUBLIC	??_R3system_error@std@@8			; std::system_error::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2system_error@std@@8			; std::system_error::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@system_error@std@@8		; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4_Generic_error_category@std@@6B@		; std::_Generic_error_category::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV_Generic_error_category@std@@@8		; std::_Generic_error_category `RTTI Type Descriptor'
PUBLIC	??_R3_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Generic_error_category@std@@8		; std::_Generic_error_category::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Generic_error_category@std@@8	; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV_Ref_count_base@std@@@8			; std::_Ref_count_base `RTTI Type Descriptor'
PUBLIC	??_R3_Ref_count_base@std@@8			; std::_Ref_count_base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2_Ref_count_base@std@@8			; std::_Ref_count_base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@_Ref_count_base@std@@8		; std::_Ref_count_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AV?$_Func_base@XW4EnumEvent@@@std@@@8	; std::_Func_base<void,enum EnumEvent> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Func_base@XW4EnumEvent@@@std@@8		; std::_Func_base<void,enum EnumEvent>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Func_base@XW4EnumEvent@@@std@@8		; std::_Func_base<void,enum EnumEvent>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Func_base@XW4EnumEvent@@@std@@8 ; std::_Func_base<void,enum EnumEvent>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$_Ref_count_obj2@Vmutex@std@@@std@@6B@	; std::_Ref_count_obj2<std::mutex>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_Ref_count_obj2@Vmutex@std@@@std@@@8	; std::_Ref_count_obj2<std::mutex> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Ref_count_obj2@Vmutex@std@@@std@@8	; std::_Ref_count_obj2<std::mutex>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Ref_count_obj2@Vmutex@std@@@std@@8	; std::_Ref_count_obj2<std::mutex>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Ref_count_obj2@Vmutex@std@@@std@@8 ; std::_Ref_count_obj2<std::mutex>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4?$_Ref_count_obj2@Vthread@std@@@std@@6B@	; std::_Ref_count_obj2<std::thread>::`RTTI Complete Object Locator'
PUBLIC	??_R0?AV?$_Ref_count_obj2@Vthread@std@@@std@@@8	; std::_Ref_count_obj2<std::thread> `RTTI Type Descriptor'
PUBLIC	??_R3?$_Ref_count_obj2@Vthread@std@@@std@@8	; std::_Ref_count_obj2<std::thread>::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2?$_Ref_count_obj2@Vthread@std@@@std@@8	; std::_Ref_count_obj2<std::thread>::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@?$_Ref_count_obj2@Vthread@std@@@std@@8 ; std::_Ref_count_obj2<std::thread>::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@412a5e0000000000
PUBLIC	__real@41cdcd6500000000
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__imp_terminate:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?__ExceptionPtrCreate@@YAXPEAX@Z:PROC		; __ExceptionPtrCreate
EXTRN	?__ExceptionPtrDestroy@@YAXPEAX@Z:PROC		; __ExceptionPtrDestroy
EXTRN	?__ExceptionPtrCopy@@YAXPEAXPEBX@Z:PROC		; __ExceptionPtrCopy
EXTRN	?__ExceptionPtrAssign@@YAXPEAXPEBX@Z:PROC	; __ExceptionPtrAssign
EXTRN	?__ExceptionPtrToBool@@YA_NPEBX@Z:PROC		; __ExceptionPtrToBool
EXTRN	?__ExceptionPtrCurrentException@@YAXPEAX@Z:PROC	; __ExceptionPtrCurrentException
EXTRN	?__ExceptionPtrRethrow@@YAXPEBX@Z:PROC		; __ExceptionPtrRethrow
EXTRN	memcpy:PROC
EXTRN	memmove:PROC
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	??_Eruntime_error@std@@UEAAPEAXI@Z:PROC		; std::runtime_error::`vector deleting destructor'
EXTRN	?_Execute_once@std@@YAHAEAUonce_flag@1@P6AHPEAX1PEAPEAX@Z1@Z:PROC ; std::_Execute_once
EXTRN	??_E_System_error@std@@UEAAPEAXI@Z:PROC		; std::_System_error::`vector deleting destructor'
EXTRN	??_Esystem_error@std@@UEAAPEAXI@Z:PROC		; std::system_error::`vector deleting destructor'
EXTRN	?_Syserror_map@std@@YAPEBDH@Z:PROC		; std::_Syserror_map
EXTRN	??_E_Generic_error_category@std@@UEAAPEAXI@Z:PROC ; std::_Generic_error_category::`vector deleting destructor'
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	_Xtime_get_ticks:PROC
EXTRN	_Query_perf_counter:PROC
EXTRN	_Query_perf_frequency:PROC
EXTRN	__imp__beginthreadex:PROC
EXTRN	_Thrd_join:PROC
EXTRN	_Thrd_sleep:PROC
EXTRN	_Thrd_id:PROC
EXTRN	_Mtx_init_in_situ:PROC
EXTRN	_Mtx_destroy_in_situ:PROC
EXTRN	_Mtx_lock:PROC
EXTRN	_Mtx_unlock:PROC
EXTRN	_Cnd_init_in_situ:PROC
EXTRN	_Cnd_destroy_in_situ:PROC
EXTRN	_Cnd_wait:PROC
EXTRN	_Cnd_broadcast:PROC
EXTRN	_Cnd_signal:PROC
EXTRN	_Cnd_do_broadcast_at_thread_exit:PROC
EXTRN	?_Throw_C_error@std@@YAXH@Z:PROC		; std::_Throw_C_error
EXTRN	?_Throw_Cpp_error@std@@YAXH@Z:PROC		; std::_Throw_Cpp_error
EXTRN	?_XGetLastError@std@@YAXXZ:PROC			; std::_XGetLastError
EXTRN	?_Xbad_function_call@std@@YAXXZ:PROC		; std::_Xbad_function_call
EXTRN	??_E?$_Ref_count_obj2@Vmutex@std@@@std@@UEAAPEAXI@Z:PROC ; std::_Ref_count_obj2<std::mutex>::`vector deleting destructor'
EXTRN	??_E?$_Ref_count_obj2@Vthread@std@@@std@@UEAAPEAXI@Z:PROC ; std::_Ref_count_obj2<std::thread>::`vector deleting destructor'
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT ?_Flag@?1???$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@1@XZ@4PEAXEA
_BSS	SEGMENT
?_Flag@?1???$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@1@XZ@4PEAXEA DQ 01H DUP (?) ; `std::_Immortalize<std::_Generic_error_category>'::`2'::_Flag
_BSS	ENDS
;	COMDAT ?_Storage@?1???$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@1@XZ@4T?$_Align_type@N$0BA@@1@A
_BSS	SEGMENT
?_Storage@?1???$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@1@XZ@4T?$_Align_type@N$0BA@@1@A DB 010H DUP (?) ; `std::_Immortalize<std::_Generic_error_category>'::`2'::_Storage
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+212
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+148
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception_ptr@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??0exception_ptr@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception_ptr@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??1exception_ptr@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception_ptr@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??0exception_ptr@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4exception_ptr@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??4exception_ptr@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bexception_ptr@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??Bexception_ptr@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Current_exception@exception_ptr@std@@SA?AV12@XZ DD imagerel $LN3
	DD	imagerel $LN3+190
	DD	imagerel $unwind$?_Current_exception@exception_ptr@std@@SA?AV12@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@exception_ptr@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?__autoclassinit2@exception_ptr@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?current_exception@std@@YA?AVexception_ptr@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?current_exception@std@@YA?AVexception_ptr@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?rethrow_exception@std@@YAXVexception_ptr@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+91
	DD	imagerel $unwind$?rethrow_exception@std@@YAXVexception_ptr@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??rethrow_exception@std@@YAXVexception_ptr@1@@Z@4HA DD imagerel ?dtor$0@?0??rethrow_exception@std@@YAXVexception_ptr@1@@Z@4HA
	DD	imagerel ?dtor$0@?0??rethrow_exception@std@@YAXVexception_ptr@1@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??rethrow_exception@std@@YAXVexception_ptr@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+476
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Convert_size@_K@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$_Convert_size@_K@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+237
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD imagerel $LN5
	DD	imagerel $LN5+261
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+147
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@D@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??0?$allocator@D@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+124
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+143
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+132
	DD	imagerel $unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD imagerel $LN4
	DD	imagerel $LN4+122
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD imagerel $LN4
	DD	imagerel $LN4+122
	DD	imagerel $unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+107
	DD	imagerel $unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+313
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+271
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+266
	DD	imagerel $unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+138
	DD	imagerel $unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+169
	DD	imagerel $unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+438
	DD	imagerel $unwind$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+220
	DD	imagerel $unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+307
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+236
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+111
	DD	imagerel $unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+232
	DD	imagerel $unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+112
	DD	imagerel $unwind$?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD imagerel $LN5
	DD	imagerel $LN5+273
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+139
	DD	imagerel $unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+261
	DD	imagerel $unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+120
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1runtime_error@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1runtime_error@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0runtime_error@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0runtime_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gruntime_error@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gruntime_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0once_flag@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??0once_flag@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+104
	DD	imagerel $unwind$?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?generic_category@std@@YAAEBVerror_category@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+59
	DD	imagerel $unwind$?generic_category@std@@YAAEBVerror_category@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0error_category@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0error_category@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1error_category@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??1error_category@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+139
	DD	imagerel $unwind$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z DD imagerel $LN5
	DD	imagerel $LN5+161
	DD	imagerel $unwind$?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8error_category@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+123
	DD	imagerel $unwind$??8error_category@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0error_code@std@@QEAA@HAEBVerror_category@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$??0error_code@std@@QEAA@HAEBVerror_category@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?value@error_code@std@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?value@error_code@std@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?category@error_code@std@@QEBAAEBVerror_category@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?category@error_code@std@@QEBAAEBVerror_category@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+186
	DD	imagerel $unwind$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?value@error_condition@std@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?value@error_condition@std@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?category@error_condition@std@@QEBAAEBVerror_category@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?category@error_condition@std@@QEBAAEBVerror_category@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8std@@YA_NAEBVerror_condition@0@0@Z DD imagerel $LN5
	DD	imagerel $LN5+208
	DD	imagerel $unwind$??8std@@YA_NAEBVerror_condition@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD imagerel $LN8
	DD	imagerel $LN8+261
	DD	imagerel $unwind$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA DD imagerel ?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
	DD	imagerel ?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA DD imagerel ?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
	DD	imagerel ?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+309
	DD	imagerel $unwind$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA DD imagerel ?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_System_error@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1_System_error@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_System_error@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+131
	DD	imagerel $unwind$??0_System_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_System_error@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_G_System_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0system_error@std@@QEAA@Verror_code@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+178
	DD	imagerel $unwind$??0system_error@std@@QEAA@Verror_code@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@@Z@4HA DD imagerel ?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1system_error@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1system_error@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0system_error@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0system_error@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gsystem_error@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gsystem_error@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_system_error@std@@YAXW4errc@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$?_Throw_system_error@std@@YAXW4errc@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Generic_error_category@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??0_Generic_error_category@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?name@_Generic_error_category@std@@UEBAPEBDXZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?name@_Generic_error_category@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD imagerel $LN5
	DD	imagerel $LN5+132
	DD	imagerel $unwind$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Generic_error_category@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1_Generic_error_category@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G_Generic_error_category@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_G_Generic_error_category@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@0@XZ DD imagerel $LN4
	DD	imagerel $LN4+95
	DD	imagerel $unwind$??$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@0@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Ref_count_base@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0_Ref_count_base@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Ref_count_base@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??1_Ref_count_base@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Incref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?_Incref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+126
	DD	imagerel $unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+114
	DD	imagerel $unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+200
	DD	imagerel $unwind$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Check_C_return@std@@YAHH@Z DD imagerel $LN4
	DD	imagerel $LN4+88
	DD	imagerel $unwind$?_Check_C_return@std@@YAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1thread@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+92
	DD	imagerel $unwind$??1thread@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?joinable@thread@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+107
	DD	imagerel $unwind$?joinable@thread@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?join@thread@std@@QEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+217
	DD	imagerel $unwind$?join@thread@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gthread@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gthread@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get_id@this_thread@std@@YA?AVid@thread@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$?get_id@this_thread@std@@YA?AVid@thread@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0id@thread@std@@AEAA@I@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??0id@thread@std@@AEAA@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Mutex_base@std@@QEAA@H@Z DD imagerel $LN3
	DD	imagerel $LN3+121
	DD	imagerel $unwind$??0_Mutex_base@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Mutex_base@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??1_Mutex_base@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?lock@_Mutex_base@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$?lock@_Mutex_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?unlock@_Mutex_base@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$?unlock@_Mutex_base@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0mutex@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??0mutex@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1mutex@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1mutex@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gmutex@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gmutex@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+96
	DD	imagerel $unwind$??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?lock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?lock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?unlock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+128
	DD	imagerel $unwind$?unlock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Validate@?$unique_lock@Vmutex@std@@@std@@AEBAXXZ DD imagerel $LN5
	DD	imagerel $LN5+112
	DD	imagerel $unwind$?_Validate@?$unique_lock@Vmutex@std@@@std@@AEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$lock_guard@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$??0?$lock_guard@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0condition_variable_any@std@@QEAA@XZ DD imagerel $LN5
	DD	imagerel $LN5+161
	DD	imagerel $unwind$??0condition_variable_any@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0condition_variable_any@std@@QEAA@XZ@4HA DD imagerel ?dtor$0@?0???0condition_variable_any@std@@QEAA@XZ@4HA
	DD	imagerel ?dtor$0@?0???0condition_variable_any@std@@QEAA@XZ@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0condition_variable_any@std@@QEAA@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1condition_variable_any@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+103
	DD	imagerel $unwind$??1condition_variable_any@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?notify_one@condition_variable_any@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+184
	DD	imagerel $unwind$?notify_one@condition_variable_any@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?notify_all@condition_variable_any@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+184
	DD	imagerel $unwind$?notify_all@condition_variable_any@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$_Ptr_base@Vmutex@std@@@std@@IEBAPEAVmutex@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?get@?$_Ptr_base@Vmutex@std@@@std@@IEBAPEAVmutex@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Ptr_base@Vmutex@std@@@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$??0?$_Ptr_base@Vmutex@std@@@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@?$_Ptr_base@Vmutex@std@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+96
	DD	imagerel $unwind$?_Decref@?$_Ptr_base@Vmutex@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$?_Swap@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$shared_ptr@Vmutex@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+146
	DD	imagerel $unwind$??4?$shared_ptr@Vmutex@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?swap@?$shared_ptr@Vmutex@std@@@std@@QEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$?swap@?$shared_ptr@Vmutex@std@@@std@@QEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$shared_ptr@Vmutex@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?__autoclassinit2@?$shared_ptr@Vmutex@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?CVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAPEAVmutex@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$?CVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAPEAVmutex@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?DVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAAEAVmutex@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$?DVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAAEAVmutex@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ DD imagerel $LN9
	DD	imagerel $LN9+314
	DD	imagerel $unwind$??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ@4HA DD imagerel ?dtor$0@?0???$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ@4HA
	DD	imagerel ?dtor$0@?0???$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ@4HA+44
	DD	imagerel $unwind$?dtor$0@?0???$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??0?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$_Func_class@XW4EnumEvent@@@std@@QEBAXW4EnumEvent@@@Z DD imagerel $LN4
	DD	imagerel $LN4+162
	DD	imagerel $unwind$??R?$_Func_class@XW4EnumEvent@@@std@@QEBAXW4EnumEvent@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??1?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Empty@?$_Func_class@XW4EnumEvent@@@std@@IEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+112
	DD	imagerel $unwind$?_Empty@?$_Func_class@XW4EnumEvent@@@std@@IEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reset_move@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV12@@Z DD imagerel $LN6
	DD	imagerel $LN6+254
	DD	imagerel $unwind$?_Reset_move@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Func_class@XW4EnumEvent@@@std@@IEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+198
	DD	imagerel $unwind$?_Tidy@?$_Func_class@XW4EnumEvent@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Local@?$_Func_class@XW4EnumEvent@@@std@@AEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?_Local@?$_Func_class@XW4EnumEvent@@@std@@AEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$??0?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN25
	DD	imagerel $LN25+1124
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+91
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0ThreadPool@@QEAA@H@Z DD imagerel $LN6
	DD	imagerel $LN6+240
	DD	imagerel $unwind$??0ThreadPool@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0ThreadPool@@QEAA@H@Z@4HA DD imagerel ?dtor$0@?0???0ThreadPool@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$0@?0???0ThreadPool@@QEAA@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0ThreadPool@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0ThreadPool@@QEAA@H@Z@4HA DD imagerel ?dtor$1@?0???0ThreadPool@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$1@?0???0ThreadPool@@QEAA@H@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0ThreadPool@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0ThreadPool@@QEAA@H@Z@4HA DD imagerel ?dtor$2@?0???0ThreadPool@@QEAA@H@Z@4HA
	DD	imagerel ?dtor$2@?0???0ThreadPool@@QEAA@H@Z@4HA+43
	DD	imagerel $unwind$?dtor$2@?0???0ThreadPool@@QEAA@H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1ThreadPool@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$??1ThreadPool@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Stop@ThreadPool@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$?Stop@ThreadPool@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddTask@ThreadPool@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$?AddTask@ThreadPool@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?AddTask@ThreadPool@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+106
	DD	imagerel $unwind$?AddTask@ThreadPool@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Start@ThreadPool@@AEAAXH@Z DD imagerel $LN7
	DD	imagerel $LN7+291
	DD	imagerel $unwind$?Start@ThreadPool@@AEAAXH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Start@ThreadPool@@AEAAXH@Z@4HA DD imagerel ?dtor$0@?0??Start@ThreadPool@@AEAAXH@Z@4HA
	DD	imagerel ?dtor$0@?0??Start@ThreadPool@@AEAAXH@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??Start@ThreadPool@@AEAAXH@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StopThreadGroup@ThreadPool@@AEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+396
	DD	imagerel $unwind$?StopThreadGroup@ThreadPool@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Runable@ThreadPool@@AEAAXXZ DD imagerel $LN10
	DD	imagerel $LN10+501
	DD	imagerel $unwind$?Runable@ThreadPool@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Runable@ThreadPool@@AEAAXXZ@4HA DD imagerel ?dtor$0@?0??Runable@ThreadPool@@AEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??Runable@ThreadPool@@AEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??Runable@ThreadPool@@AEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??0?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?deallocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?allocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@QEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@QEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??0?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+182
	DD	imagerel $unwind$??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$?_Unchecked_begin@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Unchecked_end@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$?max_size@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+192
	DD	imagerel $unwind$?clear@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+139
	DD	imagerel $unwind$?_Tidy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+290
	DD	imagerel $unwind$?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$??0?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+257
	DD	imagerel $unwind$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z DD imagerel $LN8
	DD	imagerel $LN8+232
	DD	imagerel $unwind$??0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA DD imagerel ?dtor$0@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA DD imagerel ?dtor$1@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA+43
	DD	imagerel $unwind$?dtor$1@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA DD imagerel ?dtor$2@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA
	DD	imagerel ?dtor$2@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA+43
	DD	imagerel $unwind$?dtor$2@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+181
	DD	imagerel $unwind$??1?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z DD imagerel $LN5
	DD	imagerel $LN5+404
	DD	imagerel $unwind$?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@4HA DD imagerel ?dtor$0@?0??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Stop@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+195
	DD	imagerel $unwind$?Stop@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NotEmpty@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ DD imagerel $LN6
	DD	imagerel $LN6+233
	DD	imagerel $unwind$?NotEmpty@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?NotFull@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ DD imagerel $LN8
	DD	imagerel $LN8+263
	DD	imagerel $unwind$?NotFull@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??0?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?deallocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?allocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@QEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@QEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??0?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move_assign@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+168
	DD	imagerel $unwind$?_Move_assign@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+146
	DD	imagerel $unwind$??4?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAAEAV01@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Swap_val@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@@Z DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$?_Swap_val@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+182
	DD	imagerel $unwind$??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$?_Unchecked_begin@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$?_Unchecked_end@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$?max_size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?empty@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+108
	DD	imagerel $unwind$?empty@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?clear@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+192
	DD	imagerel $unwind$?clear@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+139
	DD	imagerel $unwind$?_Tidy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+290
	DD	imagerel $unwind$?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ@4HA DD imagerel ?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$??0?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+257
	DD	imagerel $unwind$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?__autoclassinit2@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?store@?$_Atomic_storage@_N$00@std@@QEAAX_N@Z DD imagerel $LN3
	DD	imagerel $LN3+115
	DD	imagerel $unwind$?store@?$_Atomic_storage@_N$00@std@@QEAAX_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?load@?$_Atomic_storage@_N$00@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$?load@?$_Atomic_storage@_N$00@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$atomic@_N@std@@QEAA_N_N@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??4?$atomic@_N@std@@QEAA_N_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$atomic@_N@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??B?$atomic@_N@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Atomic_storage@H$03@std@@QEAA@H@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??0?$_Atomic_storage@H$03@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?load@?$_Atomic_storage@H$03@std@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+122
	DD	imagerel $unwind$?load@?$_Atomic_storage@H$03@std@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$_Atomic_integral@H$03@std@@QEAAHH@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??E?$_Atomic_integral@H$03@std@@QEAAHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Atomic_integral@H$03@std@@QEAA@H@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??0?$_Atomic_integral@H$03@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Atomic_integral_facade@H@std@@QEAA@H@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??0?$_Atomic_integral_facade@H@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??B?$atomic@H@std@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??B?$atomic@H@std@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$atomic@H@std@@QEAA@H@Z DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$??0?$atomic@H@std@@QEAA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@QEBA@W4EnumEvent@@@Z DD imagerel ??R<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@QEBA@W4EnumEvent@@@Z
	DD	imagerel ??R<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@QEBA@W4EnumEvent@@@Z+203
	DD	imagerel $unwind$??R<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@QEBA@W4EnumEvent@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z DD imagerel ??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
	DD	imagerel ??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z+72
	DD	imagerel $unwind$??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@_Invoker_functor@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z DD imagerel ??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@_Invoker_functor@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z
	DD	imagerel ??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@_Invoker_functor@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z+128
	DD	imagerel $unwind$??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@_Invoker_functor@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@std@@YAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z DD imagerel ??$invoke@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@std@@YAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z
	DD	imagerel ??$invoke@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@std@@YAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z+126
	DD	imagerel $unwind$??$invoke@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@std@@YAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DD imagerel ??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
	DD	imagerel ??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z+116
	DD	imagerel $unwind$??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z@4HA DD imagerel ?dtor$0@?0???$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEBA@XZ DD imagerel ??R<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEBA@XZ
	DD	imagerel ??R<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEBA@XZ+125
	DD	imagerel $unwind$??R<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEBA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEAA@PEAV2@@Z DD imagerel ??0<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEAA@PEAV2@@Z
	DD	imagerel ??0<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEAA@PEAV2@@Z+93
	DD	imagerel $unwind$??0<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEAA@PEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z DD imagerel ??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
	DD	imagerel ??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z+304
	DD	imagerel $unwind$??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z@4HA DD imagerel ?dtor$0@?0???$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z@4HA
	DD	imagerel ?dtor$0@?0???$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DD imagerel $LN9
	DD	imagerel $LN9+376
	DD	imagerel $unwind$??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA DD imagerel ?dtor$0@?0???$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA
	DD	imagerel ?dtor$0@?0???$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA+44
	DD	imagerel $unwind$?dtor$0@?0???$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$_Ptr_base@Vthread@std@@@std@@IEBAPEAVthread@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?get@?$_Ptr_base@Vthread@std@@@std@@IEBAPEAVthread@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Ptr_base@Vthread@std@@@std@@IEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$??0?$_Ptr_base@Vthread@std@@@std@@IEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Decref@?$_Ptr_base@Vthread@std@@@std@@IEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+96
	DD	imagerel $unwind$?_Decref@?$_Ptr_base@Vthread@std@@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@Vthread@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??0?$shared_ptr@Vthread@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$shared_ptr@Vthread@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$??0?$shared_ptr@Vthread@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$shared_ptr@Vthread@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?__autoclassinit2@?$shared_ptr@Vthread@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$shared_ptr@Vthread@std@@@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_G?$shared_ptr@Vthread@std@@@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+144
	DD	imagerel $unwind$??$emplace_back@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@QEAU21@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+293
	DD	imagerel $unwind$??$_Emplace@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@QEAU21@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$function@$$A6AXXZ@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$function@$$A6AXXZ@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+120
	DD	imagerel $unwind$??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+124
	DD	imagerel $unwind$??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEBAAEAV?$function@$$A6AXXZ@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEBAAEAV?$function@$$A6AXXZ@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAAEAV01@XZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Func_class@X$$V@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$??0?$_Func_class@X$$V@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$_Func_class@X$$V@std@@QEBAXXZ DD imagerel $LN4
	DD	imagerel $LN4+118
	DD	imagerel $unwind$??R?$_Func_class@X$$V@std@@QEBAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Func_class@X$$V@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??1?$_Func_class@X$$V@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+112
	DD	imagerel $unwind$?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reset_copy@?$_Func_class@X$$V@std@@IEAAXAEBV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+165
	DD	imagerel $unwind$?_Reset_copy@?$_Func_class@X$$V@std@@IEAAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Reset_move@?$_Func_class@X$$V@std@@IEAAX$$QEAV12@@Z DD imagerel $LN6
	DD	imagerel $LN6+254
	DD	imagerel $unwind$?_Reset_move@?$_Func_class@X$$V@std@@IEAAX$$QEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$_Func_class@X$$V@std@@IEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+198
	DD	imagerel $unwind$?_Tidy@?$_Func_class@X$$V@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Local@?$_Func_class@X$$V@std@@AEBA_NXZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?_Local@?$_Func_class@X$$V@std@@AEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z DD imagerel $LN4
	DD	imagerel $LN4+109
	DD	imagerel $unwind$??0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$function@$$A6AXXZ@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$??0?$function@$$A6AXXZ@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$function@$$A6AXXZ@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1?$function@$$A6AXXZ@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$function@$$A6AXXZ@std@@QEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_G?$function@$$A6AXXZ@std@@QEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+106
	DD	imagerel $unwind$??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$shared_ptr@Vthread@std@@@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$shared_ptr@Vthread@std@@@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+120
	DD	imagerel $unwind$??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+124
	DD	imagerel $unwind$??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEBAAEAV?$shared_ptr@Vthread@std@@@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEBAAEAV?$shared_ptr@Vthread@std@@@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?CVthread@std@@$0A@@?$shared_ptr@Vthread@std@@@std@@QEBAPEAVthread@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$?CVthread@std@@$0A@@?$shared_ptr@Vthread@std@@@std@@QEBAPEAVthread@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??$?0U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEBA@XZ DD imagerel $LN5
	DD	imagerel $LN5+133
	DD	imagerel $unwind$??R<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEBA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEAA@PEAV2@@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??0<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEAA@PEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@1@@Z@@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@1@@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YA$$QEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YA$$QEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z DD imagerel $LN5
	DD	imagerel $LN5+415
	DD	imagerel $unwind$??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@4HA DD imagerel ?dtor$0@?0???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z DD imagerel $LN5
	DD	imagerel $LN5+415
	DD	imagerel $unwind$??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@4HA DD imagerel ?dtor$0@?0???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@4HA
	DD	imagerel ?dtor$0@?0???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@V?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Free_non_head@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN6
	DD	imagerel $LN6+149
	DD	imagerel $unwind$??$_Free_non_head@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??$?0U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$shared_ptr@Vmutex@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vmutex@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEAV?$shared_ptr@Vmutex@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vmutex@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+171
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+284
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+108
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+195
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@D@std@@YAPEADPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+107
	DD	imagerel $unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+102
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@H@std@@@std@@YAPEDJAEBU?$_Atomic_padded@H@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@H@std@@@std@@YAPEDJAEBU?$_Atomic_padded@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Atomic_address_as@$$CBD$$CBU?$_Atomic_padded@_N@std@@@std@@YAPEDDAEBU?$_Atomic_padded@_N@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$_Atomic_address_as@$$CBD$$CBU?$_Atomic_padded@_N@std@@@std@@YAPEDDAEBU?$_Atomic_padded@_N@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Atomic_address_as@DU?$_Atomic_padded@_N@std@@@std@@YAPECDAEAU?$_Atomic_padded@_N@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$_Atomic_address_as@DU?$_Atomic_padded@_N@std@@@std@@YAPECDAEAU?$_Atomic_padded@_N@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Free_non_head@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN6
	DD	imagerel $LN6+149
	DD	imagerel $unwind$??$_Free_non_head@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode0@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+132
	DD	imagerel $unwind$??$_Freenode0@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YAPEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@V?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YAPEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode0@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+132
	DD	imagerel $unwind$??$_Freenode0@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Func_base@XW4EnumEvent@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??0?$_Func_base@XW4EnumEvent@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAX$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+141
	DD	imagerel $unwind$??$_Move_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAX$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+143
	DD	imagerel $unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z DD imagerel $LN3
	DD	imagerel $LN3+147
	DD	imagerel $unwind$??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z DD imagerel $LN6
	DD	imagerel $LN6+418
	DD	imagerel $unwind$??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z DD imagerel $LN3
	DD	imagerel $LN3+202
	DD	imagerel $unwind$??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z DD imagerel $LN6
	DD	imagerel $LN6+578
	DD	imagerel $unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+117
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+123
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+114
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pocma@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$_Pocma@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0FA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+114
	DD	imagerel $unwind$??$_Get_size_of_n@$0FA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+114
	DD	imagerel $unwind$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+189
	DD	imagerel $unwind$??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+189
	DD	imagerel $unwind$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Swap_adl@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Swap_adl@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+189
	DD	imagerel $unwind$??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$swap@_KX@std@@YAXAEA_K0@Z DD imagerel $LN3
	DD	imagerel $LN3+189
	DD	imagerel $unwind$??$swap@_KX@std@@YAXAEA_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Immortalize_impl@V_Generic_error_category@std@@@std@@YAHPEAX0PEAPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+118
	DD	imagerel $unwind$??$_Immortalize_impl@V_Generic_error_category@std@@@std@@YAHPEAX0PEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Ref_count_obj2@Vmutex@std@@@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??1?$_Ref_count_obj2@Vmutex@std@@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Destroy@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Delete_this@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+149
	DD	imagerel $unwind$?_Delete_this@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$_Ref_count_obj2@Vmutex@std@@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_G?$_Ref_count_obj2@Vmutex@std@@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Ref_count_obj2@Vmutex@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+135
	DD	imagerel $unwind$??$?0$$V@?$_Ref_count_obj2@Vmutex@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Set_ptr_rep_and_enable_shared@Vmutex@std@@@?$shared_ptr@Vmutex@std@@@std@@AEAAXQEAVmutex@1@QEAV_Ref_count_base@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??$_Set_ptr_rep_and_enable_shared@Vmutex@std@@@?$shared_ptr@Vmutex@std@@@std@@AEAAXQEAVmutex@1@QEAV_Ref_count_base@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z DD imagerel ??$move@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
	DD	imagerel ??$move@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z+72
	DD	imagerel $unwind$??$move@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Reset@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DD imagerel ??$_Reset@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
	DD	imagerel ??$_Reset@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z+170
	DD	imagerel $unwind$??$_Reset@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z DD imagerel ??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z
	DD	imagerel ??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z+72
	DD	imagerel $unwind$??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z DD imagerel ??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z
	DD	imagerel ??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z+201
	DD	imagerel $unwind$??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z DD imagerel $LN10
	DD	imagerel $LN10+149
	DD	imagerel $unwind$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z@4HA DD imagerel ?catch$1@?0???$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z@4HA
	DD	imagerel ?catch$1@?0???$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z@4HA+114
	DD	imagerel $unwind$?catch$1@?0???$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YAPEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z DD imagerel ??$addressof@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YAPEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z
	DD	imagerel ??$addressof@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YAPEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z+72
	DD	imagerel $unwind$??$addressof@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YAPEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Ref_count_obj2@Vthread@std@@@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+95
	DD	imagerel $unwind$??1?$_Ref_count_obj2@Vthread@std@@@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$?_Destroy@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Delete_this@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+149
	DD	imagerel $unwind$?_Delete_this@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_G?$_Ref_count_obj2@Vthread@std@@@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_G?$_Ref_count_obj2@Vthread@std@@@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DD imagerel $LN4
	DD	imagerel $LN4+199
	DD	imagerel $unwind$??$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA DD imagerel ?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Set_ptr_rep_and_enable_shared@Vthread@std@@@?$shared_ptr@Vthread@std@@@std@@AEAAXQEAVthread@1@QEAV_Ref_count_base@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+110
	DD	imagerel $unwind$??$_Set_ptr_rep_and_enable_shared@Vthread@std@@@?$shared_ptr@Vthread@std@@@std@@AEAAXQEAVthread@1@QEAV_Ref_count_base@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+126
	DD	imagerel $unwind$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+160
	DD	imagerel $unwind$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z DD imagerel $LN3
	DD	imagerel $LN3+256
	DD	imagerel $unwind$?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+206
	DD	imagerel $unwind$??$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DD imagerel $LN3
	DD	imagerel $LN3+141
	DD	imagerel $unwind$??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z DD imagerel $LN7
	DD	imagerel $LN7+192
	DD	imagerel $unwind$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+286
	DD	imagerel $unwind$??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA DD imagerel ?dtor$0@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA DD imagerel ?dtor$1@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA+36
	DD	imagerel $unwind$?dtor$1@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ DD imagerel $LN6
	DD	imagerel $LN6+185
	DD	imagerel $unwind$??R<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??0<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@1@@Z@@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@1@@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@$$QEAV?$function@$$A6AXXZ@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+144
	DD	imagerel $unwind$??$emplace_back@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@$$QEAV?$function@$$A6AXXZ@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@$$QEAV?$function@$$A6AXXZ@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+293
	DD	imagerel $unwind$??$_Emplace@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@$$QEAV?$function@$$A6AXXZ@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ DD imagerel $LN6
	DD	imagerel $LN6+185
	DD	imagerel $unwind$??R<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+93
	DD	imagerel $unwind$??0<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@1@@Z@@Z DD imagerel $LN5
	DD	imagerel $LN5+114
	DD	imagerel $unwind$??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@1@@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@AEBV?$function@$$A6AXXZ@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+144
	DD	imagerel $unwind$??$emplace_back@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@AEBV?$function@$$A6AXXZ@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@AEBV?$function@$$A6AXXZ@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+293
	DD	imagerel $unwind$??$_Emplace@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@AEBV?$function@$$A6AXXZ@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+126
	DD	imagerel $unwind$??$_Freenode@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CB_N@std@@YAPEB_NAEB_N@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@$$CB_N@std@@YAPEB_NAEB_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Freenode@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+126
	DD	imagerel $unwind$??$_Freenode@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??$_Destroy_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$??$_Destroy_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+300
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVmutex@std@@@std@@YA$$QEAPEAVmutex@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEAPEAVmutex@std@@@std@@YA$$QEAPEAVmutex@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$shared_ptr@Vthread@std@@@std@@@std@@YAPEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@V?$shared_ptr@Vthread@std@@@std@@@std@@YAPEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$shared_ptr@Vthread@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$destroy@V?$shared_ptr@Vthread@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@Vthread@std@@@std@@YAXAEAVthread@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$??$_Destroy_in_place@Vthread@std@@@std@@YAXAEAVthread@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_in_place@Vmutex@std@@@std@@YAXAEAVmutex@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$??$_Destroy_in_place@Vmutex@std@@@std@@YAXAEAVmutex@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEAV?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_construct_from@Vthread@std@@@?$_Ptr_base@Vthread@std@@@std@@IEAAX$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+141
	DD	imagerel $unwind$??$_Move_construct_from@Vthread@std@@@?$_Ptr_base@Vthread@std@@@std@@IEAAX$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@Vmutex@std@@$$V@std@@YAXAEAVmutex@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+112
	DD	imagerel $unwind$??$_Construct_in_place@Vmutex@std@@$$V@std@@YAXAEAVmutex@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Test_callable@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA_NAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DD imagerel ??$_Test_callable@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA_NAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
	DD	imagerel ??$_Test_callable@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA_NAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z+67
	DD	imagerel $unwind$??$_Test_callable@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA_NAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Copy@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z DD imagerel ?_Copy@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z
	DD	imagerel ?_Copy@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z+119
	DD	imagerel $unwind$?_Copy@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Move@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z DD imagerel ?_Move@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z
	DD	imagerel ?_Move@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z+142
	DD	imagerel $unwind$?_Move@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Do_call@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX$$QEAW4EnumEvent@@@Z DD imagerel ?_Do_call@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX$$QEAW4EnumEvent@@@Z
	DD	imagerel ?_Do_call@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX$$QEAW4EnumEvent@@@Z+100
	DD	imagerel $unwind$?_Do_call@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX$$QEAW4EnumEvent@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Target_type@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAAEBVtype_info@@XZ DD imagerel ?_Target_type@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAAEBVtype_info@@XZ
	DD	imagerel ?_Target_type@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAAEBVtype_info@@XZ+72
	DD	imagerel $unwind$?_Target_type@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAAEBVtype_info@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEBXXZ DD imagerel ?_Get@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEBXXZ
	DD	imagerel ?_Get@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEBXXZ+85
	DD	imagerel $unwind$?_Get@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEBXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX_N@Z DD imagerel ?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX_N@Z
	DD	imagerel ?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX_N@Z+98
	DD	imagerel $unwind$?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX_N@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z DD imagerel ??$forward@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
	DD	imagerel ??$forward@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z+72
	DD	imagerel $unwind$??$forward@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DD imagerel ??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
	DD	imagerel ??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z+117
	DD	imagerel $unwind$??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z DD imagerel ??$?0U_Exact_args_t@std@@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z
	DD	imagerel ??$?0U_Exact_args_t@std@@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z+207
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z DD imagerel ??$move@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z
	DD	imagerel ??$move@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z+72
	DD	imagerel $unwind$??$move@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$0A@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z DD imagerel ??$get@$0A@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z
	DD	imagerel ??$get@$0A@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z+76
	DD	imagerel $unwind$??$get@$0A@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z DD imagerel ??$_Call@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
	DD	imagerel ??$_Call@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z+84
	DD	imagerel $unwind$??$_Call@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z DD imagerel ??$invoke@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
	DD	imagerel ??$invoke@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z+84
	DD	imagerel $unwind$??$invoke@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Invoke_stored_explicit@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$$Z$0A@@std@@YAX$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@U?$integer_sequence@_K$0A@@0@@Z DD imagerel ??$_Invoke_stored_explicit@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$$Z$0A@@std@@YAX$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@U?$integer_sequence@_K$0A@@0@@Z
	DD	imagerel ??$_Invoke_stored_explicit@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$$Z$0A@@std@@YAX$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@U?$integer_sequence@_K$0A@@0@@Z+96
	DD	imagerel $unwind$??$_Invoke_stored_explicit@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$$Z$0A@@std@@YAX$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@U?$integer_sequence@_K$0A@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$00$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z DD imagerel ??$get@$00$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z
	DD	imagerel ??$get@$00$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z+75
	DD	imagerel $unwind$??$get@$00$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YAXAEAVthread@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DD imagerel $LN3
	DD	imagerel $LN3+170
	DD	imagerel $unwind$??$_Construct_in_place@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YAXAEAVthread@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DD imagerel $LN7
	DD	imagerel $LN7+354
	DD	imagerel $unwind$??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA DD imagerel ?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$shared_ptr@Vthread@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@$$QEAV31@@Z DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??$construct@V?$shared_ptr@Vthread@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@$$QEAV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DD imagerel $LN3
	DD	imagerel $LN3+188
	DD	imagerel $unwind$??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD imagerel $LN5
	DD	imagerel $LN5+126
	DD	imagerel $unwind$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD imagerel $LN3
	DD	imagerel $LN3+163
	DD	imagerel $unwind$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z DD imagerel $LN5
	DD	imagerel $LN5+382
	DD	imagerel $unwind$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Relock@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@CAXAEAV?$unique_lock@Vmutex@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+78
	DD	imagerel $unwind$??$_Relock@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@CAXAEAV?$unique_lock@Vmutex@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+124
	DD	imagerel $unwind$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+126
	DD	imagerel $unwind$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+160
	DD	imagerel $unwind$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z DD imagerel $LN3
	DD	imagerel $LN3+256
	DD	imagerel $unwind$?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+206
	DD	imagerel $unwind$??$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+206
	DD	imagerel $unwind$??$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z@4HA DD imagerel ?dtor$0@?0???$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@V?$function@$$A6AXXZ@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??$destroy@V?$function@$$A6AXXZ@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+123
	DD	imagerel $unwind$??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@$$CBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAPEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z DD imagerel ??$addressof@$$CBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAPEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z
	DD	imagerel ??$addressof@$$CBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAPEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z+72
	DD	imagerel $unwind$??$addressof@$$CBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAPEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@?$_Invoker_ret@X$00@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z DD imagerel ??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@?$_Invoker_ret@X$00@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z
	DD	imagerel ??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@?$_Invoker_ret@X$00@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z+126
	DD	imagerel $unwind$??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@?$_Invoker_ret@X$00@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DD imagerel ??$?0AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
	DD	imagerel ??$?0AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z+117
	DD	imagerel $unwind$??$?0AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEBV?$shared_ptr@Vmutex@std@@@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+143
	DD	imagerel $unwind$??$_Copy_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEBV?$shared_ptr@Vmutex@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@AEAVexception_ptr@1@$$V$0A@@?$tuple@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@AEAVexception_ptr@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@AEAVexception_ptr@1@$$V$0A@@?$tuple@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@AEAVexception_ptr@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@?$_Tuple_val@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z DD imagerel ??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@?$_Tuple_val@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
	DD	imagerel ??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@?$_Tuple_val@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z+98
	DD	imagerel $unwind$??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@?$_Tuple_val@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD imagerel $LN3
	DD	imagerel $LN3+144
	DD	imagerel $unwind$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z DD imagerel $LN3
	DD	imagerel $LN3+189
	DD	imagerel $unwind$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD imagerel $LN5
	DD	imagerel $LN5+179
	DD	imagerel $unwind$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z DD imagerel $LN9
	DD	imagerel $LN9+302
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+321
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+116
	DD	imagerel $unwind$??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@$$QEAV31@@Z DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@$$QEAV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@V?$function@$$A6AXXZ@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@AEBV31@@Z DD imagerel $LN3
	DD	imagerel $LN3+136
	DD	imagerel $unwind$??$construct@V?$function@$$A6AXXZ@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@AEBV31@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z DD imagerel ??$forward@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z
	DD	imagerel ??$forward@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z+72
	DD	imagerel $unwind$??$forward@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$make_unique@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@P8ThreadPool@@EAAXXZPEAV3@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DD imagerel $LN7
	DD	imagerel $LN7+236
	DD	imagerel $unwind$??$make_unique@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@P8ThreadPool@@EAAXXZPEAV3@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@QEBAXPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z DD imagerel $LN5
	DD	imagerel $LN5+150
	DD	imagerel $unwind$??R?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@QEBAXPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+138
	DD	imagerel $unwind$??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??D?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?get@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?get@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?release@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?release@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?__autoclassinit2@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+269
	DD	imagerel $unwind$??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAVexception_ptr@std@@@?$_Tuple_val@AEAVexception_ptr@std@@@std@@QEAA@AEAVexception_ptr@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+98
	DD	imagerel $unwind$??$?0AEAVexception_ptr@std@@@?$_Tuple_val@AEAVexception_ptr@std@@@std@@QEAA@AEAVexception_ptr@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+314
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z DD imagerel $LN5
	DD	imagerel $LN5+178
	DD	imagerel $unwind$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+308
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+314
	DD	imagerel $unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@PEAV12@@std@@YAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@$$QEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??$exchange@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@PEAV12@@std@@YAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@$$QEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAV?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEAV?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0P8ThreadPool@@EAAXXZPEAV0@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DD imagerel $LN3
	DD	imagerel $LN3+201
	DD	imagerel $unwind$??$?0P8ThreadPool@@EAAXXZPEAV0@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+118
	DD	imagerel $unwind$??$?0U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$0A@P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAP8ThreadPool@@EAAXXZAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$get@$0A@P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAP8ThreadPool@@EAAXXZAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAP8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEAP8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$get@$00P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAPEAVThreadPool@@AEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$get@$00P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAPEAVThreadPool@@AEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$move@AEAPEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$move@AEAPEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Call@P8ThreadPool@@EAAXXZPEAV1@$$V@_Invoker_pmf_pointer@std@@SAXP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Call@P8ThreadPool@@EAAXXZPEAV1@$$V@_Invoker_pmf_pointer@std@@SAXP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$invoke@P8ThreadPool@@EAAXXZPEAV1@@std@@YAX$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV1@@Z DD imagerel $LN3
	DD	imagerel $LN3+129
	DD	imagerel $unwind$??$invoke@P8ThreadPool@@EAAXXZPEAV1@@std@@YAX$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+342
	DD	imagerel $unwind$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD imagerel $LN9
	DD	imagerel $LN9+368
	DD	imagerel $unwind$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@P8ThreadPool@@EAAXXZPEAV2@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@U_Exact_args_t@1@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV3@@Z DD imagerel $LN3
	DD	imagerel $LN3+207
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@P8ThreadPool@@EAAXXZPEAV2@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@U_Exact_args_t@1@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??$?0AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0U_Exact_args_t@std@@PEAVThreadPool@@$$V$0A@@?$tuple@PEAVThreadPool@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVThreadPool@@@Z DD imagerel $LN3
	DD	imagerel $LN3+159
	DD	imagerel $unwind$??$?0U_Exact_args_t@std@@PEAVThreadPool@@$$V$0A@@?$tuple@PEAVThreadPool@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVThreadPool@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0P8ThreadPool@@EAAXXZ@?$_Tuple_val@P8ThreadPool@@EAAXXZ@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ@Z DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$??$?0P8ThreadPool@@EAAXXZ@?$_Tuple_val@P8ThreadPool@@EAAXXZ@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@YAAEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@YAAEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0PEAVThreadPool@@@?$_Tuple_val@PEAVThreadPool@@@std@@QEAA@$$QEAPEAVThreadPool@@@Z DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$??$?0PEAVThreadPool@@@?$_Tuple_val@PEAVThreadPool@@@std@@QEAA@$$QEAPEAVThreadPool@@@Z
pdata	ENDS
;	COMDAT __real@41cdcd6500000000
CONST	SEGMENT
__real@41cdcd6500000000 DQ 041cdcd6500000000r	; 1e+09
CONST	ENDS
;	COMDAT __real@412a5e0000000000
CONST	SEGMENT
__real@412a5e0000000000 DQ 0412a5e0000000000r	; 864000
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@8 DD imagerel ??_R0?AV?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@@8 ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@8 ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@?$_Func_base@XW4EnumEvent@@@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@8 DD 00H ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@'
	DB	'@QEAA@H@Z@XW4EnumEvent@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@6B@ DD 01H ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@@8
	DD	imagerel ??_R3?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@8
	DD	imagerel ??_R4?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Ref_count_obj2@Vthread@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Ref_count_obj2@Vthread@std@@@std@@8 DD imagerel ??_R0?AV?$_Ref_count_obj2@Vthread@std@@@std@@@8 ; std::_Ref_count_obj2<std::thread>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Ref_count_obj2@Vthread@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Ref_count_obj2@Vthread@std@@@std@@8
rdata$r	SEGMENT
??_R2?$_Ref_count_obj2@Vthread@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Ref_count_obj2@Vthread@std@@@std@@8 ; std::_Ref_count_obj2<std::thread>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Ref_count_base@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_Ref_count_obj2@Vthread@std@@@std@@8
rdata$r	SEGMENT
??_R3?$_Ref_count_obj2@Vthread@std@@@std@@8 DD 00H	; std::_Ref_count_obj2<std::thread>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$_Ref_count_obj2@Vthread@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Ref_count_obj2@Vthread@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Ref_count_obj2@Vthread@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Ref_count_obj2<std::thread> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Ref_count_obj2@Vthread@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Ref_count_obj2@Vthread@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Ref_count_obj2@Vthread@std@@@std@@6B@ DD 01H	; std::_Ref_count_obj2<std::thread>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$_Ref_count_obj2@Vthread@std@@@std@@@8
	DD	imagerel ??_R3?$_Ref_count_obj2@Vthread@std@@@std@@8
	DD	imagerel ??_R4?$_Ref_count_obj2@Vthread@std@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Ref_count_obj2@Vmutex@std@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Ref_count_obj2@Vmutex@std@@@std@@8 DD imagerel ??_R0?AV?$_Ref_count_obj2@Vmutex@std@@@std@@@8 ; std::_Ref_count_obj2<std::mutex>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Ref_count_obj2@Vmutex@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Ref_count_obj2@Vmutex@std@@@std@@8
rdata$r	SEGMENT
??_R2?$_Ref_count_obj2@Vmutex@std@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Ref_count_obj2@Vmutex@std@@@std@@8 ; std::_Ref_count_obj2<std::mutex>::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_Ref_count_base@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_Ref_count_obj2@Vmutex@std@@@std@@8
rdata$r	SEGMENT
??_R3?$_Ref_count_obj2@Vmutex@std@@@std@@8 DD 00H	; std::_Ref_count_obj2<std::mutex>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2?$_Ref_count_obj2@Vmutex@std@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Ref_count_obj2@Vmutex@std@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Ref_count_obj2@Vmutex@std@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Ref_count_obj2<std::mutex> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Ref_count_obj2@Vmutex@std@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4?$_Ref_count_obj2@Vmutex@std@@@std@@6B@
rdata$r	SEGMENT
??_R4?$_Ref_count_obj2@Vmutex@std@@@std@@6B@ DD 01H	; std::_Ref_count_obj2<std::mutex>::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV?$_Ref_count_obj2@Vmutex@std@@@std@@@8
	DD	imagerel ??_R3?$_Ref_count_obj2@Vmutex@std@@@std@@8
	DD	imagerel ??_R4?$_Ref_count_obj2@Vmutex@std@@@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@?$_Func_base@XW4EnumEvent@@@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@?$_Func_base@XW4EnumEvent@@@std@@8 DD imagerel ??_R0?AV?$_Func_base@XW4EnumEvent@@@std@@@8 ; std::_Func_base<void,enum EnumEvent>::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3?$_Func_base@XW4EnumEvent@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R2?$_Func_base@XW4EnumEvent@@@std@@8
rdata$r	SEGMENT
??_R2?$_Func_base@XW4EnumEvent@@@std@@8 DD imagerel ??_R1A@?0A@EA@?$_Func_base@XW4EnumEvent@@@std@@8 ; std::_Func_base<void,enum EnumEvent>::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3?$_Func_base@XW4EnumEvent@@@std@@8
rdata$r	SEGMENT
??_R3?$_Func_base@XW4EnumEvent@@@std@@8 DD 00H		; std::_Func_base<void,enum EnumEvent>::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2?$_Func_base@XW4EnumEvent@@@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV?$_Func_base@XW4EnumEvent@@@std@@@8
data$r	SEGMENT
??_R0?AV?$_Func_base@XW4EnumEvent@@@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Func_base<void,enum EnumEvent> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV?$_Func_base@XW4EnumEvent@@@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Ref_count_base@std@@8 DD imagerel ??_R0?AV_Ref_count_base@std@@@8 ; std::_Ref_count_base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R2_Ref_count_base@std@@8 DD imagerel ??_R1A@?0A@EA@_Ref_count_base@std@@8 ; std::_Ref_count_base::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Ref_count_base@std@@8
rdata$r	SEGMENT
??_R3_Ref_count_base@std@@8 DD 00H			; std::_Ref_count_base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2_Ref_count_base@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Ref_count_base@std@@@8
data$r	SEGMENT
??_R0?AV_Ref_count_base@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Ref_count_base `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Ref_count_base@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_Generic_error_category@std@@8 DD imagerel ??_R0?AV_Generic_error_category@std@@@8 ; std::_Generic_error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R2_Generic_error_category@std@@8 DD imagerel ??_R1A@?0A@EA@_Generic_error_category@std@@8 ; std::_Generic_error_category::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@error_category@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_Generic_error_category@std@@8
rdata$r	SEGMENT
??_R3_Generic_error_category@std@@8 DD 00H		; std::_Generic_error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2_Generic_error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AV_Generic_error_category@std@@@8
data$r	SEGMENT
??_R0?AV_Generic_error_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_Generic_error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_Generic_error_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R4_Generic_error_category@std@@6B@
rdata$r	SEGMENT
??_R4_Generic_error_category@std@@6B@ DD 01H		; std::_Generic_error_category::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_Generic_error_category@std@@@8
	DD	imagerel ??_R3_Generic_error_category@std@@8
	DD	imagerel ??_R4_Generic_error_category@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@system_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@system_error@std@@8 DD imagerel ??_R0?AVsystem_error@std@@@8 ; std::system_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2system_error@std@@8
rdata$r	SEGMENT
??_R2system_error@std@@8 DD imagerel ??_R1A@?0A@EA@system_error@std@@8 ; std::system_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@_System_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3system_error@std@@8
rdata$r	SEGMENT
??_R3system_error@std@@8 DD 00H				; std::system_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	imagerel ??_R2system_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4system_error@std@@6B@
rdata$r	SEGMENT
??_R4system_error@std@@6B@ DD 01H			; std::system_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVsystem_error@std@@@8
	DD	imagerel ??_R3system_error@std@@8
	DD	imagerel ??_R4system_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@_System_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@_System_error@std@@8 DD imagerel ??_R0?AV_System_error@std@@@8 ; std::_System_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2_System_error@std@@8
rdata$r	SEGMENT
??_R2_System_error@std@@8 DD imagerel ??_R1A@?0A@EA@_System_error@std@@8 ; std::_System_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@runtime_error@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3_System_error@std@@8
rdata$r	SEGMENT
??_R3_System_error@std@@8 DD 00H			; std::_System_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2_System_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4_System_error@std@@6B@
rdata$r	SEGMENT
??_R4_System_error@std@@6B@ DD 01H			; std::_System_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AV_System_error@std@@@8
	DD	imagerel ??_R3_System_error@std@@8
	DD	imagerel ??_R4_System_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@error_category@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@error_category@std@@8 DD imagerel ??_R0?AVerror_category@std@@@8 ; std::error_category::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R2error_category@std@@8
rdata$r	SEGMENT
??_R2error_category@std@@8 DD imagerel ??_R1A@?0A@EA@error_category@std@@8 ; std::error_category::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3error_category@std@@8
rdata$r	SEGMENT
??_R3error_category@std@@8 DD 00H			; std::error_category::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2error_category@std@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVerror_category@std@@@8
data$r	SEGMENT
??_R0?AVerror_category@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::error_category `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVerror_category@std@@', 00H
data$r	ENDS
;	COMDAT ??_R1A@?0A@EA@runtime_error@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@runtime_error@std@@8 DD imagerel ??_R0?AVruntime_error@std@@@8 ; std::runtime_error::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R2runtime_error@std@@8
rdata$r	SEGMENT
??_R2runtime_error@std@@8 DD imagerel ??_R1A@?0A@EA@runtime_error@std@@8 ; std::runtime_error::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3runtime_error@std@@8
rdata$r	SEGMENT
??_R3runtime_error@std@@8 DD 00H			; std::runtime_error::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2runtime_error@std@@8
rdata$r	ENDS
;	COMDAT ??_R4runtime_error@std@@6B@
rdata$r	SEGMENT
??_R4runtime_error@std@@6B@ DD 01H			; std::runtime_error::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	imagerel ??_R3runtime_error@std@@8
	DD	imagerel ??_R4runtime_error@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R0?AV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@8
data$r	SEGMENT
??_R0?AV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@8 DQ FLAT:??_7type_info@@6B@ ; `ThreadPool::ThreadPool'::`1'::<lambda_1_> `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@', 00H
data$r	ENDS
;	COMDAT ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
CONST	SEGMENT
??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@6B@
CONST	SEGMENT
??_7?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@6B@ DQ FLAT:??_R4?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@6B@ ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::`vftable'
	DQ	FLAT:?_Copy@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z
	DQ	FLAT:?_Move@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z
	DQ	FLAT:?_Do_call@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX$$QEAW4EnumEvent@@@Z
	DQ	FLAT:?_Target_type@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAAEBVtype_info@@XZ
	DQ	FLAT:?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX_N@Z
	DQ	FLAT:?_Get@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEBXXZ
CONST	ENDS
;	COMDAT ??_C@_0BA@JFNIOLAK@string?5too?5long@
CONST	SEGMENT
??_C@_0BA@JFNIOLAK@string?5too?5long@ DB 'string too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DD@FIHHIPGM@cache?5buffer?5is?5full?0?5please?5wa@
CONST	SEGMENT
??_C@_0DD@FIHHIPGM@cache?5buffer?5is?5full?0?5please?5wa@ DB 'cache buffe'
	DB	'r is full, please waitting, thread id: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long@ DB 'list<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7?$_Ref_count_obj2@Vthread@std@@@std@@6B@
CONST	SEGMENT
??_7?$_Ref_count_obj2@Vthread@std@@@std@@6B@ DQ FLAT:??_R4?$_Ref_count_obj2@Vthread@std@@@std@@6B@ ; std::_Ref_count_obj2<std::thread>::`vftable'
	DQ	FLAT:?_Destroy@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ
	DQ	FLAT:?_Delete_this@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ
	DQ	FLAT:??_E?$_Ref_count_obj2@Vthread@std@@@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z
CONST	ENDS
;	COMDAT ??_7?$_Ref_count_obj2@Vmutex@std@@@std@@6B@
CONST	SEGMENT
??_7?$_Ref_count_obj2@Vmutex@std@@@std@@6B@ DQ FLAT:??_R4?$_Ref_count_obj2@Vmutex@std@@@std@@6B@ ; std::_Ref_count_obj2<std::mutex>::`vftable'
	DQ	FLAT:?_Destroy@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ
	DQ	FLAT:?_Delete_this@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ
	DQ	FLAT:??_E?$_Ref_count_obj2@Vmutex@std@@@std@@UEAAPEAXI@Z
	DQ	FLAT:?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z
CONST	ENDS
;	COMDAT ??_C@_0CL@KMJOIDCD@cache?5buffer?5is?5empty?0?5please?5w@
CONST	SEGMENT
??_C@_0CL@KMJOIDCD@cache?5buffer?5is?5empty?0?5please?5w@ DB 'cache buffe'
	DB	'r is empty, please waitting ...', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@BKEGLPGN@?5this?5thread?5id?3?$DN?5@
CONST	SEGMENT
??_C@_0BD@BKEGLPGN@?5this?5thread?5id?3?$DN?5@ DB ' this thread id:= ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@NGJDHBOA@SyncQueue?5Add?5@
CONST	SEGMENT
??_C@_0P@NGJDHBOA@SyncQueue?5Add?5@ DB 'SyncQueue Add ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@GFBIAGP@?0?5this?5thread?5id?3?$DN?5@
CONST	SEGMENT
??_C@_0BE@GFBIAGP@?0?5this?5thread?5id?3?$DN?5@ DB ', this thread id:= ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BG@GPONIBBL@_finish_task_count?3?$DN?5@
CONST	SEGMENT
??_C@_0BG@GPONIBBL@_finish_task_count?3?$DN?5@ DB '_finish_task_count:= ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_07JEDMOLAO@runable@
CONST	SEGMENT
??_C@_07JEDMOLAO@runable@ DB 'runable', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_05FAGFPHJG@start@
CONST	SEGMENT
??_C@_05FAGFPHJG@start@ DB 'start', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0P@FHKAOMPO@call?5once?5stop@
CONST	SEGMENT
??_C@_0P@FHKAOMPO@call?5once?5stop@ DB 'call once stop', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0M@CCLFAFBA@______e?5?3?$DN?5@
CONST	SEGMENT
??_C@_0M@CCLFAFBA@______e?5?3?$DN?5@ DB '______e := ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_05JCNIFBKL@?5___?5@
CONST	SEGMENT
??_C@_05JCNIFBKL@?5___?5@ DB ' ___ ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_07DCLBNMLN@generic@
CONST	SEGMENT
??_C@_07DCLBNMLN@generic@ DB 'generic', 00H		; `string'
CONST	ENDS
;	COMDAT ??_7_Generic_error_category@std@@6B@
CONST	SEGMENT
??_7_Generic_error_category@std@@6B@ DQ FLAT:??_R4_Generic_error_category@std@@6B@ ; std::_Generic_error_category::`vftable'
	DQ	FLAT:??_E_Generic_error_category@std@@UEAAPEAXI@Z
	DQ	FLAT:?name@_Generic_error_category@std@@UEBAPEBDXZ
	DQ	FLAT:?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
	DQ	FLAT:?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
	DQ	FLAT:?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
CONST	ENDS
;	COMDAT _CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40
xdata$x	SEGMENT
_CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40 DD 00H
	DD	imagerel ??_R0?AV_System_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0_System_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AV_System_error@std@@@8
data$r	SEGMENT
??_R0?AV_System_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::_System_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AV_System_error@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40
xdata$x	SEGMENT
_CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40 DD 00H
	DD	imagerel ??_R0?AVsystem_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	028H
	DD	imagerel ??0system_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVsystem_error@std@@@8
data$r	SEGMENT
??_R0?AVsystem_error@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::system_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVsystem_error@std@@', 00H
data$r	ENDS
;	COMDAT _CTA4?AVsystem_error@std@@
xdata$x	SEGMENT
_CTA4?AVsystem_error@std@@ DD 04H
	DD	imagerel _CT??_R0?AVsystem_error@std@@@8??0system_error@std@@QEAA@AEBV01@@Z40
	DD	imagerel _CT??_R0?AV_System_error@std@@@8??0_System_error@std@@QEAA@AEBV01@@Z40
	DD	imagerel _CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI4?AVsystem_error@std@@
xdata$x	SEGMENT
_TI4?AVsystem_error@std@@ DD 00H
	DD	imagerel ??1system_error@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA4?AVsystem_error@std@@
xdata$x	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
CONST	ENDS
;	COMDAT ??_7system_error@std@@6B@
CONST	SEGMENT
??_7system_error@std@@6B@ DQ FLAT:??_R4system_error@std@@6B@ ; std::system_error::`vftable'
	DQ	FLAT:??_Esystem_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_02LMMGGCAJ@?3?5@
CONST	SEGMENT
??_C@_02LMMGGCAJ@?3?5@ DB ': ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_7_System_error@std@@6B@
CONST	SEGMENT
??_7_System_error@std@@6B@ DQ FLAT:??_R4_System_error@std@@6B@ ; std::_System_error::`vftable'
	DQ	FLAT:??_E_System_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT _CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVruntime_error@std@@@8??0runtime_error@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVruntime_error@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0runtime_error@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVruntime_error@std@@@8
data$r	SEGMENT
??_R0?AVruntime_error@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::runtime_error `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVruntime_error@std@@', 00H
data$r	ENDS
;	COMDAT ??_7runtime_error@std@@6B@
CONST	SEGMENT
??_7runtime_error@std@@6B@ DQ FLAT:??_R4runtime_error@std@@6B@ ; std::runtime_error::`vftable'
	DQ	FLAT:??_Eruntime_error@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'E'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'p', 00H, 'r', 00H
	DB	'i', 00H, 's', 00H, 'e', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\T'
	DB	'ools\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA DD 066H ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0PEAVThreadPool@@@?$_Tuple_val@PEAVThreadPool@@@std@@QEAA@$$QEAPEAVThreadPool@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@YAAEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@YAAEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@YAAEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@YAAEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@YAAEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0P8ThreadPool@@EAAXXZ@?$_Tuple_val@P8ThreadPool@@EAAXXZ@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@PEAVThreadPool@@$$V$0A@@?$tuple@PEAVThreadPool@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVThreadPool@@@Z DD 025053301H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z DB 060H
	DD	imagerel $ip2state$??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@P8ThreadPool@@EAAXXZPEAV2@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@U_Exact_args_t@1@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV3@@Z DD 025053801H
	DD	011c2321H
	DD	070150025H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DB 060H
	DD	imagerel $ip2state$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z DB 060H
	DD	imagerel $ip2state$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@P8ThreadPool@@EAAXXZPEAV1@@std@@YAX$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@P8ThreadPool@@EAAXXZPEAV1@$$V@_Invoker_pmf_pointer@std@@SAXP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAPEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAPEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAPEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAPEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get@$00P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAPEAVThreadPool@@AEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get@$00P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAPEAVThreadPool@@AEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z DB 060H
	DD	imagerel $ip2state$??$get@$00P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAPEAVThreadPool@@AEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$00P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAPEAVThreadPool@@AEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get@$00P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAPEAVThreadPool@@AEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAP8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAP8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAP8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAP8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAP8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get@$0A@P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAP8ThreadPool@@EAAXXZAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get@$0A@P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAP8ThreadPool@@EAAXXZAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z DB 060H
	DD	imagerel $ip2state$??$get@$0A@P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAP8ThreadPool@@EAAXXZAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$0A@P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAP8ThreadPool@@EAAXXZAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get@$0A@P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAP8ThreadPool@@EAAXXZAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z DB 060H
	DD	imagerel $ip2state$??$?0U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0P8ThreadPool@@EAAXXZPEAV0@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0P8ThreadPool@@EAAXXZPEAV0@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DB 060H
	DD	imagerel $ip2state$??$?0P8ThreadPool@@EAAXXZPEAV0@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0P8ThreadPool@@EAAXXZPEAV0@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DD 025053419H
	DD	0118231dH
	DD	07011002bH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0P8ThreadPool@@EAAXXZPEAV0@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAV?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAV?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAV?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAV?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@PEAV12@@std@@YAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@$$QEAPEAV10@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z DB 060H
	DD	imagerel $ip2state$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z DB 060H
	DD	imagerel $ip2state$??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DB 060H
	DD	imagerel $ip2state$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z DB 060H
	DD	imagerel $ip2state$??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z DB 060H
	DD	imagerel $ip2state$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z DB 060H
	DD	imagerel $ip2state$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z DD 025052f19H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DB 060H
	DD	imagerel $ip2state$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAVexception_ptr@std@@@?$_Tuple_val@AEAVexception_ptr@std@@@std@@QEAA@AEAVexception_ptr@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DB 060H
	DD	imagerel $ip2state$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z DD 025052e19H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z DB 060H
	DD	imagerel $ip2state$??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z DD 025053b19H
	DD	010e2313H
	DD	07007002bH
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z
	DD	014bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcName$0 DB 05fH ; std::thread::_Invoke<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,0,1>
	DB	046H
	DB	06eH
	DB	056H
	DB	061H
	DB	06cH
	DB	073H
	DB	00H
	ORG $+8
??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcVarDesc DD 028H ; std::thread::_Invoke<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,0,1>
	DD	08H
	DQ	FLAT:??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcName$0
	ORG $+48
??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcFrameData DD 01H ; std::thread::_Invoke<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,0,1>
	DD	00H
	DQ	FLAT:??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?release@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?release@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ DB 060H
	DD	imagerel $ip2state$?release@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?release@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?release@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?get@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?get@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ DB 060H
	DD	imagerel $ip2state$?get@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?get@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??D?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??D?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@XZ DB 060H
	DD	imagerel $ip2state$??D?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??D?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??R?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@QEBAXPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??R?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@QEBAXPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z DB 060H
	DD	imagerel $ip2state$??R?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@QEBAXPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@QEBAXPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??R?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@QEBAXPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_unique@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@P8ThreadPool@@EAAXXZPEAV3@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DD 025053401H
	DD	0118231dH
	DD	070110027H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$function@$$A6AXXZ@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@AEBV31@@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@$$QEAV31@@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z DB 060H
	DD	imagerel $ip2state$??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DB 060H
	DD	imagerel $ip2state$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z DB 060H
	DD	imagerel $ip2state$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0035H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DB 060H
	DD	imagerel $ip2state$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DB 060H
	DD	imagerel $ip2state$??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z DB 060H
	DD	imagerel $ip2state$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z DD 025053419H
	DD	0118231dH
	DD	070110029H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DB 060H
	DD	imagerel $ip2state$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD 025052f19H
	DD	01132318H
	DD	0700c0027H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z DB 060H
	DD	imagerel $ip2state$??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@?$_Tuple_val@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@AEAVexception_ptr@1@$$V$0A@@?$tuple@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@AEAVexception_ptr@1@@Z DD 025053301H
	DD	0117231cH
	DD	070100021H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Copy_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEBV?$shared_ptr@Vmutex@std@@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Copy_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEBV?$shared_ptr@Vmutex@std@@@1@@Z DB 060H
	DD	imagerel $ip2state$??$_Copy_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEBV?$shared_ptr@Vmutex@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEBV?$shared_ptr@Vmutex@std@@@1@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Copy_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEBV?$shared_ptr@Vmutex@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@?$_Invoker_ret@X$00@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@$$CBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAPEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@$$CBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAPEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@$$CBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAPEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAPEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@$$CBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAPEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$function@$$A6AXXZ@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	0a8H
	DB	02H
	DB	0d2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z
	DD	imagerel $ip2state$??$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z DD 025053411H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	0a8H
	DB	02H
	DB	0d2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z
	DD	imagerel $ip2state$??$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z DD 025053411H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z DB 060H
	DD	imagerel $ip2state$?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z DD 025054019H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z
	DD	011bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z$rtcName$0 DB 05fH ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Transfer_before
	DB	049H
	DB	06eH
	DB	073H
	DB	065H
	DB	072H
	DB	074H
	DB	05fH
	DB	061H
	DB	066H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+2
?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z$rtcVarDesc DD 028H ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Transfer_before
	DD	08H
	DQ	FLAT:?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z$rtcName$0
	ORG $+48
?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z$rtcFrameData DD 01H ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Transfer_before
	DD	00H
	DQ	FLAT:?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Relock@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@CAXAEAV?$unique_lock@Vmutex@std@@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Relock@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@CAXAEAV?$unique_lock@Vmutex@std@@@1@@Z DB 060H
	DD	imagerel $ip2state$??$_Relock@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@CAXAEAV?$unique_lock@Vmutex@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Relock@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@CAXAEAV?$unique_lock@Vmutex@std@@@1@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Relock@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@CAXAEAV?$unique_lock@Vmutex@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z DB 060H
	DD	imagerel $ip2state$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z DD 025054019H
	DD	01132318H
	DD	0700c0043H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z
	DD	0203H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$0 DB 05fH ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DB	054H
	DB	065H
	DB	06eH
	DB	05fH
	DB	064H
	DB	061H
	DB	079H
	DB	073H
	DB	00H
	ORG $+6
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$1 DB 05fH ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DB	054H
	DB	065H
	DB	06eH
	DB	05fH
	DB	064H
	DB	061H
	DB	079H
	DB	073H
	DB	05fH
	DB	064H
	DB	00H
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$2 DB 05fH ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DB	054H
	DB	030H
	DB	00H
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$3 DB 05fH ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DB	057H
	DB	068H
	DB	06fH
	DB	06cH
	DB	065H
	DB	05fH
	DB	073H
	DB	065H
	DB	063H
	DB	06fH
	DB	06eH
	DB	064H
	DB	073H
	DB	00H
	ORG $+1
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcVarDesc DD 0a8H ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DD	08H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$3
	DD	068H
	DD	08H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$2
	DD	048H
	DD	08H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcName$0
	ORG $+192
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcFrameData DD 04H ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
	DD	00H
	DQ	FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DB 060H
	DD	imagerel $ip2state$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD 025053419H
	DD	0118231dH
	DD	070110027H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DB 060H
	DD	imagerel $ip2state$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z DD 025052f19H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DB 060H
	DD	imagerel $ip2state$??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DD 025053419H
	DD	0118231dH
	DD	070110029H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@V?$shared_ptr@Vthread@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@$$QEAV31@@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DB 06H
	DB	00H
	DB	00H
	DB	'u', 02H
	DB	02H
	DB	019H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
	DD	imagerel $ip2state$??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DD 035054519H
	DD	0118331dH
	DD	070110029H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
	DD	013aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z$rtcName$0 DB 05fH ; std::thread::thread<void (__cdecl ThreadPool::*)(void),ThreadPool *,void>
	DB	044H
	DB	065H
	DB	063H
	DB	061H
	DB	079H
	DB	05fH
	DB	063H
	DB	06fH
	DB	070H
	DB	069H
	DB	065H
	DB	064H
	DB	00H
	ORG $+2
??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z$rtcVarDesc DD 038H ; std::thread::thread<void (__cdecl ThreadPool::*)(void),ThreadPool *,void>
	DD	08H
	DQ	FLAT:??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z$rtcName$0
	ORG $+48
??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z$rtcFrameData DD 01H ; std::thread::thread<void (__cdecl ThreadPool::*)(void),ThreadPool *,void>
	DD	00H
	DQ	FLAT:??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YAXAEAVthread@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DD 025053401H
	DD	0118231dH
	DD	070110023H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get@$00$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get@$00$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z DB 060H
	DD	imagerel $ip2state$??$get@$00$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$00$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get@$00$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Invoke_stored_explicit@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$$Z$0A@@std@@YAX$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@U?$integer_sequence@_K$0A@@0@@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$get@$0A@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$get@$0A@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z DB 060H
	DD	imagerel $ip2state$??$get@$0A@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$get@$0A@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$get@$0A@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U_Exact_args_t@std@@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z DD 025053801H
	DD	011c2321H
	DD	070150025H
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z DB 060H
	DD	imagerel $ip2state$??$forward@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX_N@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX_N@Z DB 060H
	DD	imagerel $ip2state$?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX_N@Z DD 025052e19H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEBXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEBXXZ DB 060H
	DD	imagerel $ip2state$?_Get@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEBXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEBXXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEBXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Target_type@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAAEBVtype_info@@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Target_type@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAAEBVtype_info@@XZ DB 060H
	DD	imagerel $ip2state$?_Target_type@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAAEBVtype_info@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Target_type@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAAEBVtype_info@@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Target_type@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAAEBVtype_info@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Do_call@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX$$QEAW4EnumEvent@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Move@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Move@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z DB 060H
	DD	imagerel $ip2state$?_Move@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Move@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Copy@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z DD 025052f01H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Test_callable@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA_NAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Test_callable@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA_NAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DB 060H
	DD	imagerel $ip2state$??$_Test_callable@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA_NAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Test_callable@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA_NAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Test_callable@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA_NAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_in_place@Vmutex@std@@$$V@std@@YAXAEAVmutex@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_in_place@Vmutex@std@@$$V@std@@YAXAEAVmutex@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Construct_in_place@Vmutex@std@@$$V@std@@YAXAEAVmutex@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@Vmutex@std@@$$V@std@@YAXAEAVmutex@0@@Z DD 025052a19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_in_place@Vmutex@std@@$$V@std@@YAXAEAVmutex@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Move_construct_from@Vthread@std@@@?$_Ptr_base@Vthread@std@@@std@@IEAAX$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Move_construct_from@Vthread@std@@@?$_Ptr_base@Vthread@std@@@std@@IEAAX$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??$_Move_construct_from@Vthread@std@@@?$_Ptr_base@Vthread@std@@@std@@IEAAX$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_construct_from@Vthread@std@@@?$_Ptr_base@Vthread@std@@@std@@IEAAX$$QEAV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Move_construct_from@Vthread@std@@@?$_Ptr_base@Vthread@std@@@std@@IEAAX$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAV?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAV?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAV?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAV?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_in_place@Vmutex@std@@@std@@YAXAEAVmutex@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_in_place@Vmutex@std@@@std@@YAXAEAVmutex@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Destroy_in_place@Vmutex@std@@@std@@YAXAEAVmutex@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@Vmutex@std@@@std@@YAXAEAVmutex@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_in_place@Vmutex@std@@@std@@YAXAEAVmutex@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_in_place@Vthread@std@@@std@@YAXAEAVthread@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_in_place@Vthread@std@@@std@@YAXAEAVthread@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Destroy_in_place@Vthread@std@@@std@@YAXAEAVthread@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@Vthread@std@@@std@@YAXAEAVthread@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_in_place@Vthread@std@@@std@@YAXAEAVthread@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@V?$shared_ptr@Vthread@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@V?$shared_ptr@Vthread@std@@@std@@@std@@YAPEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@V?$shared_ptr@Vthread@std@@@std@@@std@@YAPEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@V?$shared_ptr@Vthread@std@@@std@@@std@@YAPEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$shared_ptr@Vthread@std@@@std@@@std@@YAPEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@V?$shared_ptr@Vthread@std@@@std@@@std@@YAPEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z DB 060H
	DD	imagerel $ip2state$??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAPEAVmutex@std@@@std@@YA$$QEAPEAVmutex@0@AEAPEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAPEAVmutex@std@@@std@@YA$$QEAPEAVmutex@0@AEAPEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAPEAVmutex@std@@@std@@YA$$QEAPEAVmutex@0@AEAPEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAPEAVmutex@std@@@std@@YA$$QEAPEAVmutex@0@AEAPEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAPEAVmutex@std@@@std@@YA$$QEAPEAVmutex@0@AEAPEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 035052a01H
	DD	010e3313H
	DD	07007002bH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DB 060H
	DD	imagerel $ip2state$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Destroy_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Destroy_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Freenode@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Freenode@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z DB 060H
	DD	imagerel $ip2state$??$_Freenode@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Freenode@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@$$CB_N@std@@YAPEB_NAEB_N@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@$$CB_N@std@@YAPEB_NAEB_N@Z DB 060H
	DD	imagerel $ip2state$??$addressof@$$CB_N@std@@YAPEB_NAEB_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CB_N@std@@YAPEB_NAEB_N@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@$$CB_N@std@@YAPEB_NAEB_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Freenode@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Freenode@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z DB 060H
	DD	imagerel $ip2state$??$_Freenode@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Freenode@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@AEBV?$function@$$A6AXXZ@1@@Z DD 025054519H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	0158H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Emplace@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@AEBV?$function@$$A6AXXZ@1@@Z$rtcName$0 DB 05fH ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Emplace<std::function<void __cdecl(void)> const &>
	DB	04fH
	DB	070H
	DB	00H
	ORG $+12
??$_Emplace@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@AEBV?$function@$$A6AXXZ@1@@Z$rtcVarDesc DD 048H ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Emplace<std::function<void __cdecl(void)> const &>
	DD	010H
	DQ	FLAT:??$_Emplace@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@AEBV?$function@$$A6AXXZ@1@@Z$rtcName$0
	ORG $+48
??$_Emplace@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@AEBV?$function@$$A6AXXZ@1@@Z$rtcFrameData DD 01H ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Emplace<std::function<void __cdecl(void)> const &>
	DD	00H
	DQ	FLAT:??$_Emplace@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@AEBV?$function@$$A6AXXZ@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@AEBV?$function@$$A6AXXZ@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@1@@Z@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@$$QEAV?$function@$$A6AXXZ@1@@Z DD 025054519H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	0158H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Emplace@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@$$QEAV?$function@$$A6AXXZ@1@@Z$rtcName$0 DB 05fH ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Emplace<std::function<void __cdecl(void)> >
	DB	04fH
	DB	070H
	DB	00H
	ORG $+12
??$_Emplace@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@$$QEAV?$function@$$A6AXXZ@1@@Z$rtcVarDesc DD 048H ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Emplace<std::function<void __cdecl(void)> >
	DD	010H
	DQ	FLAT:??$_Emplace@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@$$QEAV?$function@$$A6AXXZ@1@@Z$rtcName$0
	ORG $+48
??$_Emplace@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@$$QEAV?$function@$$A6AXXZ@1@@Z$rtcFrameData DD 01H ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Emplace<std::function<void __cdecl(void)> >
	DD	00H
	DQ	FLAT:??$_Emplace@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@$$QEAV?$function@$$A6AXXZ@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@$$QEAV?$function@$$A6AXXZ@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@1@@Z@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0dcH
	DB	02H
	DB	','
	DB	04H
	DB	0a4H
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z
	DD	imagerel $ip2state$??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z DD 025054019H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z
	DD	013aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z$rtcName$0 DB 05fH ; std::condition_variable_any::wait<std::unique_lock<std::mutex> >
	DB	050H
	DB	074H
	DB	072H
	DB	00H
	ORG $+3
??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z$rtcName$1 DB 05fH ; std::condition_variable_any::wait<std::unique_lock<std::mutex> >
	DB	04cH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+3
??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z$rtcVarDesc DD 058H ; std::condition_variable_any::wait<std::unique_lock<std::mutex> >
	DD	08H
	DQ	FLAT:??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z$rtcName$0
	ORG $+96
??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z$rtcFrameData DD 02H ; std::condition_variable_any::wait<std::unique_lock<std::mutex> >
	DD	00H
	DQ	FLAT:??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z DD 025053b19H
	DD	010e2313H
	DD	07007002bH
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0148H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcName$0 DB 05fH ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	DB	04eH
	DB	06fH
	DB	077H
	DB	00H
	ORG $+3
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcName$1 DB 05fH ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	DB	054H
	DB	067H
	DB	074H
	DB	00H
	ORG $+3
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcVarDesc DD 048H ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	DD	010H
	DQ	FLAT:??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcName$0
	ORG $+96
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcFrameData DD 02H ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
	DD	00H
	DQ	FLAT:??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DB 060H
	DD	imagerel $ip2state$??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z DD 025053419H
	DD	0118231dH
	DD	070110025H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	0a8H
	DB	02H
	DB	0d2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z
	DD	imagerel $ip2state$??$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z DD 025053411H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z DB 060H
	DD	imagerel $ip2state$?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z DD 025054019H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z
	DD	011bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z$rtcName$0 DB 05fH ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Transfer_before
	DB	049H
	DB	06eH
	DB	073H
	DB	065H
	DB	072H
	DB	074H
	DB	05fH
	DB	061H
	DB	066H
	DB	074H
	DB	065H
	DB	072H
	DB	00H
	ORG $+2
?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z$rtcVarDesc DD 028H ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Transfer_before
	DD	08H
	DQ	FLAT:?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z$rtcName$0
	ORG $+48
?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z$rtcFrameData DD 01H ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Transfer_before
	DD	00H
	DQ	FLAT:?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Set_ptr_rep_and_enable_shared@Vthread@std@@@?$shared_ptr@Vthread@std@@@std@@AEAAXQEAVthread@1@QEAV_Ref_count_base@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Set_ptr_rep_and_enable_shared@Vthread@std@@@?$shared_ptr@Vthread@std@@@std@@AEAAXQEAVthread@1@QEAV_Ref_count_base@1@@Z DB 060H
	DD	imagerel $ip2state$??$_Set_ptr_rep_and_enable_shared@Vthread@std@@@?$shared_ptr@Vthread@std@@@std@@AEAAXQEAVthread@1@QEAV_Ref_count_base@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Set_ptr_rep_and_enable_shared@Vthread@std@@@?$shared_ptr@Vthread@std@@@std@@AEAAXQEAVthread@1@QEAV_Ref_count_base@1@@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Set_ptr_rep_and_enable_shared@Vthread@std@@@?$shared_ptr@Vthread@std@@@std@@AEAAXQEAVthread@1@QEAV_Ref_count_base@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DB 06H
	DB	00H
	DB	00H
	DB	0baH
	DB	02H
	DB	0b2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
	DD	imagerel $ip2state$??$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DD 025053411H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z DB 060H
	DD	imagerel $ip2state$??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z DB 060H
	DD	imagerel $ip2state$??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$_Ref_count_obj2@Vthread@std@@@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Delete_this@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Delete_this@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Delete_this@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Delete_this@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	070070023H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Delete_this@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Destroy@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Destroy@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Destroy@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Destroy@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Ref_count_obj2@Vthread@std@@@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Ref_count_obj2@Vthread@std@@@std@@UEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$_Ref_count_obj2@Vthread@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Ref_count_obj2@Vthread@std@@@std@@UEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Ref_count_obj2@Vthread@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YAPEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YAPEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YAPEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YAPEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YAPEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z DB 06H
	DB	00H
	DB	00H
	DB	096H
	DB	02H
	DB	'b'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z
	DD	imagerel $tryMap$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z
	DD	imagerel $ip2state$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z DD 025053419H
	DD	0118231dH
	DD	070110037H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z DB 060H
	DD	imagerel $ip2state$??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z DD 025053419H
	DD	0118231dH
	DD	07011002bH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z DB 060H
	DD	imagerel $ip2state$??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reset@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Set_ptr_rep_and_enable_shared@Vmutex@std@@@?$shared_ptr@Vmutex@std@@@std@@AEAAXQEAVmutex@1@QEAV_Ref_count_base@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Set_ptr_rep_and_enable_shared@Vmutex@std@@@?$shared_ptr@Vmutex@std@@@std@@AEAAXQEAVmutex@1@QEAV_Ref_count_base@1@@Z DB 060H
	DD	imagerel $ip2state$??$_Set_ptr_rep_and_enable_shared@Vmutex@std@@@?$shared_ptr@Vmutex@std@@@std@@AEAAXQEAVmutex@1@QEAV_Ref_count_base@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Set_ptr_rep_and_enable_shared@Vmutex@std@@@?$shared_ptr@Vmutex@std@@@std@@AEAAXQEAVmutex@1@QEAV_Ref_count_base@1@@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Set_ptr_rep_and_enable_shared@Vmutex@std@@@?$shared_ptr@Vmutex@std@@@std@@AEAAXQEAVmutex@1@QEAV_Ref_count_base@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Ref_count_obj2@Vmutex@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$_Ref_count_obj2@Vmutex@std@@@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Delete_this@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Delete_this@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Delete_this@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Delete_this@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	070070023H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Delete_this@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Destroy@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Destroy@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Destroy@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Destroy@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Ref_count_obj2@Vmutex@std@@@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Ref_count_obj2@Vmutex@std@@@std@@UEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$_Ref_count_obj2@Vmutex@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Ref_count_obj2@Vmutex@std@@@std@@UEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Ref_count_obj2@Vmutex@std@@@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Immortalize_impl@V_Generic_error_category@std@@@std@@YAHPEAX0PEAPEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Immortalize_impl@V_Generic_error_category@std@@@std@@YAHPEAX0PEAPEAX@Z DB 060H
	DD	imagerel $ip2state$??$_Immortalize_impl@V_Generic_error_category@std@@@std@@YAHPEAX0PEAPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Immortalize_impl@V_Generic_error_category@std@@@std@@YAHPEAX0PEAPEAX@Z DD 025053419H
	DD	0118231dH
	DD	070110021H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Immortalize_impl@V_Generic_error_category@std@@@std@@YAHPEAX0PEAPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$swap@_KX@std@@YAXAEA_K0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$swap@_KX@std@@YAXAEA_K0@Z DB 060H
	DD	imagerel $ip2state$??$swap@_KX@std@@YAXAEA_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@_KX@std@@YAXAEA_K0@Z DD 025054019H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$swap@_KX@std@@YAXAEA_K0@Z
	DD	0fbH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@_KX@std@@YAXAEA_K0@Z$rtcName$0 DB 05fH		; std::swap<unsigned __int64,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@_KX@std@@YAXAEA_K0@Z$rtcVarDesc DD 028H		; std::swap<unsigned __int64,void>
	DD	08H
	DQ	FLAT:??$swap@_KX@std@@YAXAEA_K0@Z$rtcName$0
	ORG $+48
??$swap@_KX@std@@YAXAEA_K0@Z$rtcFrameData DD 01H	; std::swap<unsigned __int64,void>
	DD	00H
	DQ	FLAT:??$swap@_KX@std@@YAXAEA_K0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z DB 060H
	DD	imagerel $ip2state$??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z DD 025054019H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z
	DD	0fbH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z$rtcName$0 DB 05fH ; std::swap<std::_List_node<std::function<void __cdecl(void)>,void *> *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z$rtcVarDesc DD 028H ; std::swap<std::_List_node<std::function<void __cdecl(void)>,void *> *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z$rtcName$0
	ORG $+48
??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z$rtcFrameData DD 01H ; std::swap<std::_List_node<std::function<void __cdecl(void)>,void *> *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Swap_adl@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Swap_adl@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z DB 060H
	DD	imagerel $ip2state$??$_Swap_adl@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Swap_adl@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Swap_adl@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DB 060H
	DD	imagerel $ip2state$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z DD 025054019H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
	DD	0fbH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcName$0 DB 05fH ; std::swap<std::_Ref_count_base *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcVarDesc DD 028H ; std::swap<std::_Ref_count_base *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcName$0
	ORG $+48
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcFrameData DD 01H ; std::swap<std::_Ref_count_base *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z DB 060H
	DD	imagerel $ip2state$??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z DD 025054019H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z
	DD	0fbH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z$rtcName$0 DB 05fH ; std::swap<std::mutex *,void>
	DB	054H
	DB	06dH
	DB	070H
	DB	00H
	ORG $+11
??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z$rtcVarDesc DD 028H ; std::swap<std::mutex *,void>
	DD	08H
	DQ	FLAT:??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z$rtcName$0
	ORG $+48
??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z$rtcFrameData DD 01H ; std::swap<std::mutex *,void>
	DD	00H
	DQ	FLAT:??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0FA@@std@@YA_K_K@Z DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Pocma@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Pocma@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@0@Z DB 060H
	DD	imagerel $ip2state$??$_Pocma@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pocma@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@0@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Pocma@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$00@std@@YA_K_K@Z DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DB 060H
	DD	imagerel $ip2state$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z DD 035054a19H
	DD	011d3322H
	DD	070160043H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0208H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z$rtcVarDesc DD 0f8H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
	DD	08H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z$rtcName$0
	ORG $+48
??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
	DD	00H
	DQ	FLAT:??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z DD 025053901H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z DD 025054a19H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0158H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	070H
	DB	074H
	DB	072H
	DB	00H
	ORG $+7
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z$rtcVarDesc DD 088H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
	DD	08H
	DQ	FLAT:??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z$rtcName$0
	ORG $+48
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
	DD	00H
	DQ	FLAT:??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z DD 025053901H
	DD	011d2322H
	DD	070160021H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DB 060H
	DD	imagerel $ip2state$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DB 060H
	DD	imagerel $ip2state$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Move_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAX$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Move_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAX$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??$_Move_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAX$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAX$$QEAV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Move_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAX$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Func_base@XW4EnumEvent@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Func_base@XW4EnumEvent@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$_Func_base@XW4EnumEvent@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Func_base@XW4EnumEvent@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Func_base@XW4EnumEvent@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Freenode0@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Freenode0@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z DB 060H
	DD	imagerel $ip2state$??$_Freenode0@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode0@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Freenode0@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@0@Z DB 060H
	DD	imagerel $ip2state$??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@0@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@V?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YAPEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@V?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YAPEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@V?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YAPEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YAPEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@V?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YAPEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Freenode0@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Freenode0@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z DB 060H
	DD	imagerel $ip2state$??$_Freenode0@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Freenode0@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Freenode0@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Free_non_head@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Free_non_head@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z DB 060H
	DD	imagerel $ip2state$??$_Free_non_head@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Free_non_head@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Free_non_head@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z DB 060H
	DD	imagerel $ip2state$??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z DB 060H
	DD	imagerel $ip2state$??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z DD 025053b19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z
	DD	0fbH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z$rtcName$0 DB 05fH ; std::_Atomic_reinterpret_as<char,bool>
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+8
??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z$rtcVarDesc DD 024H ; std::_Atomic_reinterpret_as<char,bool>
	DD	01H
	DQ	FLAT:??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z$rtcName$0
	ORG $+48
??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z$rtcFrameData DD 01H ; std::_Atomic_reinterpret_as<char,bool>
	DD	00H
	DQ	FLAT:??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Atomic_address_as@DU?$_Atomic_padded@_N@std@@@std@@YAPECDAEAU?$_Atomic_padded@_N@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Atomic_address_as@DU?$_Atomic_padded@_N@std@@@std@@YAPECDAEAU?$_Atomic_padded@_N@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Atomic_address_as@DU?$_Atomic_padded@_N@std@@@std@@YAPECDAEAU?$_Atomic_padded@_N@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Atomic_address_as@DU?$_Atomic_padded@_N@std@@@std@@YAPECDAEAU?$_Atomic_padded@_N@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Atomic_address_as@DU?$_Atomic_padded@_N@std@@@std@@YAPECDAEAU?$_Atomic_padded@_N@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Atomic_address_as@$$CBD$$CBU?$_Atomic_padded@_N@std@@@std@@YAPEDDAEBU?$_Atomic_padded@_N@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Atomic_address_as@$$CBD$$CBU?$_Atomic_padded@_N@std@@@std@@YAPEDDAEBU?$_Atomic_padded@_N@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Atomic_address_as@$$CBD$$CBU?$_Atomic_padded@_N@std@@@std@@YAPEDDAEBU?$_Atomic_padded@_N@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Atomic_address_as@$$CBD$$CBU?$_Atomic_padded@_N@std@@@std@@YAPEDDAEBU?$_Atomic_padded@_N@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Atomic_address_as@$$CBD$$CBU?$_Atomic_padded@_N@std@@@std@@YAPEDDAEBU?$_Atomic_padded@_N@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@H@std@@@std@@YAPEDJAEBU?$_Atomic_padded@H@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@H@std@@@std@@YAPEDJAEBU?$_Atomic_padded@H@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@H@std@@@std@@YAPEDJAEBU?$_Atomic_padded@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@H@std@@@std@@YAPEDJAEBU?$_Atomic_padded@H@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@H@std@@@std@@YAPEDJAEBU?$_Atomic_padded@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DB 060H
	DD	imagerel $ip2state$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@D@std@@YAPEADPEAD@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 06H
	DB	00H
	DB	00H
	DB	09eH
	DB	02H
	DB	0f1H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025052f11H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAV?$shared_ptr@Vmutex@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vmutex@std@@@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAV?$shared_ptr@Vmutex@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vmutex@std@@@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAV?$shared_ptr@Vmutex@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vmutex@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$shared_ptr@Vmutex@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vmutex@std@@@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAV?$shared_ptr@Vmutex@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vmutex@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z DB 060H
	DD	imagerel $ip2state$??$?0U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Free_non_head@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Free_non_head@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z DB 060H
	DD	imagerel $ip2state$??$_Free_non_head@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Free_non_head@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Free_non_head@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@V?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@V?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@V?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@V?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'q', 03H
	DB	02H
	DB	08eH
	DB	00H
	DB	016H
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z
	DD	imagerel $ip2state$??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z DD 025054019H
	DD	01132318H
	DD	0700c0031H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z
	DD	017aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z$rtcName$0 DB 06cH ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>
	DB	06fH
	DB	063H
	DB	06bH
	DB	065H
	DB	072H
	DB	00H
	ORG $+9
??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z$rtcVarDesc DD 028H ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>
	DD	010H
	DQ	FLAT:??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z$rtcName$0
	ORG $+48
??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z$rtcFrameData DD 01H ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>
	DD	00H
	DQ	FLAT:??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'q', 03H
	DB	02H
	DB	08eH
	DB	00H
	DB	016H
	DB	02H
	DB	'~'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z
	DD	imagerel $ip2state$??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z DD 025054019H
	DD	01132318H
	DD	0700c0031H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z
	DD	017aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z$rtcName$0 DB 06cH ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >
	DB	06fH
	DB	063H
	DB	06bH
	DB	065H
	DB	072H
	DB	00H
	ORG $+9
??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z$rtcVarDesc DD 028H ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >
	DD	010H
	DQ	FLAT:??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z$rtcName$0
	ORG $+48
??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z$rtcFrameData DD 01H ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >
	DD	00H
	DQ	FLAT:??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$move@AEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YA$$QEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$move@AEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YA$$QEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$move@AEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YA$$QEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$move@AEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YA$$QEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$move@AEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YA$$QEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@1@@Z@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEAA@PEAV2@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEBA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z DB 060H
	DD	imagerel $ip2state$??$?0U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?CVthread@std@@$0A@@?$shared_ptr@Vthread@std@@@std@@QEBAPEAVthread@1@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?CVthread@std@@$0A@@?$shared_ptr@Vthread@std@@@std@@QEBAPEAVthread@1@XZ DB 060H
	DD	imagerel $ip2state$??$?CVthread@std@@$0A@@?$shared_ptr@Vthread@std@@@std@@QEBAPEAVthread@1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?CVthread@std@@$0A@@?$shared_ptr@Vthread@std@@@std@@QEBAPEAVthread@1@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?CVthread@std@@$0A@@?$shared_ptr@Vthread@std@@@std@@QEBAPEAVthread@1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEBAAEAV?$shared_ptr@Vthread@std@@@1@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$shared_ptr@Vthread@std@@@1@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z DB 060H
	DD	imagerel $ip2state$??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$function@$$A6AXXZ@std@@QEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$function@$$A6AXXZ@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$function@$$A6AXXZ@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$function@$$A6AXXZ@std@@QEAA@$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$function@$$A6AXXZ@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$function@$$A6AXXZ@std@@QEAA@$$QEAV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$function@$$A6AXXZ@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z DB 06H
	DB	00H
	DB	00H
	DB	090H
	DB	02H
	DB	'('
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z DD 025052f11H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z DB 060H
	DD	imagerel $ip2state$?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Local@?$_Func_class@X$$V@std@@AEBA_NXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Local@?$_Func_class@X$$V@std@@AEBA_NXZ DB 060H
	DD	imagerel $ip2state$?_Local@?$_Func_class@X$$V@std@@AEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Local@?$_Func_class@X$$V@std@@AEBA_NXZ DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Local@?$_Func_class@X$$V@std@@AEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$_Func_class@X$$V@std@@IEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$_Func_class@X$$V@std@@IEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$_Func_class@X$$V@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Func_class@X$$V@std@@IEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$_Func_class@X$$V@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Reset_move@?$_Func_class@X$$V@std@@IEAAX$$QEAV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Reset_move@?$_Func_class@X$$V@std@@IEAAX$$QEAV12@@Z DB 060H
	DD	imagerel $ip2state$?_Reset_move@?$_Func_class@X$$V@std@@IEAAX$$QEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reset_move@?$_Func_class@X$$V@std@@IEAAX$$QEAV12@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Reset_move@?$_Func_class@X$$V@std@@IEAAX$$QEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reset_copy@?$_Func_class@X$$V@std@@IEAAXAEBV12@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ DB 060H
	DD	imagerel $ip2state$?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Func_class@X$$V@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Func_class@X$$V@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$_Func_class@X$$V@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Func_class@X$$V@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Func_class@X$$V@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$_Func_class@X$$V@std@@QEBAXXZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Func_class@X$$V@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Func_class@X$$V@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$_Func_class@X$$V@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Func_class@X$$V@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Func_class@X$$V@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAAEAV01@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEBAAEAV?$function@$$A6AXXZ@1@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$function@$$A6AXXZ@1@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@QEAU21@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z DD 025054519H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	0158H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Emplace@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@QEAU21@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z$rtcName$0 DB 05fH ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Emplace<std::shared_ptr<std::thread> >
	DB	04fH
	DB	070H
	DB	00H
	ORG $+12
??$_Emplace@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@QEAU21@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z$rtcVarDesc DD 048H ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Emplace<std::shared_ptr<std::thread> >
	DD	010H
	DQ	FLAT:??$_Emplace@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@QEAU21@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z$rtcName$0
	ORG $+48
??$_Emplace@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@QEAU21@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z$rtcFrameData DD 01H ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Emplace<std::shared_ptr<std::thread> >
	DD	00H
	DQ	FLAT:??$_Emplace@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@QEAU21@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G?$shared_ptr@Vthread@std@@@std@@QEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$shared_ptr@Vthread@std@@@std@@QEAAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$shared_ptr@Vthread@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$shared_ptr@Vthread@std@@@std@@QEAA@$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$shared_ptr@Vthread@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@Vthread@std@@@std@@QEAA@$$QEAV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$shared_ptr@Vthread@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$shared_ptr@Vthread@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$shared_ptr@Vthread@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$shared_ptr@Vthread@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@Vthread@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$shared_ptr@Vthread@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Decref@?$_Ptr_base@Vthread@std@@@std@@IEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Decref@?$_Ptr_base@Vthread@std@@@std@@IEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Decref@?$_Ptr_base@Vthread@std@@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@?$_Ptr_base@Vthread@std@@@std@@IEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Decref@?$_Ptr_base@Vthread@std@@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Ptr_base@Vthread@std@@@std@@IEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Ptr_base@Vthread@std@@@std@@IEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$_Ptr_base@Vthread@std@@@std@@IEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Ptr_base@Vthread@std@@@std@@IEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Ptr_base@Vthread@std@@@std@@IEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?get@?$_Ptr_base@Vthread@std@@@std@@IEBAPEAVthread@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?get@?$_Ptr_base@Vthread@std@@@std@@IEBAPEAVthread@2@XZ DB 060H
	DD	imagerel $ip2state$?get@?$_Ptr_base@Vthread@std@@@std@@IEBAPEAVthread@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$_Ptr_base@Vthread@std@@@std@@IEBAPEAVthread@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?get@?$_Ptr_base@Vthread@std@@@std@@IEBAPEAVthread@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DB 06H
	DB	00H
	DB	00H
	DB	0d8H
	DB	02H
	DB	0d8H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
	DD	imagerel $ip2state$??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z DD 025054519H
	DD	0118231dH
	DD	070110037H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
	DD	01a2H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z$rtcName$0 DB 05fH ; std::make_shared<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>
	DB	052H
	DB	065H
	DB	074H
	DB	00H
	ORG $+11
??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z$rtcVarDesc DD 048H ; std::make_shared<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>
	DD	010H
	DQ	FLAT:??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z$rtcName$0
	ORG $+48
??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z$rtcFrameData DD 01H ; std::make_shared<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>
	DD	00H
	DQ	FLAT:??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z DB 0aH
	DB	00H
	DB	00H
	DB	0c8H
	DB	02H
	DB	08eH
	DB	00H
	DB	016H
	DB	02H
	DB	0a2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
	DD	imagerel $ip2state$??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z DD 025054019H
	DD	01132318H
	DD	0700c0039H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
	DD	01b2H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z$rtcName$0 DB 05fH ; std::call_once<`ThreadPool::Stop'::`2'::<lambda_1> >
	DB	045H
	DB	078H
	DB	063H
	DB	00H
	ORG $+3
??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z$rtcName$1 DB 05fH ; std::call_once<`ThreadPool::Stop'::`2'::<lambda_1> >
	DB	054H
	DB	075H
	DB	070H
	DB	00H
	ORG $+3
??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z$rtcVarDesc DD 058H ; std::call_once<`ThreadPool::Stop'::`2'::<lambda_1> >
	DD	010H
	DQ	FLAT:??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z$rtcName$1
	DD	028H
	DD	010H
	DQ	FLAT:??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z$rtcName$0
	ORG $+96
??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z$rtcFrameData DD 02H ; std::call_once<`ThreadPool::Stop'::`2'::<lambda_1> >
	DD	00H
	DQ	FLAT:??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEAA@PEAV2@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEBA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DB 06H
	DB	00H
	DB	00H
	DB	08eH
	DB	02H
	DB	'8'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
	DD	imagerel $ip2state$??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z DD 025052e11H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$invoke@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@std@@YAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@_Invoker_functor@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z DB 060H
	DD	imagerel $ip2state$??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@QEBA@W4EnumEvent@@@Z DD 025052e01H
	DD	01122317H
	DD	0700b0027H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$atomic@H@std@@QEAA@H@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??B?$atomic@H@std@@QEBAHXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??B?$atomic@H@std@@QEBAHXZ DB 060H
	DD	imagerel $ip2state$??B?$atomic@H@std@@QEBAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$atomic@H@std@@QEBAHXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??B?$atomic@H@std@@QEBAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Atomic_integral_facade@H@std@@QEAA@H@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Atomic_integral@H$03@std@@QEAA@H@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??E?$_Atomic_integral@H$03@std@@QEAAHH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??E?$_Atomic_integral@H$03@std@@QEAAHH@Z DB 060H
	DD	imagerel $ip2state$??E?$_Atomic_integral@H$03@std@@QEAAHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$_Atomic_integral@H$03@std@@QEAAHH@Z DD 025052e19H
	DD	01122317H
	DD	0700b0021H
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??E?$_Atomic_integral@H$03@std@@QEAAHH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?load@?$_Atomic_storage@H$03@std@@QEBAHXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?load@?$_Atomic_storage@H$03@std@@QEBAHXZ DB 060H
	DD	imagerel $ip2state$?load@?$_Atomic_storage@H$03@std@@QEBAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?load@?$_Atomic_storage@H$03@std@@QEBAHXZ DD 025053b19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?load@?$_Atomic_storage@H$03@std@@QEBAHXZ
	DD	0fbH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Atomic_storage@H$03@std@@QEAA@H@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Atomic_storage@H$03@std@@QEAA@H@Z DB 060H
	DD	imagerel $ip2state$??0?$_Atomic_storage@H$03@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Atomic_storage@H$03@std@@QEAA@H@Z DD 025052e19H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Atomic_storage@H$03@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??B?$atomic@_N@std@@QEBA_NXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??B?$atomic@_N@std@@QEBA_NXZ DB 060H
	DD	imagerel $ip2state$??B?$atomic@_N@std@@QEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??B?$atomic@_N@std@@QEBA_NXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??B?$atomic@_N@std@@QEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4?$atomic@_N@std@@QEAA_N_N@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4?$atomic@_N@std@@QEAA_N_N@Z DB 060H
	DD	imagerel $ip2state$??4?$atomic@_N@std@@QEAA_N_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$atomic@_N@std@@QEAA_N_N@Z DD 025052e19H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4?$atomic@_N@std@@QEAA_N_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?load@?$_Atomic_storage@_N$00@std@@QEBA_NXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?load@?$_Atomic_storage@_N$00@std@@QEBA_NXZ DB 060H
	DD	imagerel $ip2state$?load@?$_Atomic_storage@_N$00@std@@QEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?load@?$_Atomic_storage@_N$00@std@@QEBA_NXZ DD 025053b19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?load@?$_Atomic_storage@_N$00@std@@QEBA_NXZ
	DD	0fbH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?store@?$_Atomic_storage@_N$00@std@@QEAAX_N@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?store@?$_Atomic_storage@_N$00@std@@QEAAX_N@Z DB 060H
	DD	imagerel $ip2state$?store@?$_Atomic_storage@_N$00@std@@QEAAX_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?store@?$_Atomic_storage@_N$00@std@@QEAAX_N@Z DD 025052e19H
	DD	01122317H
	DD	0700b0025H
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?store@?$_Atomic_storage@_N$00@std@@QEAAX_N@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ
	DD	015bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >::_Orphan_non_end
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >::_Orphan_non_end
	DD	04H
	DQ	FLAT:?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >::_Orphan_non_end
	DD	00H
	DQ	FLAT:?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	0feH
	DB	02H
	DB	0e2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ
	DD	imagerel $ip2state$?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070033H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ
	DD	018aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ$rtcName$0 DB 024H ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Alloc_sentinel_and_proxy
	DB	053H
	DB	031H
	DB	036H
	DB	00H
	ORG $+3
?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ$rtcName$1 DB 05fH ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Alloc_sentinel_and_proxy
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ$rtcName$2 DB 05fH ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Alloc_sentinel_and_proxy
	DB	04eH
	DB	065H
	DB	077H
	DB	068H
	DB	065H
	DB	061H
	DB	064H
	DB	00H
	ORG $+7
?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ$rtcVarDesc DD 0b8H ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Alloc_sentinel_and_proxy
	DD	08H
	DQ	FLAT:?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ$rtcName$2
	DD	068H
	DD	010H
	DQ	FLAT:?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ$rtcName$1
	DD	044H
	DD	01H
	DQ	FLAT:?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ$rtcName$0
	ORG $+144
?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ$rtcFrameData DD 03H ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Alloc_sentinel_and_proxy
	DD	00H
	DQ	FLAT:?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?clear@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?clear@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	070070023H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?clear@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?empty@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_NXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?empty@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_NXZ DB 060H
	DD	imagerel $ip2state$?empty@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?empty@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_NXZ DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?empty@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max_size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max_size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ DB 060H
	DD	imagerel $ip2state$?max_size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ DD 025052a19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?max_size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ DB 060H
	DD	imagerel $ip2state$?size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ DD 025053b19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ
	DD	011bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
	DD	01H
	DQ	FLAT:??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
	DD	00H
	DQ	FLAT:??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Swap_val@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Swap_val@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@@Z DB 060H
	DD	imagerel $ip2state$?_Swap_val@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_val@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Swap_val@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAAEAV01@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAAEAV01@$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??4?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAAEAV01@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAAEAV01@$$QEAV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAAEAV01@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Move_assign@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Move_assign@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DB 060H
	DD	imagerel $ip2state$?_Move_assign@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Move_assign@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z DD 025053419H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Move_assign@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@@Z DB 060H
	DD	imagerel $ip2state$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@QEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NotFull@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ DD 025052a01H
	DD	010e2313H
	DD	07007002bH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?NotEmpty@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ DD 025052a01H
	DD	010e2313H
	DD	07007002bH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Stop@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0f8H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Stop@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXXZ$rtcName$0 DB 06cH ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Stop
	DB	06fH
	DB	063H
	DB	06bH
	DB	065H
	DB	072H
	DB	00H
	ORG $+9
?Stop@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXXZ$rtcVarDesc DD 028H ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Stop
	DD	08H
	DQ	FLAT:?Stop@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXXZ$rtcName$0
	ORG $+48
?Stop@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXXZ$rtcFrameData DD 01H ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Stop
	DD	00H
	DQ	FLAT:?Stop@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'q', 03H
	DB	02H
	DB	092H
	DB	00H
	DB	016H
	DB	02H
	DB	'd'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z
	DD	imagerel $ip2state$?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z DD 025054019H
	DD	01132318H
	DD	0700c0031H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z
	DD	017aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z$rtcName$0 DB 06cH ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take
	DB	06fH
	DB	063H
	DB	06bH
	DB	065H
	DB	072H
	DB	00H
	ORG $+9
?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z$rtcVarDesc DD 028H ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take
	DD	010H
	DQ	FLAT:?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z$rtcName$0
	ORG $+48
?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z$rtcFrameData DD 01H ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take
	DD	00H
	DQ	FLAT:?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z DB 0aH
	DB	00H
	DB	00H
	DB	09eH
	DB	02H
	DB	'('
	DB	04H
	DB	'^'
	DB	06H
	DB	08aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z
	DD	imagerel $ip2state$??0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z DD 025053311H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ
	DD	015bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >::_Orphan_non_end
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >::_Orphan_non_end
	DD	04H
	DQ	FLAT:?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >::_Orphan_non_end
	DD	00H
	DQ	FLAT:?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ DB 06H
	DB	00H
	DB	00H
	DB	0feH
	DB	02H
	DB	0e2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ
	DD	imagerel $ip2state$?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070033H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ
	DD	018aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ$rtcName$0 DB 024H ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Alloc_sentinel_and_proxy
	DB	053H
	DB	031H
	DB	037H
	DB	00H
	ORG $+3
?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ$rtcName$1 DB 05fH ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Alloc_sentinel_and_proxy
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ$rtcName$2 DB 05fH ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Alloc_sentinel_and_proxy
	DB	04eH
	DB	065H
	DB	077H
	DB	068H
	DB	065H
	DB	061H
	DB	064H
	DB	00H
	ORG $+7
?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ$rtcVarDesc DD 0b8H ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Alloc_sentinel_and_proxy
	DD	08H
	DQ	FLAT:?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ$rtcName$2
	DD	068H
	DD	010H
	DQ	FLAT:?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ$rtcName$1
	DD	044H
	DD	01H
	DQ	FLAT:?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ$rtcName$0
	ORG $+144
?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ$rtcFrameData DD 03H ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Alloc_sentinel_and_proxy
	DD	00H
	DQ	FLAT:?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?clear@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?clear@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?clear@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?clear@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	070070023H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?clear@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max_size@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEBA_KXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max_size@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEBA_KXZ DB 060H
	DD	imagerel $ip2state$?max_size@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEBA_KXZ DD 025052a19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?max_size@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ DD 025053b19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ
	DD	011bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::~list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >
	DB	053H
	DB	032H
	DB	00H
	ORG $+12
??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::~list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >
	DD	01H
	DQ	FLAT:??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::~list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >
	DD	00H
	DQ	FLAT:??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@@Z DB 060H
	DD	imagerel $ip2state$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@QEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Runable@ThreadPool@@AEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Runable@ThreadPool@@AEAAXXZ DB 0aH
	DB	00H
	DB	00H
	DB	0beH
	DB	02H
	DB	'-', 03H
	DB	00H
	DB	01cH
	DB	02H
	DB	'-', 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Runable@ThreadPool@@AEAAXXZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??Runable@ThreadPool@@AEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?Runable@ThreadPool@@AEAAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?Runable@ThreadPool@@AEAAXXZ
	DD	imagerel $ip2state$?Runable@ThreadPool@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Runable@ThreadPool@@AEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	07007003dH
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?Runable@ThreadPool@@AEAAXXZ
	DD	01d2H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Runable@ThreadPool@@AEAAXXZ$rtcName$0 DB 06cH		; ThreadPool::Runable
	DB	069H
	DB	073H
	DB	074H
	DB	00H
	ORG $+3
?Runable@ThreadPool@@AEAAXXZ$rtcName$1 DB 03cH		; ThreadPool::Runable
	DB	062H
	DB	065H
	DB	067H
	DB	069H
	DB	06eH
	DB	03eH
	DB	024H
	DB	04cH
	DB	030H
	DB	00H
	ORG $+5
?Runable@ThreadPool@@AEAAXXZ$rtcName$2 DB 03cH		; ThreadPool::Runable
	DB	065H
	DB	06eH
	DB	064H
	DB	03eH
	DB	024H
	DB	04cH
	DB	030H
	DB	00H
	ORG $+15
?Runable@ThreadPool@@AEAAXXZ$rtcVarDesc DD 098H		; ThreadPool::Runable
	DD	08H
	DQ	FLAT:?Runable@ThreadPool@@AEAAXXZ$rtcName$2
	DD	078H
	DD	08H
	DQ	FLAT:?Runable@ThreadPool@@AEAAXXZ$rtcName$1
	DD	028H
	DD	018H
	DQ	FLAT:?Runable@ThreadPool@@AEAAXXZ$rtcName$0
	ORG $+144
?Runable@ThreadPool@@AEAAXXZ$rtcFrameData DD 03H	; ThreadPool::Runable
	DD	00H
	DQ	FLAT:?Runable@ThreadPool@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StopThreadGroup@ThreadPool@@AEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070031H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0170H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?StopThreadGroup@ThreadPool@@AEAAXXZ$rtcName$0 DB 03cH	; ThreadPool::StopThreadGroup
	DB	062H
	DB	065H
	DB	067H
	DB	069H
	DB	06eH
	DB	03eH
	DB	024H
	DB	04cH
	DB	030H
	DB	00H
	ORG $+5
?StopThreadGroup@ThreadPool@@AEAAXXZ$rtcName$1 DB 03cH	; ThreadPool::StopThreadGroup
	DB	065H
	DB	06eH
	DB	064H
	DB	03eH
	DB	024H
	DB	04cH
	DB	030H
	DB	00H
	ORG $+7
?StopThreadGroup@ThreadPool@@AEAAXXZ$rtcVarDesc DD 068H	; ThreadPool::StopThreadGroup
	DD	08H
	DQ	FLAT:?StopThreadGroup@ThreadPool@@AEAAXXZ$rtcName$1
	DD	048H
	DD	08H
	DQ	FLAT:?StopThreadGroup@ThreadPool@@AEAAXXZ$rtcName$0
	ORG $+96
?StopThreadGroup@ThreadPool@@AEAAXXZ$rtcFrameData DD 02H ; ThreadPool::StopThreadGroup
	DD	00H
	DQ	FLAT:?StopThreadGroup@ThreadPool@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??Start@ThreadPool@@AEAAXH@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?Start@ThreadPool@@AEAAXH@Z DB 06H
	DB	00H
	DB	00H
	DB	0d1H, 03H
	DB	02H
	DB	'('
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?Start@ThreadPool@@AEAAXH@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??Start@ThreadPool@@AEAAXH@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?Start@ThreadPool@@AEAAXH@Z DB 028H
	DD	imagerel $stateUnwindMap$?Start@ThreadPool@@AEAAXH@Z
	DD	imagerel $ip2state$?Start@ThreadPool@@AEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Start@ThreadPool@@AEAAXH@Z DD 025052e11H
	DD	01122317H
	DD	0700b0031H
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?Start@ThreadPool@@AEAAXH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddTask@ThreadPool@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?AddTask@ThreadPool@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Stop@ThreadPool@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1ThreadPool@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1ThreadPool@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1ThreadPool@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1ThreadPool@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1ThreadPool@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???0ThreadPool@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0ThreadPool@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0ThreadPool@@QEAA@H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0ThreadPool@@QEAA@H@Z DB 0aH
	DB	00H
	DB	00H
	DB	094H
	DB	02H
	DB	'L'
	DB	04H
	DB	'2'
	DB	08H
	DB	0acH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0ThreadPool@@QEAA@H@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0ThreadPool@@QEAA@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0ThreadPool@@QEAA@H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???0ThreadPool@@QEAA@H@Z@4HA
	DB	07eH
	DD	imagerel ?dtor$2@?0???0ThreadPool@@QEAA@H@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0ThreadPool@@QEAA@H@Z DB 028H
	DD	imagerel $stateUnwindMap$??0ThreadPool@@QEAA@H@Z
	DD	imagerel $ip2state$??0ThreadPool@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0ThreadPool@@QEAA@H@Z DD 025052e11H
	DD	01122317H
	DD	0700b002dH
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0ThreadPool@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	'9', 04H
	DB	02H
	DB	'<'
	DB	04H
	DB	0d1H, 0aH
	DB	02H
	DB	08aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 025054019H
	DD	01132318H
	DD	0700c0047H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0223H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0 DB 05fH ; std::operator<<<std::char_traits<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc DD 088H ; std::operator<<<std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0
	ORG $+48
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData DD 01H ; std::operator<<<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@$$QEAV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z DB 060H
	DD	imagerel $ip2state$?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Local@?$_Func_class@XW4EnumEvent@@@std@@AEBA_NXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Local@?$_Func_class@XW4EnumEvent@@@std@@AEBA_NXZ DB 060H
	DD	imagerel $ip2state$?_Local@?$_Func_class@XW4EnumEvent@@@std@@AEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Local@?$_Func_class@XW4EnumEvent@@@std@@AEBA_NXZ DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Local@?$_Func_class@XW4EnumEvent@@@std@@AEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$_Func_class@XW4EnumEvent@@@std@@IEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$_Func_class@XW4EnumEvent@@@std@@IEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$_Func_class@XW4EnumEvent@@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$_Func_class@XW4EnumEvent@@@std@@IEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$_Func_class@XW4EnumEvent@@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Reset_move@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Reset_move@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV12@@Z DB 060H
	DD	imagerel $ip2state$?_Reset_move@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Reset_move@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV12@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Reset_move@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Empty@?$_Func_class@XW4EnumEvent@@@std@@IEBA_NXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Empty@?$_Func_class@XW4EnumEvent@@@std@@IEBA_NXZ DB 060H
	DD	imagerel $ip2state$?_Empty@?$_Func_class@XW4EnumEvent@@@std@@IEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Empty@?$_Func_class@XW4EnumEvent@@@std@@IEBA_NXZ DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Empty@?$_Func_class@XW4EnumEvent@@@std@@IEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$_Func_class@XW4EnumEvent@@@std@@QEBAXW4EnumEvent@@@Z DD 025052e01H
	DD	01122317H
	DD	0700b0023H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ DB 06H
	DB	00H
	DB	00H
	DB	0c4H
	DB	02H
	DB	'p'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ DB 028H
	DD	imagerel $stateUnwindMap$??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ
	DD	imagerel $ip2state$??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ DD 025053b19H
	DD	010e2313H
	DD	070070035H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ
	DD	0192H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ$rtcName$0 DB 05fH ; std::make_shared<std::mutex>
	DB	052H
	DB	065H
	DB	074H
	DB	00H
	ORG $+11
??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ$rtcVarDesc DD 048H ; std::make_shared<std::mutex>
	DD	010H
	DQ	FLAT:??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ$rtcName$0
	ORG $+48
??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ$rtcFrameData DD 01H ; std::make_shared<std::mutex>
	DD	00H
	DQ	FLAT:??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?DVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAAEAVmutex@1@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?DVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAAEAVmutex@1@XZ DB 060H
	DD	imagerel $ip2state$??$?DVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAAEAVmutex@1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?DVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAAEAVmutex@1@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?DVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAAEAVmutex@1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?CVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAPEAVmutex@1@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?CVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAPEAVmutex@1@XZ DB 060H
	DD	imagerel $ip2state$??$?CVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAPEAVmutex@1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?CVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAPEAVmutex@1@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?CVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAPEAVmutex@1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ DB 060H
	DD	imagerel $ip2state$?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$shared_ptr@Vmutex@std@@@std@@QEAAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?swap@?$shared_ptr@Vmutex@std@@@std@@QEAAXAEAV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?swap@?$shared_ptr@Vmutex@std@@@std@@QEAAXAEAV12@@Z DB 060H
	DD	imagerel $ip2state$?swap@?$shared_ptr@Vmutex@std@@@std@@QEAAXAEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?swap@?$shared_ptr@Vmutex@std@@@std@@QEAAXAEAV12@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?swap@?$shared_ptr@Vmutex@std@@@std@@QEAAXAEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4?$shared_ptr@Vmutex@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4?$shared_ptr@Vmutex@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??4?$shared_ptr@Vmutex@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$shared_ptr@Vmutex@std@@@std@@QEAAAEAV01@$$QEAV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4?$shared_ptr@Vmutex@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@$$QEAV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@AEBV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@AEBV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Swap@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEAV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Swap@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEAV12@@Z DB 060H
	DD	imagerel $ip2state$?_Swap@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEAV12@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Swap@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Decref@?$_Ptr_base@Vmutex@std@@@std@@IEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Decref@?$_Ptr_base@Vmutex@std@@@std@@IEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Decref@?$_Ptr_base@Vmutex@std@@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@?$_Ptr_base@Vmutex@std@@@std@@IEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Decref@?$_Ptr_base@Vmutex@std@@@std@@IEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$_Ptr_base@Vmutex@std@@@std@@IEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$_Ptr_base@Vmutex@std@@@std@@IEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$_Ptr_base@Vmutex@std@@@std@@IEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Ptr_base@Vmutex@std@@@std@@IEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$_Ptr_base@Vmutex@std@@@std@@IEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?get@?$_Ptr_base@Vmutex@std@@@std@@IEBAPEAVmutex@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?get@?$_Ptr_base@Vmutex@std@@@std@@IEBAPEAVmutex@2@XZ DB 060H
	DD	imagerel $ip2state$?get@?$_Ptr_base@Vmutex@std@@@std@@IEBAPEAVmutex@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get@?$_Ptr_base@Vmutex@std@@@std@@IEBAPEAVmutex@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?get@?$_Ptr_base@Vmutex@std@@@std@@IEBAPEAVmutex@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?notify_all@condition_variable_any@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?notify_all@condition_variable_any@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?notify_all@condition_variable_any@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?notify_all@condition_variable_any@std@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?notify_all@condition_variable_any@std@@QEAAXXZ
	DD	0fbH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?notify_all@condition_variable_any@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::condition_variable_any::notify_all
	DB	04cH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+11
?notify_all@condition_variable_any@std@@QEAAXXZ$rtcVarDesc DD 028H ; std::condition_variable_any::notify_all
	DD	08H
	DQ	FLAT:?notify_all@condition_variable_any@std@@QEAAXXZ$rtcName$0
	ORG $+48
?notify_all@condition_variable_any@std@@QEAAXXZ$rtcFrameData DD 01H ; std::condition_variable_any::notify_all
	DD	00H
	DQ	FLAT:?notify_all@condition_variable_any@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?notify_one@condition_variable_any@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?notify_one@condition_variable_any@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?notify_one@condition_variable_any@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?notify_one@condition_variable_any@std@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?notify_one@condition_variable_any@std@@QEAAXXZ
	DD	0fbH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?notify_one@condition_variable_any@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::condition_variable_any::notify_one
	DB	04cH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+11
?notify_one@condition_variable_any@std@@QEAAXXZ$rtcVarDesc DD 028H ; std::condition_variable_any::notify_one
	DD	08H
	DQ	FLAT:?notify_one@condition_variable_any@std@@QEAAXXZ$rtcName$0
	ORG $+48
?notify_one@condition_variable_any@std@@QEAAXXZ$rtcFrameData DD 01H ; std::condition_variable_any::notify_one
	DD	00H
	DQ	FLAT:?notify_one@condition_variable_any@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1condition_variable_any@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1condition_variable_any@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1condition_variable_any@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1condition_variable_any@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1condition_variable_any@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0condition_variable_any@std@@QEAA@XZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0condition_variable_any@std@@QEAA@XZ DB 06H
	DB	00H
	DB	00H
	DB	08cH
	DB	02H
	DB	094H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0condition_variable_any@std@@QEAA@XZ DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0condition_variable_any@std@@QEAA@XZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0condition_variable_any@std@@QEAA@XZ DB 028H
	DD	imagerel $stateUnwindMap$??0condition_variable_any@std@@QEAA@XZ
	DD	imagerel $ip2state$??0condition_variable_any@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0condition_variable_any@std@@QEAA@XZ DD 025052a11H
	DD	010e2313H
	DD	070070023H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0condition_variable_any@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$lock_guard@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QEAAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Validate@?$unique_lock@Vmutex@std@@@std@@AEBAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?unlock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?lock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gmutex@std@@QEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1mutex@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0mutex@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0mutex@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0mutex@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0mutex@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0mutex@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ DB 060H
	DD	imagerel $ip2state$?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?unlock@_Mutex_base@std@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?lock@_Mutex_base@std@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Mutex_base@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Mutex_base@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Mutex_base@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Mutex_base@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Mutex_base@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Mutex_base@std@@QEAA@H@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_Mutex_base@std@@QEAA@H@Z DB 060H
	DD	imagerel $ip2state$??0_Mutex_base@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Mutex_base@std@@QEAA@H@Z DD 025052e19H
	DD	01122317H
	DD	0700b001fH
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_Mutex_base@std@@QEAA@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0id@thread@std@@AEAA@I@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?get_id@this_thread@std@@YA?AVid@thread@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?get_id@this_thread@std@@YA?AVid@thread@2@XZ DB 060H
	DD	imagerel $ip2state$?get_id@this_thread@std@@YA?AVid@thread@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?get_id@this_thread@std@@YA?AVid@thread@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?get_id@this_thread@std@@YA?AVid@thread@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gthread@std@@QEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?join@thread@std@@QEAAXXZ DD 025062b01H
	DD	010f2314H
	DD	070080028H
	DD	050066007H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?joinable@thread@std@@QEBA_NXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?joinable@thread@std@@QEBA_NXZ DB 060H
	DD	imagerel $ip2state$?joinable@thread@std@@QEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?joinable@thread@std@@QEBA_NXZ DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?joinable@thread@std@@QEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1thread@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1thread@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1thread@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1thread@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1thread@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Check_C_return@std@@YAHH@Z DD 025052801H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ DB 060H
	DD	imagerel $ip2state$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ DD 035052a19H
	DD	010e3313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ DB 060H
	DD	imagerel $ip2state$?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ DB 060H
	DD	imagerel $ip2state$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ DB 060H
	DD	imagerel $ip2state$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ DD 035052a19H
	DD	010e3313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z DB 060H
	DD	imagerel $ip2state$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ DB 060H
	DD	imagerel $ip2state$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DB 060H
	DD	imagerel $ip2state$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DB 060H
	DD	imagerel $ip2state$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DB 060H
	DD	imagerel $ip2state$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ DB 060H
	DD	imagerel $ip2state$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DB 060H
	DD	imagerel $ip2state$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ DD 025052a19H
	DD	010e2313H
	DD	070070035H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z DB 060H
	DD	imagerel $ip2state$??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ DB 060H
	DD	imagerel $ip2state$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DB 060H
	DD	imagerel $ip2state$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ DB 060H
	DD	imagerel $ip2state$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ DB 060H
	DD	imagerel $ip2state$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ DD 025052a19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z DB 060H
	DD	imagerel $ip2state$?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Decwref@_Ref_count_base@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Decwref@_Ref_count_base@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Decwref@_Ref_count_base@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decwref@_Ref_count_base@std@@QEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Decwref@_Ref_count_base@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Decref@_Ref_count_base@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Decref@_Ref_count_base@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Decref@_Ref_count_base@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Decref@_Ref_count_base@std@@QEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Decref@_Ref_count_base@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Incref@_Ref_count_base@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Incref@_Ref_count_base@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Incref@_Ref_count_base@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Incref@_Ref_count_base@std@@QEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Incref@_Ref_count_base@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Ref_count_base@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Ref_count_base@std@@UEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Ref_count_base@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Ref_count_base@std@@UEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Ref_count_base@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Ref_count_base@std@@IEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_Ref_count_base@std@@IEAA@XZ DB 060H
	DD	imagerel $ip2state$??0_Ref_count_base@std@@IEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Ref_count_base@std@@IEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_Ref_count_base@std@@IEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@0@XZ DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_Generic_error_category@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Generic_error_category@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?name@_Generic_error_category@std@@UEBAPEBDXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?name@_Generic_error_category@std@@UEBAPEBDXZ DB 060H
	DD	imagerel $ip2state$?name@_Generic_error_category@std@@UEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?name@_Generic_error_category@std@@UEBAPEBDXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?name@_Generic_error_category@std@@UEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Generic_error_category@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_Generic_error_category@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0_Generic_error_category@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Generic_error_category@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_Generic_error_category@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_system_error@std@@YAXW4errc@1@@Z DD 025062901H
	DD	010e2313H
	DD	070070030H
	DD	050056006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gsystem_error@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0system_error@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1system_error@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0system_error@std@@QEAA@Verror_code@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	0a0H
	DB	02H
	DB	'f'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0system_error@std@@QEAA@Verror_code@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0system_error@std@@QEAA@Verror_code@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0system_error@std@@QEAA@Verror_code@1@@Z
	DD	imagerel $ip2state$??0system_error@std@@QEAA@Verror_code@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0system_error@std@@QEAA@Verror_code@1@@Z DD 025063011H
	DD	01142319H
	DD	0700d002aH
	DD	0500b600cH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0system_error@std@@QEAA@Verror_code@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_G_System_error@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_System_error@std@@QEAA@AEBV01@@Z DD 025063001H
	DD	01142319H
	DD	0700d001cH
	DD	0500b600cH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_System_error@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	'e', 03H
	DB	02H
	DB	'('
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
	DD	imagerel $ip2state$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 025063511H
	DD	0119231eH
	DD	070120040H
	DD	050106011H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	0b4H
	DB	04H
	DB	'D'
	DB	02H
	DB	'\'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DB 028H
	DD	imagerel $stateUnwindMap$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
	DD	imagerel $ip2state$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z DD 025053411H
	DD	0118231dH
	DD	07011002bH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??8std@@YA_NAEBVerror_condition@0@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??8std@@YA_NAEBVerror_condition@0@0@Z DB 060H
	DD	imagerel $ip2state$??8std@@YA_NAEBVerror_condition@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8std@@YA_NAEBVerror_condition@0@0@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??8std@@YA_NAEBVerror_condition@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?category@error_condition@std@@QEBAAEBVerror_category@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?category@error_condition@std@@QEBAAEBVerror_category@2@XZ DB 060H
	DD	imagerel $ip2state$?category@error_condition@std@@QEBAAEBVerror_category@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?category@error_condition@std@@QEBAAEBVerror_category@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?category@error_condition@std@@QEBAAEBVerror_category@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?value@error_condition@std@@QEBAHXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?value@error_condition@std@@QEBAHXZ DB 060H
	DD	imagerel $ip2state$?value@error_condition@std@@QEBAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?value@error_condition@std@@QEBAHXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?value@error_condition@std@@QEBAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z DB 060H
	DD	imagerel $ip2state$??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z DD 025053319H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ DD 025052f01H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?category@error_code@std@@QEBAAEBVerror_category@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?category@error_code@std@@QEBAAEBVerror_category@2@XZ DB 060H
	DD	imagerel $ip2state$?category@error_code@std@@QEBAAEBVerror_category@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?category@error_code@std@@QEBAAEBVerror_category@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?category@error_code@std@@QEBAAEBVerror_category@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?value@error_code@std@@QEBAHXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?value@error_code@std@@QEBAHXZ DB 060H
	DD	imagerel $ip2state$?value@error_code@std@@QEBAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?value@error_code@std@@QEBAHXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?value@error_code@std@@QEBAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0error_code@std@@QEAA@HAEBVerror_category@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0error_code@std@@QEAA@HAEBVerror_category@1@@Z DB 060H
	DD	imagerel $ip2state$??0error_code@std@@QEAA@HAEBVerror_category@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0error_code@std@@QEAA@HAEBVerror_category@1@@Z DD 025053319H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0error_code@std@@QEAA@HAEBVerror_category@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??8error_category@std@@QEBA_NAEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??8error_category@std@@QEBA_NAEBV01@@Z DB 060H
	DD	imagerel $ip2state$??8error_category@std@@QEBA_NAEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8error_category@std@@QEBA_NAEBV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??8error_category@std@@QEBA_NAEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z DB 060H
	DD	imagerel $ip2state$?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z DD 025053419H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DB 060H
	DD	imagerel $ip2state$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z DD 025053319H
	DD	0117231cH
	DD	070100023H
	DD	0500fH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z DB 060H
	DD	imagerel $ip2state$?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1error_category@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1error_category@std@@UEAA@XZ DB 060H
	DD	imagerel $ip2state$??1error_category@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1error_category@std@@UEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1error_category@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0error_category@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0error_category@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0error_category@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0error_category@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0error_category@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?generic_category@std@@YAAEBVerror_category@1@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?generic_category@std@@YAAEBVerror_category@1@XZ DB 060H
	DD	imagerel $ip2state$?generic_category@std@@YAAEBVerror_category@1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?generic_category@std@@YAAEBVerror_category@1@XZ DD 025051e19H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?generic_category@std@@YAAEBVerror_category@1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z DB 060H
	DD	imagerel $ip2state$?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z DD 025052e19H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0once_flag@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0once_flag@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0once_flag@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0once_flag@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0once_flag@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gruntime_error@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1runtime_error@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DB 060H
	DD	imagerel $ip2state$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z DD 025052f19H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DB 060H
	DD	imagerel $ip2state$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z DD 025054519H
	DD	0118231dH
	DD	070110025H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
	DD	011bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DB	04dH
	DB	061H
	DB	073H
	DB	06bH
	DB	065H
	DB	064H
	DB	00H
	ORG $+8
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	08H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcName$0
	ORG $+48
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
	DD	00H
	DQ	FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ DB 060H
	DD	imagerel $ip2state$?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DB 060H
	DD	imagerel $ip2state$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 025053b19H
	DD	010e2313H
	DD	070070031H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
	DD	017bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DB	041H
	DB	06cH
	DB	06cH
	DB	06fH
	DB	063H
	DB	05fH
	DB	06dH
	DB	061H
	DB	078H
	DB	00H
	ORG $+5
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc DD 028H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	08H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcName$0
	ORG $+48
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
	DD	00H
	DQ	FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DB 060H
	DD	imagerel $ip2state$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DB 060H
	DD	imagerel $ip2state$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 025053401H
	DD	0118231dH
	DD	070110029H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z DD 035053401H
	DD	0118331dH
	DD	07011002fH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ DD 025053b19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
	DD	013bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	031H
	DB	00H
	ORG $+11
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	01H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 025054019H
	DD	01132318H
	DD	0700c0043H
	DD	0500bH
	DD	imagerel __GSHandlerCheck
	DD	0200H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcName$0 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DB	04eH
	DB	065H
	DB	077H
	DB	05fH
	DB	061H
	DB	072H
	DB	072H
	DB	061H
	DB	079H
	DB	00H
	ORG $+5
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcVarDesc DD 0e8H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DD	08H
	DQ	FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcName$0
	ORG $+48
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcFrameData DD 01H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
	DD	00H
	DQ	FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DB 060H
	DD	imagerel $ip2state$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DB 060H
	DD	imagerel $ip2state$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DB 060H
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c002fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	0dcH
	DB	02H
	DB	'p'
	DB	04H
	DB	'R'
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z DD 025054019H
	DD	01132318H
	DD	0700c0031H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
	DD	0172H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	033H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$1
	DD	044H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 0aH
	DB	00H
	DB	00H
	DB	091H, 02H
	DB	02H
	DB	'p'
	DB	04H
	DB	':'
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z DD 025054019H
	DD	01132318H
	DD	0700c0039H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
	DD	01baH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$0 DB 024H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	053H
	DB	031H
	DB	035H
	DB	00H
	ORG $+3
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$1 DB 05fH ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcVarDesc DD 068H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	010H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$1
	DD	044H
	DD	01H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcName$0
	ORG $+96
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcFrameData DD 02H ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
	DD	00H
	DQ	FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DB 060H
	DD	imagerel $ip2state$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DB 060H
	DD	imagerel $ip2state$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DB 060H
	DD	imagerel $ip2state$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD 025051e19H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DB 060H
	DD	imagerel $ip2state$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD 025052f19H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DB 060H
	DD	imagerel $ip2state$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 060H
	DD	imagerel $ip2state$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DB 060H
	DD	imagerel $ip2state$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 060H
	DD	imagerel $ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@D@std@@QEAAPEAD_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$allocator@D@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$allocator@D@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$allocator@D@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@D@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$allocator@D@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DB 060H
	DD	imagerel $ip2state$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z DD 025054019H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
	DD	011bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0 DB 05fH ; std::_Container_base12::_Swap_proxy_and_iterators
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc DD 024H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	04H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcName$0
	ORG $+48
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData DD 01H ; std::_Container_base12::_Swap_proxy_and_iterators
	DD	00H
	DQ	FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	011bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DB 060H
	DD	imagerel $ip2state$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z DB 060H
	DD	imagerel $ip2state$?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Convert_size@_K@std@@YA_K_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Convert_size@_K@std@@YA_K_K@Z DB 060H
	DD	imagerel $ip2state$??$_Convert_size@_K@std@@YA_K_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Convert_size@_K@std@@YA_K_K@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Convert_size@_K@std@@YA_K_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 035052f01H
	DD	01133318H
	DD	0700c002fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max@?$numeric_limits@_J@std@@SA_JXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max@?$numeric_limits@_J@std@@SA_JXZ DB 060H
	DD	imagerel $ip2state$?max@?$numeric_limits@_J@std@@SA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 025051e19H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?max@?$numeric_limits@_J@std@@SA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 025051e01H
	DD	010a230fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??rethrow_exception@std@@YAXVexception_ptr@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?rethrow_exception@std@@YAXVexception_ptr@1@@Z DB 04H
	DB	00H
	DB	00H
	DB	'T'
	DB	02H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?rethrow_exception@std@@YAXVexception_ptr@1@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??rethrow_exception@std@@YAXVexception_ptr@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?rethrow_exception@std@@YAXVexception_ptr@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$?rethrow_exception@std@@YAXVexception_ptr@1@@Z
	DD	imagerel $ip2state$?rethrow_exception@std@@YAXVexception_ptr@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?rethrow_exception@std@@YAXVexception_ptr@1@@Z DD 025052a11H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?rethrow_exception@std@@YAXVexception_ptr@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?current_exception@std@@YA?AVexception_ptr@1@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?current_exception@std@@YA?AVexception_ptr@1@XZ DB 060H
	DD	imagerel $ip2state$?current_exception@std@@YA?AVexception_ptr@1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?current_exception@std@@YA?AVexception_ptr@1@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?current_exception@std@@YA?AVexception_ptr@1@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@exception_ptr@std@@QEAAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Current_exception@exception_ptr@std@@SA?AV12@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Current_exception@exception_ptr@std@@SA?AV12@XZ DB 060H
	DD	imagerel $ip2state$?_Current_exception@exception_ptr@std@@SA?AV12@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Current_exception@exception_ptr@std@@SA?AV12@XZ DD 025053b19H
	DD	010e2313H
	DD	070070023H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Current_exception@exception_ptr@std@@SA?AV12@XZ
	DD	010bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Current_exception@exception_ptr@std@@SA?AV12@XZ$rtcName$0 DB 05fH ; std::exception_ptr::_Current_exception
	DB	052H
	DB	065H
	DB	074H
	DB	076H
	DB	061H
	DB	06cH
	DB	00H
	ORG $+8
?_Current_exception@exception_ptr@std@@SA?AV12@XZ$rtcVarDesc DD 028H ; std::exception_ptr::_Current_exception
	DD	010H
	DQ	FLAT:?_Current_exception@exception_ptr@std@@SA?AV12@XZ$rtcName$0
	ORG $+48
?_Current_exception@exception_ptr@std@@SA?AV12@XZ$rtcFrameData DD 01H ; std::exception_ptr::_Current_exception
	DD	00H
	DQ	FLAT:?_Current_exception@exception_ptr@std@@SA?AV12@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??Bexception_ptr@std@@QEBA_NXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??Bexception_ptr@std@@QEBA_NXZ DB 060H
	DD	imagerel $ip2state$??Bexception_ptr@std@@QEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bexception_ptr@std@@QEBA_NXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??Bexception_ptr@std@@QEBA_NXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4exception_ptr@std@@QEAAAEAV01@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4exception_ptr@std@@QEAAAEAV01@AEBV01@@Z DB 060H
	DD	imagerel $ip2state$??4exception_ptr@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4exception_ptr@std@@QEAAAEAV01@AEBV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??4exception_ptr@std@@QEAAAEAV01@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception_ptr@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception_ptr@std@@QEAA@AEBV01@@Z DB 060H
	DD	imagerel $ip2state$??0exception_ptr@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception_ptr@std@@QEAA@AEBV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception_ptr@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception_ptr@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception_ptr@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1exception_ptr@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception_ptr@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception_ptr@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception_ptr@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception_ptr@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0exception_ptr@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception_ptr@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception_ptr@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 060H
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 060H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 060H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@QEBDH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@QEBDH@Z DB 060H
	DD	imagerel $ip2state$??0exception@std@@QEAA@QEBDH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@QEBDH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@QEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@QEBD@Z DB 060H
	DD	imagerel $ip2state$??0exception@std@@QEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBD@Z DD 025054019H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@QEBD@Z
	DD	010bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0exception@std@@QEAA@QEBD@Z$rtcName$0 DB 05fH		; std::exception::exception
	DB	049H
	DB	06eH
	DB	069H
	DB	074H
	DB	044H
	DB	061H
	DB	074H
	DB	061H
	DB	00H
	ORG $+6
??0exception@std@@QEAA@QEBD@Z$rtcVarDesc DD 028H	; std::exception::exception
	DD	010H
	DQ	FLAT:??0exception@std@@QEAA@QEBD@Z$rtcName$0
	ORG $+48
??0exception@std@@QEAA@QEBD@Z$rtcFrameData DD 01H	; std::exception::exception
	DD	00H
	DQ	FLAT:??0exception@std@@QEAA@QEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??2@YAPEAX_KPEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??2@YAPEAX_KPEAX@Z DB 060H
	DD	imagerel $ip2state$??2@YAPEAX_KPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??2@YAPEAX_KPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX@Z
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0PEAVThreadPool@@@?$_Tuple_val@PEAVThreadPool@@@std@@QEAA@$$QEAPEAVThreadPool@@@Z
_TEXT	SEGMENT
this$ = 224
_Arg$ = 232
??$?0PEAVThreadPool@@@?$_Tuple_val@PEAVThreadPool@@@std@@QEAA@$$QEAPEAVThreadPool@@@Z PROC ; std::_Tuple_val<ThreadPool *>::_Tuple_val<ThreadPool *><ThreadPool *>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Arg$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ; std::forward<ThreadPool *>
  00047	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 01	 mov	 QWORD PTR [rcx], rax

; 156  :     }

  00054	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00062	5f		 pop	 rdi
  00063	5d		 pop	 rbp
  00064	c3		 ret	 0
??$?0PEAVThreadPool@@@?$_Tuple_val@PEAVThreadPool@@@std@@QEAA@$$QEAPEAVThreadPool@@@Z ENDP ; std::_Tuple_val<ThreadPool *>::_Tuple_val<ThreadPool *><ThreadPool *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@YAAEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@YAAEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@@Z PROC ; std::forward<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@YAAEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@@Z ENDP ; std::forward<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0P8ThreadPool@@EAAXXZ@?$_Tuple_val@P8ThreadPool@@EAAXXZ@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ@Z
_TEXT	SEGMENT
this$ = 224
_Arg$ = 232
??$?0P8ThreadPool@@EAAXXZ@?$_Tuple_val@P8ThreadPool@@EAAXXZ@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ@Z PROC ; std::_Tuple_val<void (__cdecl ThreadPool::*)(void)>::_Tuple_val<void (__cdecl ThreadPool::*)(void)><void (__cdecl ThreadPool::*)(void)>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Arg$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z ; std::forward<void (__cdecl ThreadPool::*)(void)>
  00047	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 01	 mov	 QWORD PTR [rcx], rax

; 156  :     }

  00054	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00062	5f		 pop	 rdi
  00063	5d		 pop	 rbp
  00064	c3		 ret	 0
??$?0P8ThreadPool@@EAAXXZ@?$_Tuple_val@P8ThreadPool@@EAAXXZ@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ@Z ENDP ; std::_Tuple_val<void (__cdecl ThreadPool::*)(void)>::_Tuple_val<void (__cdecl ThreadPool::*)(void)><void (__cdecl ThreadPool::*)(void)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@PEAVThreadPool@@$$V$0A@@?$tuple@PEAVThreadPool@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVThreadPool@@@Z
_TEXT	SEGMENT
$T1 = 196
tv81 = 216
this$ = 256
__formal$ = 264
_This_arg$ = 272
??$?0U_Exact_args_t@std@@PEAVThreadPool@@$$V$0A@@?$tuple@PEAVThreadPool@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVThreadPool@@@Z PROC ; std::tuple<ThreadPool *>::tuple<ThreadPool *><std::_Exact_args_t,ThreadPool *,0>, COMDAT

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003f	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00046	48 8b f8	 mov	 rdi, rax
  00049	33 c0		 xor	 eax, eax
  0004b	b9 01 00 00 00	 mov	 ecx, 1
  00050	f3 aa		 rep stosb
  00052	0f b6 95 c4 00
	00 00		 movzx	 edx, BYTE PTR $T1[rbp]
  00059	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00065	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00073	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  0007a	e8 00 00 00 00	 call	 ??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ; std::forward<ThreadPool *>
  0007f	48 8b d0	 mov	 rdx, rax
  00082	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv81[rbp]
  00089	e8 00 00 00 00	 call	 ??$?0PEAVThreadPool@@@?$_Tuple_val@PEAVThreadPool@@@std@@QEAA@$$QEAPEAVThreadPool@@@Z ; std::_Tuple_val<ThreadPool *>::_Tuple_val<ThreadPool *><ThreadPool *>

; 243  :     }

  0008e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00095	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009c	5f		 pop	 rdi
  0009d	5d		 pop	 rbp
  0009e	c3		 ret	 0
??$?0U_Exact_args_t@std@@PEAVThreadPool@@$$V$0A@@?$tuple@PEAVThreadPool@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVThreadPool@@@Z ENDP ; std::tuple<ThreadPool *>::tuple<ThreadPool *><std::_Exact_args_t,ThreadPool *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>, COMDAT

; 78   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  0004a	f2 0f 10 01	 movsd	 xmm0, QWORD PTR [rcx]
  0004e	f2 0f 11 00	 movsd	 QWORD PTR [rax], xmm0
  00052	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00059	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00060	5f		 pop	 rdi
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ENDP ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
<_Val2_0>$ = 240
??$?0AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,1><std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> * &>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003f	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR <_Val2_0>$[rbp]
  00046	e8 00 00 00 00	 call	 ??$forward@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@YAAEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@@Z ; std::forward<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> * &>
  0004b	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00052	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00055	48 89 01	 mov	 QWORD PTR [rcx], rax
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??$?0AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,1><std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@P8ThreadPool@@EAAXXZPEAV2@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@U_Exact_args_t@1@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV3@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv87 = 248
tv80 = 248
this$ = 288
__formal$ = 296
_This_arg$ = 304
<_Rest_arg_0>$ = 312
??$?0U_Exact_args_t@std@@P8ThreadPool@@EAAXXZPEAV2@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@U_Exact_args_t@1@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV3@@Z PROC ; std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *><std::_Exact_args_t,void (__cdecl ThreadPool::*)(void),ThreadPool *,0>, COMDAT

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00044	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  0004b	48 8b f8	 mov	 rdi, rax
  0004e	33 c0		 xor	 eax, eax
  00050	b9 01 00 00 00	 mov	 ecx, 1
  00055	f3 aa		 rep stosb
  00057	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rbp]
  0005e	e8 00 00 00 00	 call	 ??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ; std::forward<ThreadPool *>
  00063	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  0006a	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00071	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00077	4c 8b 85 f8 00
	00 00		 mov	 r8, QWORD PTR tv80[rbp]
  0007e	0f b6 95 e4 00
	00 00		 movzx	 edx, BYTE PTR $T2[rbp]
  00085	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008c	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@PEAVThreadPool@@$$V$0A@@?$tuple@PEAVThreadPool@@@std@@QEAA@U_Exact_args_t@1@$$QEAPEAVThreadPool@@@Z ; std::tuple<ThreadPool *>::tuple<ThreadPool *><std::_Exact_args_t,ThreadPool *,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00091	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00098	48 83 c0 08	 add	 rax, 8
  0009c	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  000a3	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  000aa	e8 00 00 00 00	 call	 ??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z ; std::forward<void (__cdecl ThreadPool::*)(void)>
  000af	48 8b d0	 mov	 rdx, rax
  000b2	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR tv87[rbp]
  000b9	e8 00 00 00 00	 call	 ??$?0P8ThreadPool@@EAAXXZ@?$_Tuple_val@P8ThreadPool@@EAAXXZ@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ@Z ; std::_Tuple_val<void (__cdecl ThreadPool::*)(void)>::_Tuple_val<void (__cdecl ThreadPool::*)(void)><void (__cdecl ThreadPool::*)(void)>

; 243  :     }

  000be	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c5	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
??$?0U_Exact_args_t@std@@P8ThreadPool@@EAAXXZPEAV2@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@U_Exact_args_t@1@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV3@@Z ENDP ; std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *><std::_Exact_args_t,void (__cdecl ThreadPool::*)(void),ThreadPool *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
__$ReturnUdt$ = 416
_Dur$ = 424
??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 c8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+456]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  0003c	c6 45 04 01	 mov	 BYTE PTR _Num_is_one$[rbp], 1

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00040	c6 45 24 01	 mov	 BYTE PTR _Den_is_one$[rbp], 1

; 406  : 
; 407  :         if (_Den_is_one) {

  00044	33 c0		 xor	 eax, eax
  00046	83 f8 01	 cmp	 eax, 1
  00049	0f 84 8a 00 00
	00		 je	 $LN2@duration_c

; 408  :             if (_Num_is_one) {

  0004f	33 c0		 xor	 eax, eax
  00051	83 f8 01	 cmp	 eax, 1
  00054	74 3c		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  00056	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  0005d	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00062	90		 npad	 1
  00063	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00068	f2 0f 11 85 08
	01 00 00	 movsd	 QWORD PTR $T1[rbp], xmm0
  00070	48 8d 95 08 01
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00077	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0007e	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  00083	90		 npad	 1
  00084	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  0008b	e9 d6 00 00 00	 jmp	 $LN1@duration_c

; 410  :             } else {

  00090	eb 42		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  00092	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  00099	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0009e	90		 npad	 1
  0009f	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  000a4	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000ac	f2 0f 11 85 28
	01 00 00	 movsd	 QWORD PTR $T2[rbp], xmm0
  000b4	48 8d 95 28 01
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  000bb	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000c2	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  000c7	90		 npad	 1
  000c8	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  000cf	e9 92 00 00 00	 jmp	 $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  000d4	e9 8d 00 00 00	 jmp	 $LN1@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  000d9	33 c0		 xor	 eax, eax
  000db	83 f8 01	 cmp	 eax, 1
  000de	74 41		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  000e0	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  000e7	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  000ec	90		 npad	 1
  000ed	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  000f2	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000fa	f2 0f 11 85 48
	01 00 00	 movsd	 QWORD PTR $T3[rbp], xmm0
  00102	48 8d 95 48 01
	00 00		 lea	 rdx, QWORD PTR $T3[rbp]
  00109	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00110	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  00115	90		 npad	 1
  00116	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  0011d	eb 47		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  0011f	eb 45		 jmp	 SHORT $LN1@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  00121	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  00128	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0012d	90		 npad	 1
  0012e	f2 48 0f 2a c0	 cvtsi2sd xmm0, rax
  00133	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@3ff0000000000000
  0013b	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00143	f2 0f 11 85 68
	01 00 00	 movsd	 QWORD PTR $T4[rbp], xmm0
  0014b	48 8d 95 68 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00152	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00159	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  0015e	90		 npad	 1
  0015f	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  00166	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  0016d	5f		 pop	 rdi
  0016e	5d		 pop	 rbp
  0016f	c3		 ret	 0
??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
__$ReturnUdt$ = 416
_Dur$ = 424
??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 c8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+456]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  0003c	c6 45 04 00	 mov	 BYTE PTR _Num_is_one$[rbp], 0

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00040	c6 45 24 01	 mov	 BYTE PTR _Den_is_one$[rbp], 1

; 406  : 
; 407  :         if (_Den_is_one) {

  00044	33 c0		 xor	 eax, eax
  00046	83 f8 01	 cmp	 eax, 1
  00049	74 7f		 je	 SHORT $LN2@duration_c

; 408  :             if (_Num_is_one) {

  0004b	33 c0		 xor	 eax, eax
  0004d	85 c0		 test	 eax, eax
  0004f	74 37		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  00051	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  00058	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
  0005d	90		 npad	 1
  0005e	f2 0f 11 85 08
	01 00 00	 movsd	 QWORD PTR $T1[rbp], xmm0
  00066	48 8d 95 08 01
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  0006d	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  00079	90		 npad	 1
  0007a	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00081	e9 c6 00 00 00	 jmp	 $LN1@duration_c

; 410  :             } else {

  00086	eb 3d		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  00088	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  0008f	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
  00094	90		 npad	 1
  00095	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@41cdcd6500000000
  0009d	f2 0f 11 85 28
	01 00 00	 movsd	 QWORD PTR $T2[rbp], xmm0
  000a5	48 8d 95 28 01
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  000ac	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000b3	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  000b8	90		 npad	 1
  000b9	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  000c0	e9 87 00 00 00	 jmp	 $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  000c5	e9 82 00 00 00	 jmp	 $LN1@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  000ca	33 c0		 xor	 eax, eax
  000cc	85 c0		 test	 eax, eax
  000ce	74 3c		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  000d0	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  000d7	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
  000dc	90		 npad	 1
  000dd	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@3ff0000000000000
  000e5	f2 0f 11 85 48
	01 00 00	 movsd	 QWORD PTR $T3[rbp], xmm0
  000ed	48 8d 95 48 01
	00 00		 lea	 rdx, QWORD PTR $T3[rbp]
  000f4	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000fb	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  00100	90		 npad	 1
  00101	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00108	eb 42		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  0010a	eb 40		 jmp	 SHORT $LN1@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  0010c	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  00113	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1> >::count
  00118	90		 npad	 1
  00119	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@41cdcd6500000000
  00121	f2 0f 5e 05 00
	00 00 00	 divsd	 xmm0, QWORD PTR __real@3ff0000000000000
  00129	f2 0f 11 85 68
	01 00 00	 movsd	 QWORD PTR $T4[rbp], xmm0
  00131	48 8d 95 68 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00138	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0013f	e8 00 00 00 00	 call	 ??$?0NX@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBN@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,void>
  00144	90		 npad	 1
  00145	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  0014c	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  00153	5f		 pop	 rdi
  00154	5d		 pop	 rbp
  00155	c3		 ret	 0
??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$invoke@P8ThreadPool@@EAAXXZPEAV1@@std@@YAX$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV1@@Z
_TEXT	SEGMENT
tv73 = 192
tv71 = 200
_Obj$ = 240
<_Args_0>$ = 248
??$invoke@P8ThreadPool@@EAAXXZPEAV1@@std@@YAX$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV1@@Z PROC ; std::invoke<void (__cdecl ThreadPool::*)(void),ThreadPool *>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ; std::forward<ThreadPool *>
  00047	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  0004e	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00055	e8 00 00 00 00	 call	 ??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z ; std::forward<void (__cdecl ThreadPool::*)(void)>
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  00064	48 8b 95 c0 00
	00 00		 mov	 rdx, QWORD PTR tv73[rbp]
  0006b	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR tv71[rbp]
  00072	e8 00 00 00 00	 call	 ??$_Call@P8ThreadPool@@EAAXXZPEAV1@$$V@_Invoker_pmf_pointer@std@@SAXP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ; std::_Invoker_pmf_pointer::_Call<void (__cdecl ThreadPool::*)(void),ThreadPool *>
  00077	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0007e	5f		 pop	 rdi
  0007f	5d		 pop	 rbp
  00080	c3		 ret	 0
??$invoke@P8ThreadPool@@EAAXXZPEAV1@@std@@YAX$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV1@@Z ENDP ; std::invoke<void (__cdecl ThreadPool::*)(void),ThreadPool *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@P8ThreadPool@@EAAXXZPEAV1@$$V@_Invoker_pmf_pointer@std@@SAXP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
_TEXT	SEGMENT
_Pmf$ = 224
_Arg1$ = 232
??$_Call@P8ThreadPool@@EAAXXZPEAV1@$$V@_Invoker_pmf_pointer@std@@SAXP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z PROC ; std::_Invoker_pmf_pointer::_Call<void (__cdecl ThreadPool::*)(void),ThreadPool *>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Arg1$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ; std::forward<ThreadPool *>
  00047	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0004a	ff 95 e0 00 00
	00		 call	 QWORD PTR _Pmf$[rbp]
  00050	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
??$_Call@P8ThreadPool@@EAAXXZPEAV1@$$V@_Invoker_pmf_pointer@std@@SAXP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ENDP ; std::_Invoker_pmf_pointer::_Call<void (__cdecl ThreadPool::*)(void),ThreadPool *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAPEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z PROC ; std::move<ThreadPool * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAPEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ENDP ; std::move<ThreadPool * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$00P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAPEAVThreadPool@@AEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$00P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAPEAVThreadPool@@AEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z PROC ; std::get<1,void (__cdecl ThreadPool::*)(void),ThreadPool *>, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tuple$[rbp]

; 652  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$get@$00P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAPEAVThreadPool@@AEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z ENDP ; std::get<1,void (__cdecl ThreadPool::*)(void),ThreadPool *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAP8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAP8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z PROC ; std::move<void (__cdecl ThreadPool::*&)(void)>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAP8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z ENDP ; std::move<void (__cdecl ThreadPool::*&)(void)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$0A@P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAP8ThreadPool@@EAAXXZAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$0A@P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAP8ThreadPool@@EAAXXZAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z PROC ; std::get<0,void (__cdecl ThreadPool::*)(void),ThreadPool *>, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tuple$[rbp]
  0003e	48 83 c0 08	 add	 rax, 8

; 652  : }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$get@$0A@P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAP8ThreadPool@@EAAXXZAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z ENDP ; std::get<0,void (__cdecl ThreadPool::*)(void),ThreadPool *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z
_TEXT	SEGMENT
$T1 = 196
tv70 = 216
this$ = 256
_Ptr$ = 264
??$?0U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z PROC ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > ><std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,0>, COMDAT

; 1820 :     explicit unique_ptr(pointer _Ptr) noexcept : _Mypair(_Zero_then_variadic_args_t(), _Ptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv70[rbp], rax
  0004a	4c 8d 85 08 01
	00 00		 lea	 r8, QWORD PTR _Ptr$[rbp]
  00051	0f b6 95 c4 00
	00 00		 movzx	 edx, BYTE PTR $T1[rbp]
  00058	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv70[rbp]
  0005f	e8 00 00 00 00	 call	 ??$?0AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@AEAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,1>::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,1><std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> * &>
  00064	90		 npad	 1
  00065	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00073	5f		 pop	 rdi
  00074	5d		 pop	 rbp
  00075	c3		 ret	 0
??$?0U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z ENDP ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > ><std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0P8ThreadPool@@EAAXXZPEAV0@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
tv82 = 280
tv79 = 288
this$ = 336
_This_arg$ = 344
<_Rest_arg_0>$ = 352
??$?0P8ThreadPool@@EAAXXZPEAV0@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z PROC ; std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *><void (__cdecl ThreadPool::*)(void),ThreadPool *,0>, COMDAT

; 310  :         : tuple(_Exact_args_t{}, _STD forward<_This2>(_This_arg), _STD forward<_Rest2>(_Rest_arg)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1
  00041	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00048	48 8b f8	 mov	 rdi, rax
  0004b	33 c0		 xor	 eax, eax
  0004d	b9 01 00 00 00	 mov	 ecx, 1
  00052	f3 aa		 rep stosb
  00054	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rbp]
  0005b	e8 00 00 00 00	 call	 ??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ; std::forward<ThreadPool *>
  00060	90		 npad	 1
  00061	48 89 85 18 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  00068	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  0006f	e8 00 00 00 00	 call	 ??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z ; std::forward<void (__cdecl ThreadPool::*)(void)>
  00074	90		 npad	 1
  00075	48 89 85 20 01
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  0007c	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00083	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00089	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  00090	88 85 04 01 00
	00		 mov	 BYTE PTR $T3[rbp], al
  00096	4c 8b 8d 18 01
	00 00		 mov	 r9, QWORD PTR tv82[rbp]
  0009d	4c 8b 85 20 01
	00 00		 mov	 r8, QWORD PTR tv79[rbp]
  000a4	0f b6 95 04 01
	00 00		 movzx	 edx, BYTE PTR $T3[rbp]
  000ab	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b2	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@P8ThreadPool@@EAAXXZPEAV2@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@U_Exact_args_t@1@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV3@@Z ; std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *><std::_Exact_args_t,void (__cdecl ThreadPool::*)(void),ThreadPool *,0>
  000b7	90		 npad	 1
  000b8	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000bf	48 8d a5 38 01
	00 00		 lea	 rsp, QWORD PTR [rbp+312]
  000c6	5f		 pop	 rdi
  000c7	5d		 pop	 rbp
  000c8	c3		 ret	 0
??$?0P8ThreadPool@@EAAXXZPEAV0@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ENDP ; std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *><void (__cdecl ThreadPool::*)(void),ThreadPool *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAV?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z PROC ; std::move<std::function<void __cdecl(void)> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAV?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z ENDP ; std::move<std::function<void __cdecl(void)> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@PEAV12@@std@@YAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@$$QEAPEAV10@@Z
_TEXT	SEGMENT
_Old_val$ = 8
_Val$ = 256
_New_val$ = 264
??$exchange@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@PEAV12@@std@@YAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@$$QEAPEAV10@@Z PROC ; std::exchange<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__18CBD245_utility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0003b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 89 45 08	 mov	 QWORD PTR _Old_val$[rbp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  00049	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]
  00050	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _New_val$[rbp]
  00057	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0005a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0005d	48 8b 45 08	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 530  : }

  00061	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00068	5f		 pop	 rdi
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
??$exchange@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@PEAV12@@std@@YAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@$$QEAPEAV10@@Z ENDP ; std::exchange<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
__$ReturnUdt$ = 416
_Dur$ = 424
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 c8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+456]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  0003c	c6 45 04 00	 mov	 BYTE PTR _Num_is_one$[rbp], 0

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00040	c6 45 24 01	 mov	 BYTE PTR _Den_is_one$[rbp], 1

; 406  : 
; 407  :         if (_Den_is_one) {

  00044	33 c0		 xor	 eax, eax
  00046	83 f8 01	 cmp	 eax, 1
  00049	74 76		 je	 SHORT $LN2@duration_c

; 408  :             if (_Num_is_one) {

  0004b	33 c0		 xor	 eax, eax
  0004d	85 c0		 test	 eax, eax
  0004f	74 36		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  00051	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  00058	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
  0005d	90		 npad	 1
  0005e	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00065	48 8d 95 08 01
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  0006c	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00073	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00078	90		 npad	 1
  00079	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00080	e9 ab 00 00 00	 jmp	 $LN1@duration_c

; 410  :             } else {

  00085	eb 38		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  00087	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  0008e	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
  00093	90		 npad	 1
  00094	48 69 c0 00 ca
	9a 3b		 imul	 rax, rax, 1000000000	; 3b9aca00H
  0009b	48 89 85 28 01
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  000a2	48 8d 95 28 01
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  000a9	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000b0	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000b5	90		 npad	 1
  000b6	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  000bd	eb 71		 jmp	 SHORT $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  000bf	eb 6f		 jmp	 SHORT $LN1@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	74 33		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  000c7	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  000ce	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
  000d3	90		 npad	 1
  000d4	48 89 85 48 01
	00 00		 mov	 QWORD PTR $T3[rbp], rax
  000db	48 8d 95 48 01
	00 00		 lea	 rdx, QWORD PTR $T3[rbp]
  000e2	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000e9	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000ee	90		 npad	 1
  000ef	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  000f6	eb 38		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  000f8	eb 36		 jmp	 SHORT $LN1@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  000fa	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  00101	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
  00106	90		 npad	 1
  00107	48 69 c0 00 ca
	9a 3b		 imul	 rax, rax, 1000000000	; 3b9aca00H
  0010e	48 89 85 68 01
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  00115	48 8d 95 68 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  0011c	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00123	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00128	90		 npad	 1
  00129	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  00130	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  00137	5f		 pop	 rdi
  00138	5d		 pop	 rbp
  00139	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>, COMDAT

; 78   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00050	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Dur$ = 264
??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,void>, COMDAT

; 86   :             : _MyRep(chrono::duration_cast<duration>(_Dur).count()) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Dur$[rbp]
  00043	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0004a	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>
  0004f	90		 npad	 1
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
  00058	90		 npad	 1
  00059	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00060	f2 0f 11 00	 movsd	 QWORD PTR [rax], xmm0
  00064	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ENDP ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Dur$ = 264
??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,void>, COMDAT

; 86   :             : _MyRep(chrono::duration_cast<duration>(_Dur).count()) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Dur$[rbp]
  00043	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0004a	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@NU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@NU?$ratio@$00$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<double,std::ratio<1,1000000000> >,double,std::ratio<1,1>,void>
  0004f	90		 npad	 1
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
  00058	90		 npad	 1
  00059	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00060	f2 0f 11 00	 movsd	 QWORD PTR [rax], xmm0
  00064	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z ENDP ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
__$ReturnUdt$ = 416
_Dur$ = 424
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 c8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+456]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  0003c	c6 45 04 00	 mov	 BYTE PTR _Num_is_one$[rbp], 0

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00040	c6 45 24 01	 mov	 BYTE PTR _Den_is_one$[rbp], 1

; 406  : 
; 407  :         if (_Den_is_one) {

  00044	33 c0		 xor	 eax, eax
  00046	83 f8 01	 cmp	 eax, 1
  00049	74 73		 je	 SHORT $LN2@duration_c

; 408  :             if (_Num_is_one) {

  0004b	33 c0		 xor	 eax, eax
  0004d	85 c0		 test	 eax, eax
  0004f	74 36		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  00051	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  00058	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
  0005d	90		 npad	 1
  0005e	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00065	48 8d 95 08 01
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  0006c	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00073	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00078	90		 npad	 1
  00079	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00080	e9 a5 00 00 00	 jmp	 $LN1@duration_c

; 410  :             } else {

  00085	eb 35		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  00087	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  0008e	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
  00093	90		 npad	 1
  00094	48 6b c0 64	 imul	 rax, rax, 100		; 00000064H
  00098	48 89 85 28 01
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  0009f	48 8d 95 28 01
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  000a6	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000ad	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000b2	90		 npad	 1
  000b3	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  000ba	eb 6e		 jmp	 SHORT $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  000bc	eb 6c		 jmp	 SHORT $LN1@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  000be	33 c0		 xor	 eax, eax
  000c0	85 c0		 test	 eax, eax
  000c2	74 33		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  000c4	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  000cb	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
  000d0	90		 npad	 1
  000d1	48 89 85 48 01
	00 00		 mov	 QWORD PTR $T3[rbp], rax
  000d8	48 8d 95 48 01
	00 00		 lea	 rdx, QWORD PTR $T3[rbp]
  000df	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000e6	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000eb	90		 npad	 1
  000ec	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  000f3	eb 35		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  000f5	eb 33		 jmp	 SHORT $LN1@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  000f7	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  000fe	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
  00103	90		 npad	 1
  00104	48 6b c0 64	 imul	 rax, rax, 100		; 00000064H
  00108	48 89 85 68 01
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  0010f	48 8d 95 68 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00116	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0011d	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00122	90		 npad	 1
  00123	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  0012a	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  00131	5f		 pop	 rdi
  00132	5d		 pop	 rbp
  00133	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv66 = 248
tv71 = 256
_Left$ = 304
_Right$ = 312
??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z PROC ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >, COMDAT

; 365  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) { // strengthened

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 366  :         // test if duration < duration
; 367  :         using _CT = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 368  :         return _CT(_Left).count() < _CT(_Right).count();

  0003c	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0004d	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00054	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00057	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  0005e	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00065	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0006a	90		 npad	 1
  0006b	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv66[rbp], rax
  00072	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  00079	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0007e	90		 npad	 1
  0007f	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR tv66[rbp]
  00086	48 3b c8	 cmp	 rcx, rax
  00089	7d 0c		 jge	 SHORT $LN3@operator
  0008b	c7 85 00 01 00
	00 01 00 00 00	 mov	 DWORD PTR tv71[rbp], 1
  00095	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00097	c7 85 00 01 00
	00 00 00 00 00	 mov	 DWORD PTR tv71[rbp], 0
$LN4@operator:
  000a1	0f b6 85 00 01
	00 00		 movzx	 eax, BYTE PTR tv71[rbp]

; 369  :     }

  000a8	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  000af	5f		 pop	 rdi
  000b0	5d		 pop	 rbp
  000b1	c3		 ret	 0
??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z ENDP ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
__$ReturnUdt$ = 416
_Dur$ = 424
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 c8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+456]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  0003c	c6 45 04 00	 mov	 BYTE PTR _Num_is_one$[rbp], 0

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00040	c6 45 24 01	 mov	 BYTE PTR _Den_is_one$[rbp], 1

; 406  : 
; 407  :         if (_Den_is_one) {

  00044	33 c0		 xor	 eax, eax
  00046	83 f8 01	 cmp	 eax, 1
  00049	74 76		 je	 SHORT $LN2@duration_c

; 408  :             if (_Num_is_one) {

  0004b	33 c0		 xor	 eax, eax
  0004d	85 c0		 test	 eax, eax
  0004f	74 36		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  00051	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  00058	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
  0005d	90		 npad	 1
  0005e	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00065	48 8d 95 08 01
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  0006c	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00073	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00078	90		 npad	 1
  00079	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00080	e9 ab 00 00 00	 jmp	 $LN1@duration_c

; 410  :             } else {

  00085	eb 38		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  00087	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  0008e	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
  00093	90		 npad	 1
  00094	48 69 c0 40 42
	0f 00		 imul	 rax, rax, 1000000	; 000f4240H
  0009b	48 89 85 28 01
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  000a2	48 8d 95 28 01
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  000a9	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000b0	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000b5	90		 npad	 1
  000b6	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  000bd	eb 71		 jmp	 SHORT $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  000bf	eb 6f		 jmp	 SHORT $LN1@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	74 33		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  000c7	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  000ce	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
  000d3	90		 npad	 1
  000d4	48 89 85 48 01
	00 00		 mov	 QWORD PTR $T3[rbp], rax
  000db	48 8d 95 48 01
	00 00		 lea	 rdx, QWORD PTR $T3[rbp]
  000e2	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000e9	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000ee	90		 npad	 1
  000ef	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  000f6	eb 38		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  000f8	eb 36		 jmp	 SHORT $LN1@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  000fa	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  00101	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
  00106	90		 npad	 1
  00107	48 69 c0 40 42
	0f 00		 imul	 rax, rax, 1000000	; 000f4240H
  0010e	48 89 85 68 01
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  00115	48 8d 95 68 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  0011c	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00123	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00128	90		 npad	 1
  00129	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  00130	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  00137	5f		 pop	 rdi
  00138	5d		 pop	 rbp
  00139	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0AEAVexception_ptr@std@@@?$_Tuple_val@AEAVexception_ptr@std@@@std@@QEAA@AEAVexception_ptr@1@@Z
_TEXT	SEGMENT
this$ = 224
_Arg$ = 232
??$?0AEAVexception_ptr@std@@@?$_Tuple_val@AEAVexception_ptr@std@@@std@@QEAA@AEAVexception_ptr@1@@Z PROC ; std::_Tuple_val<std::exception_ptr &>::_Tuple_val<std::exception_ptr &><std::exception_ptr &>, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Arg$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z ; std::forward<std::exception_ptr &>
  00047	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 156  :     }

  00051	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00058	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005f	5f		 pop	 rdi
  00060	5d		 pop	 rbp
  00061	c3		 ret	 0
??$?0AEAVexception_ptr@std@@@?$_Tuple_val@AEAVexception_ptr@std@@@std@@QEAA@AEAVexception_ptr@1@@Z ENDP ; std::_Tuple_val<std::exception_ptr &>::_Tuple_val<std::exception_ptr &><std::exception_ptr &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z PROC ; std::tuple<>::tuple<><std::_Exact_args_t,0>, COMDAT

; 214  :     constexpr tuple(_Tag) noexcept { // strengthened, construct from one arg per element

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	90		 npad	 1

; 215  :     }

  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ENDP ; std::tuple<>::tuple<><std::_Exact_args_t,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z
_TEXT	SEGMENT
_FnVals$ = 8
_Tup$ = 40
$T4 = 260
tv85 = 280
tv83 = 288
__$ArrayPad$ = 296
_RawVals$ = 336
??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z PROC ; std::thread::_Invoke<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,0,1>, COMDAT

; 36   :     static unsigned int __stdcall _Invoke(void* _RawVals) noexcept { // enforces termination

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 28 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F7EEAF5_thread
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 37   :         // adapt invoke of user's callable object to _beginthreadex's thread procedure
; 38   :         const unique_ptr<_Tuple> _FnVals(static_cast<_Tuple*>(_RawVals));

  00048	ba 08 00 00 00	 mov	 edx, 8
  0004d	48 8d 4d 08	 lea	 rcx, QWORD PTR _FnVals$[rbp]
  00051	e8 00 00 00 00	 call	 ?__autoclassinit2@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAX_K@Z
  00056	90		 npad	 1
  00057	48 8b 95 50 01
	00 00		 mov	 rdx, QWORD PTR _RawVals$[rbp]
  0005e	48 8d 4d 08	 lea	 rcx, QWORD PTR _FnVals$[rbp]
  00062	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > ><std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,0>
  00067	90		 npad	 1

; 39   :         _Tuple& _Tup = *_FnVals;

  00068	48 8d 4d 08	 lea	 rcx, QWORD PTR _FnVals$[rbp]
  0006c	e8 00 00 00 00	 call	 ??D?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@XZ ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::operator*
  00071	90		 npad	 1
  00072	48 89 45 28	 mov	 QWORD PTR _Tup$[rbp], rax

; 40   :         _STD invoke(_STD move(_STD get<_Indices>(_Tup))...);

  00076	48 8b 4d 28	 mov	 rcx, QWORD PTR _Tup$[rbp]
  0007a	e8 00 00 00 00	 call	 ??$get@$00P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAPEAVThreadPool@@AEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z ; std::get<1,void (__cdecl ThreadPool::*)(void),ThreadPool *>
  0007f	90		 npad	 1
  00080	48 8b c8	 mov	 rcx, rax
  00083	e8 00 00 00 00	 call	 ??$move@AEAPEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ; std::move<ThreadPool * &>
  00088	90		 npad	 1
  00089	48 89 85 18 01
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  00090	48 8b 4d 28	 mov	 rcx, QWORD PTR _Tup$[rbp]
  00094	e8 00 00 00 00	 call	 ??$get@$0A@P8ThreadPool@@EAAXXZPEAV1@@std@@YAAEAP8ThreadPool@@EAAXXZAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@@Z ; std::get<0,void (__cdecl ThreadPool::*)(void),ThreadPool *>
  00099	90		 npad	 1
  0009a	48 8b c8	 mov	 rcx, rax
  0009d	e8 00 00 00 00	 call	 ??$move@AEAP8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z ; std::move<void (__cdecl ThreadPool::*&)(void)>
  000a2	90		 npad	 1
  000a3	48 89 85 20 01
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  000aa	48 8b 95 18 01
	00 00		 mov	 rdx, QWORD PTR tv85[rbp]
  000b1	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR tv83[rbp]
  000b8	e8 00 00 00 00	 call	 ??$invoke@P8ThreadPool@@EAAXXZPEAV1@@std@@YAX$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV1@@Z ; std::invoke<void (__cdecl ThreadPool::*)(void),ThreadPool *>
  000bd	90		 npad	 1

; 41   :         _Cnd_do_broadcast_at_thread_exit(); // TRANSITION, ABI

  000be	e8 00 00 00 00	 call	 _Cnd_do_broadcast_at_thread_exit
  000c3	90		 npad	 1

; 42   :         return 0;

  000c4	c7 85 04 01 00
	00 00 00 00 00	 mov	 DWORD PTR $T4[rbp], 0
  000ce	48 8d 4d 08	 lea	 rcx, QWORD PTR _FnVals$[rbp]
  000d2	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::~unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >
  000d7	90		 npad	 1
  000d8	8b 85 04 01 00
	00		 mov	 eax, DWORD PTR $T4[rbp]

; 43   :     }

  000de	8b f8		 mov	 edi, eax
  000e0	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000e4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z$rtcFrameData
  000eb	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f0	90		 npad	 1
  000f1	8b c7		 mov	 eax, edi
  000f3	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000fa	48 33 cd	 xor	 rcx, rbp
  000fd	e8 00 00 00 00	 call	 __security_check_cookie
  00102	90		 npad	 1
  00103	48 8d a5 38 01
	00 00		 lea	 rsp, QWORD PTR [rbp+312]
  0010a	5f		 pop	 rdi
  0010b	5d		 pop	 rbp
  0010c	c3		 ret	 0
??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z ENDP ; std::thread::_Invoke<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,0,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAX_K@Z PROC ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::__autoclassinit2, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  00034	33 c0		 xor	 eax, eax
  00036	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR classSize$[rbp]
  0003d	f3 aa		 rep stosb
  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?__autoclassinit2@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAX_K@Z ENDP ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@XZ PROC ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :         return *this;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1422 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?release@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?release@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::release, COMDAT

; 1903 :     pointer release() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1904 :         return _STD exchange(_Mypair._Myval2, pointer());

  00037	48 c7 85 c8 00
	00 00 00 00 00
	00		 mov	 QWORD PTR $T1[rbp], 0
  00042	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ??$exchange@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@PEAV12@@std@@YAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@0@AEAPEAV10@$$QEAPEAV10@@Z ; std::exchange<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *>
  00058	90		 npad	 1

; 1905 :     }

  00059	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00060	5f		 pop	 rdi
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
?release@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ
_TEXT	SEGMENT
this$ = 224
?get@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::get, COMDAT

; 1895 :     _NODISCARD pointer get() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1896 :         return _Mypair._Myval2;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1897 :     }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?get@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??D?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@XZ
_TEXT	SEGMENT
this$ = 224
??D?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::operator*, COMDAT

; 1887 :     _NODISCARD add_lvalue_reference_t<_Ty> operator*() const noexcept { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1888 :         return *_Mypair._Myval2;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1889 :     }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??D?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAAEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
tv77 = 192
tv75 = 200
this$ = 240
??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ PROC ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::~unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >, COMDAT

; 1873 :     ~unique_ptr() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1874 :         if (_Mypair._Myval2) {

  00037	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00042	74 3c		 je	 SHORT $LN2@unique_ptr

; 1875 :             _Mypair._Get_first()(_Mypair._Myval2);

  00044	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b c8	 mov	 rcx, rax
  0004e	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@$00@std@@QEAAAEAU?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@XZ ; std::_Compressed_pair<std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> *,1>::_Get_first
  00053	90		 npad	 1
  00054	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  0005b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00065	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  0006c	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv75[rbp]
  00073	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv77[rbp]
  0007a	e8 00 00 00 00	 call	 ??R?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@QEBAXPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z ; std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >::operator()
  0007f	90		 npad	 1
$LN2@unique_ptr:

; 1876 :         }
; 1877 :     }

  00080	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00087	5f		 pop	 rdi
  00088	5d		 pop	 rbp
  00089	c3		 ret	 0
??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ ENDP ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::~unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??R?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@QEBAXPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z
_TEXT	SEGMENT
$T1 = 200
tv67 = 216
this$ = 256
_Ptr$ = 264
??R?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@QEBAXPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z PROC ; std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >::operator(), COMDAT

; 1765 :     void operator()(_Ty* _Ptr) const noexcept { // delete a pointer

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1766 :         static_assert(0 < sizeof(_Ty), "can't delete an incomplete type");
; 1767 :         delete _Ptr;

  0003c	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  00043	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0004a	ba 10 00 00 00	 mov	 edx, 16
  0004f	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00056	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  0005b	90		 npad	 1
  0005c	48 83 bd c8 00
	00 00 00	 cmp	 QWORD PTR $T1[rbp], 0
  00064	75 0d		 jne	 SHORT $LN3@operator
  00066	48 c7 85 d8 00
	00 00 00 00 00
	00		 mov	 QWORD PTR tv67[rbp], 0
  00071	eb 19		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00073	48 c7 85 08 01
	00 00 23 81 00
	00		 mov	 QWORD PTR _Ptr$[rbp], 33059 ; 00008123H
  0007e	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  00085	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv67[rbp], rax
$LN4@operator:

; 1768 :     }

  0008c	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00093	5f		 pop	 rdi
  00094	5d		 pop	 rbp
  00095	c3		 ret	 0
??R?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@QEBAXPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z ENDP ; std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$make_unique@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@P8ThreadPool@@EAAXXZPEAV3@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 228
tv83 = 248
tv81 = 256
tv84 = 264
__$ReturnUdt$ = 304
<_Args_0>$ = 312
<_Args_1>$ = 320
??$make_unique@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@P8ThreadPool@@EAAXXZPEAV3@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z PROC ; std::make_unique<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,void (__cdecl ThreadPool::*)(void),ThreadPool *,0>, COMDAT

; 2056 : _NODISCARD unique_ptr<_Ty> make_unique(_Types&&... _Args) { // make a unique_ptr

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]
  00034	c7 85 e4 00 00
	00 00 00 00 00	 mov	 DWORD PTR $T2[rbp], 0
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00045	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2057 :     return unique_ptr<_Ty>(new _Ty(_STD forward<_Types>(_Args)...));

  0004a	b9 10 00 00 00	 mov	 ecx, 16
  0004f	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00054	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0005b	48 83 bd c8 00
	00 00 00	 cmp	 QWORD PTR $T1[rbp], 0
  00063	74 49		 je	 SHORT $LN3@make_uniqu
  00065	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0006c	e8 00 00 00 00	 call	 ??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ; std::forward<ThreadPool *>
  00071	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  00078	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0007f	e8 00 00 00 00	 call	 ??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z ; std::forward<void (__cdecl ThreadPool::*)(void)>
  00084	48 89 85 00 01
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  0008b	4c 8b 85 f8 00
	00 00		 mov	 r8, QWORD PTR tv83[rbp]
  00092	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR tv81[rbp]
  00099	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  000a0	e8 00 00 00 00	 call	 ??$?0P8ThreadPool@@EAAXXZPEAV0@$0A@@?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ; std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *><void (__cdecl ThreadPool::*)(void),ThreadPool *,0>
  000a5	48 89 85 08 01
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  000ac	eb 0b		 jmp	 SHORT $LN4@make_uniqu
$LN3@make_uniqu:
  000ae	48 c7 85 08 01
	00 00 00 00 00
	00		 mov	 QWORD PTR tv84[rbp], 0
$LN4@make_uniqu:
  000b9	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR tv84[rbp]
  000c0	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000c7	e8 00 00 00 00	 call	 ??$?0U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@std@@$0A@@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@PEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@1@@Z ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > ><std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> >,0>
  000cc	8b 85 e4 00 00
	00		 mov	 eax, DWORD PTR $T2[rbp]
  000d2	83 c8 01	 or	 eax, 1
  000d5	89 85 e4 00 00
	00		 mov	 DWORD PTR $T2[rbp], eax
  000db	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 2058 : }

  000e2	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  000e9	5f		 pop	 rdi
  000ea	5d		 pop	 rbp
  000eb	c3		 ret	 0
??$make_unique@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@P8ThreadPool@@EAAXXZPEAV3@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ENDP ; std::make_unique<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,void (__cdecl ThreadPool::*)(void),ThreadPool *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z PROC ; std::forward<`ThreadPool::ThreadPool'::`1'::<lambda_1_> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z ENDP ; std::forward<`ThreadPool::ThreadPool'::`1'::<lambda_1_> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z PROC ; std::forward<std::_List_node<std::function<void __cdecl(void)>,void *> * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z ENDP ; std::forward<std::_List_node<std::function<void __cdecl(void)>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@V?$function@$$A6AXXZ@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@AEBV31@@Z
_TEXT	SEGMENT
$T1 = 200
tv76 = 216
__formal$ = 256
_Ptr$ = 264
<_Args_0>$ = 272
??$construct@V?$function@$$A6AXXZ@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@AEBV31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00047	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0004c	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00051	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00058	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0005f	e8 00 00 00 00	 call	 ??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z ; std::forward<std::function<void __cdecl(void)> const &>
  00064	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0006b	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv76[rbp]
  00072	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00079	e8 00 00 00 00	 call	 ??0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)>

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);
; 759  :     }

  0007e	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00085	5f		 pop	 rdi
  00086	5d		 pop	 rbp
  00087	c3		 ret	 0
??$construct@V?$function@$$A6AXXZ@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@AEBV31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@$$QEAV31@@Z
_TEXT	SEGMENT
$T1 = 200
tv76 = 216
__formal$ = 256
_Ptr$ = 264
<_Args_0>$ = 272
??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@$$QEAV31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00047	b9 40 00 00 00	 mov	 ecx, 64			; 00000040H
  0004c	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00051	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00058	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0005f	e8 00 00 00 00	 call	 ??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::forward<std::function<void __cdecl(void)> >
  00064	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0006b	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv76[rbp]
  00072	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00079	e8 00 00 00 00	 call	 ??0?$function@$$A6AXXZ@std@@QEAA@$$QEAV01@@Z ; std::function<void __cdecl(void)>::function<void __cdecl(void)>

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);
; 759  :     }

  0007e	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00085	5f		 pop	 rdi
  00086	5d		 pop	 rbp
  00087	c3		 ret	 0
??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@$$QEAV31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Dur$ = 264
??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,void>, COMDAT

; 86   :             : _MyRep(chrono::duration_cast<duration>(_Dur).count()) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Dur$[rbp]
  00043	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0004a	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$00@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$00@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1>,void>
  0004f	90		 npad	 1
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00058	90		 npad	 1
  00059	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	48 89 01	 mov	 QWORD PTR [rcx], rax
  00063	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006a	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00071	5f		 pop	 rdi
  00072	5d		 pop	 rbp
  00073	c3		 ret	 0
??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
__$ReturnUdt$ = 416
_Dur$ = 424
??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 c8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+456]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  0003c	c6 45 04 01	 mov	 BYTE PTR _Num_is_one$[rbp], 1

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00040	c6 45 24 00	 mov	 BYTE PTR _Den_is_one$[rbp], 0

; 406  : 
; 407  :         if (_Den_is_one) {

  00044	33 c0		 xor	 eax, eax
  00046	85 c0		 test	 eax, eax
  00048	74 70		 je	 SHORT $LN2@duration_c

; 408  :             if (_Num_is_one) {

  0004a	33 c0		 xor	 eax, eax
  0004c	83 f8 01	 cmp	 eax, 1
  0004f	74 36		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  00051	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  00058	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0005d	90		 npad	 1
  0005e	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00065	48 8d 95 08 01
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  0006c	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00073	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
  00078	90		 npad	 1
  00079	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00080	e9 b2 00 00 00	 jmp	 $LN1@duration_c

; 410  :             } else {

  00085	eb 31		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  00087	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  0008e	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00093	90		 npad	 1
  00094	48 89 85 28 01
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  0009b	48 8d 95 28 01
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  000a2	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000a9	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
  000ae	90		 npad	 1
  000af	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  000b6	eb 7f		 jmp	 SHORT $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  000b8	eb 7d		 jmp	 SHORT $LN1@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  000ba	33 c0		 xor	 eax, eax
  000bc	83 f8 01	 cmp	 eax, 1
  000bf	74 3d		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  000c1	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  000c8	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  000cd	90		 npad	 1
  000ce	48 99		 cdq
  000d0	b9 00 ca 9a 3b	 mov	 ecx, 1000000000		; 3b9aca00H
  000d5	48 f7 f9	 idiv	 rcx
  000d8	48 89 85 48 01
	00 00		 mov	 QWORD PTR $T3[rbp], rax
  000df	48 8d 95 48 01
	00 00		 lea	 rdx, QWORD PTR $T3[rbp]
  000e6	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000ed	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
  000f2	90		 npad	 1
  000f3	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  000fa	eb 3b		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  000fc	eb 39		 jmp	 SHORT $LN1@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  000fe	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  00105	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0010a	90		 npad	 1
  0010b	48 99		 cdq
  0010d	b9 00 ca 9a 3b	 mov	 ecx, 1000000000		; 3b9aca00H
  00112	48 f7 f9	 idiv	 rcx
  00115	48 89 85 68 01
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  0011c	48 8d 95 68 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00123	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0012a	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1> >::duration<__int64,std::ratio<1,1> ><__int64,void>
  0012f	90		 npad	 1
  00130	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  00137	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  0013e	5f		 pop	 rdi
  0013f	5d		 pop	 rbp
  00140	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z
_TEXT	SEGMENT
_Num_is_one$ = 4
_Den_is_one$ = 36
$T1 = 264
$T2 = 296
$T3 = 328
$T4 = 360
__$ReturnUdt$ = 416
_Dur$ = 424
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z PROC ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>, COMDAT

; 397  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep>&& is_arithmetic_v<typename _To::rep>) { // strengthened

$LN9:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 c8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+456]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 398  :         // convert duration to another duration; truncate
; 399  :         using _CF = ratio_divide<_Period, typename _To::period>;
; 400  : 
; 401  :         using _ToRep = typename _To::rep;
; 402  :         using _CR    = common_type_t<_ToRep, _Rep, intmax_t>;
; 403  : 
; 404  :         constexpr bool _Num_is_one = _CF::num == 1;

  0003c	c6 45 04 01	 mov	 BYTE PTR _Num_is_one$[rbp], 1

; 405  :         constexpr bool _Den_is_one = _CF::den == 1;

  00040	c6 45 24 01	 mov	 BYTE PTR _Den_is_one$[rbp], 1

; 406  : 
; 407  :         if (_Den_is_one) {

  00044	33 c0		 xor	 eax, eax
  00046	83 f8 01	 cmp	 eax, 1
  00049	74 70		 je	 SHORT $LN2@duration_c

; 408  :             if (_Num_is_one) {

  0004b	33 c0		 xor	 eax, eax
  0004d	83 f8 01	 cmp	 eax, 1
  00050	74 36		 je	 SHORT $LN4@duration_c

; 409  :                 return static_cast<_To>(static_cast<_ToRep>(_Dur.count()));

  00052	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  00059	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0005e	90		 npad	 1
  0005f	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00066	48 8d 95 08 01
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  0006d	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00074	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  00079	90		 npad	 1
  0007a	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  00081	e9 9e 00 00 00	 jmp	 $LN1@duration_c

; 410  :             } else {

  00086	eb 31		 jmp	 SHORT $LN5@duration_c
$LN4@duration_c:

; 411  :                 return static_cast<_To>(

  00088	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  0008f	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00094	90		 npad	 1
  00095	48 89 85 28 01
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  0009c	48 8d 95 28 01
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  000a3	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000aa	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000af	90		 npad	 1
  000b0	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  000b7	eb 6b		 jmp	 SHORT $LN1@duration_c
$LN5@duration_c:

; 412  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num)));
; 413  :             }
; 414  :         } else {

  000b9	eb 69		 jmp	 SHORT $LN1@duration_c
$LN2@duration_c:

; 415  :             if (_Num_is_one) {

  000bb	33 c0		 xor	 eax, eax
  000bd	83 f8 01	 cmp	 eax, 1
  000c0	74 33		 je	 SHORT $LN6@duration_c

; 416  :                 return static_cast<_To>(

  000c2	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  000c9	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  000ce	90		 npad	 1
  000cf	48 89 85 48 01
	00 00		 mov	 QWORD PTR $T3[rbp], rax
  000d6	48 8d 95 48 01
	00 00		 lea	 rdx, QWORD PTR $T3[rbp]
  000dd	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000e4	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000e9	90		 npad	 1
  000ea	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
  000f1	eb 31		 jmp	 SHORT $LN1@duration_c

; 417  :                     static_cast<_ToRep>(static_cast<_CR>(_Dur.count()) / static_cast<_CR>(_CF::den)));
; 418  :             } else {

  000f3	eb 2f		 jmp	 SHORT $LN1@duration_c
$LN6@duration_c:

; 419  :                 return static_cast<_To>(static_cast<_ToRep>(

  000f5	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _Dur$[rbp]
  000fc	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00101	90		 npad	 1
  00102	48 89 85 68 01
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  00109	48 8d 95 68 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00110	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00117	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  0011c	90		 npad	 1
  0011d	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]
$LN1@duration_c:

; 420  :                     static_cast<_CR>(_Dur.count()) * static_cast<_CR>(_CF::num) / static_cast<_CR>(_CF::den)));
; 421  :             }
; 422  :         }
; 423  :     }

  00124	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  0012b	5f		 pop	 rdi
  0012c	5d		 pop	 rbp
  0012d	c3		 ret	 0
??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z ENDP ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv68 = 248
tv75 = 256
_Left$ = 304
_Right$ = 312
??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z PROC ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >, COMDAT

; 365  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) { // strengthened

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 366  :         // test if duration < duration
; 367  :         using _CT = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 368  :         return _CT(_Left).count() < _CT(_Right).count();

  0003c	48 8b 95 30 01
	00 00		 mov	 rdx, QWORD PTR _Left$[rbp]
  00043	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0004a	e8 00 00 00 00	 call	 ??$?0NU?$ratio@$00$00@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@NU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><double,std::ratio<1,1>,void>
  0004f	90		 npad	 1
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
  00058	90		 npad	 1
  00059	f2 0f 11 85 f8
	00 00 00	 movsd	 QWORD PTR tv68[rbp], xmm0
  00061	48 8b 95 38 01
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  00068	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0006f	e8 00 00 00 00	 call	 ??$?0_JU?$ratio@$00$0DLJKMKAA@@std@@X@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::duration<double,std::ratio<1,1000000000> >::duration<double,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000000000>,void>
  00074	90		 npad	 1
  00075	48 8b c8	 mov	 rcx, rax
  00078	e8 00 00 00 00	 call	 ?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
  0007d	90		 npad	 1
  0007e	f2 0f 10 8d f8
	00 00 00	 movsd	 xmm1, QWORD PTR tv68[rbp]
  00086	66 0f 2f c1	 comisd	 xmm0, xmm1
  0008a	76 0c		 jbe	 SHORT $LN3@operator
  0008c	c7 85 00 01 00
	00 01 00 00 00	 mov	 DWORD PTR tv75[rbp], 1
  00096	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00098	c7 85 00 01 00
	00 00 00 00 00	 mov	 DWORD PTR tv75[rbp], 0
$LN4@operator:
  000a2	0f b6 85 00 01
	00 00		 movzx	 eax, BYTE PTR tv75[rbp]

; 369  :     }

  000a9	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  000b0	5f		 pop	 rdi
  000b1	5d		 pop	 rbp
  000b2	c3		 ret	 0
??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ENDP ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Dur$ = 264
??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,void>, COMDAT

; 86   :             : _MyRep(chrono::duration_cast<duration>(_Dur).count()) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Dur$[rbp]
  00043	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0004a	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0JIJGIA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,10000000>,void>
  0004f	90		 npad	 1
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00058	90		 npad	 1
  00059	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	48 89 01	 mov	 QWORD PTR [rcx], rax
  00063	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006a	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00071	5f		 pop	 rdi
  00072	5d		 pop	 rbp
  00073	c3		 ret	 0
??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
tv68 = 280
__$ReturnUdt$ = 320
_Left$ = 328
_Right$ = 336
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z PROC ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >, COMDAT

; 262  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 263  :         // subtract two durations
; 264  :         using _CD = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 265  :         return _CD(_CD(_Left).count() - _CD(_Right).count());

  00041	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  00052	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00059	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005c	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T3[rbp], rax
  00063	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0006a	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0006f	90		 npad	 1
  00070	48 89 85 18 01
	00 00		 mov	 QWORD PTR tv68[rbp], rax
  00077	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  0007e	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00083	90		 npad	 1
  00084	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR tv68[rbp]
  0008b	48 2b c8	 sub	 rcx, rax
  0008e	48 8b c1	 mov	 rax, rcx
  00091	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00098	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  0009f	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000a6	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000ab	90		 npad	 1
  000ac	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 266  :     }

  000b3	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  000ba	5f		 pop	 rdi
  000bb	5d		 pop	 rbp
  000bc	c3		 ret	 0
??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ENDP ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv76 = 248
tv74 = 256
_Left$ = 304
_Right$ = 312
??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z PROC ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 551  :         _NOEXCEPT_COND(

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 552  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) { // strengthened
; 553  :         // test for time_point < time_point
; 554  :         return _Left.time_since_epoch() < _Right.time_since_epoch();

  0003c	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00043	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004a	e8 00 00 00 00	 call	 ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
  0004f	90		 npad	 1
  00050	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  00057	48 8d 95 e8 00
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  0005e	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  00065	e8 00 00 00 00	 call	 ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
  0006a	90		 npad	 1
  0006b	48 89 85 00 01
	00 00		 mov	 QWORD PTR tv74[rbp], rax
  00072	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR tv76[rbp]
  00079	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR tv74[rbp]
  00080	e8 00 00 00 00	 call	 ??$?M_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA_NAEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@0@Z ; std::chrono::operator<<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
  00085	90		 npad	 1

; 555  :     }

  00086	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  0008d	5f		 pop	 rdi
  0008e	5d		 pop	 rbp
  0008f	c3		 ret	 0
??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ENDP ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Dur$ = 264
??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000>,void>, COMDAT

; 86   :             : _MyRep(chrono::duration_cast<duration>(_Dur).count()) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Dur$[rbp]
  00043	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0004a	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DOI@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000>,void>
  0004f	90		 npad	 1
  00050	48 8b c8	 mov	 rcx, rax
  00053	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00058	90		 npad	 1
  00059	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	48 89 01	 mov	 QWORD PTR [rcx], rax
  00063	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006a	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00071	5f		 pop	 rdi
  00072	5d		 pop	 rbp
  00073	c3		 ret	 0
??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@?$_Tuple_val@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
_TEXT	SEGMENT
this$ = 224
_Arg$ = 232
??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@?$_Tuple_val@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z PROC ; std::_Tuple_val<`ThreadPool::Stop'::`2'::<lambda_1> &&>::_Tuple_val<`ThreadPool::Stop'::`2'::<lambda_1> &&><`ThreadPool::Stop'::`2'::<lambda_1> >, COMDAT

; 155  :     constexpr _Tuple_val(_Other&& _Arg) : _Val(_STD forward<_Other>(_Arg)) { // construct with argument

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Arg$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z ; std::forward<`ThreadPool::Stop'::`2'::<lambda_1> >
  00047	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	48 89 01	 mov	 QWORD PTR [rcx], rax

; 156  :     }

  00051	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00058	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005f	5f		 pop	 rdi
  00060	5d		 pop	 rbp
  00061	c3		 ret	 0
??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@?$_Tuple_val@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z ENDP ; std::_Tuple_val<`ThreadPool::Stop'::`2'::<lambda_1> &&>::_Tuple_val<`ThreadPool::Stop'::`2'::<lambda_1> &&><`ThreadPool::Stop'::`2'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@AEAVexception_ptr@1@$$V$0A@@?$tuple@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@AEAVexception_ptr@1@@Z
_TEXT	SEGMENT
$T1 = 196
tv81 = 216
this$ = 256
__formal$ = 264
_This_arg$ = 272
??$?0U_Exact_args_t@std@@AEAVexception_ptr@1@$$V$0A@@?$tuple@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@AEAVexception_ptr@1@@Z PROC ; std::tuple<std::exception_ptr &>::tuple<std::exception_ptr &><std::_Exact_args_t,std::exception_ptr &,0>, COMDAT

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003f	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00046	48 8b f8	 mov	 rdi, rax
  00049	33 c0		 xor	 eax, eax
  0004b	b9 01 00 00 00	 mov	 ecx, 1
  00050	f3 aa		 rep stosb
  00052	0f b6 95 c4 00
	00 00		 movzx	 edx, BYTE PTR $T1[rbp]
  00059	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@$0A@@?$tuple@$$V@std@@QEAA@U_Exact_args_t@1@@Z ; std::tuple<>::tuple<><std::_Exact_args_t,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00065	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00073	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  0007a	e8 00 00 00 00	 call	 ??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z ; std::forward<std::exception_ptr &>
  0007f	48 8b d0	 mov	 rdx, rax
  00082	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv81[rbp]
  00089	e8 00 00 00 00	 call	 ??$?0AEAVexception_ptr@std@@@?$_Tuple_val@AEAVexception_ptr@std@@@std@@QEAA@AEAVexception_ptr@1@@Z ; std::_Tuple_val<std::exception_ptr &>::_Tuple_val<std::exception_ptr &><std::exception_ptr &>

; 243  :     }

  0008e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00095	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009c	5f		 pop	 rdi
  0009d	5d		 pop	 rbp
  0009e	c3		 ret	 0
??$?0U_Exact_args_t@std@@AEAVexception_ptr@1@$$V$0A@@?$tuple@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@AEAVexception_ptr@1@@Z ENDP ; std::tuple<std::exception_ptr &>::tuple<std::exception_ptr &><std::_Exact_args_t,std::exception_ptr &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$_Copy_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEBV?$shared_ptr@Vmutex@std@@@1@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??$_Copy_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEBV?$shared_ptr@Vmutex@std@@@1@@Z PROC ; std::_Ptr_base<std::mutex>::_Copy_construct_from<std::mutex>, COMDAT

; 835  :     void _Copy_construct_from(const shared_ptr<_Ty2>& _Other) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 836  :         // implement shared_ptr's (converting) copy ctor
; 837  :         if (_Other._Rep) {

  0003c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Other$[rbp]
  00043	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00048	74 11		 je	 SHORT $LN2@Copy_const

; 838  :             _Other._Rep->_Incref();

  0004a	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Other$[rbp]
  00051	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00055	e8 00 00 00 00	 call	 ?_Incref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Incref
  0005a	90		 npad	 1
$LN2@Copy_const:

; 839  :         }
; 840  : 
; 841  :         _Ptr = _Other._Ptr;

  0005b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Other$[rbp]
  00069	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0006c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 842  :         _Rep = _Other._Rep;

  0006f	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00076	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Other$[rbp]
  0007d	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00081	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 843  :     }

  00085	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0008c	5f		 pop	 rdi
  0008d	5d		 pop	 rbp
  0008e	c3		 ret	 0
??$_Copy_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEBV?$shared_ptr@Vmutex@std@@@1@@Z ENDP ; std::_Ptr_base<std::mutex>::_Copy_construct_from<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$?0AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z PROC ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent><`ThreadPool::ThreadPool'::`1'::<lambda_1_> const &,void>, COMDAT

; 936  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00042	e8 00 00 00 00	 call	 ??0?$_Func_base@XW4EnumEvent@@@std@@QEAA@XZ ; std::_Func_base<void,enum EnumEvent>::_Func_base<void,enum EnumEvent>
  00047	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@6B@
  00055	48 89 08	 mov	 QWORD PTR [rax], rcx
  00058	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  0005f	e8 00 00 00 00	 call	 ??$forward@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z ; std::forward<`ThreadPool::ThreadPool'::`1'::<lambda_1_> const &>
  00064	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??$?0AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z ENDP ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent><`ThreadPool::ThreadPool'::`1'::<lambda_1_> const &,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@?$_Invoker_ret@X$00@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z
_TEXT	SEGMENT
tv73 = 192
tv71 = 200
<_Vals_0>$ = 240
<_Vals_1>$ = 248
??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@?$_Invoker_ret@X$00@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z PROC ; std::_Invoker_ret<void,1>::_Call<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &,enum EnumEvent>, COMDAT

; 1588 :     static void _Call(_Valtys&&... _Vals) { // INVOKE, "implicitly" converted to void

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1589 :         _STD invoke(_STD forward<_Valtys>(_Vals)...);

  0003b	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR <_Vals_1>$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z ; std::forward<enum EnumEvent>
  00047	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  0004e	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR <_Vals_0>$[rbp]
  00055	e8 00 00 00 00	 call	 ??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z ; std::forward<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &>
  0005a	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  00061	48 8b 95 c0 00
	00 00		 mov	 rdx, QWORD PTR tv73[rbp]
  00068	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR tv71[rbp]
  0006f	e8 00 00 00 00	 call	 ??$invoke@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@std@@YAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z ; std::invoke<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &,enum EnumEvent>

; 1590 :     }

  00074	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0007b	5f		 pop	 rdi
  0007c	5d		 pop	 rbp
  0007d	c3		 ret	 0
??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@?$_Invoker_ret@X$00@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z ENDP ; std::_Invoker_ret<void,1>::_Call<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &,enum EnumEvent>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAPEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@$$CBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAPEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z PROC ; std::addressof<`ThreadPool::ThreadPool'::`1'::<lambda_1_> const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@$$CBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAPEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z ENDP ; std::addressof<`ThreadPool::ThreadPool'::`1'::<lambda_1_> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 224
_Bytes$ = 232
??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003c	48 81 bd e8 00
	00 00 00 10 00
	00		 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  00047	72 14		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  00049	48 8d 95 e8 00
	00 00		 lea	 rdx, QWORD PTR _Bytes$[rbp]
  00050	48 8d 8d e0 00
	00 00		 lea	 rcx, QWORD PTR _Ptr$[rbp]
  00057	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0005c	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0005d	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Bytes$[rbp]
  00064	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0006b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00070	90		 npad	 1

; 192  : }

  00071	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z
_TEXT	SEGMENT
$T1 = 200
_Obj$ = 256
<_Args_0>$ = 264
??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z PROC ; std::_Construct_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *,std::_List_node<std::function<void __cdecl(void)>,void *> * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00043	e8 00 00 00 00	 call	 ??$addressof@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z ; std::addressof<std::_List_node<std::function<void __cdecl(void)>,void *> *>
  00048	90		 npad	 1
  00049	48 8b d0	 mov	 rdx, rax
  0004c	b9 08 00 00 00	 mov	 ecx, 8
  00051	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00056	90		 npad	 1
  00057	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0005e	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	e8 00 00 00 00	 call	 ??$forward@AEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z ; std::forward<std::_List_node<std::function<void __cdecl(void)>,void *> * const &>
  0006a	90		 npad	 1
  0006b	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00072	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00075	48 89 01	 mov	 QWORD PTR [rcx], rax

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00078	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z ENDP ; std::_Construct_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *,std::_List_node<std::function<void __cdecl(void)>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z PROC ; std::forward<std::_List_node<std::shared_ptr<std::thread>,void *> * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z ENDP ; std::forward<std::_List_node<std::shared_ptr<std::thread>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@V?$function@$$A6AXXZ@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@@Z
_TEXT	SEGMENT
__formal$ = 224
_Ptr$ = 232
??$destroy@V?$function@$$A6AXXZ@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::destroy<std::function<void __cdecl(void)> >, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 763  :         _Ptr->~_Uty();

  0003b	33 d2		 xor	 edx, edx
  0003d	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00044	e8 00 00 00 00	 call	 ??_G?$function@$$A6AXXZ@std@@QEAAPEAXI@Z

; 764  :     }

  00049	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00050	5f		 pop	 rdi
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??$destroy@V?$function@$$A6AXXZ@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::destroy<std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z PROC ; std::addressof<std::function<void __cdecl(void)> >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z ENDP ; std::addressof<std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z
_TEXT	SEGMENT
tv136 = 192
tv134 = 200
tv132 = 208
this$ = 256
_Al_$ = 264
<_Vals_0>$ = 272
??$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z PROC ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> const &>, COMDAT

; 539  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Al_$[rbp]
  00047	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  00053	90		 npad	 1

; 540  :         this->_Allocate();

  00054	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005b	e8 00 00 00 00	 call	 ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Allocate

; 541  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  00060	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_0>$[rbp]
  00067	e8 00 00 00 00	 call	 ??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z ; std::forward<std::function<void __cdecl(void)> const &>
  0006c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv136[rbp], rax
  00073	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007e	48 83 c0 10	 add	 rax, 16
  00082	48 8b c8	 mov	 rcx, rax
  00085	e8 00 00 00 00	 call	 ??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::addressof<std::function<void __cdecl(void)> >
  0008a	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv134[rbp], rax
  00091	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00098	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009b	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv132[rbp], rax
  000a2	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv136[rbp]
  000a9	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv134[rbp]
  000b0	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR tv132[rbp]
  000b7	e8 00 00 00 00	 call	 ??$construct@V?$function@$$A6AXXZ@std@@AEBV12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@AEBV31@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> const &>
  000bc	90		 npad	 1

; 542  :     }

  000bd	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c4	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000cb	5f		 pop	 rdi
  000cc	5d		 pop	 rbp
  000cd	c3		 ret	 0
??$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z ENDP ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv136 = 192
tv134 = 200
tv132 = 208
this$ = 256
_Al_$ = 264
<_Vals_0>$ = 272
?dtor$0@?0???$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z@4HA PROC ; `std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z@4HA ENDP ; `std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
tv136 = 192
tv134 = 200
tv132 = 208
this$ = 256
_Al_$ = 264
<_Vals_0>$ = 272
?dtor$0@?0???$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z@4HA PROC ; `std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z@4HA ENDP ; `std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z
_TEXT	SEGMENT
tv136 = 192
tv134 = 200
tv132 = 208
this$ = 256
_Al_$ = 264
<_Vals_0>$ = 272
??$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z PROC ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> >, COMDAT

; 539  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Al_$[rbp]
  00047	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  00053	90		 npad	 1

; 540  :         this->_Allocate();

  00054	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005b	e8 00 00 00 00	 call	 ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Allocate

; 541  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  00060	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_0>$[rbp]
  00067	e8 00 00 00 00	 call	 ??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::forward<std::function<void __cdecl(void)> >
  0006c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv136[rbp], rax
  00073	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007e	48 83 c0 10	 add	 rax, 16
  00082	48 8b c8	 mov	 rcx, rax
  00085	e8 00 00 00 00	 call	 ??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::addressof<std::function<void __cdecl(void)> >
  0008a	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv134[rbp], rax
  00091	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00098	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009b	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv132[rbp], rax
  000a2	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv136[rbp]
  000a9	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv134[rbp]
  000b0	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR tv132[rbp]
  000b7	e8 00 00 00 00	 call	 ??$construct@V?$function@$$A6AXXZ@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::construct<std::function<void __cdecl(void)>,std::function<void __cdecl(void)> >
  000bc	90		 npad	 1

; 542  :     }

  000bd	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c4	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000cb	5f		 pop	 rdi
  000cc	5d		 pop	 rbp
  000cd	c3		 ret	 0
??$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z ENDP ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv136 = 192
tv134 = 200
tv132 = 208
this$ = 256
_Al_$ = 264
<_Vals_0>$ = 272
?dtor$0@?0???$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z@4HA PROC ; `std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z@4HA ENDP ; `std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
tv136 = 192
tv134 = 200
tv132 = 208
this$ = 256
_Al_$ = 264
<_Vals_0>$ = 272
?dtor$0@?0???$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z@4HA PROC ; `std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z@4HA ENDP ; `std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z
_TEXT	SEGMENT
_Insert_after$ = 8
_Result$ = 40
__$ArrayPad$ = 248
this$ = 288
_Insert_before$ = 296
?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z PROC ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Transfer_before, COMDAT

; 553  :     pointer _Transfer_before(const pointer _Insert_before) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 f8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004c	90		 npad	 1

; 554  :         const pointer _Insert_after = _Insert_before->_Prev;

  0004d	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Insert_before$[rbp]
  00054	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00058	48 89 45 08	 mov	 QWORD PTR _Insert_after$[rbp], rax

; 555  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  0005c	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00063	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00067	48 8d 95 28 01
	00 00		 lea	 rdx, QWORD PTR _Insert_before$[rbp]
  0006e	48 8b c8	 mov	 rcx, rax
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z ; std::_Construct_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *,std::_List_node<std::function<void __cdecl(void)>,void *> * const &>
  00076	90		 npad	 1

; 556  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  00077	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00082	48 83 c0 08	 add	 rax, 8
  00086	48 8d 55 08	 lea	 rdx, QWORD PTR _Insert_after$[rbp]
  0008a	48 8b c8	 mov	 rcx, rax
  0008d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEBQEAU10@@Z ; std::_Construct_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *,std::_List_node<std::function<void __cdecl(void)>,void *> * const &>
  00092	90		 npad	 1

; 557  :         const auto _Result    = this->_Ptr;

  00093	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0009a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0009e	48 89 45 28	 mov	 QWORD PTR _Result$[rbp], rax

; 558  :         this->_Ptr            = pointer{};

  000a2	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a9	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 559  :         _Insert_before->_Prev = _Result;

  000b1	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Insert_before$[rbp]
  000b8	48 8b 4d 28	 mov	 rcx, QWORD PTR _Result$[rbp]
  000bc	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 560  :         _Insert_after->_Next  = _Result;

  000c0	48 8b 45 08	 mov	 rax, QWORD PTR _Insert_after$[rbp]
  000c4	48 8b 4d 28	 mov	 rcx, QWORD PTR _Result$[rbp]
  000c8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 561  :         return _Result;

  000cb	48 8b 45 28	 mov	 rax, QWORD PTR _Result$[rbp]

; 562  :     }

  000cf	48 8b f8	 mov	 rdi, rax
  000d2	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000d6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z$rtcFrameData
  000dd	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000e2	90		 npad	 1
  000e3	48 8b c7	 mov	 rax, rdi
  000e6	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000ed	48 33 cd	 xor	 rcx, rbp
  000f0	e8 00 00 00 00	 call	 __security_check_cookie
  000f5	90		 npad	 1
  000f6	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000fd	5f		 pop	 rdi
  000fe	5d		 pop	 rbp
  000ff	c3		 ret	 0
?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z ENDP ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Transfer_before
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
tv93 = 192
tv91 = 200
this$ = 240
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >, COMDAT

; 544  :     ~_List_node_emplace_op2() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 545  :         if (this->_Ptr != pointer{}) {

  00037	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00043	74 44		 je	 SHORT $LN2@List_node_

; 546  :             _Alnode_traits::destroy(this->_Al, _STD addressof(this->_Ptr->_Myval));

  00045	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00050	48 83 c0 10	 add	 rax, 16
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::addressof<std::function<void __cdecl(void)> >
  0005c	90		 npad	 1
  0005d	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv93[rbp], rax
  00064	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006e	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv91[rbp], rax
  00075	48 8b 95 c0 00
	00 00		 mov	 rdx, QWORD PTR tv93[rbp]
  0007c	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR tv91[rbp]
  00083	e8 00 00 00 00	 call	 ??$destroy@V?$function@$$A6AXXZ@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::destroy<std::function<void __cdecl(void)> >
  00088	90		 npad	 1
$LN2@List_node_:

; 547  :         }
; 548  :     }

  00089	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00090	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  00095	90		 npad	 1
  00096	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0009d	5f		 pop	 rdi
  0009e	5d		 pop	 rbp
  0009f	c3		 ret	 0
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
tv72 = 192
this$ = 240
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >, COMDAT

; 1134 :     ~_Alloc_construct_ptr() { // if this instance is engaged, deallocate storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1135 :         if (_Ptr) {

  00037	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00043	74 2f		 je	 SHORT $LN2@Alloc_cons

; 1136 :             _Al.deallocate(_Ptr, 1);

  00045	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv72[rbp], rax
  00056	41 b8 01 00 00
	00		 mov	 r8d, 1
  0005c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00063	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00067	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv72[rbp]
  0006e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z ; std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >::deallocate
  00073	90		 npad	 1
$LN2@Alloc_cons:

; 1137 :         }
; 1138 :     }

  00074	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0007b	5f		 pop	 rdi
  0007c	5d		 pop	 rbp
  0007d	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
tv73 = 192
this$ = 240
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAXXZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Allocate, COMDAT

; 1129 :     void _Allocate() { // disengage *this, then allocate a new memory block

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1130 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1131 :         _Ptr = _Al.allocate(1);

  00045	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  00056	ba 01 00 00 00	 mov	 edx, 1
  0005b	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv73[rbp]
  00062	e8 00 00 00 00	 call	 ?allocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z ; std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >::allocate
  00067	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006e	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1132 :     }

  00072	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00079	5f		 pop	 rdi
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 224
_Al_$ = 232
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >, COMDAT

; 1123 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Al_$[rbp]
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx
  0004c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0005b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\condition_variable
;	COMDAT ??$_Relock@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@CAXAEAV?$unique_lock@Vmutex@std@@@1@@Z
_TEXT	SEGMENT
_Xtrnl$ = 224
??$_Relock@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@CAXAEAV?$unique_lock@Vmutex@std@@@1@@Z PROC ; std::condition_variable_any::_Relock<std::unique_lock<std::mutex> >, COMDAT

; 157  :     static void _Relock(_Mutex& _Xtrnl) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DDDD6958_condition_variable
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 158  :         // relocks external mutex, terminate() on failure
; 159  :         // LWG 2135 says terminate rather than leaving the mutex unlocked;
; 160  :         // we slam into noexcept here for that for easier user debugging
; 161  :         _Xtrnl.lock();

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Xtrnl$[rbp]
  0003e	e8 00 00 00 00	 call	 ?lock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ ; std::unique_lock<std::mutex>::lock
  00043	90		 npad	 1

; 162  :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??$_Relock@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@CAXAEAV?$unique_lock@Vmutex@std@@@1@@Z ENDP ; std::condition_variable_any::_Relock<std::unique_lock<std::mutex> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00040	48 6b 85 f0 00
	00 00 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00052	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z
_TEXT	SEGMENT
_Ten_days$ = 8
_Ten_days_d$ = 40
_T0$ = 72
_Clamped$ = 100
_Whole_seconds$ = 136
$T7 = 360
$T8 = 392
$T9 = 424
$T10 = 456
tv72 = 472
__$ArrayPad$ = 480
_Xt$ = 528
_Rel_time$ = 536
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z PROC ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >, COMDAT

; 663  :     _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 18 02
	00 00		 sub	 rsp, 536		; 00000218H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 86 00 00 00	 mov	 ecx, 134		; 00000086H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 38
	02 00 00	 mov	 rcx, QWORD PTR [rsp+568]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 e0 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004c	90		 npad	 1

; 664  :     // Convert duration to xtime, maximum 10 days from now, returns whether clamping occurred.
; 665  :     // If clamped, timeouts will be transformed into spurious non-timeout wakes, due to ABI restrictions where
; 666  :     // the other side of the DLL boundary overflows int32_t milliseconds.
; 667  :     // Every function calling this one is TRANSITION, ABI
; 668  :     constexpr chrono::nanoseconds _Ten_days{chrono::hours{24} * 10};

  0004d	48 b8 00 00 16
	ad cd 11 03 00	 mov	 rax, 864000000000000	; 000311cdad160000H
  00057	48 89 45 08	 mov	 QWORD PTR _Ten_days$[rbp], rax

; 669  :     constexpr chrono::duration<double> _Ten_days_d{_Ten_days};

  0005b	f2 0f 10 05 00
	00 00 00	 movsd	 xmm0, QWORD PTR __real@412a5e0000000000
  00063	f2 0f 11 45 28	 movsd	 QWORD PTR _Ten_days_d$[rbp], xmm0

; 670  :     chrono::nanoseconds _T0 = chrono::system_clock::now().time_since_epoch();

  00068	48 8d 8d 68 01
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  0006f	e8 00 00 00 00	 call	 ?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ ; std::chrono::system_clock::now
  00074	90		 npad	 1
  00075	48 89 85 d8 01
	00 00		 mov	 QWORD PTR tv72[rbp], rax
  0007c	48 8d 95 88 01
	00 00		 lea	 rdx, QWORD PTR $T8[rbp]
  00083	48 8b 8d d8 01
	00 00		 mov	 rcx, QWORD PTR tv72[rbp]
  0008a	e8 00 00 00 00	 call	 ?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
  0008f	90		 npad	 1
  00090	48 8b d0	 mov	 rdx, rax
  00093	48 8d 4d 48	 lea	 rcx, QWORD PTR _T0$[rbp]
  00097	e8 00 00 00 00	 call	 ??$?0_JU?$ratio@$00$0JIJGIA@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,10000000>,void>
  0009c	90		 npad	 1

; 671  :     const bool _Clamped     = _Ten_days_d < _Rel_time;

  0009d	48 8b 95 18 02
	00 00		 mov	 rdx, QWORD PTR _Rel_time$[rbp]
  000a4	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ten_days_d$[rbp]
  000a8	e8 00 00 00 00	 call	 ??$?MNU?$ratio@$00$00@std@@_JU?$ratio@$00$0DLJKMKAA@@1@@chrono@std@@YA_NAEBV?$duration@NU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::operator<<double,std::ratio<1,1>,__int64,std::ratio<1,1000000000> >
  000ad	90		 npad	 1
  000ae	88 45 64	 mov	 BYTE PTR _Clamped$[rbp], al

; 672  :     if (_Clamped) {

  000b1	0f b6 45 64	 movzx	 eax, BYTE PTR _Clamped$[rbp]
  000b5	85 c0		 test	 eax, eax
  000b7	74 10		 je	 SHORT $LN2@To_xtime_1

; 673  :         _T0 += _Ten_days;

  000b9	48 8d 55 08	 lea	 rdx, QWORD PTR _Ten_days$[rbp]
  000bd	48 8d 4d 48	 lea	 rcx, QWORD PTR _T0$[rbp]
  000c1	e8 00 00 00 00	 call	 ??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
  000c6	90		 npad	 1

; 674  :     } else {

  000c7	eb 21		 jmp	 SHORT $LN3@To_xtime_1
$LN2@To_xtime_1:

; 675  :         _T0 += chrono::duration_cast<chrono::nanoseconds>(_Rel_time);

  000c9	48 8b 95 18 02
	00 00		 mov	 rdx, QWORD PTR _Rel_time$[rbp]
  000d0	48 8d 8d a8 01
	00 00		 lea	 rcx, QWORD PTR $T9[rbp]
  000d7	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000000000>,void>
  000dc	90		 npad	 1
  000dd	48 8b d0	 mov	 rdx, rax
  000e0	48 8d 4d 48	 lea	 rcx, QWORD PTR _T0$[rbp]
  000e4	e8 00 00 00 00	 call	 ??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
  000e9	90		 npad	 1
$LN3@To_xtime_1:

; 676  :     }
; 677  : 
; 678  :     const auto _Whole_seconds = chrono::duration_cast<chrono::seconds>(_T0);

  000ea	48 8d 55 48	 lea	 rdx, QWORD PTR _T0$[rbp]
  000ee	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Whole_seconds$[rbp]
  000f5	e8 00 00 00 00	 call	 ??$duration_cast@V?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@_JU?$ratio@$00$0DLJKMKAA@@3@X@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$00@std@@@01@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@@Z ; std::chrono::duration_cast<std::chrono::duration<__int64,std::ratio<1,1> >,__int64,std::ratio<1,1000000000>,void>
  000fa	90		 npad	 1

; 679  :     _Xt.sec                   = _Whole_seconds.count();

  000fb	48 8d 8d 88 00
	00 00		 lea	 rcx, QWORD PTR _Whole_seconds$[rbp]
  00102	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1> >::count
  00107	90		 npad	 1
  00108	48 8b 8d 10 02
	00 00		 mov	 rcx, QWORD PTR _Xt$[rbp]
  0010f	48 89 01	 mov	 QWORD PTR [rcx], rax

; 680  :     _T0 -= _Whole_seconds;

  00112	48 8d 95 88 00
	00 00		 lea	 rdx, QWORD PTR _Whole_seconds$[rbp]
  00119	48 8d 8d c8 01
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  00120	e8 00 00 00 00	 call	 ??$?0_JU?$ratio@$00$00@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$00@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1>,void>
  00125	90		 npad	 1
  00126	48 8d 95 c8 01
	00 00		 lea	 rdx, QWORD PTR $T10[rbp]
  0012d	48 8d 4d 48	 lea	 rcx, QWORD PTR _T0$[rbp]
  00131	e8 00 00 00 00	 call	 ??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=
  00136	90		 npad	 1

; 681  :     _Xt.nsec = static_cast<long>(_T0.count());

  00137	48 8d 4d 48	 lea	 rcx, QWORD PTR _T0$[rbp]
  0013b	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00140	90		 npad	 1
  00141	48 8b 8d 10 02
	00 00		 mov	 rcx, QWORD PTR _Xt$[rbp]
  00148	89 41 08	 mov	 DWORD PTR [rcx+8], eax

; 682  :     return _Clamped;

  0014b	0f b6 45 64	 movzx	 eax, BYTE PTR _Clamped$[rbp]

; 683  : }

  0014f	8b f8		 mov	 edi, eax
  00151	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00155	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z$rtcFrameData
  0015c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00161	90		 npad	 1
  00162	8b c7		 mov	 eax, edi
  00164	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0016b	48 33 cd	 xor	 rcx, rbp
  0016e	e8 00 00 00 00	 call	 __security_check_cookie
  00173	90		 npad	 1
  00174	48 8d a5 f8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+504]
  0017b	5f		 pop	 rdi
  0017c	5d		 pop	 rbp
  0017d	c3		 ret	 0
??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z ENDP ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
tv77 = 248
tv75 = 256
__$ReturnUdt$ = 304
_Left$ = 312
_Right$ = 320
??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z PROC ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 523  :         _NOEXCEPT_COND(

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 524  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) { // strengthened
; 525  :         // add time_point to time_point
; 526  :         return _Left.time_since_epoch() - _Right.time_since_epoch();

  00041	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00048	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004f	e8 00 00 00 00	 call	 ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
  00054	90		 npad	 1
  00055	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  0005c	48 8d 95 e8 00
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  00063	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  0006a	e8 00 00 00 00	 call	 ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
  0006f	90		 npad	 1
  00070	48 89 85 00 01
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00077	4c 8b 85 f8 00
	00 00		 mov	 r8, QWORD PTR tv77[rbp]
  0007e	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR tv75[rbp]
  00085	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0008c	e8 00 00 00 00	 call	 ??$?G_JU?$ratio@$00$0DLJKMKAA@@std@@_JU01@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@0@Z ; std::chrono::operator-<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000000000> >
  00091	90		 npad	 1
  00092	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 527  :     }

  00099	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  000a0	5f		 pop	 rdi
  000a1	5d		 pop	 rbp
  000a2	c3		 ret	 0
??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ENDP ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z
_TEXT	SEGMENT
tv69 = 192
_Left$ = 240
_Right$ = 248
??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z PROC ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 560  :         _NOEXCEPT_COND(

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 561  :             is_arithmetic_v<typename _Duration1::rep>&& is_arithmetic_v<typename _Duration2::rep>) { // strengthened
; 562  :         // test for time_point <= time_point
; 563  :         return !(_Right < _Left);

  0003c	48 8b 95 f0 00
	00 00		 mov	 rdx, QWORD PTR _Left$[rbp]
  00043	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$?MUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator<<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
  0004f	90		 npad	 1
  00050	0f b6 c0	 movzx	 eax, al
  00053	85 c0		 test	 eax, eax
  00055	75 0c		 jne	 SHORT $LN3@operator
  00057	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv69[rbp], 1
  00061	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00063	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv69[rbp], 0
$LN4@operator:
  0006d	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv69[rbp]

; 564  :     }

  00074	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0007b	5f		 pop	 rdi
  0007c	5d		 pop	 rbp
  0007d	c3		 ret	 0
??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ENDP ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
$T3 = 264
tv68 = 280
__$ReturnUdt$ = 320
_Left$ = 328
_Right$ = 336
??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z PROC ; std::chrono::operator+<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000> >, COMDAT

; 253  :         _NOEXCEPT_COND(is_arithmetic_v<_Rep1>&& is_arithmetic_v<_Rep2>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 254  :         // add two durations
; 255  :         using _CD = common_type_t<duration<_Rep1, _Period1>, duration<_Rep2, _Period2>>;
; 256  :         return _CD(_CD(_Left).count() + _CD(_Right).count());

  00041	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00048	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004b	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  00052	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  00059	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  0005e	90		 npad	 1
  0005f	48 89 85 18 01
	00 00		 mov	 QWORD PTR tv68[rbp], rax
  00066	48 8b 95 50 01
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  0006d	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  00074	e8 00 00 00 00	 call	 ??$?0_JU?$ratio@$00$0DOI@@std@@X@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@12@@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,std::ratio<1,1000>,void>
  00079	90		 npad	 1
  0007a	48 8b c8	 mov	 rcx, rax
  0007d	e8 00 00 00 00	 call	 ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
  00082	90		 npad	 1
  00083	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR tv68[rbp]
  0008a	48 03 c8	 add	 rcx, rax
  0008d	48 8b c1	 mov	 rax, rcx
  00090	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00097	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  0009e	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000a5	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000aa	90		 npad	 1
  000ab	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 257  :     }

  000b2	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  000b9	5f		 pop	 rdi
  000ba	5d		 pop	 rbp
  000bb	c3		 ret	 0
??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ENDP ; std::chrono::operator+<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@V?$shared_ptr@Vthread@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@$$QEAV31@@Z
_TEXT	SEGMENT
$T1 = 200
tv76 = 216
__formal$ = 256
_Ptr$ = 264
<_Args_0>$ = 272
??$construct@V?$shared_ptr@Vthread@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@$$QEAV31@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::construct<std::shared_ptr<std::thread>,std::shared_ptr<std::thread> >, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00047	b9 10 00 00 00	 mov	 ecx, 16
  0004c	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00051	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00058	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0005f	e8 00 00 00 00	 call	 ??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z ; std::forward<std::shared_ptr<std::thread> >
  00064	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0006b	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv76[rbp]
  00072	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00079	e8 00 00 00 00	 call	 ??0?$shared_ptr@Vthread@std@@@std@@QEAA@$$QEAV01@@Z ; std::shared_ptr<std::thread>::shared_ptr<std::thread>

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);
; 759  :     }

  0007e	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00085	5f		 pop	 rdi
  00086	5d		 pop	 rbp
  00087	c3		 ret	 0
??$construct@V?$shared_ptr@Vthread@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@$$QEAV31@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::construct<std::shared_ptr<std::thread>,std::shared_ptr<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
_TEXT	SEGMENT
_Decay_copied$ = 8
_Invoker_proc$ = 40
tv83 = 248
tv77 = 248
tv75 = 256
__$ArrayPad$ = 264
this$ = 304
_Fx$ = 312
<_Ax_0>$ = 320
??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z PROC ; std::thread::thread<void (__cdecl ThreadPool::*)(void),ThreadPool *,void>, COMDAT

; 53   :     explicit thread(_Fn&& _Fx, _Args&&... _Ax) { // construct with _Fx(_Ax...)

$LN7:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  00018	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c5	 xor	 rax, rbp
  0003e	48 89 85 08 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00045	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F7EEAF5_thread
  0004c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 54   :         using _Tuple                 = tuple<decay_t<_Fn>, decay_t<_Args>...>;
; 55   :         auto _Decay_copied           = _STD make_unique<_Tuple>(_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)...);

  00051	ba 08 00 00 00	 mov	 edx, 8
  00056	48 8d 4d 08	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  0005a	e8 00 00 00 00	 call	 ?__autoclassinit2@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAX_K@Z
  0005f	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR <_Ax_0>$[rbp]
  00066	e8 00 00 00 00	 call	 ??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ; std::forward<ThreadPool *>
  0006b	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  00072	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR _Fx$[rbp]
  00079	e8 00 00 00 00	 call	 ??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z ; std::forward<void (__cdecl ThreadPool::*)(void)>
  0007e	48 89 85 00 01
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00085	4c 8b 85 f8 00
	00 00		 mov	 r8, QWORD PTR tv77[rbp]
  0008c	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR tv75[rbp]
  00093	48 8d 4d 08	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  00097	e8 00 00 00 00	 call	 ??$make_unique@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@P8ThreadPool@@EAAXXZPEAV3@$0A@@std@@YA?AV?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ; std::make_unique<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,void (__cdecl ThreadPool::*)(void),ThreadPool *,0>
  0009c	90		 npad	 1

; 56   :         constexpr auto _Invoker_proc = _Get_invoke<_Tuple>(make_index_sequence<1 + sizeof...(_Args)>{});

  0009d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??$_Invoke@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@$0A@$00@thread@std@@CAIPEAX@Z ; std::thread::_Invoke<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,0,1>
  000a4	48 89 45 28	 mov	 QWORD PTR _Invoker_proc$[rbp], rax

; 57   : 
; 58   : #pragma warning(push)
; 59   : #pragma warning(disable : 5039) // pointer or reference to potentially throwing function passed to
; 60   :                                 // extern C function under -EHc. Undefined behavior may occur
; 61   :                                 // if this function throws an exception. (/Wall)
; 62   :         _Thr._Hnd =

  000a8	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000af	48 83 c0 08	 add	 rax, 8
  000b3	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  000ba	48 8d 4d 08	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  000be	e8 00 00 00 00	 call	 ?get@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEBAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::get
  000c3	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR tv83[rbp]
  000ca	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  000cf	c7 44 24 20 00
	00 00 00	 mov	 DWORD PTR [rsp+32], 0
  000d7	4c 8b c8	 mov	 r9, rax
  000da	4c 8b 45 28	 mov	 r8, QWORD PTR _Invoker_proc$[rbp]
  000de	33 d2		 xor	 edx, edx
  000e0	33 c9		 xor	 ecx, ecx
  000e2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__beginthreadex
  000e8	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000ef	48 89 01	 mov	 QWORD PTR [rcx], rax

; 63   :             reinterpret_cast<void*>(_CSTD _beginthreadex(nullptr, 0, _Invoker_proc, _Decay_copied.get(), 0, &_Thr._Id));
; 64   : #pragma warning(pop)
; 65   : 
; 66   :         if (_Thr._Hnd) { // ownership transferred to the thread

  000f2	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f9	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000fd	74 0b		 je	 SHORT $LN2@thread

; 67   :             (void) _Decay_copied.release();

  000ff	48 8d 4d 08	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  00103	e8 00 00 00 00	 call	 ?release@?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAAPEAV?$tuple@P8ThreadPool@@EAAXXZPEAV1@@2@XZ ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::release

; 68   :         } else { // failed to start thread

  00108	eb 19		 jmp	 SHORT $LN3@thread
$LN2@thread:

; 69   :             _Thr._Id = 0;

  0010a	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00111	c7 40 08 00 00
	00 00		 mov	 DWORD PTR [rax+8], 0

; 70   :             _Throw_Cpp_error(_RESOURCE_UNAVAILABLE_TRY_AGAIN);

  00118	b9 06 00 00 00	 mov	 ecx, 6
  0011d	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
  00122	90		 npad	 1
$LN3@thread:

; 71   :         }
; 72   :     }

  00123	48 8d 4d 08	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  00127	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::~unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >
  0012c	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00133	48 8b f8	 mov	 rdi, rax
  00136	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  0013a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z$rtcFrameData
  00141	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00146	48 8b c7	 mov	 rax, rdi
  00149	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00150	48 33 cd	 xor	 rcx, rbp
  00153	e8 00 00 00 00	 call	 __security_check_cookie
  00158	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  0015f	5f		 pop	 rdi
  00160	5d		 pop	 rbp
  00161	c3		 ret	 0
$LN6@thread:
??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ENDP ; std::thread::thread<void (__cdecl ThreadPool::*)(void),ThreadPool *,void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Decay_copied$ = 8
_Invoker_proc$ = 40
tv83 = 248
tv77 = 248
tv75 = 256
__$ArrayPad$ = 264
this$ = 304
_Fx$ = 312
<_Ax_0>$ = 320
?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA PROC ; `std::thread::thread<void (__cdecl ThreadPool::*)(void),ThreadPool *,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::~unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA ENDP ; `std::thread::thread<void (__cdecl ThreadPool::*)(void),ThreadPool *,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Decay_copied$ = 8
_Invoker_proc$ = 40
tv83 = 248
tv77 = 248
tv75 = 256
__$ArrayPad$ = 264
this$ = 304
_Fx$ = 312
<_Ax_0>$ = 320
?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA PROC ; `std::thread::thread<void (__cdecl ThreadPool::*)(void),ThreadPool *,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR _Decay_copied$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$unique_ptr@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@U?$default_delete@V?$tuple@P8ThreadPool@@EAAXXZPEAV1@@std@@@2@@std@@QEAA@XZ ; std::unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >::~unique_ptr<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *>,std::default_delete<std::tuple<void (__cdecl ThreadPool::*)(void),ThreadPool *> > >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA ENDP ; `std::thread::thread<void (__cdecl ThreadPool::*)(void),ThreadPool *,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YAXAEAVthread@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
_TEXT	SEGMENT
$T1 = 200
tv83 = 216
tv81 = 224
_Obj$ = 272
<_Args_0>$ = 280
<_Args_1>$ = 288
??$_Construct_in_place@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YAXAEAVthread@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z PROC ; std::_Construct_in_place<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00047	e8 00 00 00 00	 call	 ??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z ; std::addressof<std::thread>
  0004c	48 8b d0	 mov	 rdx, rax
  0004f	b9 10 00 00 00	 mov	 ecx, 16
  00054	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00059	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00060	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  00067	e8 00 00 00 00	 call	 ??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ; std::forward<ThreadPool *>
  0006c	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  00073	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0007a	e8 00 00 00 00	 call	 ??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z ; std::forward<void (__cdecl ThreadPool::*)(void)>
  0007f	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00086	4c 8b 85 d8 00
	00 00		 mov	 r8, QWORD PTR tv83[rbp]
  0008d	48 8b 95 e0 00
	00 00		 mov	 rdx, QWORD PTR tv81[rbp]
  00094	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  0009b	e8 00 00 00 00	 call	 ??$?0P8ThreadPool@@EAAXXZPEAV0@X@thread@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ; std::thread::thread<void (__cdecl ThreadPool::*)(void),ThreadPool *,void>

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  000a0	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  000a7	5f		 pop	 rdi
  000a8	5d		 pop	 rbp
  000a9	c3		 ret	 0
??$_Construct_in_place@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YAXAEAVthread@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ENDP ; std::_Construct_in_place<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$00$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$00$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z PROC ; std::get<1,`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>, COMDAT

; 649  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>& get(tuple<_Types...>& _Tuple) noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 650  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 651  :     return static_cast<_Ttype&>(_Tuple)._Myfirst._Val;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tuple$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 652  : }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??$get@$00$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z ENDP ; std::get<1,`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ??$_Invoke_stored_explicit@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$$Z$0A@@std@@YAX$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@U?$integer_sequence@_K$0A@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
__formal$ = 232
??$_Invoke_stored_explicit@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$$Z$0A@@std@@YAX$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@U?$integer_sequence@_K$0A@@0@@Z PROC ; std::_Invoke_stored_explicit<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &,0>, COMDAT

; 519  :     _STD invoke(_STD get<_Indices>(_STD move(_Tuple))...)) { // invoke() a tuple with explicit parameter ordering

  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 520  :     return _STD invoke(_STD get<_Indices>(_STD move(_Tuple))...);

  0003a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Tuple$[rbp]
  00041	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z ; std::move<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &> &>
  00046	48 8b c8	 mov	 rcx, rax
  00049	e8 00 00 00 00	 call	 ??$get@$0A@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z ; std::get<0,`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>
  0004e	48 8b c8	 mov	 rcx, rax
  00051	e8 00 00 00 00	 call	 ??$invoke@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z ; std::invoke<`ThreadPool::Stop'::`2'::<lambda_1> >

; 521  : }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??$_Invoke_stored_explicit@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$$Z$0A@@std@@YAX$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@U?$integer_sequence@_K$0A@@0@@Z ENDP ; std::_Invoke_stored_explicit<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$invoke@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
_TEXT	SEGMENT
_Obj$ = 224
??$invoke@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z PROC ; std::invoke<`ThreadPool::Stop'::`2'::<lambda_1> >, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  0003d	e8 00 00 00 00	 call	 ??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z ; std::forward<`ThreadPool::Stop'::`2'::<lambda_1> >
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??$_Call@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z ; std::_Invoker_functor::_Call<`ThreadPool::Stop'::`2'::<lambda_1> >
  0004a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00051	5f		 pop	 rdi
  00052	5d		 pop	 rbp
  00053	c3		 ret	 0
??$invoke@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z ENDP ; std::invoke<`ThreadPool::Stop'::`2'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
_TEXT	SEGMENT
_Obj$ = 224
??$_Call@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z PROC ; std::_Invoker_functor::_Call<`ThreadPool::Stop'::`2'::<lambda_1> >, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  0003d	e8 00 00 00 00	 call	 ??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z ; std::forward<`ThreadPool::Stop'::`2'::<lambda_1> >
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??R<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEBA@XZ ; `ThreadPool::Stop'::`2'::<lambda_1>::operator()
  0004a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00051	5f		 pop	 rdi
  00052	5d		 pop	 rbp
  00053	c3		 ret	 0
??$_Call@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@_Invoker_functor@std@@SAX$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z ENDP ; std::_Invoker_functor::_Call<`ThreadPool::Stop'::`2'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$get@$0A@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z
_TEXT	SEGMENT
_Tuple$ = 224
??$get@$0A@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z PROC ; std::get<0,`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>, COMDAT

; 661  : _NODISCARD constexpr tuple_element_t<_Index, tuple<_Types...>>&& get(tuple<_Types...>&& _Tuple) noexcept {

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 662  :     using _Ty    = tuple_element_t<_Index, tuple<_Types...>>;
; 663  :     using _Ttype = typename tuple_element<_Index, tuple<_Types...>>::_Ttype;
; 664  :     return static_cast<_Ty&&>(static_cast<_Ttype&>(_Tuple)._Myfirst._Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Tuple$[rbp]
  0003e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 665  : }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$get@$0A@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z ENDP ; std::get<0,`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z PROC ; std::move<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z ENDP ; std::move<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0U_Exact_args_t@std@@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv87 = 248
tv80 = 248
this$ = 288
__formal$ = 296
_This_arg$ = 304
<_Rest_arg_0>$ = 312
??$?0U_Exact_args_t@std@@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z PROC ; std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &><std::_Exact_args_t,`ThreadPool::Stop'::`2'::<lambda_1>,std::exception_ptr &,0>, COMDAT

; 241  :         : _Mybase(_Exact_args_t{}, _STD forward<_Rest2>(_Rest_arg)...),

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  0000e	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00013	55		 push	 rbp
  00014	57		 push	 rdi
  00015	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0001c	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00021	48 8b fc	 mov	 rdi, rsp
  00024	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00029	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002e	f3 ab		 rep stosd
  00030	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00044	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  0004b	48 8b f8	 mov	 rdi, rax
  0004e	33 c0		 xor	 eax, eax
  00050	b9 01 00 00 00	 mov	 ecx, 1
  00055	f3 aa		 rep stosb
  00057	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rbp]
  0005e	e8 00 00 00 00	 call	 ??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z ; std::forward<std::exception_ptr &>
  00063	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  0006a	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00071	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00077	4c 8b 85 f8 00
	00 00		 mov	 r8, QWORD PTR tv80[rbp]
  0007e	0f b6 95 e4 00
	00 00		 movzx	 edx, BYTE PTR $T2[rbp]
  00085	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008c	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@AEAVexception_ptr@1@$$V$0A@@?$tuple@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@AEAVexception_ptr@1@@Z ; std::tuple<std::exception_ptr &>::tuple<std::exception_ptr &><std::_Exact_args_t,std::exception_ptr &,0>

; 242  :           _Myfirst(_STD forward<_This2>(_This_arg)) { // construct from one arg per element

  00091	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00098	48 83 c0 08	 add	 rax, 8
  0009c	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  000a3	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  000aa	e8 00 00 00 00	 call	 ??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z ; std::forward<`ThreadPool::Stop'::`2'::<lambda_1> >
  000af	48 8b d0	 mov	 rdx, rax
  000b2	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR tv87[rbp]
  000b9	e8 00 00 00 00	 call	 ??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@?$_Tuple_val@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z ; std::_Tuple_val<`ThreadPool::Stop'::`2'::<lambda_1> &&>::_Tuple_val<`ThreadPool::Stop'::`2'::<lambda_1> &&><`ThreadPool::Stop'::`2'::<lambda_1> >

; 243  :     }

  000be	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c5	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
??$?0U_Exact_args_t@std@@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z ENDP ; std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &><std::_Exact_args_t,`ThreadPool::Stop'::`2'::<lambda_1>,std::exception_ptr &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z PROC ; std::forward<std::exception_ptr &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z ENDP ; std::forward<std::exception_ptr &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z PROC ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent><`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void>, COMDAT

; 936  :     explicit _Func_impl_no_alloc(_Other&& _Val) : _Callee(_STD forward<_Other>(_Val)) {}

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00042	e8 00 00 00 00	 call	 ??0?$_Func_base@XW4EnumEvent@@@std@@QEAA@XZ ; std::_Func_base<void,enum EnumEvent>::_Func_base<void,enum EnumEvent>
  00047	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@6B@
  00055	48 89 08	 mov	 QWORD PTR [rax], rcx
  00058	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  0005f	e8 00 00 00 00	 call	 ??$forward@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z ; std::forward<`ThreadPool::ThreadPool'::`1'::<lambda_1_> >
  00064	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z ENDP ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent><`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z PROC ; std::forward<`ThreadPool::ThreadPool'::`1'::<lambda_1_> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z ENDP ; std::forward<`ThreadPool::ThreadPool'::`1'::<lambda_1_> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX_N@Z
_TEXT	SEGMENT
this$ = 224
_Dealloc$ = 232
?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX_N@Z PROC ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Delete_this, COMDAT

; 979  :     virtual void _Delete_this(bool _Dealloc) noexcept override { // destroy self

  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	90		 npad	 1

; 980  :         this->~_Func_impl_no_alloc();
; 981  :         if (_Dealloc) {

  0003b	0f b6 85 e8 00
	00 00		 movzx	 eax, BYTE PTR _Dealloc$[rbp]
  00042	85 c0		 test	 eax, eax
  00044	74 12		 je	 SHORT $LN2@Delete_thi

; 982  :             _Deallocate<alignof(_Func_impl_no_alloc)>(this, sizeof(_Func_impl_no_alloc));

  00046	ba 10 00 00 00	 mov	 edx, 16
  0004b	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00052	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<8,0>
  00057	90		 npad	 1
$LN2@Delete_thi:

; 983  :         }
; 984  :     }

  00058	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005f	5f		 pop	 rdi
  00060	5d		 pop	 rbp
  00061	c3		 ret	 0
?_Delete_this@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX_N@Z ENDP ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Get@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEBXXZ
_TEXT	SEGMENT
this$ = 224
?_Get@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEBXXZ PROC ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Get, COMDAT

; 975  :     virtual const void* _Get() const noexcept override { // return address of stored object

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 976  :         return _STD addressof(_Callee);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 c0 08	 add	 rax, 8
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??$addressof@$$CBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAPEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEBV1?0???02@QEAA@H@Z@@Z ; std::addressof<`ThreadPool::ThreadPool'::`1'::<lambda_1_> const >
  0004a	90		 npad	 1

; 977  :     }

  0004b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
?_Get@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEBXXZ ENDP ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Target_type@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAAEBVtype_info@@XZ
_TEXT	SEGMENT
this$ = 224
?_Target_type@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAAEBVtype_info@@XZ PROC ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Target_type, COMDAT

; 967  :     virtual const type_info& _Target_type() const noexcept override { // return type information for stored object

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 968  : #if _HAS_STATIC_RTTI
; 969  :         return typeid(_Callable);

  00037	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_R0?AV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@8

; 970  : #else // _HAS_STATIC_RTTI
; 971  :         return typeid(void);
; 972  : #endif // _HAS_STATIC_RTTI
; 973  :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Target_type@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAAEBVtype_info@@XZ ENDP ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Target_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Do_call@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX$$QEAW4EnumEvent@@@Z
_TEXT	SEGMENT
this$ = 224
<_Args_0>$ = 232
?_Do_call@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX$$QEAW4EnumEvent@@@Z PROC ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Do_call, COMDAT

; 963  :     virtual _Rx _Do_call(_Types&&... _Args) override { // call wrapped function

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 964  :         return _Invoker_ret<_Rx>::_Call(_Callee, _STD forward<_Types>(_Args)...);

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z ; std::forward<enum EnumEvent>
  00047	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	48 83 c1 08	 add	 rcx, 8
  00052	48 8b d0	 mov	 rdx, rax
  00055	e8 00 00 00 00	 call	 ??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@?$_Invoker_ret@X$00@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z ; std::_Invoker_ret<void,1>::_Call<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &,enum EnumEvent>

; 965  :     }

  0005a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
?_Do_call@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAX$$QEAW4EnumEvent@@@Z ENDP ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Do_call
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Move@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z
_TEXT	SEGMENT
$T1 = 200
tv80 = 216
this$ = 256
_Where$ = 264
?_Move@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z PROC ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Move, COMDAT

; 952  :     virtual _Mybase* _Move(void* _Where) noexcept override {

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 953  :         if
; 954  :             _CONSTEXPR_IF(_Is_large<_Func_impl_no_alloc>) {
; 955  :                 (void) _Where;
; 956  :                 return nullptr;
; 957  :             }
; 958  :         else {
; 959  :             return ::new (_Where) _Func_impl_no_alloc(_STD move(_Callee));

  0003c	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Where$[rbp]
  00043	b9 10 00 00 00	 mov	 ecx, 16
  00048	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0004d	90		 npad	 1
  0004e	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00055	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005c	48 83 c0 08	 add	 rax, 8
  00060	48 8b c8	 mov	 rcx, rax
  00063	e8 00 00 00 00	 call	 ??$move@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z ; std::move<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &>
  00068	90		 npad	 1
  00069	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  00070	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv80[rbp]
  00077	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  0007e	e8 00 00 00 00	 call	 ??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent><`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void>
  00083	90		 npad	 1

; 960  :         }
; 961  :     }

  00084	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008b	5f		 pop	 rdi
  0008c	5d		 pop	 rbp
  0008d	c3		 ret	 0
?_Move@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEAAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z ENDP ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Copy@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Where$ = 264
?_Copy@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z PROC ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Copy, COMDAT

; 941  :     virtual _Mybase* _Copy(void* _Where) const override { // return clone of *this

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 942  :         if
; 943  :             _CONSTEXPR_IF(_Is_large<_Func_impl_no_alloc>) {
; 944  :                 (void) _Where;
; 945  :                 return _Global_new<_Func_impl_no_alloc>(_Callee);
; 946  :             }
; 947  :         else {
; 948  :             return ::new (_Where) _Func_impl_no_alloc(_Callee);

  0003b	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Where$[rbp]
  00042	b9 10 00 00 00	 mov	 ecx, 16
  00047	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  0004c	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00053	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 83 c0 08	 add	 rax, 8
  0005e	48 8b d0	 mov	 rdx, rax
  00061	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00068	e8 00 00 00 00	 call	 ??$?0AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@AEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent><`ThreadPool::ThreadPool'::`1'::<lambda_1_> const &,void>

; 949  :         }
; 950  :     }

  0006d	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?_Copy@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@EEBAPEAV?$_Func_base@XW4EnumEvent@@@2@PEAX@Z ENDP ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Test_callable@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA_NAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$_Test_callable@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA_NAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z PROC ; std::_Test_callable<`ThreadPool::ThreadPool'::`1'::<lambda_1_> >, COMDAT

; 787  : bool _Test_callable(const _Ty& _Arg) noexcept { // determine whether std::function must store _Arg

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 788  :     if constexpr (_Testable_callable_v<_Ty>) {
; 789  :         return !!_Arg;
; 790  :     } else {
; 791  :         (void) _Arg;
; 792  :         return true;

  00037	b0 01		 mov	 al, 1

; 793  :     }
; 794  : }

  00039	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00040	5f		 pop	 rdi
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??$_Test_callable@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA_NAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z ENDP ; std::_Test_callable<`ThreadPool::ThreadPool'::`1'::<lambda_1_> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@Vmutex@std@@$$V@std@@YAXAEAVmutex@0@@Z
_TEXT	SEGMENT
$T1 = 200
_Obj$ = 256
??$_Construct_in_place@Vmutex@std@@$$V@std@@YAXAEAVmutex@0@@Z PROC ; std::_Construct_in_place<std::mutex>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  0003e	e8 00 00 00 00	 call	 ??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z ; std::addressof<std::mutex>
  00043	90		 npad	 1
  00044	48 8b d0	 mov	 rdx, rax
  00047	b9 50 00 00 00	 mov	 ecx, 80			; 00000050H
  0004c	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00051	90		 npad	 1
  00052	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00059	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00060	e8 00 00 00 00	 call	 ??0mutex@std@@QEAA@XZ	; std::mutex::mutex
  00065	90		 npad	 1

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00066	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006d	5f		 pop	 rdi
  0006e	5d		 pop	 rbp
  0006f	c3		 ret	 0
??$_Construct_in_place@Vmutex@std@@$$V@std@@YAXAEAVmutex@0@@Z ENDP ; std::_Construct_in_place<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::move<std::_List_node<std::function<void __cdecl(void)>,void *> * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::move<std::_List_node<std::function<void __cdecl(void)>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$_Move_construct_from@Vthread@std@@@?$_Ptr_base@Vthread@std@@@std@@IEAAX$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??$_Move_construct_from@Vthread@std@@@?$_Ptr_base@Vthread@std@@@std@@IEAAX$$QEAV01@@Z PROC ; std::_Ptr_base<std::thread>::_Move_construct_from<std::thread>, COMDAT

; 825  :     void _Move_construct_from(_Ptr_base<_Ty2>&& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 826  :         // implement shared_ptr's (converting) move ctor and weak_ptr's move ctor
; 827  :         _Ptr = _Right._Ptr;

  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 828  :         _Rep = _Right._Rep;

  00050	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0005e	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00062	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 829  : 
; 830  :         _Right._Ptr = nullptr;

  00066	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  0006d	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 831  :         _Right._Rep = nullptr;

  00074	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  0007b	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 832  :     }

  00083	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0008a	5f		 pop	 rdi
  0008b	5d		 pop	 rbp
  0008c	c3		 ret	 0
??$_Move_construct_from@Vthread@std@@@?$_Ptr_base@Vthread@std@@@std@@IEAAX$$QEAV01@@Z ENDP ; std::_Ptr_base<std::thread>::_Move_construct_from<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAV?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z PROC ; std::move<std::shared_ptr<std::thread> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAV?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z ENDP ; std::move<std::shared_ptr<std::thread> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@Vmutex@std@@@std@@YAXAEAVmutex@0@@Z
_TEXT	SEGMENT
_Obj$ = 224
??$_Destroy_in_place@Vmutex@std@@@std@@YAXAEAVmutex@0@@Z PROC ; std::_Destroy_in_place<std::mutex>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 322  :     _Obj.~_Ty();

  00037	33 d2		 xor	 edx, edx
  00039	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00040	e8 00 00 00 00	 call	 ??_Gmutex@std@@QEAAPEAXI@Z
  00045	90		 npad	 1

; 323  : }

  00046	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
??$_Destroy_in_place@Vmutex@std@@@std@@YAXAEAVmutex@0@@Z ENDP ; std::_Destroy_in_place<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@Vthread@std@@@std@@YAXAEAVthread@0@@Z
_TEXT	SEGMENT
_Obj$ = 224
??$_Destroy_in_place@Vthread@std@@@std@@YAXAEAVthread@0@@Z PROC ; std::_Destroy_in_place<std::thread>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 322  :     _Obj.~_Ty();

  00037	33 d2		 xor	 edx, edx
  00039	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00040	e8 00 00 00 00	 call	 ??_Gthread@std@@QEAAPEAXI@Z
  00045	90		 npad	 1

; 323  : }

  00046	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
??$_Destroy_in_place@Vthread@std@@@std@@YAXAEAVthread@0@@Z ENDP ; std::_Destroy_in_place<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@V?$shared_ptr@Vthread@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@@Z
_TEXT	SEGMENT
__formal$ = 224
_Ptr$ = 232
??$destroy@V?$shared_ptr@Vthread@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::destroy<std::shared_ptr<std::thread> >, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 763  :         _Ptr->~_Uty();

  0003b	33 d2		 xor	 edx, edx
  0003d	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00044	e8 00 00 00 00	 call	 ??_G?$shared_ptr@Vthread@std@@@std@@QEAAPEAXI@Z

; 764  :     }

  00049	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00050	5f		 pop	 rdi
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??$destroy@V?$shared_ptr@Vthread@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::destroy<std::shared_ptr<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$shared_ptr@Vthread@std@@@std@@@std@@YAPEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@V?$shared_ptr@Vthread@std@@@std@@@std@@YAPEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z PROC ; std::addressof<std::shared_ptr<std::thread> >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@V?$shared_ptr@Vthread@std@@@std@@@std@@YAPEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::shared_ptr<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z
_TEXT	SEGMENT
$T1 = 200
_Obj$ = 256
<_Args_0>$ = 264
??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z PROC ; std::_Construct_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *,std::_List_node<std::shared_ptr<std::thread>,void *> * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00043	e8 00 00 00 00	 call	 ??$addressof@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z ; std::addressof<std::_List_node<std::shared_ptr<std::thread>,void *> *>
  00048	90		 npad	 1
  00049	48 8b d0	 mov	 rdx, rax
  0004c	b9 08 00 00 00	 mov	 ecx, 8
  00051	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00056	90		 npad	 1
  00057	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0005e	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	e8 00 00 00 00	 call	 ??$forward@AEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEBQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z ; std::forward<std::_List_node<std::shared_ptr<std::thread>,void *> * const &>
  0006a	90		 npad	 1
  0006b	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00072	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00075	48 89 01	 mov	 QWORD PTR [rcx], rax

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00078	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z ENDP ; std::_Construct_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *,std::_List_node<std::shared_ptr<std::thread>,void *> * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z PROC		; std::move<unsigned __int64 &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z ENDP		; std::move<unsigned __int64 &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z PROC ; std::move<std::_Ref_count_base * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ENDP ; std::move<std::_Ref_count_base * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAPEAVmutex@std@@@std@@YA$$QEAPEAVmutex@0@AEAPEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAPEAVmutex@std@@@std@@YA$$QEAPEAVmutex@0@AEAPEAV10@@Z PROC ; std::move<std::mutex * &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAPEAVmutex@std@@@std@@YA$$QEAPEAVmutex@0@AEAPEAV10@@Z ENDP ; std::move<std::mutex * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@AEAV10@@Z PROC ; std::move<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@AEAV10@@Z ENDP ; std::move<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 8
_Ptr_container$ = 40
_Ptr$ = 72
_Bytes$ = 320
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  00036	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR _Bytes$[rbp]
  0003d	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00041	48 89 45 08	 mov	 QWORD PTR _Block_size$[rbp], rax

; 86   :     if (_Block_size <= _Bytes) {

  00045	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR _Bytes$[rbp]
  0004c	48 39 45 08	 cmp	 QWORD PTR _Block_size$[rbp], rax
  00050	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00052	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00057	48 8b 4d 08	 mov	 rcx, QWORD PTR _Block_size$[rbp]
  0005b	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00060	48 89 45 28	 mov	 QWORD PTR _Ptr_container$[rbp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00064	48 83 7d 28 00	 cmp	 QWORD PTR _Ptr_container$[rbp], 0
  00069	74 02		 je	 SHORT $LN9@Allocate_m
  0006b	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  0006d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00074	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00079	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00080	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00085	45 33 c9	 xor	 r9d, r9d
  00088	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00095	b9 02 00 00 00	 mov	 ecx, 2
  0009a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000a0	83 f8 01	 cmp	 eax, 1
  000a3	75 03		 jne	 SHORT $LN12@Allocate_m
  000a5	cc		 int	 3
  000a6	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  000a8	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000b1	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000b7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
  000c5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000cc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000d2	33 c0		 xor	 eax, eax
  000d4	85 c0		 test	 eax, eax
  000d6	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000d8	33 c0		 xor	 eax, eax
  000da	85 c0		 test	 eax, eax
  000dc	75 86		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000de	48 8b 45 28	 mov	 rax, QWORD PTR _Ptr_container$[rbp]
  000e2	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000e6	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000ea	48 89 45 48	 mov	 QWORD PTR _Ptr$[rbp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000ee	b8 08 00 00 00	 mov	 eax, 8
  000f3	48 6b c0 ff	 imul	 rax, rax, -1
  000f7	48 8b 4d 48	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000fb	48 8b 55 28	 mov	 rdx, QWORD PTR _Ptr_container$[rbp]
  000ff	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  00103	b8 08 00 00 00	 mov	 eax, 8
  00108	48 6b c0 fe	 imul	 rax, rax, -2
  0010c	48 8b 4d 48	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00110	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  0011a	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0011e	48 8b 45 48	 mov	 rax, QWORD PTR _Ptr$[rbp]
$LN11@Allocate_m:

; 99   : }

  00122	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  00129	5f		 pop	 rdi
  0012a	5d		 pop	 rbp
  0012b	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z PROC		; std::forward<char * const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ENDP		; std::forward<char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z PROC		; std::addressof<char *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ENDP		; std::addressof<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@@Z
_TEXT	SEGMENT
_Obj$ = 224
??$_Destroy_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 322  :     _Obj.~_Ty();
; 323  : }

  00037	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003e	5f		 pop	 rdi
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??$_Destroy_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::forward<std::_List_node<std::shared_ptr<std::thread>,void *> * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::forward<std::_List_node<std::shared_ptr<std::thread>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::addressof<std::_List_node<std::shared_ptr<std::thread>,void *> *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::addressof<std::_List_node<std::shared_ptr<std::thread>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@@Z
_TEXT	SEGMENT
_Obj$ = 224
??$_Destroy_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@@Z PROC ; std::_Destroy_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 322  :     _Obj.~_Ty();
; 323  : }

  00037	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003e	5f		 pop	 rdi
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??$_Destroy_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@@Z ENDP ; std::_Destroy_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Freenode@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Freenode@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::function<void __cdecl(void)>,void *>::_Freenode<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >, COMDAT

; 330  :     static void _Freenode(_Alnode& _Al, _Nodeptr _Ptr) noexcept { // destroy all members in _Ptr and deallocate with _Al

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 331  :         allocator_traits<_Alnode>::destroy(_Al, _STD addressof(_Ptr->_Myval));

  0003c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  00043	48 83 c0 10	 add	 rax, 16
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$addressof@V?$function@$$A6AXXZ@std@@@std@@YAPEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::addressof<std::function<void __cdecl(void)> >
  0004f	90		 npad	 1
  00050	48 8b d0	 mov	 rdx, rax
  00053	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$destroy@V?$function@$$A6AXXZ@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@QEAV?$function@$$A6AXXZ@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::destroy<std::function<void __cdecl(void)> >
  0005f	90		 npad	 1

; 332  :         _Freenode0(_Al, _Ptr);

  00060	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00067	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  0006e	e8 00 00 00 00	 call	 ??$_Freenode0@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::function<void __cdecl(void)>,void *>::_Freenode0<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  00073	90		 npad	 1

; 333  :     }

  00074	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0007b	5f		 pop	 rdi
  0007c	5d		 pop	 rbp
  0007d	c3		 ret	 0
??$_Freenode@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::function<void __cdecl(void)>,void *>::_Freenode<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::forward<std::_List_node<std::function<void __cdecl(void)>,void *> * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::forward<std::_List_node<std::function<void __cdecl(void)>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z PROC ; std::addressof<std::_List_node<std::function<void __cdecl(void)>,void *> *>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z ENDP ; std::addressof<std::_List_node<std::function<void __cdecl(void)>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CB_N@std@@YAPEB_NAEB_N@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@$$CB_N@std@@YAPEB_NAEB_N@Z PROC		; std::addressof<bool const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@$$CB_N@std@@YAPEB_NAEB_N@Z ENDP		; std::addressof<bool const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::forward<std::allocator<char> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::forward<std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Freenode@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Freenode@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::shared_ptr<std::thread>,void *>::_Freenode<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >, COMDAT

; 330  :     static void _Freenode(_Alnode& _Al, _Nodeptr _Ptr) noexcept { // destroy all members in _Ptr and deallocate with _Al

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 331  :         allocator_traits<_Alnode>::destroy(_Al, _STD addressof(_Ptr->_Myval));

  0003c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  00043	48 83 c0 10	 add	 rax, 16
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$addressof@V?$shared_ptr@Vthread@std@@@std@@@std@@YAPEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z ; std::addressof<std::shared_ptr<std::thread> >
  0004f	90		 npad	 1
  00050	48 8b d0	 mov	 rdx, rax
  00053	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$destroy@V?$shared_ptr@Vthread@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::destroy<std::shared_ptr<std::thread> >
  0005f	90		 npad	 1

; 332  :         _Freenode0(_Al, _Ptr);

  00060	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00067	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  0006e	e8 00 00 00 00	 call	 ??$_Freenode0@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::shared_ptr<std::thread>,void *>::_Freenode0<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
  00073	90		 npad	 1

; 333  :     }

  00074	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0007b	5f		 pop	 rdi
  0007c	5d		 pop	 rbp
  0007d	c3		 ret	 0
??$_Freenode@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::shared_ptr<std::thread>,void *>::_Freenode<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Emplace@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@AEBV?$function@$$A6AXXZ@1@@Z
_TEXT	SEGMENT
_Mysize$ = 8
_Op$ = 40
$T4 = 280
tv80 = 296
tv82 = 304
__$ArrayPad$ = 312
this$ = 352
_Where$ = 360
<_Val_0>$ = 368
??$_Emplace@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@AEBV?$function@$$A6AXXZ@1@@Z PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Emplace<std::function<void __cdecl(void)> const &>, COMDAT

; 950  :     _Nodeptr _Emplace(const _Nodeptr _Where, _Valty&&... _Val) { // insert element at _Where

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR [rsp+392]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c5	 xor	 rax, rbp
  0003e	48 89 85 38 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00045	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  0004c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 951  :         size_type& _Mysize = _Mypair._Myval2._Mysize;

  00051	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00058	48 83 c0 10	 add	 rax, 16
  0005c	48 89 45 08	 mov	 QWORD PTR _Mysize$[rbp], rax

; 952  :         if (_Mysize == max_size()) {

  00060	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00067	e8 00 00 00 00	 call	 ?max_size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::max_size
  0006c	48 8b 4d 08	 mov	 rcx, QWORD PTR _Mysize$[rbp]
  00070	48 39 01	 cmp	 QWORD PTR [rcx], rax
  00073	75 0c		 jne	 SHORT $LN2@Emplace

; 953  :             _Xlength_error("list<T> too long");

  00075	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long@
  0007c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Emplace:

; 954  :         }
; 955  : 
; 956  :         _List_node_emplace_op2<_Alnode> _Op{_Getal(), _STD forward<_Valty>(_Val)...};

  00081	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00088	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal
  0008d	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  00094	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR <_Val_0>$[rbp]
  0009b	e8 00 00 00 00	 call	 ??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z ; std::forward<std::function<void __cdecl(void)> const &>
  000a0	48 89 85 30 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  000a7	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR tv82[rbp]
  000ae	48 8b 95 28 01
	00 00		 mov	 rdx, QWORD PTR tv80[rbp]
  000b5	48 8d 4d 28	 lea	 rcx, QWORD PTR _Op$[rbp]
  000b9	e8 00 00 00 00	 call	 ??$?0AEBV?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@AEBV?$function@$$A6AXXZ@1@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> const &>

; 957  :         ++_Mysize;

  000be	48 8b 45 08	 mov	 rax, QWORD PTR _Mysize$[rbp]
  000c2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c5	48 ff c0	 inc	 rax
  000c8	48 8b 4d 08	 mov	 rcx, QWORD PTR _Mysize$[rbp]
  000cc	48 89 01	 mov	 QWORD PTR [rcx], rax

; 958  :         return _Op._Transfer_before(_Where);

  000cf	48 8b 95 68 01
	00 00		 mov	 rdx, QWORD PTR _Where$[rbp]
  000d6	48 8d 4d 28	 lea	 rcx, QWORD PTR _Op$[rbp]
  000da	e8 00 00 00 00	 call	 ?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Transfer_before
  000df	48 89 85 18 01
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000e6	48 8d 4d 28	 lea	 rcx, QWORD PTR _Op$[rbp]
  000ea	e8 00 00 00 00	 call	 ??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  000ef	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR $T4[rbp]

; 959  :     }

  000f6	48 8b f8	 mov	 rdi, rax
  000f9	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Emplace@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@AEBV?$function@$$A6AXXZ@1@@Z$rtcFrameData
  00104	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00109	48 8b c7	 mov	 rax, rdi
  0010c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00113	48 33 cd	 xor	 rcx, rbp
  00116	e8 00 00 00 00	 call	 __security_check_cookie
  0011b	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  00122	5f		 pop	 rdi
  00123	5d		 pop	 rbp
  00124	c3		 ret	 0
??$_Emplace@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@AEBV?$function@$$A6AXXZ@1@@Z ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Emplace<std::function<void __cdecl(void)> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$emplace_back@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@AEBV?$function@$$A6AXXZ@1@@Z
_TEXT	SEGMENT
_Result$ = 8
tv76 = 216
tv74 = 224
this$ = 272
<_Val_0>$ = 280
??$emplace_back@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@AEBV?$function@$$A6AXXZ@1@@Z PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::emplace_back<std::function<void __cdecl(void)> const &>, COMDAT

; 930  :     decltype(auto) emplace_back(_Valty&&... _Val) { // insert element at end

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 931  :         reference _Result = _Emplace(_Mypair._Myval2._Myhead, _STD forward<_Valty>(_Val)...)->_Myval;

  0003b	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Val_0>$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z ; std::forward<std::function<void __cdecl(void)> const &>
  00047	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0004e	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00055	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00059	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv74[rbp], rax
  00060	4c 8b 85 d8 00
	00 00		 mov	 r8, QWORD PTR tv76[rbp]
  00067	48 8b 95 e0 00
	00 00		 mov	 rdx, QWORD PTR tv74[rbp]
  0006e	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00075	e8 00 00 00 00	 call	 ??$_Emplace@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@AEBV?$function@$$A6AXXZ@1@@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Emplace<std::function<void __cdecl(void)> const &>
  0007a	48 83 c0 10	 add	 rax, 16
  0007e	48 89 45 08	 mov	 QWORD PTR _Result$[rbp], rax

; 932  : 
; 933  : #if _HAS_CXX17
; 934  :         return _Result;

  00082	48 8b 45 08	 mov	 rax, QWORD PTR _Result$[rbp]

; 935  : #else // ^^^ _HAS_CXX17 // !_HAS_CXX17 vvv
; 936  :         (void) _Result;
; 937  : #endif // _HAS_CXX17
; 938  :     }

  00086	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  0008d	5f		 pop	 rdi
  0008e	5d		 pop	 rbp
  0008f	c3		 ret	 0
??$emplace_back@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@AEBV?$function@$$A6AXXZ@1@@Z ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::emplace_back<std::function<void __cdecl(void)> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z PROC ; std::forward<std::function<void __cdecl(void)> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z ENDP ; std::forward<std::function<void __cdecl(void)> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\condition_variable
;	COMDAT ??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@1@@Z@@Z
_TEXT	SEGMENT
this$ = 224
_Xtrnl$ = 232
_Pred$ = 240
??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@1@@Z@@Z PROC ; std::condition_variable_any::wait<std::unique_lock<std::mutex>,`SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`2'::<lambda_1> >, COMDAT

; 61   :     void wait(_Mutex& _Xtrnl, _Predicate _Pred) { // wait for signal and check predicate

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DDDD6958_condition_variable
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN2@wait:

; 62   :         while (!_Pred()) {

  00040	48 8d 8d f0 00
	00 00		 lea	 rcx, QWORD PTR _Pred$[rbp]
  00047	e8 00 00 00 00	 call	 ??R<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`2'::<lambda_1>::operator()
  0004c	0f b6 c0	 movzx	 eax, al
  0004f	85 c0		 test	 eax, eax
  00051	75 15		 jne	 SHORT $LN3@wait

; 63   :             wait(_Xtrnl);

  00053	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Xtrnl$[rbp]
  0005a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00061	e8 00 00 00 00	 call	 ??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z ; std::condition_variable_any::wait<std::unique_lock<std::mutex> >

; 64   :         }

  00066	eb d8		 jmp	 SHORT $LN2@wait
$LN3@wait:

; 65   :     }

  00068	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@1@@Z@@Z ENDP ; std::condition_variable_any::wait<std::unique_lock<std::mutex>,`SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`2'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ??0<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z
_TEXT	SEGMENT
this$ = 224
_This$ = 232
??0<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`2'::<lambda_1>::<lambda_1>, COMDAT

; 99   : 			});

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _This$[rbp]
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx
  0004c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005a	5f		 pop	 rdi
  0005b	5d		 pop	 rbp
  0005c	c3		 ret	 0
??0<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`2'::<lambda_1>::<lambda_1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ??R<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ
_TEXT	SEGMENT
lock$ = 4
tv73 = 212
tv86 = 216
this$ = 256
??R<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`2'::<lambda_1>::operator(), COMDAT

; 99   : 			});

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 94   : 			auto lock = _need_stop || NotFull();

  00036	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	0f b6 40 6c	 movzx	 eax, BYTE PTR [rax+108]
  00044	85 c0		 test	 eax, eax
  00046	75 22		 jne	 SHORT $LN4@operator
  00048	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00052	e8 00 00 00 00	 call	 ?NotFull@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::NotFull
  00057	0f b6 c0	 movzx	 eax, al
  0005a	85 c0		 test	 eax, eax
  0005c	75 0c		 jne	 SHORT $LN4@operator
  0005e	c7 85 d4 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv73[rbp], 0
  00068	eb 0a		 jmp	 SHORT $LN5@operator
$LN4@operator:
  0006a	c7 85 d4 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv73[rbp], 1
$LN5@operator:
  00074	0f b6 85 d4 00
	00 00		 movzx	 eax, BYTE PTR tv73[rbp]
  0007b	88 45 04	 mov	 BYTE PTR lock$[rbp], al

; 95   : 			if (lock) {

  0007e	0f b6 45 04	 movzx	 eax, BYTE PTR lock$[rbp]
  00082	85 c0		 test	 eax, eax
  00084	74 25		 je	 SHORT $LN2@operator

; 96   : 				_event(EnumEvent::FULL);

  00086	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00090	48 05 20 01 00
	00		 add	 rax, 288		; 00000120H
  00096	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv86[rbp], rax
  0009d	33 d2		 xor	 edx, edx
  0009f	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv86[rbp]
  000a6	e8 00 00 00 00	 call	 ??R?$_Func_class@XW4EnumEvent@@@std@@QEBAXW4EnumEvent@@@Z ; std::_Func_class<void,enum EnumEvent>::operator()
$LN2@operator:

; 97   : 			}
; 98   : 			return lock;

  000ab	0f b6 45 04	 movzx	 eax, BYTE PTR lock$[rbp]

; 99   : 			});

  000af	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b6	5f		 pop	 rdi
  000b7	5d		 pop	 rbp
  000b8	c3		 ret	 0
??R<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Emplace@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@$$QEAV?$function@$$A6AXXZ@1@@Z
_TEXT	SEGMENT
_Mysize$ = 8
_Op$ = 40
$T4 = 280
tv80 = 296
tv82 = 304
__$ArrayPad$ = 312
this$ = 352
_Where$ = 360
<_Val_0>$ = 368
??$_Emplace@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@$$QEAV?$function@$$A6AXXZ@1@@Z PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Emplace<std::function<void __cdecl(void)> >, COMDAT

; 950  :     _Nodeptr _Emplace(const _Nodeptr _Where, _Valty&&... _Val) { // insert element at _Where

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR [rsp+392]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c5	 xor	 rax, rbp
  0003e	48 89 85 38 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00045	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  0004c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 951  :         size_type& _Mysize = _Mypair._Myval2._Mysize;

  00051	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00058	48 83 c0 10	 add	 rax, 16
  0005c	48 89 45 08	 mov	 QWORD PTR _Mysize$[rbp], rax

; 952  :         if (_Mysize == max_size()) {

  00060	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00067	e8 00 00 00 00	 call	 ?max_size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::max_size
  0006c	48 8b 4d 08	 mov	 rcx, QWORD PTR _Mysize$[rbp]
  00070	48 39 01	 cmp	 QWORD PTR [rcx], rax
  00073	75 0c		 jne	 SHORT $LN2@Emplace

; 953  :             _Xlength_error("list<T> too long");

  00075	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long@
  0007c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Emplace:

; 954  :         }
; 955  : 
; 956  :         _List_node_emplace_op2<_Alnode> _Op{_Getal(), _STD forward<_Valty>(_Val)...};

  00081	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00088	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal
  0008d	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  00094	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR <_Val_0>$[rbp]
  0009b	e8 00 00 00 00	 call	 ??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::forward<std::function<void __cdecl(void)> >
  000a0	48 89 85 30 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  000a7	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR tv82[rbp]
  000ae	48 8b 95 28 01
	00 00		 mov	 rdx, QWORD PTR tv80[rbp]
  000b5	48 8d 4d 28	 lea	 rcx, QWORD PTR _Op$[rbp]
  000b9	e8 00 00 00 00	 call	 ??$?0V?$function@$$A6AXXZ@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@$$QEAV?$function@$$A6AXXZ@1@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > ><std::function<void __cdecl(void)> >

; 957  :         ++_Mysize;

  000be	48 8b 45 08	 mov	 rax, QWORD PTR _Mysize$[rbp]
  000c2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c5	48 ff c0	 inc	 rax
  000c8	48 8b 4d 08	 mov	 rcx, QWORD PTR _Mysize$[rbp]
  000cc	48 89 01	 mov	 QWORD PTR [rcx], rax

; 958  :         return _Op._Transfer_before(_Where);

  000cf	48 8b 95 68 01
	00 00		 mov	 rdx, QWORD PTR _Where$[rbp]
  000d6	48 8d 4d 28	 lea	 rcx, QWORD PTR _Op$[rbp]
  000da	e8 00 00 00 00	 call	 ?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@QEAU32@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::_Transfer_before
  000df	48 89 85 18 01
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000e6	48 8d 4d 28	 lea	 rcx, QWORD PTR _Op$[rbp]
  000ea	e8 00 00 00 00	 call	 ??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  000ef	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR $T4[rbp]

; 959  :     }

  000f6	48 8b f8	 mov	 rdi, rax
  000f9	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Emplace@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@$$QEAV?$function@$$A6AXXZ@1@@Z$rtcFrameData
  00104	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00109	48 8b c7	 mov	 rax, rdi
  0010c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00113	48 33 cd	 xor	 rcx, rbp
  00116	e8 00 00 00 00	 call	 __security_check_cookie
  0011b	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  00122	5f		 pop	 rdi
  00123	5d		 pop	 rbp
  00124	c3		 ret	 0
??$_Emplace@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@$$QEAV?$function@$$A6AXXZ@1@@Z ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Emplace<std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$emplace_back@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@$$QEAV?$function@$$A6AXXZ@1@@Z
_TEXT	SEGMENT
_Result$ = 8
tv76 = 216
tv74 = 224
this$ = 272
<_Val_0>$ = 280
??$emplace_back@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@$$QEAV?$function@$$A6AXXZ@1@@Z PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::emplace_back<std::function<void __cdecl(void)> >, COMDAT

; 930  :     decltype(auto) emplace_back(_Valty&&... _Val) { // insert element at end

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 931  :         reference _Result = _Emplace(_Mypair._Myval2._Myhead, _STD forward<_Valty>(_Val)...)->_Myval;

  0003b	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Val_0>$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::forward<std::function<void __cdecl(void)> >
  00047	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0004e	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00055	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00059	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv74[rbp], rax
  00060	4c 8b 85 d8 00
	00 00		 mov	 r8, QWORD PTR tv76[rbp]
  00067	48 8b 95 e0 00
	00 00		 mov	 rdx, QWORD PTR tv74[rbp]
  0006e	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00075	e8 00 00 00 00	 call	 ??$_Emplace@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@QEAU21@$$QEAV?$function@$$A6AXXZ@1@@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Emplace<std::function<void __cdecl(void)> >
  0007a	48 83 c0 10	 add	 rax, 16
  0007e	48 89 45 08	 mov	 QWORD PTR _Result$[rbp], rax

; 932  : 
; 933  : #if _HAS_CXX17
; 934  :         return _Result;

  00082	48 8b 45 08	 mov	 rax, QWORD PTR _Result$[rbp]

; 935  : #else // ^^^ _HAS_CXX17 // !_HAS_CXX17 vvv
; 936  :         (void) _Result;
; 937  : #endif // _HAS_CXX17
; 938  :     }

  00086	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  0008d	5f		 pop	 rdi
  0008e	5d		 pop	 rbp
  0008f	c3		 ret	 0
??$emplace_back@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@$$QEAV?$function@$$A6AXXZ@1@@Z ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::emplace_back<std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\condition_variable
;	COMDAT ??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@1@@Z@@Z
_TEXT	SEGMENT
this$ = 224
_Xtrnl$ = 232
_Pred$ = 240
??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@1@@Z@@Z PROC ; std::condition_variable_any::wait<std::unique_lock<std::mutex>,`SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`2'::<lambda_1> >, COMDAT

; 61   :     void wait(_Mutex& _Xtrnl, _Predicate _Pred) { // wait for signal and check predicate

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DDDD6958_condition_variable
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN2@wait:

; 62   :         while (!_Pred()) {

  00040	48 8d 8d f0 00
	00 00		 lea	 rcx, QWORD PTR _Pred$[rbp]
  00047	e8 00 00 00 00	 call	 ??R<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`2'::<lambda_1>::operator()
  0004c	0f b6 c0	 movzx	 eax, al
  0004f	85 c0		 test	 eax, eax
  00051	75 15		 jne	 SHORT $LN3@wait

; 63   :             wait(_Xtrnl);

  00053	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Xtrnl$[rbp]
  0005a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00061	e8 00 00 00 00	 call	 ??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z ; std::condition_variable_any::wait<std::unique_lock<std::mutex> >

; 64   :         }

  00066	eb d8		 jmp	 SHORT $LN2@wait
$LN3@wait:

; 65   :     }

  00068	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@1@@Z@@Z ENDP ; std::condition_variable_any::wait<std::unique_lock<std::mutex>,`SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`2'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ??0<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z
_TEXT	SEGMENT
this$ = 224
_This$ = 232
??0<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`2'::<lambda_1>::<lambda_1>, COMDAT

; 99   : 			});

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _This$[rbp]
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx
  0004c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005a	5f		 pop	 rdi
  0005b	5d		 pop	 rbp
  0005c	c3		 ret	 0
??0<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`2'::<lambda_1>::<lambda_1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ??R<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ
_TEXT	SEGMENT
lock$ = 4
tv73 = 212
tv86 = 216
this$ = 256
??R<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`2'::<lambda_1>::operator(), COMDAT

; 99   : 			});

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 94   : 			auto lock = _need_stop || NotFull();

  00036	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	0f b6 40 6c	 movzx	 eax, BYTE PTR [rax+108]
  00044	85 c0		 test	 eax, eax
  00046	75 22		 jne	 SHORT $LN4@operator
  00048	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00052	e8 00 00 00 00	 call	 ?NotFull@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::NotFull
  00057	0f b6 c0	 movzx	 eax, al
  0005a	85 c0		 test	 eax, eax
  0005c	75 0c		 jne	 SHORT $LN4@operator
  0005e	c7 85 d4 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv73[rbp], 0
  00068	eb 0a		 jmp	 SHORT $LN5@operator
$LN4@operator:
  0006a	c7 85 d4 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv73[rbp], 1
$LN5@operator:
  00074	0f b6 85 d4 00
	00 00		 movzx	 eax, BYTE PTR tv73[rbp]
  0007b	88 45 04	 mov	 BYTE PTR lock$[rbp], al

; 95   : 			if (lock) {

  0007e	0f b6 45 04	 movzx	 eax, BYTE PTR lock$[rbp]
  00082	85 c0		 test	 eax, eax
  00084	74 25		 je	 SHORT $LN2@operator

; 96   : 				_event(EnumEvent::FULL);

  00086	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00090	48 05 20 01 00
	00		 add	 rax, 288		; 00000120H
  00096	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv86[rbp], rax
  0009d	33 d2		 xor	 edx, edx
  0009f	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv86[rbp]
  000a6	e8 00 00 00 00	 call	 ??R?$_Func_class@XW4EnumEvent@@@std@@QEBAXW4EnumEvent@@@Z ; std::_Func_class<void,enum EnumEvent>::operator()
$LN2@operator:

; 97   : 			}
; 98   : 			return lock;

  000ab	0f b6 45 04	 movzx	 eax, BYTE PTR lock$[rbp]

; 99   : 			});

  000af	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b6	5f		 pop	 rdi
  000b7	5d		 pop	 rbp
  000b8	c3		 ret	 0
??R<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEBA@XZ ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\condition_variable
;	COMDAT ??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z
_TEXT	SEGMENT
_Ptr$5 = 8
_Lck$6 = 56
tv95 = 264
tv93 = 272
__$ArrayPad$ = 280
this$ = 320
_Xtrnl$ = 328
??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z PROC ; std::condition_variable_any::wait<std::unique_lock<std::mutex> >, COMDAT

; 49   :     void wait(_Mutex& _Xtrnl) { // wait for signal

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 18 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DDDD6958_condition_variable
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 50   :         {
; 51   :             shared_ptr<mutex> _Ptr = _Myptr; // for immunity to *this destruction

  0004c	ba 10 00 00 00	 mov	 edx, 16
  00051	48 8d 4d 08	 lea	 rcx, QWORD PTR _Ptr$5[rbp]
  00055	e8 00 00 00 00	 call	 ?__autoclassinit2@?$shared_ptr@Vmutex@std@@@std@@QEAAX_K@Z
  0005a	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00061	48 8b d0	 mov	 rdx, rax
  00064	48 8d 4d 08	 lea	 rcx, QWORD PTR _Ptr$5[rbp]
  00068	e8 00 00 00 00	 call	 ??0?$shared_ptr@Vmutex@std@@@std@@QEAA@AEBV01@@Z ; std::shared_ptr<std::mutex>::shared_ptr<std::mutex>
  0006d	90		 npad	 1

; 52   :             lock_guard<mutex> _Lck(*_Ptr);

  0006e	48 8d 4d 08	 lea	 rcx, QWORD PTR _Ptr$5[rbp]
  00072	e8 00 00 00 00	 call	 ??$?DVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAAEAVmutex@1@XZ ; std::shared_ptr<std::mutex>::operator*<std::mutex,0>
  00077	48 8b d0	 mov	 rdx, rax
  0007a	48 8d 4d 38	 lea	 rcx, QWORD PTR _Lck$6[rbp]
  0007e	e8 00 00 00 00	 call	 ??0?$lock_guard@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ; std::lock_guard<std::mutex>::lock_guard<std::mutex>
  00083	90		 npad	 1

; 53   :             _Xtrnl.unlock(); // could throw

  00084	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR _Xtrnl$[rbp]
  0008b	e8 00 00 00 00	 call	 ?unlock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ ; std::unique_lock<std::mutex>::unlock

; 54   :             _Check_C_return(_Cnd_wait(_Mycnd(), _Ptr->_Mymtx()));

  00090	48 8d 4d 08	 lea	 rcx, QWORD PTR _Ptr$5[rbp]
  00094	e8 00 00 00 00	 call	 ??$?CVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAPEAVmutex@1@XZ ; std::shared_ptr<std::mutex>::operator-><std::mutex,0>
  00099	48 8b c8	 mov	 rcx, rax
  0009c	e8 00 00 00 00	 call	 ?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
  000a1	48 89 85 08 01
	00 00		 mov	 QWORD PTR tv95[rbp], rax
  000a8	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000af	e8 00 00 00 00	 call	 ?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ ; std::condition_variable_any::_Mycnd
  000b4	48 89 85 10 01
	00 00		 mov	 QWORD PTR tv93[rbp], rax
  000bb	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR tv95[rbp]
  000c2	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR tv93[rbp]
  000c9	e8 00 00 00 00	 call	 _Cnd_wait
  000ce	8b c8		 mov	 ecx, eax
  000d0	e8 00 00 00 00	 call	 ?_Check_C_return@std@@YAHH@Z ; std::_Check_C_return
  000d5	90		 npad	 1

; 55   :         } // unlock

  000d6	48 8d 4d 38	 lea	 rcx, QWORD PTR _Lck$6[rbp]
  000da	e8 00 00 00 00	 call	 ??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ ; std::lock_guard<std::mutex>::~lock_guard<std::mutex>
  000df	90		 npad	 1
  000e0	48 8d 4d 08	 lea	 rcx, QWORD PTR _Ptr$5[rbp]
  000e4	e8 00 00 00 00	 call	 ??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ ; std::shared_ptr<std::mutex>::~shared_ptr<std::mutex>

; 56   : 
; 57   :         _Relock(_Xtrnl);

  000e9	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR _Xtrnl$[rbp]
  000f0	e8 00 00 00 00	 call	 ??$_Relock@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@CAXAEAV?$unique_lock@Vmutex@std@@@1@@Z ; std::condition_variable_any::_Relock<std::unique_lock<std::mutex> >

; 58   :     }

  000f5	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000f9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z$rtcFrameData
  00100	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00105	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0010c	48 33 cd	 xor	 rcx, rbp
  0010f	e8 00 00 00 00	 call	 __security_check_cookie
  00114	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  0011b	5f		 pop	 rdi
  0011c	5d		 pop	 rbp
  0011d	c3		 ret	 0
??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z ENDP ; std::condition_variable_any::wait<std::unique_lock<std::mutex> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ptr$5 = 8
_Lck$6 = 56
tv95 = 264
tv93 = 272
__$ArrayPad$ = 280
this$ = 320
_Xtrnl$ = 328
?dtor$0@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA PROC ; `std::condition_variable_any::wait<std::unique_lock<std::mutex> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR _Ptr$5[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ ; std::shared_ptr<std::mutex>::~shared_ptr<std::mutex>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA ENDP ; `std::condition_variable_any::wait<std::unique_lock<std::mutex> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ptr$5 = 8
_Lck$6 = 56
tv95 = 264
tv93 = 272
__$ArrayPad$ = 280
this$ = 320
_Xtrnl$ = 328
?dtor$1@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA PROC ; `std::condition_variable_any::wait<std::unique_lock<std::mutex> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 38	 lea	 rcx, QWORD PTR _Lck$6[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ ; std::lock_guard<std::mutex>::~lock_guard<std::mutex>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA ENDP ; `std::condition_variable_any::wait<std::unique_lock<std::mutex> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Ptr$5 = 8
_Lck$6 = 56
tv95 = 264
tv93 = 272
__$ArrayPad$ = 280
this$ = 320
_Xtrnl$ = 328
?dtor$0@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA PROC ; `std::condition_variable_any::wait<std::unique_lock<std::mutex> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR _Ptr$5[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ ; std::shared_ptr<std::mutex>::~shared_ptr<std::mutex>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA ENDP ; `std::condition_variable_any::wait<std::unique_lock<std::mutex> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Ptr$5 = 8
_Lck$6 = 56
tv95 = 264
tv93 = 272
__$ArrayPad$ = 280
this$ = 320
_Xtrnl$ = 328
?dtor$1@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA PROC ; `std::condition_variable_any::wait<std::unique_lock<std::mutex> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 38	 lea	 rcx, QWORD PTR _Lck$6[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ ; std::lock_guard<std::mutex>::~lock_guard<std::mutex>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0???$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z@4HA ENDP ; `std::condition_variable_any::wait<std::unique_lock<std::mutex> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  0003c	41 b8 01 00 00
	00		 mov	 r8d, 1
  00042	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00049	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  00050	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00055	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z
_TEXT	SEGMENT
_Now$5 = 8
_Tgt$6 = 40
$T7 = 280
__$ArrayPad$ = 296
_Abs_time$ = 336
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z PROC ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 155  :     void sleep_until(const chrono::time_point<_Clock, _Duration>& _Abs_time) { // sleep until time point

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 28 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F7EEAF5_thread
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN2@sleep_unti:

; 156  :         for (;;) {
; 157  :             const auto _Now = _Clock::now();

  00047	48 8d 4d 08	 lea	 rcx, QWORD PTR _Now$5[rbp]
  0004b	e8 00 00 00 00	 call	 ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now

; 158  :             if (_Abs_time <= _Now) {

  00050	48 8d 55 08	 lea	 rdx, QWORD PTR _Now$5[rbp]
  00054	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR _Abs_time$[rbp]
  0005b	e8 00 00 00 00	 call	 ??$?NUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA_NAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator<=<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
  00060	0f b6 c0	 movzx	 eax, al
  00063	85 c0		 test	 eax, eax
  00065	74 02		 je	 SHORT $LN5@sleep_unti

; 159  :                 return;

  00067	eb 2e		 jmp	 SHORT $LN1@sleep_unti
$LN5@sleep_unti:

; 160  :             }
; 161  : 
; 162  :             _CSTD xtime _Tgt;
; 163  :             (void) _To_xtime_10_day_clamped(_Tgt, _Abs_time - _Now);

  00069	4c 8d 45 08	 lea	 r8, QWORD PTR _Now$5[rbp]
  0006d	48 8b 95 50 01
	00 00		 mov	 rdx, QWORD PTR _Abs_time$[rbp]
  00074	48 8d 8d 18 01
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  0007b	e8 00 00 00 00	 call	 ??$?GUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@V312@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@0@Z ; std::chrono::operator-<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
  00080	48 8b d0	 mov	 rdx, rax
  00083	48 8d 4d 28	 lea	 rcx, QWORD PTR _Tgt$6[rbp]
  00087	e8 00 00 00 00	 call	 ??$_To_xtime_10_day_clamped@_JU?$ratio@$00$0DLJKMKAA@@std@@@std@@YA_NAEAUxtime@@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@0@@Z ; std::_To_xtime_10_day_clamped<__int64,std::ratio<1,1000000000> >

; 164  :             _Thrd_sleep(&_Tgt);

  0008c	48 8d 4d 28	 lea	 rcx, QWORD PTR _Tgt$6[rbp]
  00090	e8 00 00 00 00	 call	 _Thrd_sleep

; 165  :         }

  00095	eb b0		 jmp	 SHORT $LN2@sleep_unti
$LN1@sleep_unti:

; 166  :     }

  00097	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0009b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z$rtcFrameData
  000a2	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a7	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000ae	48 33 cd	 xor	 rcx, rbp
  000b1	e8 00 00 00 00	 call	 __security_check_cookie
  000b6	48 8d a5 38 01
	00 00		 lea	 rsp, QWORD PTR [rbp+312]
  000bd	5f		 pop	 rdi
  000be	5d		 pop	 rbp
  000bf	c3		 ret	 0
??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z ENDP ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
__$ReturnUdt$ = 288
_Left$ = 296
_Right$ = 304
??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z PROC ; std::chrono::operator+<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000> >, COMDAT

; 497  :         _NOEXCEPT_COND(is_arithmetic_v<typename _Duration::rep>&& is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 498  :         // add duration to time_point
; 499  :         using _RT = time_point<_Clock, common_type_t<_Duration, duration<_Rep, _Period>>>;
; 500  :         return _RT(_Left.time_since_epoch() + _Right);

  00041	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00048	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  0004f	e8 00 00 00 00	 call	 ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
  00054	90		 npad	 1
  00055	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR _Right$[rbp]
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  00066	e8 00 00 00 00	 call	 ??$?H_JU?$ratio@$00$0DLJKMKAA@@std@@_JU?$ratio@$00$0DOI@@1@@chrono@std@@YA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ; std::chrono::operator+<__int64,std::ratio<1,1000000000>,__int64,std::ratio<1,1000> >
  0006b	90		 npad	 1
  0006c	48 8b d0	 mov	 rdx, rax
  0006f	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00076	e8 00 00 00 00	 call	 ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
  0007b	90		 npad	 1
  0007c	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 501  :     }

  00083	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0008a	5f		 pop	 rdi
  0008b	5d		 pop	 rbp
  0008c	c3		 ret	 0
??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ENDP ; std::chrono::operator+<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z
_TEXT	SEGMENT
tv136 = 192
tv134 = 200
tv132 = 208
this$ = 256
_Al_$ = 264
<_Vals_0>$ = 272
??$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z PROC ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > ><std::shared_ptr<std::thread> >, COMDAT

; 539  :     explicit _List_node_emplace_op2(_Alnode& _Al_, _Valtys&&... _Vals) : _Alloc_construct_ptr<_Alnode>(_Al_) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Al_$[rbp]
  00047	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	e8 00 00 00 00	 call	 ??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
  00053	90		 npad	 1

; 540  :         this->_Allocate();

  00054	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005b	e8 00 00 00 00	 call	 ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Allocate

; 541  :         _Alnode_traits::construct(this->_Al, _STD addressof(this->_Ptr->_Myval), _STD forward<_Valtys>(_Vals)...);

  00060	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR <_Vals_0>$[rbp]
  00067	e8 00 00 00 00	 call	 ??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z ; std::forward<std::shared_ptr<std::thread> >
  0006c	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv136[rbp], rax
  00073	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0007e	48 83 c0 10	 add	 rax, 16
  00082	48 8b c8	 mov	 rcx, rax
  00085	e8 00 00 00 00	 call	 ??$addressof@V?$shared_ptr@Vthread@std@@@std@@@std@@YAPEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z ; std::addressof<std::shared_ptr<std::thread> >
  0008a	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv134[rbp], rax
  00091	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00098	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009b	48 89 85 d0 00
	00 00		 mov	 QWORD PTR tv132[rbp], rax
  000a2	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv136[rbp]
  000a9	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv134[rbp]
  000b0	48 8b 8d d0 00
	00 00		 mov	 rcx, QWORD PTR tv132[rbp]
  000b7	e8 00 00 00 00	 call	 ??$construct@V?$shared_ptr@Vthread@std@@@std@@V12@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@$$QEAV31@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::construct<std::shared_ptr<std::thread>,std::shared_ptr<std::thread> >
  000bc	90		 npad	 1

; 542  :     }

  000bd	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c4	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000cb	5f		 pop	 rdi
  000cc	5d		 pop	 rbp
  000cd	c3		 ret	 0
??$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z ENDP ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > ><std::shared_ptr<std::thread> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv136 = 192
tv134 = 200
tv132 = 208
this$ = 256
_Al_$ = 264
<_Vals_0>$ = 272
?dtor$0@?0???$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z@4HA PROC ; `std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > ><std::shared_ptr<std::thread> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z@4HA ENDP ; `std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > ><std::shared_ptr<std::thread> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
tv136 = 192
tv134 = 200
tv132 = 208
this$ = 256
_Al_$ = 264
<_Vals_0>$ = 272
?dtor$0@?0???$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z@4HA PROC ; `std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > ><std::shared_ptr<std::thread> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z@4HA ENDP ; `std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > ><std::shared_ptr<std::thread> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z
_TEXT	SEGMENT
_Insert_after$ = 8
_Result$ = 40
__$ArrayPad$ = 248
this$ = 288
_Insert_before$ = 296
?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z PROC ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Transfer_before, COMDAT

; 553  :     pointer _Transfer_before(const pointer _Insert_before) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 f8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004c	90		 npad	 1

; 554  :         const pointer _Insert_after = _Insert_before->_Prev;

  0004d	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Insert_before$[rbp]
  00054	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00058	48 89 45 08	 mov	 QWORD PTR _Insert_after$[rbp], rax

; 555  :         _Construct_in_place(this->_Ptr->_Next, _Insert_before);

  0005c	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00063	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00067	48 8d 95 28 01
	00 00		 lea	 rdx, QWORD PTR _Insert_before$[rbp]
  0006e	48 8b c8	 mov	 rcx, rax
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z ; std::_Construct_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *,std::_List_node<std::shared_ptr<std::thread>,void *> * const &>
  00076	90		 npad	 1

; 556  :         _Construct_in_place(this->_Ptr->_Prev, _Insert_after);

  00077	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00082	48 83 c0 08	 add	 rax, 8
  00086	48 8d 55 08	 lea	 rdx, QWORD PTR _Insert_after$[rbp]
  0008a	48 8b c8	 mov	 rcx, rax
  0008d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEBQEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEBQEAU10@@Z ; std::_Construct_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *,std::_List_node<std::shared_ptr<std::thread>,void *> * const &>
  00092	90		 npad	 1

; 557  :         const auto _Result    = this->_Ptr;

  00093	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0009a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0009e	48 89 45 28	 mov	 QWORD PTR _Result$[rbp], rax

; 558  :         this->_Ptr            = pointer{};

  000a2	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a9	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 559  :         _Insert_before->_Prev = _Result;

  000b1	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Insert_before$[rbp]
  000b8	48 8b 4d 28	 mov	 rcx, QWORD PTR _Result$[rbp]
  000bc	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 560  :         _Insert_after->_Next  = _Result;

  000c0	48 8b 45 08	 mov	 rax, QWORD PTR _Insert_after$[rbp]
  000c4	48 8b 4d 28	 mov	 rcx, QWORD PTR _Result$[rbp]
  000c8	48 89 08	 mov	 QWORD PTR [rax], rcx

; 561  :         return _Result;

  000cb	48 8b 45 28	 mov	 rax, QWORD PTR _Result$[rbp]

; 562  :     }

  000cf	48 8b f8	 mov	 rdi, rax
  000d2	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000d6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z$rtcFrameData
  000dd	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000e2	90		 npad	 1
  000e3	48 8b c7	 mov	 rax, rdi
  000e6	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000ed	48 33 cd	 xor	 rcx, rbp
  000f0	e8 00 00 00 00	 call	 __security_check_cookie
  000f5	90		 npad	 1
  000f6	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000fd	5f		 pop	 rdi
  000fe	5d		 pop	 rbp
  000ff	c3		 ret	 0
?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z ENDP ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Transfer_before
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
tv93 = 192
tv91 = 200
this$ = 240
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >, COMDAT

; 544  :     ~_List_node_emplace_op2() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 545  :         if (this->_Ptr != pointer{}) {

  00037	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00043	74 44		 je	 SHORT $LN2@List_node_

; 546  :             _Alnode_traits::destroy(this->_Al, _STD addressof(this->_Ptr->_Myval));

  00045	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00050	48 83 c0 10	 add	 rax, 16
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??$addressof@V?$shared_ptr@Vthread@std@@@std@@@std@@YAPEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z ; std::addressof<std::shared_ptr<std::thread> >
  0005c	90		 npad	 1
  0005d	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv93[rbp], rax
  00064	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006e	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv91[rbp], rax
  00075	48 8b 95 c0 00
	00 00		 mov	 rdx, QWORD PTR tv93[rbp]
  0007c	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR tv91[rbp]
  00083	e8 00 00 00 00	 call	 ??$destroy@V?$shared_ptr@Vthread@std@@@std@@@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@QEAV?$shared_ptr@Vthread@std@@@1@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::destroy<std::shared_ptr<std::thread> >
  00088	90		 npad	 1
$LN2@List_node_:

; 547  :         }
; 548  :     }

  00089	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00090	e8 00 00 00 00	 call	 ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
  00095	90		 npad	 1
  00096	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0009d	5f		 pop	 rdi
  0009e	5d		 pop	 rbp
  0009f	c3		 ret	 0
??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
tv72 = 192
this$ = 240
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >, COMDAT

; 1134 :     ~_Alloc_construct_ptr() { // if this instance is engaged, deallocate storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1135 :         if (_Ptr) {

  00037	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00043	74 2f		 je	 SHORT $LN2@Alloc_cons

; 1136 :             _Al.deallocate(_Ptr, 1);

  00045	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv72[rbp], rax
  00056	41 b8 01 00 00
	00		 mov	 r8d, 1
  0005c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00063	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00067	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv72[rbp]
  0006e	e8 00 00 00 00	 call	 ?deallocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z ; std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >::deallocate
  00073	90		 npad	 1
$LN2@Alloc_cons:

; 1137 :         }
; 1138 :     }

  00074	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0007b	5f		 pop	 rdi
  0007c	5d		 pop	 rbp
  0007d	c3		 ret	 0
??1?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::~_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
tv73 = 192
this$ = 240
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Allocate, COMDAT

; 1129 :     void _Allocate() { // disengage *this, then allocate a new memory block

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1130 :         _Ptr = nullptr; // if allocate throws, prevents double-free

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1131 :         _Ptr = _Al.allocate(1);

  00045	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  00056	ba 01 00 00 00	 mov	 edx, 1
  0005b	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv73[rbp]
  00062	e8 00 00 00 00	 call	 ?allocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z ; std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >::allocate
  00067	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006e	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax

; 1132 :     }

  00072	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00079	5f		 pop	 rdi
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
?_Allocate@?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAXXZ ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 224
_Al_$ = 232
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z PROC ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >, COMDAT

; 1123 :     explicit _Alloc_construct_ptr(_Alloc& _Al_) : _Al(_Al_), _Ptr(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Al_$[rbp]
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx
  0004c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0005b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
??0?$_Alloc_construct_ptr@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z ENDP ; std::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Alloc_construct_ptr<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$_Set_ptr_rep_and_enable_shared@Vthread@std@@@?$shared_ptr@Vthread@std@@@std@@AEAAXQEAVthread@1@QEAV_Ref_count_base@1@@Z
_TEXT	SEGMENT
this$ = 224
_Px$ = 232
_Rx$ = 240
??$_Set_ptr_rep_and_enable_shared@Vthread@std@@@?$shared_ptr@Vthread@std@@@std@@AEAAXQEAVthread@1@QEAV_Ref_count_base@1@@Z PROC ; std::shared_ptr<std::thread>::_Set_ptr_rep_and_enable_shared<std::thread>, COMDAT

; 1266 :     void _Set_ptr_rep_and_enable_shared(_Ux* const _Px, _Ref_count_base* const _Rx) noexcept { // take ownership of _Px

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 1267 :         this->_Ptr = _Px;

  00041	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Px$[rbp]
  0004f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1268 :         this->_Rep = _Rx;

  00052	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00059	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Rx$[rbp]
  00060	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1269 : #if _HAS_IF_CONSTEXPR
; 1270 :         if constexpr (conjunction_v<negation<is_array<_Ty>>, negation<is_volatile<_Ux>>, _Can_enable_shared<_Ux>>) {
; 1271 :             if (_Px && _Px->_Wptr.expired()) {
; 1272 :                 _Px->_Wptr = shared_ptr<remove_cv_t<_Ux>>(*this, const_cast<remove_cv_t<_Ux>*>(_Px));
; 1273 :             }
; 1274 :         }
; 1275 : #else // ^^^ _HAS_IF_CONSTEXPR // !_HAS_IF_CONSTEXPR vvv
; 1276 :         _Enable_shared_from_this1(*this, _Px,
; 1277 :             bool_constant<
; 1278 :                 conjunction_v<negation<is_array<_Ty>>, negation<is_volatile<_Ux>>, _Can_enable_shared<_Ux>>>{});
; 1279 : #endif // _HAS_IF_CONSTEXPR
; 1280 :     }

  00064	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006b	5f		 pop	 rdi
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??$_Set_ptr_rep_and_enable_shared@Vthread@std@@@?$shared_ptr@Vthread@std@@@std@@AEAAXQEAVthread@1@QEAV_Ref_count_base@1@@Z ENDP ; std::shared_ptr<std::thread>::_Set_ptr_rep_and_enable_shared<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z PROC ; std::addressof<std::thread>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z ENDP ; std::addressof<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
_TEXT	SEGMENT
tv132 = 192
tv130 = 200
this$ = 240
<_Args_0>$ = 248
<_Args_1>$ = 256
??$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z PROC ; std::_Ref_count_obj2<std::thread>::_Ref_count_obj2<std::thread><void (__cdecl ThreadPool::*)(void),ThreadPool *>, COMDAT

; 1492 :     explicit _Ref_count_obj2(_Types&&... _Args) : _Ref_count_base() { // construct from argument list

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b bd f0 00
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  00047	33 c0		 xor	 eax, eax
  00049	b9 10 00 00 00	 mov	 ecx, 16
  0004e	f3 aa		 rep stosb
  00050	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00057	e8 00 00 00 00	 call	 ??0_Ref_count_base@std@@IEAA@XZ ; std::_Ref_count_base::_Ref_count_base
  0005c	90		 npad	 1
  0005d	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$_Ref_count_obj2@Vthread@std@@@std@@6B@
  0006b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1493 :         _Construct_in_place(_Storage._Value, _STD forward<_Types>(_Args)...);

  0006e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  00075	e8 00 00 00 00	 call	 ??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ; std::forward<ThreadPool *>
  0007a	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv132[rbp], rax
  00081	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00088	e8 00 00 00 00	 call	 ??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z ; std::forward<void (__cdecl ThreadPool::*)(void)>
  0008d	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv130[rbp], rax
  00094	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0009b	48 83 c0 10	 add	 rax, 16
  0009f	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv132[rbp]
  000a6	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv130[rbp]
  000ad	48 8b c8	 mov	 rcx, rax
  000b0	e8 00 00 00 00	 call	 ??$_Construct_in_place@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YAXAEAVthread@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ; std::_Construct_in_place<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>
  000b5	90		 npad	 1

; 1494 :     }

  000b6	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000bd	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000c4	5f		 pop	 rdi
  000c5	5d		 pop	 rbp
  000c6	c3		 ret	 0
??$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ENDP ; std::_Ref_count_obj2<std::thread>::_Ref_count_obj2<std::thread><void (__cdecl ThreadPool::*)(void),ThreadPool *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv132 = 192
tv130 = 200
this$ = 240
<_Args_0>$ = 248
<_Args_1>$ = 256
?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA PROC ; `std::_Ref_count_obj2<std::thread>::_Ref_count_obj2<std::thread><void (__cdecl ThreadPool::*)(void),ThreadPool *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1_Ref_count_base@std@@UEAA@XZ ; std::_Ref_count_base::~_Ref_count_base
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA ENDP ; `std::_Ref_count_obj2<std::thread>::_Ref_count_obj2<std::thread><void (__cdecl ThreadPool::*)(void),ThreadPool *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
tv132 = 192
tv130 = 200
this$ = 240
<_Args_0>$ = 248
<_Args_1>$ = 256
?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA PROC ; `std::_Ref_count_obj2<std::thread>::_Ref_count_obj2<std::thread><void (__cdecl ThreadPool::*)(void),ThreadPool *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1_Ref_count_base@std@@UEAA@XZ ; std::_Ref_count_base::~_Ref_count_base
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA ENDP ; `std::_Ref_count_obj2<std::thread>::_Ref_count_obj2<std::thread><void (__cdecl ThreadPool::*)(void),ThreadPool *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z PROC ; std::forward<ThreadPool *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ENDP ; std::forward<ThreadPool *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z PROC ; std::forward<void (__cdecl ThreadPool::*)(void)>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z ENDP ; std::forward<void (__cdecl ThreadPool::*)(void)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$_Ref_count_obj2@Vthread@std@@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_G?$_Ref_count_obj2@Vthread@std@@@std@@UEAAPEAXI@Z PROC ; std::_Ref_count_obj2<std::thread>::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1?$_Ref_count_obj2@Vthread@std@@@std@@UEAA@XZ ; std::_Ref_count_obj2<std::thread>::~_Ref_count_obj2<std::thread>
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_G?$_Ref_count_obj2@Vthread@std@@@std@@UEAAPEAXI@Z ENDP ; std::_Ref_count_obj2<std::thread>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Delete_this@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ
_TEXT	SEGMENT
$T1 = 200
tv75 = 216
tv76 = 224
this$ = 272
?_Delete_this@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ PROC ; std::_Ref_count_obj2<std::thread>::_Delete_this, COMDAT

; 1509 :     virtual void _Delete_this() noexcept override { // destroy self

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1510 :         delete this;

  00037	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00045	48 83 bd c8 00
	00 00 00	 cmp	 QWORD PTR $T1[rbp], 0
  0004d	74 31		 je	 SHORT $LN3@Delete_thi
  0004f	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR $T1[rbp]
  00056	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00059	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0005d	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00064	ba 01 00 00 00	 mov	 edx, 1
  00069	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00070	ff 95 d8 00 00
	00		 call	 QWORD PTR tv75[rbp]
  00076	90		 npad	 1
  00077	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0007e	eb 0b		 jmp	 SHORT $LN4@Delete_thi
$LN3@Delete_thi:
  00080	48 c7 85 e0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR tv76[rbp], 0
$LN4@Delete_thi:

; 1511 :     }

  0008b	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
?_Delete_this@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ ENDP ; std::_Ref_count_obj2<std::thread>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Destroy@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Destroy@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ PROC ; std::_Ref_count_obj2<std::thread>::_Destroy, COMDAT

; 1505 :     virtual void _Destroy() noexcept override { // destroy managed resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1506 :         _Destroy_in_place(_Storage._Value);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 c0 10	 add	 rax, 16
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??$_Destroy_in_place@Vthread@std@@@std@@YAXAEAVthread@0@@Z ; std::_Destroy_in_place<std::thread>
  0004a	90		 npad	 1

; 1507 :     }

  0004b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
?_Destroy@?$_Ref_count_obj2@Vthread@std@@@std@@EEAAXXZ ENDP ; std::_Ref_count_obj2<std::thread>::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$_Ref_count_obj2@Vthread@std@@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Ref_count_obj2@Vthread@std@@@std@@UEAA@XZ PROC	; std::_Ref_count_obj2<std::thread>::~_Ref_count_obj2<std::thread>, COMDAT

; 1496 :     ~_Ref_count_obj2() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$_Ref_count_obj2@Vthread@std@@@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1497 :         // nothing to do, _Storage._Value was already destroyed in _Destroy
; 1498 :     }

  00048	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004f	e8 00 00 00 00	 call	 ??1_Ref_count_base@std@@UEAA@XZ ; std::_Ref_count_base::~_Ref_count_base
  00054	90		 npad	 1
  00055	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005c	5f		 pop	 rdi
  0005d	5d		 pop	 rbp
  0005e	c3		 ret	 0
??1?$_Ref_count_obj2@Vthread@std@@@std@@UEAA@XZ ENDP	; std::_Ref_count_obj2<std::thread>::~_Ref_count_obj2<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YAPEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YAPEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z PROC ; std::addressof<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &> >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YAPEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z
_TEXT	SEGMENT
_Ptup$ = 8
_Ref$1 = 40
$T2 = 260
$T3 = 292
$T4 = 328
$T5 = 372
tv81 = 392
tv69 = 392
__formal$ = 432
_Pv$ = 440
__formal$ = 448
??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z PROC ; std::_Callback_once<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>,std::integer_sequence<unsigned __int64,0>,1>, COMDAT

; 534  : int __stdcall _Callback_once(void*, void* _Pv, void**) { // adapt call_once() to callback API

$LN10:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec b8 01
	00 00		 sub	 rsp, 440		; 000001b8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 6e 00 00 00	 mov	 ecx, 110		; 0000006eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 d8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+472]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 535  :     _Tuple* _Ptup = static_cast<_Tuple*>(_Pv);

  00040	48 8b 85 b8 01
	00 00		 mov	 rax, QWORD PTR _Pv$[rbp]
  00047	48 89 45 08	 mov	 QWORD PTR _Ptup$[rbp], rax

; 536  : 
; 537  :     _TRY_BEGIN
; 538  :     // Note explicit _Seq() selects every element from *_Ptup except the last,
; 539  :     // which contains call_once's exception_ptr.
; 540  :     _Invoke_stored_explicit(_STD move(*_Ptup), _Seq());

  0004b	0f b6 85 04 01
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  00052	88 85 24 01 00
	00		 mov	 BYTE PTR $T3[rbp], al
  00058	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptup$[rbp]
  0005c	e8 00 00 00 00	 call	 ??$move@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YA$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z ; std::move<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &> &>
  00061	48 89 85 88 01
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00068	0f b6 95 24 01
	00 00		 movzx	 edx, BYTE PTR $T3[rbp]
  0006f	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR tv69[rbp]
  00076	e8 00 00 00 00	 call	 ??$_Invoke_stored_explicit@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$$Z$0A@@std@@YAX$$QEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@U?$integer_sequence@_K$0A@@0@@Z ; std::_Invoke_stored_explicit<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &,0>
  0007b	90		 npad	 1
__tryend$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z$1:
  0007c	eb 08		 jmp	 SHORT $LN7@Callback_o
$LN8@Callback_o:

; 541  :     _CATCH_ALL
; 542  :     auto& _Ref = _STD get<_Idx>(*_Ptup);
; 543  :     _Ref       = _STD current_exception();
; 544  :     return 0;

  0007e	8b 85 74 01 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  00084	eb 05		 jmp	 SHORT $LN1@Callback_o
$LN7@Callback_o:

; 545  :     _CATCH_END
; 546  : 
; 547  :     return 1;

  00086	b8 01 00 00 00	 mov	 eax, 1
$LN1@Callback_o:

; 548  : }

  0008b	48 8d a5 98 01
	00 00		 lea	 rsp, QWORD PTR [rbp+408]
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z ENDP ; std::_Callback_once<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>,std::integer_sequence<unsigned __int64,0>,1>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ptup$ = 8
_Ref$1 = 40
$T2 = 260
$T3 = 292
$T4 = 328
$T5 = 372
tv81 = 392
tv69 = 392
__formal$ = 432
_Pv$ = 440
__formal$ = 448
?catch$1@?0???$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z@4HA PROC ; `std::_Callback_once<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>,std::integer_sequence<unsigned __int64,0>,1>'::`1'::catch$1

; 541  :     _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z$0:

; 541  :     _CATCH_ALL
; 542  :     auto& _Ref = _STD get<_Idx>(*_Ptup);

  00014	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptup$[rbp]
  00018	e8 00 00 00 00	 call	 ??$get@$00$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z ; std::get<1,`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>
  0001d	48 89 45 28	 mov	 QWORD PTR _Ref$1[rbp], rax

; 541  :     _CATCH_ALL
; 542  :     auto& _Ref = _STD get<_Idx>(*_Ptup);
; 543  :     _Ref       = _STD current_exception();

  00021	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00028	e8 00 00 00 00	 call	 ?current_exception@std@@YA?AVexception_ptr@1@XZ ; std::current_exception
  0002d	48 89 85 88 01
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00034	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR tv81[rbp]
  0003b	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ref$1[rbp]
  0003f	e8 00 00 00 00	 call	 ??4exception_ptr@std@@QEAAAEAV01@AEBV01@@Z ; std::exception_ptr::operator=
  00044	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0004b	e8 00 00 00 00	 call	 ??1exception_ptr@std@@QEAA@XZ ; std::exception_ptr::~exception_ptr

; 541  :     _CATCH_ALL
; 542  :     auto& _Ref = _STD get<_Idx>(*_Ptup);
; 543  :     _Ref       = _STD current_exception();
; 544  :     return 0;

  00050	c7 85 74 01 00
	00 00 00 00 00	 mov	 DWORD PTR $T5[rbp], 0
  0005a	48 8d 05 00 00
	00 00		 lea	 rax, $LN8@catch$1
  00061	eb 07		 jmp	 SHORT $LN9@catch$1

; 545  :     _CATCH_END

  00063	48 8d 05 00 00
	00 00		 lea	 rax, __tryend$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z$1
$LN9@catch$1:
  0006a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
  00071	cc		 int	 3
?catch$1@?0???$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z@4HA ENDP ; `std::_Callback_once<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>,std::integer_sequence<unsigned __int64,0>,1>'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Ptup$ = 8
_Ref$1 = 40
$T2 = 260
$T3 = 292
$T4 = 328
$T5 = 372
tv81 = 392
tv69 = 392
__formal$ = 432
_Pv$ = 440
__formal$ = 448
?catch$1@?0???$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z@4HA PROC ; `std::_Callback_once<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>,std::integer_sequence<unsigned __int64,0>,1>'::`1'::catch$1

; 541  :     _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z$0:

; 542  :     auto& _Ref = _STD get<_Idx>(*_Ptup);

  00014	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptup$[rbp]
  00018	e8 00 00 00 00	 call	 ??$get@$00$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@@Z ; std::get<1,`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>
  0001d	48 89 45 28	 mov	 QWORD PTR _Ref$1[rbp], rax

; 543  :     _Ref       = _STD current_exception();

  00021	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  00028	e8 00 00 00 00	 call	 ?current_exception@std@@YA?AVexception_ptr@1@XZ ; std::current_exception
  0002d	48 89 85 88 01
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00034	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR tv81[rbp]
  0003b	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ref$1[rbp]
  0003f	e8 00 00 00 00	 call	 ??4exception_ptr@std@@QEAAAEAV01@AEBV01@@Z ; std::exception_ptr::operator=
  00044	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0004b	e8 00 00 00 00	 call	 ??1exception_ptr@std@@QEAA@XZ ; std::exception_ptr::~exception_ptr

; 544  :     return 0;

  00050	c7 85 74 01 00
	00 00 00 00 00	 mov	 DWORD PTR $T5[rbp], 0
  0005a	48 8d 05 00 00
	00 00		 lea	 rax, $LN8@catch$1
  00061	eb 07		 jmp	 SHORT $LN9@catch$1

; 545  :     _CATCH_END

  00063	48 8d 05 00 00
	00 00		 lea	 rax, __tryend$??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z$1
$LN9@catch$1:
  0006a	48 83 c4 28	 add	 rsp, 40			; 00000028H
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
  00071	cc		 int	 3
?catch$1@?0???$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z@4HA ENDP ; `std::_Callback_once<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>,std::integer_sequence<unsigned __int64,0>,1>'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\tuple
;	COMDAT ??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
tv82 = 280
tv79 = 288
this$ = 336
_This_arg$ = 344
<_Rest_arg_0>$ = 352
??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z PROC ; std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &><`ThreadPool::Stop'::`2'::<lambda_1>,std::exception_ptr &,0>, COMDAT

; 310  :         : tuple(_Exact_args_t{}, _STD forward<_This2>(_This_arg), _STD forward<_Rest2>(_Rest_arg)...) {}

  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D64083BB_tuple
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1
  00041	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00048	48 8b f8	 mov	 rdi, rax
  0004b	33 c0		 xor	 eax, eax
  0004d	b9 01 00 00 00	 mov	 ecx, 1
  00052	f3 aa		 rep stosb
  00054	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR <_Rest_arg_0>$[rbp]
  0005b	e8 00 00 00 00	 call	 ??$forward@AEAVexception_ptr@std@@@std@@YAAEAVexception_ptr@0@AEAV10@@Z ; std::forward<std::exception_ptr &>
  00060	90		 npad	 1
  00061	48 89 85 18 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  00068	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR _This_arg$[rbp]
  0006f	e8 00 00 00 00	 call	 ??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z ; std::forward<`ThreadPool::Stop'::`2'::<lambda_1> >
  00074	90		 npad	 1
  00075	48 89 85 20 01
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  0007c	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00083	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00089	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  00090	88 85 04 01 00
	00		 mov	 BYTE PTR $T3[rbp], al
  00096	4c 8b 8d 18 01
	00 00		 mov	 r9, QWORD PTR tv82[rbp]
  0009d	4c 8b 85 20 01
	00 00		 mov	 r8, QWORD PTR tv79[rbp]
  000a4	0f b6 95 04 01
	00 00		 movzx	 edx, BYTE PTR $T3[rbp]
  000ab	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b2	e8 00 00 00 00	 call	 ??$?0U_Exact_args_t@std@@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@U_Exact_args_t@1@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z ; std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &><std::_Exact_args_t,`ThreadPool::Stop'::`2'::<lambda_1>,std::exception_ptr &,0>
  000b7	90		 npad	 1
  000b8	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000bf	48 8d a5 38 01
	00 00		 lea	 rsp, QWORD PTR [rbp+312]
  000c6	5f		 pop	 rdi
  000c7	5d		 pop	 rbp
  000c8	c3		 ret	 0
??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z ENDP ; std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &><`ThreadPool::Stop'::`2'::<lambda_1>,std::exception_ptr &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z PROC ; std::forward<`ThreadPool::Stop'::`2'::<lambda_1> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z ENDP ; std::forward<`ThreadPool::Stop'::`2'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$_Reset@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
_TEXT	SEGMENT
$T1 = 200
tv85 = 216
this$ = 256
_Val$ = 264
??$_Reset@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z PROC ; std::_Func_class<void,enum EnumEvent>::_Reset<`ThreadPool::ThreadPool'::`1'::<lambda_1_> >, COMDAT

; 1042 :     void _Reset(_Fx&& _Val) { // store copy of _Val

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1043 :         if (!_Test_callable(_Val)) { // null member pointer/function pointer/std::function

  0003b	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  00042	e8 00 00 00 00	 call	 ??$_Test_callable@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA_NAEBV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z ; std::_Test_callable<`ThreadPool::ThreadPool'::`1'::<lambda_1_> >
  00047	0f b6 c0	 movzx	 eax, al
  0004a	85 c0		 test	 eax, eax
  0004c	75 02		 jne	 SHORT $LN2@Reset

; 1044 :             return; // already empty

  0004e	eb 50		 jmp	 SHORT $LN1@Reset
$LN2@Reset:

; 1045 :         }
; 1046 : 
; 1047 :         using _Impl = _Func_impl_no_alloc<decay_t<_Fx>, _Ret, _Types...>;
; 1048 :         if
; 1049 :             _CONSTEXPR_IF(_Is_large<_Impl>) {
; 1050 :                 // dynamically allocate _Val
; 1051 :                 _Set(_Global_new<_Impl>(_STD forward<_Fx>(_Val)));
; 1052 :             }
; 1053 :         else {
; 1054 :             // store _Val in-situ
; 1055 :             _Set(::new (static_cast<void*>(&_Mystorage)) _Impl(_STD forward<_Fx>(_Val)));

  00050	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 8b d0	 mov	 rdx, rax
  0005a	b9 10 00 00 00	 mov	 ecx, 16
  0005f	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00064	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0006b	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  00072	e8 00 00 00 00	 call	 ??$forward@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z ; std::forward<`ThreadPool::ThreadPool'::`1'::<lambda_1_> >
  00077	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  0007e	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv85[rbp]
  00085	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  0008c	e8 00 00 00 00	 call	 ??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$_Func_impl_no_alloc@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@XW4EnumEvent@@@std@@QEAA@$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z ; std::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent>::_Func_impl_no_alloc<`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void,enum EnumEvent><`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void>
  00091	48 8b d0	 mov	 rdx, rax
  00094	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0009b	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z ; std::_Func_class<void,enum EnumEvent>::_Set
$LN1@Reset:

; 1056 :         }
; 1057 :     }

  000a0	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000a7	5f		 pop	 rdi
  000a8	5d		 pop	 rbp
  000a9	c3		 ret	 0
??$_Reset@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z ENDP ; std::_Func_class<void,enum EnumEvent>::_Reset<`ThreadPool::ThreadPool'::`1'::<lambda_1_> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z PROC ; std::move<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z ENDP ; std::move<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$_Set_ptr_rep_and_enable_shared@Vmutex@std@@@?$shared_ptr@Vmutex@std@@@std@@AEAAXQEAVmutex@1@QEAV_Ref_count_base@1@@Z
_TEXT	SEGMENT
this$ = 224
_Px$ = 232
_Rx$ = 240
??$_Set_ptr_rep_and_enable_shared@Vmutex@std@@@?$shared_ptr@Vmutex@std@@@std@@AEAAXQEAVmutex@1@QEAV_Ref_count_base@1@@Z PROC ; std::shared_ptr<std::mutex>::_Set_ptr_rep_and_enable_shared<std::mutex>, COMDAT

; 1266 :     void _Set_ptr_rep_and_enable_shared(_Ux* const _Px, _Ref_count_base* const _Rx) noexcept { // take ownership of _Px

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 1267 :         this->_Ptr = _Px;

  00041	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Px$[rbp]
  0004f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1268 :         this->_Rep = _Rx;

  00052	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00059	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Rx$[rbp]
  00060	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1269 : #if _HAS_IF_CONSTEXPR
; 1270 :         if constexpr (conjunction_v<negation<is_array<_Ty>>, negation<is_volatile<_Ux>>, _Can_enable_shared<_Ux>>) {
; 1271 :             if (_Px && _Px->_Wptr.expired()) {
; 1272 :                 _Px->_Wptr = shared_ptr<remove_cv_t<_Ux>>(*this, const_cast<remove_cv_t<_Ux>*>(_Px));
; 1273 :             }
; 1274 :         }
; 1275 : #else // ^^^ _HAS_IF_CONSTEXPR // !_HAS_IF_CONSTEXPR vvv
; 1276 :         _Enable_shared_from_this1(*this, _Px,
; 1277 :             bool_constant<
; 1278 :                 conjunction_v<negation<is_array<_Ty>>, negation<is_volatile<_Ux>>, _Can_enable_shared<_Ux>>>{});
; 1279 : #endif // _HAS_IF_CONSTEXPR
; 1280 :     }

  00064	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006b	5f		 pop	 rdi
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??$_Set_ptr_rep_and_enable_shared@Vmutex@std@@@?$shared_ptr@Vmutex@std@@@std@@AEAAXQEAVmutex@1@QEAV_Ref_count_base@1@@Z ENDP ; std::shared_ptr<std::mutex>::_Set_ptr_rep_and_enable_shared<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?0$$V@?$_Ref_count_obj2@Vmutex@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??$?0$$V@?$_Ref_count_obj2@Vmutex@std@@@std@@QEAA@XZ PROC ; std::_Ref_count_obj2<std::mutex>::_Ref_count_obj2<std::mutex><>, COMDAT

; 1492 :     explicit _Ref_count_obj2(_Types&&... _Args) : _Ref_count_base() { // construct from argument list

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  0003d	33 c0		 xor	 eax, eax
  0003f	b9 10 00 00 00	 mov	 ecx, 16
  00044	f3 aa		 rep stosb
  00046	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004d	e8 00 00 00 00	 call	 ??0_Ref_count_base@std@@IEAA@XZ ; std::_Ref_count_base::_Ref_count_base
  00052	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00059	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$_Ref_count_obj2@Vmutex@std@@@std@@6B@
  00060	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1493 :         _Construct_in_place(_Storage._Value, _STD forward<_Types>(_Args)...);

  00063	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006a	48 83 c0 10	 add	 rax, 16
  0006e	48 8b c8	 mov	 rcx, rax
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@Vmutex@std@@$$V@std@@YAXAEAVmutex@0@@Z ; std::_Construct_in_place<std::mutex>

; 1494 :     }

  00076	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00084	5f		 pop	 rdi
  00085	5d		 pop	 rbp
  00086	c3		 ret	 0
??$?0$$V@?$_Ref_count_obj2@Vmutex@std@@@std@@QEAA@XZ ENDP ; std::_Ref_count_obj2<std::mutex>::_Ref_count_obj2<std::mutex><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$_Ref_count_obj2@Vmutex@std@@@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_G?$_Ref_count_obj2@Vmutex@std@@@std@@UEAAPEAXI@Z PROC ; std::_Ref_count_obj2<std::mutex>::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1?$_Ref_count_obj2@Vmutex@std@@@std@@UEAA@XZ ; std::_Ref_count_obj2<std::mutex>::~_Ref_count_obj2<std::mutex>
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 60 00 00 00	 mov	 edx, 96			; 00000060H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_G?$_Ref_count_obj2@Vmutex@std@@@std@@UEAAPEAXI@Z ENDP ; std::_Ref_count_obj2<std::mutex>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Delete_this@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ
_TEXT	SEGMENT
$T1 = 200
tv75 = 216
tv76 = 224
this$ = 272
?_Delete_this@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ PROC ; std::_Ref_count_obj2<std::mutex>::_Delete_this, COMDAT

; 1509 :     virtual void _Delete_this() noexcept override { // destroy self

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1510 :         delete this;

  00037	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00045	48 83 bd c8 00
	00 00 00	 cmp	 QWORD PTR $T1[rbp], 0
  0004d	74 31		 je	 SHORT $LN3@Delete_thi
  0004f	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR $T1[rbp]
  00056	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00059	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0005d	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00064	ba 01 00 00 00	 mov	 edx, 1
  00069	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00070	ff 95 d8 00 00
	00		 call	 QWORD PTR tv75[rbp]
  00076	90		 npad	 1
  00077	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0007e	eb 0b		 jmp	 SHORT $LN4@Delete_thi
$LN3@Delete_thi:
  00080	48 c7 85 e0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR tv76[rbp], 0
$LN4@Delete_thi:

; 1511 :     }

  0008b	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
?_Delete_this@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ ENDP ; std::_Ref_count_obj2<std::mutex>::_Delete_this
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Destroy@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Destroy@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ PROC ; std::_Ref_count_obj2<std::mutex>::_Destroy, COMDAT

; 1505 :     virtual void _Destroy() noexcept override { // destroy managed resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1506 :         _Destroy_in_place(_Storage._Value);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 c0 10	 add	 rax, 16
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??$_Destroy_in_place@Vmutex@std@@@std@@YAXAEAVmutex@0@@Z ; std::_Destroy_in_place<std::mutex>
  0004a	90		 npad	 1

; 1507 :     }

  0004b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
?_Destroy@?$_Ref_count_obj2@Vmutex@std@@@std@@EEAAXXZ ENDP ; std::_Ref_count_obj2<std::mutex>::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$_Ref_count_obj2@Vmutex@std@@@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Ref_count_obj2@Vmutex@std@@@std@@UEAA@XZ PROC	; std::_Ref_count_obj2<std::mutex>::~_Ref_count_obj2<std::mutex>, COMDAT

; 1496 :     ~_Ref_count_obj2() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7?$_Ref_count_obj2@Vmutex@std@@@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1497 :         // nothing to do, _Storage._Value was already destroyed in _Destroy
; 1498 :     }

  00048	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004f	e8 00 00 00 00	 call	 ??1_Ref_count_base@std@@UEAA@XZ ; std::_Ref_count_base::~_Ref_count_base
  00054	90		 npad	 1
  00055	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005c	5f		 pop	 rdi
  0005d	5d		 pop	 rbp
  0005e	c3		 ret	 0
??1?$_Ref_count_obj2@Vmutex@std@@@std@@UEAA@XZ ENDP	; std::_Ref_count_obj2<std::mutex>::~_Ref_count_obj2<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xcall_once.h
;	COMDAT ??$_Immortalize_impl@V_Generic_error_category@std@@@std@@YAHPEAX0PEAPEAX@Z
_TEXT	SEGMENT
$T1 = 200
__formal$ = 256
_Storage_ptr$ = 264
__formal$ = 272
??$_Immortalize_impl@V_Generic_error_category@std@@@std@@YAHPEAX0PEAPEAX@Z PROC ; std::_Immortalize_impl<std::_Generic_error_category>, COMDAT

; 55   : int __stdcall _Immortalize_impl(void*, void* _Storage_ptr, void**) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__502C2D49_xcall_once@h
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 56   :     // adapt True Placement New to _Execute_once
; 57   :     ::new (_Storage_ptr) _Ty();

  00041	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Storage_ptr$[rbp]
  00048	b9 10 00 00 00	 mov	 ecx, 16
  0004d	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00052	90		 npad	 1
  00053	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0005a	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00061	e8 00 00 00 00	 call	 ??0_Generic_error_category@std@@QEAA@XZ ; std::_Generic_error_category::_Generic_error_category
  00066	90		 npad	 1

; 58   :     return 1;

  00067	b8 01 00 00 00	 mov	 eax, 1

; 59   : }

  0006c	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00073	5f		 pop	 rdi
  00074	5d		 pop	 rbp
  00075	c3		 ret	 0
??$_Immortalize_impl@V_Generic_error_category@std@@@std@@YAHPEAX0PEAPEAX@Z ENDP ; std::_Immortalize_impl<std::_Generic_error_category>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@_KX@std@@YAXAEA_K0@Z
_TEXT	SEGMENT
_Tmp$ = 8
__$ArrayPad$ = 216
_Left$ = 256
_Right$ = 264
??$swap@_KX@std@@YAXAEA_K0@Z PROC			; std::swap<unsigned __int64,void>, COMDAT

; 57   : void swap(_Ty& _Left, _Ty& _Right) _NOEXCEPT_COND(is_nothrow_move_constructible_v<_Ty>&&

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 d8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__18CBD245_utility
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004c	90		 npad	 1

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right
; 59   :     _Ty _Tmp = _STD move(_Left);

  0004d	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  00054	e8 00 00 00 00	 call	 ??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z ; std::move<unsigned __int64 &>
  00059	90		 npad	 1
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 89 45 08	 mov	 QWORD PTR _Tmp$[rbp], rax

; 60   :     _Left    = _STD move(_Right);

  00061	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00068	e8 00 00 00 00	 call	 ??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z ; std::move<unsigned __int64 &>
  0006d	90		 npad	 1
  0006e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00078	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0007b	48 8d 4d 08	 lea	 rcx, QWORD PTR _Tmp$[rbp]
  0007f	e8 00 00 00 00	 call	 ??$move@AEA_K@std@@YA$$QEA_KAEA_K@Z ; std::move<unsigned __int64 &>
  00084	90		 npad	 1
  00085	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0008c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008f	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  00092	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@_KX@std@@YAXAEA_K0@Z$rtcFrameData
  0009d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a2	90		 npad	 1
  000a3	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000aa	48 33 cd	 xor	 rcx, rbp
  000ad	e8 00 00 00 00	 call	 __security_check_cookie
  000b2	90		 npad	 1
  000b3	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000ba	5f		 pop	 rdi
  000bb	5d		 pop	 rbp
  000bc	c3		 ret	 0
??$swap@_KX@std@@YAXAEA_K0@Z ENDP			; std::swap<unsigned __int64,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z
_TEXT	SEGMENT
_Tmp$ = 8
__$ArrayPad$ = 216
_Left$ = 256
_Right$ = 264
??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z PROC ; std::swap<std::_List_node<std::function<void __cdecl(void)>,void *> *,void>, COMDAT

; 57   : void swap(_Ty& _Left, _Ty& _Right) _NOEXCEPT_COND(is_nothrow_move_constructible_v<_Ty>&&

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 d8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__18CBD245_utility
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004c	90		 npad	 1

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right
; 59   :     _Ty _Tmp = _STD move(_Left);

  0004d	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  00054	e8 00 00 00 00	 call	 ??$move@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z ; std::move<std::_List_node<std::function<void __cdecl(void)>,void *> * &>
  00059	90		 npad	 1
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 89 45 08	 mov	 QWORD PTR _Tmp$[rbp], rax

; 60   :     _Left    = _STD move(_Right);

  00061	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00068	e8 00 00 00 00	 call	 ??$move@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z ; std::move<std::_List_node<std::function<void __cdecl(void)>,void *> * &>
  0006d	90		 npad	 1
  0006e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00078	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0007b	48 8d 4d 08	 lea	 rcx, QWORD PTR _Tmp$[rbp]
  0007f	e8 00 00 00 00	 call	 ??$move@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YA$$QEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z ; std::move<std::_List_node<std::function<void __cdecl(void)>,void *> * &>
  00084	90		 npad	 1
  00085	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0008c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008f	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  00092	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z$rtcFrameData
  0009d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a2	90		 npad	 1
  000a3	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000aa	48 33 cd	 xor	 rcx, rbp
  000ad	e8 00 00 00 00	 call	 __security_check_cookie
  000b2	90		 npad	 1
  000b3	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000ba	5f		 pop	 rdi
  000bb	5d		 pop	 rbp
  000bc	c3		 ret	 0
??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z ENDP ; std::swap<std::_List_node<std::function<void __cdecl(void)>,void *> *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Swap_adl@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z
_TEXT	SEGMENT
_Left$ = 224
_Right$ = 232
??$_Swap_adl@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z PROC ; std::_Swap_adl<std::_List_node<std::function<void __cdecl(void)>,void *> *>, COMDAT

; 67   :     _NOEXCEPT_COND(_Is_nothrow_swappable<_Ty>::value) { // exchange values stored at _Left and _Right, using ADL

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__18CBD245_utility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 68   :     swap(_Left, _Right);

  0003c	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$swap@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@X@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z ; std::swap<std::_List_node<std::function<void __cdecl(void)>,void *> *,void>
  0004f	90		 npad	 1

; 69   : }

  00050	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
??$_Swap_adl@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z ENDP ; std::_Swap_adl<std::_List_node<std::function<void __cdecl(void)>,void *> *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > const >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_String_val<std::_Simple_types<char> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_String_val<std::_Simple_types<char> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z
_TEXT	SEGMENT
_Tmp$ = 8
__$ArrayPad$ = 216
_Left$ = 256
_Right$ = 264
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z PROC ; std::swap<std::_Ref_count_base *,void>, COMDAT

; 57   : void swap(_Ty& _Left, _Ty& _Right) _NOEXCEPT_COND(is_nothrow_move_constructible_v<_Ty>&&

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 d8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__18CBD245_utility
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004c	90		 npad	 1

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right
; 59   :     _Ty _Tmp = _STD move(_Left);

  0004d	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  00054	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  00059	90		 npad	 1
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 89 45 08	 mov	 QWORD PTR _Tmp$[rbp], rax

; 60   :     _Left    = _STD move(_Right);

  00061	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00068	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  0006d	90		 npad	 1
  0006e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00078	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0007b	48 8d 4d 08	 lea	 rcx, QWORD PTR _Tmp$[rbp]
  0007f	e8 00 00 00 00	 call	 ??$move@AEAPEAV_Ref_count_base@std@@@std@@YA$$QEAPEAV_Ref_count_base@0@AEAPEAV10@@Z ; std::move<std::_Ref_count_base * &>
  00084	90		 npad	 1
  00085	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0008c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008f	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  00092	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z$rtcFrameData
  0009d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a2	90		 npad	 1
  000a3	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000aa	48 33 cd	 xor	 rcx, rbp
  000ad	e8 00 00 00 00	 call	 __security_check_cookie
  000b2	90		 npad	 1
  000b3	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000ba	5f		 pop	 rdi
  000bb	5d		 pop	 rbp
  000bc	c3		 ret	 0
??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ENDP ; std::swap<std::_Ref_count_base *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z
_TEXT	SEGMENT
_Tmp$ = 8
__$ArrayPad$ = 216
_Left$ = 256
_Right$ = 264
??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z PROC ; std::swap<std::mutex *,void>, COMDAT

; 57   : void swap(_Ty& _Left, _Ty& _Right) _NOEXCEPT_COND(is_nothrow_move_constructible_v<_Ty>&&

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 d8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__18CBD245_utility
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004c	90		 npad	 1

; 58   :         is_nothrow_move_assignable_v<_Ty>) { // exchange values stored at _Left and _Right
; 59   :     _Ty _Tmp = _STD move(_Left);

  0004d	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  00054	e8 00 00 00 00	 call	 ??$move@AEAPEAVmutex@std@@@std@@YA$$QEAPEAVmutex@0@AEAPEAV10@@Z ; std::move<std::mutex * &>
  00059	90		 npad	 1
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 89 45 08	 mov	 QWORD PTR _Tmp$[rbp], rax

; 60   :     _Left    = _STD move(_Right);

  00061	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00068	e8 00 00 00 00	 call	 ??$move@AEAPEAVmutex@std@@@std@@YA$$QEAPEAVmutex@0@AEAPEAV10@@Z ; std::move<std::mutex * &>
  0006d	90		 npad	 1
  0006e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00078	48 89 01	 mov	 QWORD PTR [rcx], rax

; 61   :     _Right   = _STD move(_Tmp);

  0007b	48 8d 4d 08	 lea	 rcx, QWORD PTR _Tmp$[rbp]
  0007f	e8 00 00 00 00	 call	 ??$move@AEAPEAVmutex@std@@@std@@YA$$QEAPEAVmutex@0@AEAPEAV10@@Z ; std::move<std::mutex * &>
  00084	90		 npad	 1
  00085	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0008c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008f	48 89 01	 mov	 QWORD PTR [rcx], rax

; 62   : }

  00092	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00096	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z$rtcFrameData
  0009d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a2	90		 npad	 1
  000a3	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000aa	48 33 cd	 xor	 rcx, rbp
  000ad	e8 00 00 00 00	 call	 __security_check_cookie
  000b2	90		 npad	 1
  000b3	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000ba	5f		 pop	 rdi
  000bb	5d		 pop	 rbp
  000bc	c3		 ret	 0
??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z ENDP ; std::swap<std::mutex *,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Max_possible$1 = 40
_Count$ = 288
??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<32>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  00036	c6 45 04 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0003a	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH
  00044	48 89 45 28	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 30   :             if (_Count > _Max_possible) {

  00048	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH
  00052	48 39 85 20 01
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00059	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  0005b	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00060	48 6b 85 20 01
	00 00 20	 imul	 rax, QWORD PTR _Count$[rbp], 32 ; 00000020H
$LN3@Get_size_o:

; 36   : }

  00068	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<32>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0FA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Max_possible$1 = 40
_Count$ = 288
??$_Get_size_of_n@$0FA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<80>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  00036	c6 45 04 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0003a	48 b8 33 33 33
	33 33 33 33 03	 mov	 rax, 230584300921369395	; 0333333333333333H
  00044	48 89 45 28	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 30   :             if (_Count > _Max_possible) {

  00048	48 b8 33 33 33
	33 33 33 33 03	 mov	 rax, 230584300921369395	; 0333333333333333H
  00052	48 39 85 20 01
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00059	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  0005b	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00060	48 6b 85 20 01
	00 00 50	 imul	 rax, QWORD PTR _Count$[rbp], 80 ; 00000050H
$LN3@Get_size_o:

; 36   : }

  00068	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$_Get_size_of_n@$0FA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<80>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Pocma@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@0@Z
_TEXT	SEGMENT
_Left$ = 224
_Right$ = 232
??$_Pocma@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@0@Z PROC ; std::_Pocma<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >, COMDAT

; 968  : void _Pocma(_Alloc& _Left, _Alloc& _Right) noexcept { // (maybe) propagate on container move assignment

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 969  :     if constexpr (allocator_traits<_Alloc>::propagate_on_container_move_assignment::value) {
; 970  :         _Left = _STD move(_Right);

  0003c	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00043	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YA$$QEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@AEAV10@@Z ; std::move<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > &>
  00048	90		 npad	 1

; 971  :     } else {
; 972  :         (void) _Left; // TRANSITION, VSO#486357
; 973  :         (void) _Right; // TRANSITION, VSO#486357
; 974  :     }
; 975  : }

  00049	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00050	5f		 pop	 rdi
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??$_Pocma@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@0@Z ENDP ; std::_Pocma<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Max_possible$1 = 40
_Count$ = 288
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  00036	c6 45 04 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0003a	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  00044	48 89 45 28	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 30   :             if (_Count > _Max_possible) {

  00048	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  00052	48 39 85 20 01
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00059	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  0005b	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00060	48 6b 85 20 01
	00 00 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
$LN3@Get_size_o:

; 36   : }

  00068	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 224
_Bytes$ = 232
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003c	48 81 bd e8 00
	00 00 00 10 00
	00		 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  00047	72 14		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  00049	48 8d 95 e8 00
	00 00		 lea	 rdx, QWORD PTR _Bytes$[rbp]
  00050	48 8d 8d e0 00
	00 00		 lea	 rcx, QWORD PTR _Ptr$[rbp]
  00057	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0005c	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0005d	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Bytes$[rbp]
  00064	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0006b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00070	90		 npad	 1

; 192  : }

  00071	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00036	48 81 bd e0 00
	00 00 00 10 00
	00		 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  00041	72 0e		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Bytes$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0004f	eb 1a		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00051	48 83 bd e0 00
	00 00 00	 cmp	 QWORD PTR _Bytes$[rbp], 0
  00059	74 0e		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0005b	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00062	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00067	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00069	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0006b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$00@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Count$ = 256
??$_Get_size_of_n@$00@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<1>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  00036	c6 45 04 00	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 0

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;
; 30   :             if (_Count > _Max_possible) {
; 31   :                 _Throw_bad_array_new_length(); // multiply overflow
; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  0003a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]

; 36   : }

  00041	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??$_Get_size_of_n@$00@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z
_TEXT	SEGMENT
$T1 = 200
_Obj$ = 256
<_Args_0>$ = 264
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z PROC ; std::_Construct_in_place<char *,char * const &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00043	e8 00 00 00 00	 call	 ??$addressof@PEAD@std@@YAPEAPEADAEAPEAD@Z ; std::addressof<char *>
  00048	90		 npad	 1
  00049	48 8b d0	 mov	 rdx, rax
  0004c	b9 08 00 00 00	 mov	 ecx, 8
  00051	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00056	90		 npad	 1
  00057	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0005e	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	e8 00 00 00 00	 call	 ??$forward@AEBQEAD@std@@YAAEBQEADAEBQEAD@Z ; std::forward<char * const &>
  0006a	90		 npad	 1
  0006b	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00072	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00075	48 89 01	 mov	 QWORD PTR [rcx], rax

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00078	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ENDP ; std::_Construct_in_place<char *,char * const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z
_TEXT	SEGMENT
_My_data$ = 8
_Old_size$ = 40
_New_size$ = 72
_Old_capacity$ = 104
_New_capacity$ = 136
_Al$ = 168
_New_ptr$ = 200
_Raw_new$ = 232
_Old_ptr$4 = 264
__$ArrayPad$ = 472
this$ = 512
_Size_increase$ = 520
_Fn$ = 528
<_Args_0>$ = 536
<_Args_1>$ = 544
??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>, COMDAT

; 4108 :     basic_string& _Reallocate_grow_by(const size_type _Size_increase, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 18 02
	00 00		 sub	 rsp, 536		; 00000218H
  0001d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 86 00 00 00	 mov	 ecx, 134		; 00000086H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 38
	02 00 00	 mov	 rcx, QWORD PTR [rsp+568]
  00039	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00040	48 33 c5	 xor	 rax, rbp
  00043	48 89 85 d8 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00051	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4109 :         // reallocate to increase size by _Size_increase elements, new buffer prepared by
; 4110 :         // _Fn(_New_ptr, _Old_ptr, _Old_size, _Args...)
; 4111 :         auto& _My_data            = _Mypair._Myval2;

  00056	48 8b 85 00 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 4112 :         const size_type _Old_size = _My_data._Mysize;

  00061	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00065	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00069	48 89 45 28	 mov	 QWORD PTR _Old_size$[rbp], rax

; 4113 :         if (max_size() - _Old_size < _Size_increase) {

  0006d	48 8b 8d 00 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00074	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00079	48 2b 45 28	 sub	 rax, QWORD PTR _Old_size$[rbp]
  0007d	48 3b 85 08 02
	00 00		 cmp	 rax, QWORD PTR _Size_increase$[rbp]
  00084	73 05		 jae	 SHORT $LN2@Reallocate

; 4114 :             _Xlen(); // result too long

  00086	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4115 :         }
; 4116 : 
; 4117 :         const size_type _New_size     = _Old_size + _Size_increase;

  0008b	48 8b 85 08 02
	00 00		 mov	 rax, QWORD PTR _Size_increase$[rbp]
  00092	48 8b 4d 28	 mov	 rcx, QWORD PTR _Old_size$[rbp]
  00096	48 03 c8	 add	 rcx, rax
  00099	48 8b c1	 mov	 rax, rcx
  0009c	48 89 45 48	 mov	 QWORD PTR _New_size$[rbp], rax

; 4118 :         const size_type _Old_capacity = _My_data._Myres;

  000a0	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  000a4	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  000a8	48 89 45 68	 mov	 QWORD PTR _Old_capacity$[rbp], rax

; 4119 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  000ac	48 8b 55 48	 mov	 rdx, QWORD PTR _New_size$[rbp]
  000b0	48 8b 8d 00 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b7	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  000bc	48 89 85 88 00
	00 00		 mov	 QWORD PTR _New_capacity$[rbp], rax

; 4120 :         auto& _Al                     = _Getal();

  000c3	48 8b 8d 00 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000ca	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000cf	48 89 85 a8 00
	00 00		 mov	 QWORD PTR _Al$[rbp], rax

; 4121 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000d6	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR _New_capacity$[rbp]
  000dd	48 83 c0 01	 add	 rax, 1
  000e1	48 c7 c1 ff ff
	ff ff		 mov	 rcx, -1
  000e8	48 0f 42 c1	 cmovb	 rax, rcx
  000ec	48 8b d0	 mov	 rdx, rax
  000ef	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  000f6	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000fb	48 89 85 c8 00
	00 00		 mov	 QWORD PTR _New_ptr$[rbp], rax

; 4122 :         _My_data._Orphan_all();

  00102	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00106	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4123 :         _My_data._Mysize      = _New_size;

  0010b	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0010f	48 8b 4d 48	 mov	 rcx, QWORD PTR _New_size$[rbp]
  00113	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4124 :         _My_data._Myres       = _New_capacity;

  00117	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0011b	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _New_capacity$[rbp]
  00122	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4125 :         _Elem* const _Raw_new = _Unfancy(_New_ptr);

  00126	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  0012d	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00132	48 89 85 e8 00
	00 00		 mov	 QWORD PTR _Raw_new$[rbp], rax

; 4126 :         if (_BUF_SIZE <= _Old_capacity) {

  00139	48 83 7d 68 10	 cmp	 QWORD PTR _Old_capacity$[rbp], 16
  0013e	72 7b		 jb	 SHORT $LN3@Reallocate

; 4127 :             const pointer _Old_ptr = _My_data._Bx._Ptr;

  00140	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00144	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00148	48 89 85 08 01
	00 00		 mov	 QWORD PTR _Old_ptr$4[rbp], rax

; 4128 :             _Fn(_Raw_new, _Unfancy(_Old_ptr), _Old_size, _Args...);

  0014f	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Old_ptr$4[rbp]
  00156	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0015b	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  00162	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00167	48 8b 8d 18 02
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  0016e	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00173	4c 8b 4d 28	 mov	 r9, QWORD PTR _Old_size$[rbp]
  00177	4c 8b c0	 mov	 r8, rax
  0017a	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Raw_new$[rbp]
  00181	48 8d 8d 10 02
	00 00		 lea	 rcx, QWORD PTR _Fn$[rbp]
  00188	e8 00 00 00 00	 call	 ??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>::operator()

; 4129 :             _Al.deallocate(_Old_ptr, _Old_capacity + 1);

  0018d	48 8b 45 68	 mov	 rax, QWORD PTR _Old_capacity$[rbp]
  00191	48 ff c0	 inc	 rax
  00194	4c 8b c0	 mov	 r8, rax
  00197	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Old_ptr$4[rbp]
  0019e	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  001a5	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4130 :             _My_data._Bx._Ptr = _New_ptr;

  001aa	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  001ae	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  001b5	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4131 :         } else {

  001b9	eb 51		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4132 :             _Fn(_Raw_new, _My_data._Bx._Buf, _Old_size, _Args...);

  001bb	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  001bf	48 83 c0 08	 add	 rax, 8
  001c3	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  001ca	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  001cf	48 8b 8d 18 02
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  001d6	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  001db	4c 8b 4d 28	 mov	 r9, QWORD PTR _Old_size$[rbp]
  001df	4c 8b c0	 mov	 r8, rax
  001e2	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Raw_new$[rbp]
  001e9	48 8d 8d 10 02
	00 00		 lea	 rcx, QWORD PTR _Fn$[rbp]
  001f0	e8 00 00 00 00	 call	 ??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>::operator()

; 4133 :             _Construct_in_place(_My_data._Bx._Ptr, _New_ptr);

  001f5	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  001f9	48 83 c0 08	 add	 rax, 8
  001fd	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR _New_ptr$[rbp]
  00204	48 8b c8	 mov	 rcx, rax
  00207	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4134 :         }
; 4135 : 
; 4136 :         return *this;

  0020c	48 8b 85 00 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
$LN5@Reallocate:

; 4137 :     }

  00213	48 8b f8	 mov	 rdi, rax
  00216	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  0021a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z$rtcFrameData
  00221	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00226	48 8b c7	 mov	 rax, rdi
  00229	48 8b 8d d8 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00230	48 33 cd	 xor	 rcx, rbp
  00233	e8 00 00 00 00	 call	 __security_check_cookie
  00238	48 8d a5 e8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+488]
  0023f	5f		 pop	 rdi
  00240	5d		 pop	 rbp
  00241	c3		 ret	 0
??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_New_ptr$ = 264
_Old_ptr$ = 272
_Old_size$ = 280
_Ptr$ = 288
_Count$ = 296
??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>::operator(), COMDAT

; 2752 :             },

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);

  00045	4c 8b 85 18 01
	00 00		 mov	 r8, QWORD PTR _Old_size$[rbp]
  0004c	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR _Old_ptr$[rbp]
  00053	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  0005a	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);

  0005f	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR _Old_size$[rbp]
  00066	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  0006d	48 03 c8	 add	 rcx, rax
  00070	48 8b c1	 mov	 rax, rcx
  00073	4c 8b 85 28 01
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  0007a	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00081	48 8b c8	 mov	 rcx, rax
  00084	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());

  00089	c6 85 c4 00 00
	00 00		 mov	 BYTE PTR $T1[rbp], 0
  00090	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  00097	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR _Old_size$[rbp]
  0009e	48 03 c8	 add	 rcx, rax
  000a1	48 8b c1	 mov	 rax, rcx
  000a4	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  000ab	48 03 c8	 add	 rcx, rax
  000ae	48 8b c1	 mov	 rax, rcx
  000b1	48 8d 95 c4 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  000b8	48 8b c8	 mov	 rcx, rax
  000bb	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2752 :             },

  000c0	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000c7	5f		 pop	 rdi
  000c8	5d		 pop	 rbp
  000c9	c3		 ret	 0
??R<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD0101@Z ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z
_TEXT	SEGMENT
_Old_capacity$ = 8
_New_capacity$ = 40
_Al$ = 72
_New_ptr$ = 104
__$ArrayPad$ = 312
this$ = 352
_New_size$ = 360
_Fn$ = 368
<_Args_0>$ = 376
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>, COMDAT

; 4082 :     basic_string& _Reallocate_for(const size_type _New_size, _Fty _Fn, _ArgTys... _Args) {

$LN6:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR [rsp+392]
  00039	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00040	48 33 c5	 xor	 rax, rbp
  00043	48 89 85 38 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00051	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4083 :         // reallocate to store exactly _New_size elements, new buffer prepared by
; 4084 :         // _Fn(_New_ptr, _New_size, _Args...)
; 4085 :         if (_New_size > max_size()) {

  00056	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005d	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00062	48 39 85 68 01
	00 00		 cmp	 QWORD PTR _New_size$[rbp], rax
  00069	76 05		 jbe	 SHORT $LN2@Reallocate

; 4086 :             _Xlen(); // result too long

  0006b	e8 00 00 00 00	 call	 ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
$LN2@Reallocate:

; 4087 :         }
; 4088 : 
; 4089 :         const size_type _Old_capacity = _Mypair._Myval2._Myres;

  00070	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00077	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0007b	48 89 45 08	 mov	 QWORD PTR _Old_capacity$[rbp], rax

; 4090 :         const size_type _New_capacity = _Calculate_growth(_New_size);

  0007f	48 8b 95 68 01
	00 00		 mov	 rdx, QWORD PTR _New_size$[rbp]
  00086	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008d	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  00092	48 89 45 28	 mov	 QWORD PTR _New_capacity$[rbp], rax

; 4091 :         auto& _Al                     = _Getal();

  00096	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0009d	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000a2	48 89 45 48	 mov	 QWORD PTR _Al$[rbp], rax

; 4092 :         const pointer _New_ptr        = _Al.allocate(_New_capacity + 1); // throws

  000a6	48 8b 45 28	 mov	 rax, QWORD PTR _New_capacity$[rbp]
  000aa	48 83 c0 01	 add	 rax, 1
  000ae	48 c7 c1 ff ff
	ff ff		 mov	 rcx, -1
  000b5	48 0f 42 c1	 cmovb	 rax, rcx
  000b9	48 8b d0	 mov	 rdx, rax
  000bc	48 8b 4d 48	 mov	 rcx, QWORD PTR _Al$[rbp]
  000c0	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  000c5	48 89 45 68	 mov	 QWORD PTR _New_ptr$[rbp], rax

; 4093 :         _Mypair._Myval2._Orphan_all();

  000c9	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d0	48 8b c8	 mov	 rcx, rax
  000d3	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 4094 :         _Mypair._Myval2._Mysize = _New_size;

  000d8	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000df	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR _New_size$[rbp]
  000e6	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 4095 :         _Mypair._Myval2._Myres  = _New_capacity;

  000ea	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f1	48 8b 4d 28	 mov	 rcx, QWORD PTR _New_capacity$[rbp]
  000f5	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx

; 4096 :         _Fn(_Unfancy(_New_ptr), _New_size, _Args...);

  000f9	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  000fd	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00102	4c 8b 8d 78 01
	00 00		 mov	 r9, QWORD PTR <_Args_0>$[rbp]
  00109	4c 8b 85 68 01
	00 00		 mov	 r8, QWORD PTR _New_size$[rbp]
  00110	48 8b d0	 mov	 rdx, rax
  00113	48 8d 8d 70 01
	00 00		 lea	 rcx, QWORD PTR _Fn$[rbp]
  0011a	e8 00 00 00 00	 call	 ??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()

; 4097 :         if (_BUF_SIZE <= _Old_capacity) {

  0011f	48 83 7d 08 10	 cmp	 QWORD PTR _Old_capacity$[rbp], 16
  00124	72 2f		 jb	 SHORT $LN3@Reallocate

; 4098 :             _Al.deallocate(_Mypair._Myval2._Bx._Ptr, _Old_capacity + 1);

  00126	48 8b 45 08	 mov	 rax, QWORD PTR _Old_capacity$[rbp]
  0012a	48 ff c0	 inc	 rax
  0012d	4c 8b c0	 mov	 r8, rax
  00130	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00137	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  0013b	48 8b 4d 48	 mov	 rcx, QWORD PTR _Al$[rbp]
  0013f	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate

; 4099 :             _Mypair._Myval2._Bx._Ptr = _New_ptr;

  00144	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0014b	48 8b 4d 68	 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  0014f	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 4100 :         } else {

  00153	eb 17		 jmp	 SHORT $LN4@Reallocate
$LN3@Reallocate:

; 4101 :             _Construct_in_place(_Mypair._Myval2._Bx._Ptr, _New_ptr);

  00155	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0015c	48 83 c0 08	 add	 rax, 8
  00160	48 8d 55 68	 lea	 rdx, QWORD PTR _New_ptr$[rbp]
  00164	48 8b c8	 mov	 rcx, rax
  00167	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>
$LN4@Reallocate:

; 4102 :         }
; 4103 : 
; 4104 :         return *this;

  0016c	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
$LN5@Reallocate:

; 4105 :     }

  00173	48 8b f8	 mov	 rdi, rax
  00176	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0017a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z$rtcFrameData
  00181	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00186	48 8b c7	 mov	 rax, rdi
  00189	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00190	48 33 cd	 xor	 rcx, rbp
  00193	e8 00 00 00 00	 call	 __security_check_cookie
  00198	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  0019f	5f		 pop	 rdi
  001a0	5d		 pop	 rbp
  001a1	c3		 ret	 0
??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_New_ptr$ = 264
_Count$ = 272
_Ptr$ = 280
??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator(), COMDAT

; 2856 :             },

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);

  00045	4c 8b 85 10 01
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  0004c	48 8b 95 18 01
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00053	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  0005a	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());

  0005f	c6 85 c4 00 00
	00 00		 mov	 BYTE PTR $T1[rbp], 0
  00066	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  0006d	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _New_ptr$[rbp]
  00074	48 03 c8	 add	 rcx, rax
  00077	48 8b c1	 mov	 rax, rcx
  0007a	48 8d 95 c4 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00081	48 8b c8	 mov	 rcx, rax
  00084	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2856 :             },

  00089	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00090	5f		 pop	 rdi
  00091	5d		 pop	 rbp
  00092	c3		 ret	 0
??R<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV23@QEBD_K@Z@QEBA@QEAD10@Z ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 200
tv65 = 216
_Left$ = 256
_Right$ = 264
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Max_value<unsigned __int64>, COMDAT

; 32   :     _NOEXCEPT_COND(noexcept(_Left < _Right)) { // return larger of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__18CBD245_utility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 33   :     return _Left < _Right ? _Right : _Left;

  0003c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00043	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00050	73 10		 jae	 SHORT $LN3@Max_value
  00052	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00059	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv65[rbp], rax
  00060	eb 0e		 jmp	 SHORT $LN4@Max_value
$LN3@Max_value:
  00062	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00069	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv65[rbp], rax
$LN4@Max_value:
  00070	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv65[rbp]
  00077	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0007e	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR $T1[rbp]

; 34   : }

  00085	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008c	5f		 pop	 rdi
  0008d	5d		 pop	 rbp
  0008e	c3		 ret	 0
??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Max_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z
_TEXT	SEGMENT
_Obj$ = 224
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z PROC	; std::_Destroy_in_place<char *>, COMDAT

; 321  : void _Destroy_in_place(_Ty& _Obj) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 322  :     _Obj.~_Ty();
; 323  : }

  00037	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003e	5f		 pop	 rdi
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ENDP	; std::_Destroy_in_place<char *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$_Move_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAX$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??$_Move_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAX$$QEAV01@@Z PROC ; std::_Ptr_base<std::mutex>::_Move_construct_from<std::mutex>, COMDAT

; 825  :     void _Move_construct_from(_Ptr_base<_Ty2>&& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 826  :         // implement shared_ptr's (converting) move ctor and weak_ptr's move ctor
; 827  :         _Ptr = _Right._Ptr;

  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 828  :         _Rep = _Right._Rep;

  00050	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0005e	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00062	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 829  : 
; 830  :         _Right._Ptr = nullptr;

  00066	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  0006d	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 831  :         _Right._Rep = nullptr;

  00074	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  0007b	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 832  :     }

  00083	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0008a	5f		 pop	 rdi
  0008b	5d		 pop	 rbp
  0008c	c3		 ret	 0
??$_Move_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAX$$QEAV01@@Z ENDP ; std::_Ptr_base<std::mutex>::_Move_construct_from<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ??0?$_Func_base@XW4EnumEvent@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_Func_base@XW4EnumEvent@@@std@@QEAA@XZ PROC	; std::_Func_base<void,enum EnumEvent>::_Func_base<void,enum EnumEvent>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??0?$_Func_base@XW4EnumEvent@@@std@@QEAA@XZ ENDP	; std::_Func_base<void,enum EnumEvent>::_Func_base<void,enum EnumEvent>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z PROC ; std::move<std::function<void __cdecl(enum EnumEvent)> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z ENDP ; std::move<std::function<void __cdecl(enum EnumEvent)> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Freenode0@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Freenode0@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::shared_ptr<std::thread>,void *>::_Freenode0<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >, COMDAT

; 321  :     static void _Freenode0(_Alnode& _Al, _Nodeptr _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 322  :         // destroy pointer members in _Ptr and deallocate with _Al
; 323  :         static_assert(is_same_v<typename _Alnode::value_type, _List_node>, "Bad _Freenode0 call");
; 324  :         _Destroy_in_place(_Ptr->_Next);

  0003c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  00043	48 8b c8	 mov	 rcx, rax
  00046	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *>
  0004b	90		 npad	 1

; 325  :         _Destroy_in_place(_Ptr->_Prev);

  0004c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  00053	48 83 c0 08	 add	 rax, 8
  00057	48 8b c8	 mov	 rcx, rax
  0005a	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *>
  0005f	90		 npad	 1

; 326  :         allocator_traits<_Alnode>::deallocate(_Al, _Ptr, 1);

  00060	41 b8 01 00 00
	00		 mov	 r8d, 1
  00066	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0006d	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  00074	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@QEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::deallocate
  00079	90		 npad	 1

; 327  :     }

  0007a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00081	5f		 pop	 rdi
  00082	5d		 pop	 rbp
  00083	c3		 ret	 0
??$_Freenode0@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::shared_ptr<std::thread>,void *>::_Freenode0<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@0@Z
_TEXT	SEGMENT
$T1 = 200
_Obj$ = 256
<_Args_0>$ = 264
??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *,std::_List_node<std::shared_ptr<std::thread>,void *> * &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00043	e8 00 00 00 00	 call	 ??$addressof@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z ; std::addressof<std::_List_node<std::shared_ptr<std::thread>,void *> *>
  00048	90		 npad	 1
  00049	48 8b d0	 mov	 rdx, rax
  0004c	b9 08 00 00 00	 mov	 ecx, 8
  00051	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00056	90		 npad	 1
  00057	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0005e	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	e8 00 00 00 00	 call	 ??$forward@AEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@AEAPEAU10@@Z ; std::forward<std::_List_node<std::shared_ptr<std::thread>,void *> * &>
  0006a	90		 npad	 1
  0006b	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00072	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00075	48 89 01	 mov	 QWORD PTR [rcx], rax

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00078	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *,std::_List_node<std::shared_ptr<std::thread>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YAPEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@V?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YAPEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z PROC ; std::addressof<std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@V?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YAPEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z ENDP ; std::addressof<std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Freenode0@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Freenode0@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::function<void __cdecl(void)>,void *>::_Freenode0<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >, COMDAT

; 321  :     static void _Freenode0(_Alnode& _Al, _Nodeptr _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 322  :         // destroy pointer members in _Ptr and deallocate with _Al
; 323  :         static_assert(is_same_v<typename _Alnode::value_type, _List_node>, "Bad _Freenode0 call");
; 324  :         _Destroy_in_place(_Ptr->_Next);

  0003c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  00043	48 8b c8	 mov	 rcx, rax
  00046	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *>
  0004b	90		 npad	 1

; 325  :         _Destroy_in_place(_Ptr->_Prev);

  0004c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  00053	48 83 c0 08	 add	 rax, 8
  00057	48 8b c8	 mov	 rcx, rax
  0005a	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@@Z ; std::_Destroy_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *>
  0005f	90		 npad	 1

; 326  :         allocator_traits<_Alnode>::deallocate(_Al, _Ptr, 1);

  00060	41 b8 01 00 00
	00		 mov	 r8d, 1
  00066	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  0006d	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  00074	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@QEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::deallocate
  00079	90		 npad	 1

; 327  :     }

  0007a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00081	5f		 pop	 rdi
  00082	5d		 pop	 rbp
  00083	c3		 ret	 0
??$_Freenode0@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::function<void __cdecl(void)>,void *>::_Freenode0<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Free_non_head@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Pnode$ = 8
_Pnext$1 = 40
_Al$ = 288
_Head$ = 296
??$_Free_non_head@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::function<void __cdecl(void)>,void *>::_Free_non_head<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >, COMDAT

; 337  :         _Alnode& _Al, _Nodeptr _Head) noexcept { // free a list starting at _First and terminated at nullptr

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 338  :         _Head->_Prev->_Next = nullptr;

  0003c	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Head$[rbp]
  00043	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00047	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 339  : 
; 340  :         auto _Pnode = _Head->_Next;

  0004e	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Head$[rbp]
  00055	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00058	48 89 45 08	 mov	 QWORD PTR _Pnode$[rbp], rax

; 341  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0005c	eb 08		 jmp	 SHORT $LN4@Free_non_h
$LN2@Free_non_h:
  0005e	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  00062	48 89 45 08	 mov	 QWORD PTR _Pnode$[rbp], rax
$LN4@Free_non_h:
  00066	48 83 7d 08 00	 cmp	 QWORD PTR _Pnode$[rbp], 0
  0006b	74 1e		 je	 SHORT $LN3@Free_non_h

; 342  :             _Pnext = _Pnode->_Next;

  0006d	48 8b 45 08	 mov	 rax, QWORD PTR _Pnode$[rbp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 89 45 28	 mov	 QWORD PTR _Pnext$1[rbp], rax

; 343  :             _Freenode(_Al, _Pnode);

  00078	48 8b 55 08	 mov	 rdx, QWORD PTR _Pnode$[rbp]
  0007c	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  00083	e8 00 00 00 00	 call	 ??$_Freenode@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::function<void __cdecl(void)>,void *>::_Freenode<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  00088	90		 npad	 1

; 344  :         }

  00089	eb d3		 jmp	 SHORT $LN2@Free_non_h
$LN3@Free_non_h:

; 345  :     }

  0008b	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
??$_Free_non_head@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::function<void __cdecl(void)>,void *>::_Free_non_head<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z
_TEXT	SEGMENT
$T1 = 200
_Obj$ = 256
<_Args_0>$ = 264
??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z PROC ; std::_Construct_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *,std::_List_node<std::function<void __cdecl(void)>,void *> * &>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00043	e8 00 00 00 00	 call	 ??$addressof@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAPEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z ; std::addressof<std::_List_node<std::function<void __cdecl(void)>,void *> *>
  00048	90		 npad	 1
  00049	48 8b d0	 mov	 rdx, rax
  0004c	b9 08 00 00 00	 mov	 ecx, 8
  00051	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00056	90		 npad	 1
  00057	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0005e	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	e8 00 00 00 00	 call	 ??$forward@AEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@AEAPEAU10@@Z ; std::forward<std::_List_node<std::function<void __cdecl(void)>,void *> * &>
  0006a	90		 npad	 1
  0006b	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00072	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00075	48 89 01	 mov	 QWORD PTR [rcx], rax

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00078	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z ENDP ; std::_Construct_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *,std::_List_node<std::function<void __cdecl(void)>,void *> * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z
_TEXT	SEGMENT
_Result$ = 4
__$ArrayPad$ = 216
_Source$ = 256
??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z PROC	; std::_Atomic_reinterpret_as<char,bool>, COMDAT

; 215  : _NODISCARD _Integral _Atomic_reinterpret_as(const _Ty& _Source) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 d8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__43A8C20F_atomic
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 216  :     // interprets _Source as the supplied integral type
; 217  :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 218  :     _Integral _Result{}; // zero padding bits

  00048	c6 45 04 00	 mov	 BYTE PTR _Result$[rbp], 0

; 219  :     _CSTD memcpy(&_Result, _STD addressof(_Source), sizeof(_Source));

  0004c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Source$[rbp]
  00053	e8 00 00 00 00	 call	 ??$addressof@$$CB_N@std@@YAPEB_NAEB_N@Z ; std::addressof<bool const >
  00058	90		 npad	 1
  00059	41 b8 01 00 00
	00		 mov	 r8d, 1
  0005f	48 8b d0	 mov	 rdx, rax
  00062	48 8d 4d 04	 lea	 rcx, QWORD PTR _Result$[rbp]
  00066	e8 00 00 00 00	 call	 memcpy
  0006b	90		 npad	 1

; 220  :     return _Result;

  0006c	0f b6 45 04	 movzx	 eax, BYTE PTR _Result$[rbp]

; 221  : }

  00070	8b f8		 mov	 edi, eax
  00072	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00076	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z$rtcFrameData
  0007d	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00082	90		 npad	 1
  00083	8b c7		 mov	 eax, edi
  00085	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0008c	48 33 cd	 xor	 rcx, rbp
  0008f	e8 00 00 00 00	 call	 __security_check_cookie
  00094	90		 npad	 1
  00095	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0009c	5f		 pop	 rdi
  0009d	5d		 pop	 rbp
  0009e	c3		 ret	 0
??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z ENDP	; std::_Atomic_reinterpret_as<char,bool>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xatomic.h
;	COMDAT ??$_Atomic_address_as@DU?$_Atomic_padded@_N@std@@@std@@YAPECDAEAU?$_Atomic_padded@_N@0@@Z
_TEXT	SEGMENT
_Source$ = 224
??$_Atomic_address_as@DU?$_Atomic_padded@_N@std@@@std@@YAPECDAEAU?$_Atomic_padded@_N@0@@Z PROC ; std::_Atomic_address_as<char,std::_Atomic_padded<bool> >, COMDAT

; 68   : _NODISCARD volatile _Integral* _Atomic_address_as(_Ty& _Source) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__AE76A8A9_xatomic@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 69   :     // gets a pointer to the argument as an integral type (to pass to intrinsics)
; 70   :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 71   :     return &reinterpret_cast<volatile _Integral&>(_Source);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Source$[rbp]

; 72   : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$_Atomic_address_as@DU?$_Atomic_padded@_N@std@@@std@@YAPECDAEAU?$_Atomic_padded@_N@0@@Z ENDP ; std::_Atomic_address_as<char,std::_Atomic_padded<bool> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xatomic.h
;	COMDAT ??$_Atomic_address_as@$$CBD$$CBU?$_Atomic_padded@_N@std@@@std@@YAPEDDAEBU?$_Atomic_padded@_N@0@@Z
_TEXT	SEGMENT
_Source$ = 224
??$_Atomic_address_as@$$CBD$$CBU?$_Atomic_padded@_N@std@@@std@@YAPEDDAEBU?$_Atomic_padded@_N@0@@Z PROC ; std::_Atomic_address_as<char const ,std::_Atomic_padded<bool> const >, COMDAT

; 68   : _NODISCARD volatile _Integral* _Atomic_address_as(_Ty& _Source) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__AE76A8A9_xatomic@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 69   :     // gets a pointer to the argument as an integral type (to pass to intrinsics)
; 70   :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 71   :     return &reinterpret_cast<volatile _Integral&>(_Source);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Source$[rbp]

; 72   : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$_Atomic_address_as@$$CBD$$CBU?$_Atomic_padded@_N@std@@@std@@YAPEDDAEBU?$_Atomic_padded@_N@0@@Z ENDP ; std::_Atomic_address_as<char const ,std::_Atomic_padded<bool> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xatomic.h
;	COMDAT ??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@H@std@@@std@@YAPEDJAEBU?$_Atomic_padded@H@0@@Z
_TEXT	SEGMENT
_Source$ = 224
??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@H@std@@@std@@YAPEDJAEBU?$_Atomic_padded@H@0@@Z PROC ; std::_Atomic_address_as<long const ,std::_Atomic_padded<int> const >, COMDAT

; 68   : _NODISCARD volatile _Integral* _Atomic_address_as(_Ty& _Source) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__AE76A8A9_xatomic@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 69   :     // gets a pointer to the argument as an integral type (to pass to intrinsics)
; 70   :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 71   :     return &reinterpret_cast<volatile _Integral&>(_Source);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Source$[rbp]

; 72   : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@H@std@@@std@@YAPEDJAEBU?$_Atomic_padded@H@0@@Z ENDP ; std::_Atomic_address_as<long const ,std::_Atomic_padded<int> const >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 294  :     return _Ptr;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]

; 295  : }

  0003d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00044	5f		 pop	 rdi
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00041	e8 00 00 00 00	 call	 ??0?$allocator@D@std@@QEAA@XZ ; std::allocator<char>::allocator<char>
  00046	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 8b c8	 mov	 rcx, rax
  00050	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  00055	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 8
$T1 = 232
this$ = 288
_Al$ = 296
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1184 :     void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1185 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

  0003b	ba 01 00 00 00	 mov	 edx, 1
  00040	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  00047	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  0004c	48 8b c8	 mov	 rcx, rax
  0004f	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  00054	48 89 45 08	 mov	 QWORD PTR _New_proxy$[rbp], rax

; 1186 :         _Construct_in_place(*_New_proxy, this);

  00058	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00066	48 8d 95 e8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  0006d	48 8b 4d 08	 mov	 rcx, QWORD PTR _New_proxy$[rbp]
  00071	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1187 :         _Myproxy            = _New_proxy;

  00076	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007d	48 8b 4d 08	 mov	 rcx, QWORD PTR _New_proxy$[rbp]
  00081	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1188 :         _New_proxy->_Mycont = this;

  00084	48 8b 45 08	 mov	 rax, QWORD PTR _New_proxy$[rbp]
  00088	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1189 :     }

  00092	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00099	5f		 pop	 rdi
  0009a	5d		 pop	 rbp
  0009b	c3		 ret	 0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
_Val1$ = 240
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003f	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Val1$[rbp]
  00046	e8 00 00 00 00	 call	 ??$forward@V?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::forward<std::allocator<char> >
  0004b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00052	48 8b c8	 mov	 rcx, rax
  00055	e8 00 00 00 00	 call	 ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
  0005a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00061	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00068	5f		 pop	 rdi
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z PROC ; std::move<std::allocator<char> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ENDP ; std::move<std::allocator<char> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@D@std@@YAPEADPEAD@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@D@std@@YAPEADPEAD@Z PROC			; std::_Unfancy<char>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 294  :     return _Ptr;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]

; 295  : }

  0003d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00044	5f		 pop	 rdi
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
??$_Unfancy@D@std@@YAPEADPEAD@Z ENDP			; std::_Unfancy<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1383 :         if (_Ptr) {

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00042	74 1b		 je	 SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00055	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00059	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  0005e	90		 npad	 1
$LN2@Container_:

; 1385 :         }
; 1386 :     }

  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Al_$ = 264
_Mycont$ = 272
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

  00040	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Al_$[rbp]
  0004e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00052	ba 01 00 00 00	 mov	 edx, 1
  00057	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Al_$[rbp]
  0005e	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00063	48 8b c8	 mov	 rcx, rax
  00066	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0006b	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00072	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00075	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _Mycont$[rbp]
  0007c	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  00081	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00088	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  0008f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00096	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00099	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

  0009e	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR _Mycont$[rbp]
  000a5	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000ac	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000af	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1373 :     }

  000b2	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b9	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000c0	5f		 pop	 rdi
  000c1	5d		 pop	 rbp
  000c2	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 224
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 130  :         explicit __CLR_OR_THIS_CALL operator bool() const { // test if stream state okay

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 131  :             return _Ok;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]

; 132  :         }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 115  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 116  : #if _HAS_EXCEPTIONS
; 117  :             if (!_STD uncaught_exception()) { // TRANSITION, OS#15518458

  00037	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  0003c	90		 npad	 1
  0003d	0f b6 c0	 movzx	 eax, al
  00040	85 c0		 test	 eax, eax
  00042	75 11		 jne	 SHORT $LN2@sentry

; 118  :                 this->_Myostr._Osfx();

  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0004e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00054	90		 npad	 1
$LN2@sentry:

; 119  :             }
; 120  : #else // _HAS_EXCEPTIONS
; 121  :             this->_Myostr._Osfx();
; 122  : #endif // _HAS_EXCEPTIONS
; 123  :         }

  00055	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005c	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00061	90		 npad	 1
  00062	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 90   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr)

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 91   :             : _Sentry_base(_Ostr) { // construct locking and testing stream

  0003b	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Ostr$[rbp]
  00042	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
  0004e	90		 npad	 1

; 92   :             if (!_Ostr.good()) {

  0004f	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00056	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00059	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0005d	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00064	48 03 c8	 add	 rcx, rax
  00067	48 8b c1	 mov	 rax, rcx
  0006a	48 8b c8	 mov	 rcx, rax
  0006d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  00073	0f b6 c0	 movzx	 eax, al
  00076	85 c0		 test	 eax, eax
  00078	75 10		 jne	 SHORT $LN2@sentry

; 93   :                 _Ok = false;

  0007a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00081	c6 40 08 00	 mov	 BYTE PTR [rax+8], 0

; 94   :                 return;

  00085	e9 81 00 00 00	 jmp	 $LN1@sentry
$LN2@sentry:

; 95   :             }
; 96   : 
; 97   :             const auto _Tied = _Ostr.tie();

  0008a	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00091	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00094	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00098	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0009f	48 03 c8	 add	 rcx, rax
  000a2	48 8b c1	 mov	 rax, rcx
  000a5	48 8b c8	 mov	 rcx, rax
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  000ae	48 89 45 08	 mov	 QWORD PTR _Tied$[rbp], rax

; 98   :             if (!_Tied || _Tied == &_Ostr) {

  000b2	48 83 7d 08 00	 cmp	 QWORD PTR _Tied$[rbp], 0
  000b7	74 0d		 je	 SHORT $LN4@sentry
  000b9	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000c0	48 39 45 08	 cmp	 QWORD PTR _Tied$[rbp], rax
  000c4	75 0d		 jne	 SHORT $LN3@sentry
$LN4@sentry:

; 99   :                 _Ok = true;

  000c6	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000cd	c6 40 08 01	 mov	 BYTE PTR [rax+8], 1

; 100  :                 return;

  000d1	eb 38		 jmp	 SHORT $LN1@sentry
$LN3@sentry:

; 101  :             }
; 102  : 
; 103  : 
; 104  :             _Tied->flush();

  000d3	48 8b 4d 08	 mov	 rcx, QWORD PTR _Tied$[rbp]
  000d7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 105  :             _Ok = _Ostr.good(); // store test only after flushing tie

  000dd	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000e4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000e7	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000eb	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000f2	48 03 c8	 add	 rcx, rax
  000f5	48 8b c1	 mov	 rax, rcx
  000f8	48 8b c8	 mov	 rcx, rax
  000fb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  00101	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00108	88 41 08	 mov	 BYTE PTR [rcx+8], al
$LN1@sentry:

; 106  :         }

  0010b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00112	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00119	5f		 pop	 rdi
  0011a	5d		 pop	 rbp
  0011b	c3		 ret	 0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Rdbuf$ = 8
tv72 = 216
this$ = 256
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 76   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 77   :             const auto _Rdbuf = _Myostr.rdbuf();

  00037	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv72[rbp], rax
  00048	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv72[rbp]
  0004f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00052	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00056	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv72[rbp]
  0005d	48 03 c8	 add	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
  00063	48 8b c8	 mov	 rcx, rax
  00066	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0006c	90		 npad	 1
  0006d	48 89 45 08	 mov	 QWORD PTR _Rdbuf$[rbp], rax

; 78   :             if (_Rdbuf) {

  00071	48 83 7d 08 00	 cmp	 QWORD PTR _Rdbuf$[rbp], 0
  00076	74 0f		 je	 SHORT $LN2@Sentry_bas

; 79   :                 _Rdbuf->_Unlock();

  00078	48 8b 45 08	 mov	 rax, QWORD PTR _Rdbuf$[rbp]
  0007c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007f	48 8b 4d 08	 mov	 rcx, QWORD PTR _Rdbuf$[rbp]
  00083	ff 50 10	 call	 QWORD PTR [rax+16]
  00086	90		 npad	 1
$LN2@Sentry_bas:

; 80   :             }
; 81   :         }

  00087	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008e	5f		 pop	 rdi
  0008f	5d		 pop	 rbp
  00090	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Rdbuf$ = 8
tv73 = 216
this$ = 256
_Ostr$ = 264
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 69   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx

; 70   :             const auto _Rdbuf = _Myostr.rdbuf();

  0004c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00056	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  0005d	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv73[rbp]
  00064	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00067	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0006b	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv73[rbp]
  00072	48 03 c8	 add	 rcx, rax
  00075	48 8b c1	 mov	 rax, rcx
  00078	48 8b c8	 mov	 rcx, rax
  0007b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00081	48 89 45 08	 mov	 QWORD PTR _Rdbuf$[rbp], rax

; 71   :             if (_Rdbuf) {

  00085	48 83 7d 08 00	 cmp	 QWORD PTR _Rdbuf$[rbp], 0
  0008a	74 0e		 je	 SHORT $LN2@Sentry_bas

; 72   :                 _Rdbuf->_Lock();

  0008c	48 8b 45 08	 mov	 rax, QWORD PTR _Rdbuf$[rbp]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 8b 4d 08	 mov	 rcx, QWORD PTR _Rdbuf$[rbp]
  00097	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Sentry_bas:

; 73   :             }
; 74   :         }

  0009a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a1	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000a8	5f		 pop	 rdi
  000a9	5d		 pop	 rbp
  000aa	c3		 ret	 0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z PROC ; std::addressof<std::mutex>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z ENDP ; std::addressof<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$shared_ptr@Vmutex@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vmutex@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAV?$shared_ptr@Vmutex@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vmutex@std@@@0@AEAV10@@Z PROC ; std::move<std::shared_ptr<std::mutex> &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAV?$shared_ptr@Vmutex@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vmutex@std@@@0@AEAV10@@Z ENDP ; std::move<std::shared_ptr<std::mutex> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00041	e8 00 00 00 00	 call	 ??0?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAA@XZ ; std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >
  00046	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 8b c8	 mov	 rcx, rax
  00050	e8 00 00 00 00	 call	 ??0?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAA@XZ ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >
  00055	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::shared_ptr<std::thread>,void *> >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??$?0U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::shared_ptr<std::thread>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Free_non_head@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z
_TEXT	SEGMENT
_Pnode$ = 8
_Pnext$1 = 40
_Al$ = 288
_Head$ = 296
??$_Free_non_head@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z PROC ; std::_List_node<std::shared_ptr<std::thread>,void *>::_Free_non_head<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >, COMDAT

; 337  :         _Alnode& _Al, _Nodeptr _Head) noexcept { // free a list starting at _First and terminated at nullptr

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 338  :         _Head->_Prev->_Next = nullptr;

  0003c	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Head$[rbp]
  00043	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00047	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 339  : 
; 340  :         auto _Pnode = _Head->_Next;

  0004e	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Head$[rbp]
  00055	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00058	48 89 45 08	 mov	 QWORD PTR _Pnode$[rbp], rax

; 341  :         for (_Nodeptr _Pnext; _Pnode; _Pnode = _Pnext) {

  0005c	eb 08		 jmp	 SHORT $LN4@Free_non_h
$LN2@Free_non_h:
  0005e	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  00062	48 89 45 08	 mov	 QWORD PTR _Pnode$[rbp], rax
$LN4@Free_non_h:
  00066	48 83 7d 08 00	 cmp	 QWORD PTR _Pnode$[rbp], 0
  0006b	74 1e		 je	 SHORT $LN3@Free_non_h

; 342  :             _Pnext = _Pnode->_Next;

  0006d	48 8b 45 08	 mov	 rax, QWORD PTR _Pnode$[rbp]
  00071	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00074	48 89 45 28	 mov	 QWORD PTR _Pnext$1[rbp], rax

; 343  :             _Freenode(_Al, _Pnode);

  00078	48 8b 55 08	 mov	 rdx, QWORD PTR _Pnode$[rbp]
  0007c	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  00083	e8 00 00 00 00	 call	 ??$_Freenode@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::shared_ptr<std::thread>,void *>::_Freenode<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
  00088	90		 npad	 1

; 344  :         }

  00089	eb d3		 jmp	 SHORT $LN2@Free_non_h
$LN3@Free_non_h:

; 345  :     }

  0008b	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
??$_Free_non_head@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z ENDP ; std::_List_node<std::shared_ptr<std::thread>,void *>::_Free_non_head<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@V?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z PROC ; std::forward<std::function<void __cdecl(enum EnumEvent)> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@V?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z ENDP ; std::forward<std::function<void __cdecl(enum EnumEvent)> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z
_TEXT	SEGMENT
locker$ = 8
$T4 = 244
$T5 = 276
$T6 = 312
tv140 = 328
tv129 = 328
tv76 = 328
tv82 = 336
__$ArrayPad$ = 344
this$ = 384
x$ = 392
??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z PROC ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>, COMDAT

; 88   : 	void Add(F&& x) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 58 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 89   : 		std::cout << "SyncQueue Add "

  0004c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@NGJDHBOA@SyncQueue?5Add?5@
  00053	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0005a	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BE@GFBIAGP@?0?5this?5thread?5id?3?$DN?5@
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0006e	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  00075	48 8d 8d f4 00
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0007c	e8 00 00 00 00	 call	 ?get_id@this_thread@std@@YA?AVid@thread@2@XZ ; std::this_thread::get_id
  00081	8b 00		 mov	 eax, DWORD PTR [rax]
  00083	89 85 14 01 00
	00		 mov	 DWORD PTR $T5[rbp], eax
  00089	8b 95 14 01 00
	00		 mov	 edx, DWORD PTR $T5[rbp]
  0008f	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv76[rbp]
  00096	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z ; std::operator<<<char,std::char_traits<char> >
  0009b	48 89 85 50 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  000a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  000a9	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR tv82[rbp]
  000b0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 90   : 			<< ", this thread id:= " << std::this_thread::get_id()
; 91   : 			<< std::endl;
; 92   : 		std::unique_lock<U> locker(_mutex);

  000b6	ba 10 00 00 00	 mov	 edx, 16
  000bb	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  000bf	e8 00 00 00 00	 call	 ?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QEAAX_K@Z
  000c4	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000cb	48 83 c0 18	 add	 rax, 24
  000cf	48 8b d0	 mov	 rdx, rax
  000d2	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  000d6	e8 00 00 00 00	 call	 ??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
  000db	90		 npad	 1

; 93   : 		_not_full.wait(locker, [this]() {

  000dc	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e3	48 83 c0 70	 add	 rax, 112		; 00000070H
  000e7	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv129[rbp], rax
  000ee	48 8b 95 80 01
	00 00		 mov	 rdx, QWORD PTR this$[rbp]
  000f5	48 8d 8d 38 01
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  000fc	e8 00 00 00 00	 call	 ??0<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`2'::<lambda_1>::<lambda_1>
  00101	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00104	48 8d 55 08	 lea	 rdx, QWORD PTR locker$[rbp]
  00108	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv129[rbp]
  0010f	e8 00 00 00 00	 call	 ??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@1@@Z@@Z ; std::condition_variable_any::wait<std::unique_lock<std::mutex>,`SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`2'::<lambda_1> >

; 94   : 			auto lock = _need_stop || NotFull();
; 95   : 			if (lock) {
; 96   : 				_event(EnumEvent::FULL);
; 97   : 			}
; 98   : 			return lock;
; 99   : 			});
; 100  : 		if (_need_stop) {

  00114	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0011b	0f b6 40 6c	 movzx	 eax, BYTE PTR [rax+108]
  0011f	85 c0		 test	 eax, eax
  00121	74 0b		 je	 SHORT $LN2@Add

; 101  : 			return;

  00123	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  00127	e8 00 00 00 00	 call	 ??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
  0012c	eb 48		 jmp	 SHORT $LN1@Add
$LN2@Add:

; 102  : 		}
; 103  : 
; 104  : 		_queue.emplace_back(std::forward<F>(x));

  0012e	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00135	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv140[rbp], rax
  0013c	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  00143	e8 00 00 00 00	 call	 ??$forward@AEBV?$function@$$A6AXXZ@std@@@std@@YAAEBV?$function@$$A6AXXZ@0@AEBV10@@Z ; std::forward<std::function<void __cdecl(void)> const &>
  00148	48 8b d0	 mov	 rdx, rax
  0014b	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv140[rbp]
  00152	e8 00 00 00 00	 call	 ??$emplace_back@AEBV?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@AEBV?$function@$$A6AXXZ@1@@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::emplace_back<std::function<void __cdecl(void)> const &>

; 105  : 		_not_empty.notify_one();

  00157	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0015e	48 05 c8 00 00
	00		 add	 rax, 200		; 000000c8H
  00164	48 8b c8	 mov	 rcx, rax
  00167	e8 00 00 00 00	 call	 ?notify_one@condition_variable_any@std@@QEAAXXZ ; std::condition_variable_any::notify_one
  0016c	90		 npad	 1

; 106  : 	}

  0016d	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  00171	e8 00 00 00 00	 call	 ??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
$LN1@Add:
  00176	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0017a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z$rtcFrameData
  00181	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00186	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0018d	48 33 cd	 xor	 rcx, rbp
  00190	e8 00 00 00 00	 call	 __security_check_cookie
  00195	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  0019c	5f		 pop	 rdi
  0019d	5d		 pop	 rbp
  0019e	c3		 ret	 0
??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z ENDP ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
locker$ = 8
$T4 = 244
$T5 = 276
$T6 = 312
tv140 = 328
tv129 = 328
tv76 = 328
tv82 = 336
__$ArrayPad$ = 344
this$ = 384
x$ = 392
?dtor$0@?0???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@4HA PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@4HA ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
locker$ = 8
$T4 = 244
$T5 = 276
$T6 = 312
tv140 = 328
tv129 = 328
tv76 = 328
tv82 = 336
__$ArrayPad$ = 344
this$ = 384
x$ = 392
?dtor$0@?0???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@4HA PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z@4HA ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z
_TEXT	SEGMENT
locker$ = 8
$T4 = 244
$T5 = 276
$T6 = 312
tv140 = 328
tv129 = 328
tv76 = 328
tv82 = 336
__$ArrayPad$ = 344
this$ = 384
x$ = 392
??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z PROC ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >, COMDAT

; 88   : 	void Add(F&& x) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 58 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 89   : 		std::cout << "SyncQueue Add "

  0004c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@NGJDHBOA@SyncQueue?5Add?5@
  00053	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0005a	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BE@GFBIAGP@?0?5this?5thread?5id?3?$DN?5@
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0006e	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  00075	48 8d 8d f4 00
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0007c	e8 00 00 00 00	 call	 ?get_id@this_thread@std@@YA?AVid@thread@2@XZ ; std::this_thread::get_id
  00081	8b 00		 mov	 eax, DWORD PTR [rax]
  00083	89 85 14 01 00
	00		 mov	 DWORD PTR $T5[rbp], eax
  00089	8b 95 14 01 00
	00		 mov	 edx, DWORD PTR $T5[rbp]
  0008f	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv76[rbp]
  00096	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z ; std::operator<<<char,std::char_traits<char> >
  0009b	48 89 85 50 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  000a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  000a9	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR tv82[rbp]
  000b0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 90   : 			<< ", this thread id:= " << std::this_thread::get_id()
; 91   : 			<< std::endl;
; 92   : 		std::unique_lock<U> locker(_mutex);

  000b6	ba 10 00 00 00	 mov	 edx, 16
  000bb	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  000bf	e8 00 00 00 00	 call	 ?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QEAAX_K@Z
  000c4	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000cb	48 83 c0 18	 add	 rax, 24
  000cf	48 8b d0	 mov	 rdx, rax
  000d2	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  000d6	e8 00 00 00 00	 call	 ??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
  000db	90		 npad	 1

; 93   : 		_not_full.wait(locker, [this]() {

  000dc	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e3	48 83 c0 70	 add	 rax, 112		; 00000070H
  000e7	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv129[rbp], rax
  000ee	48 8b 95 80 01
	00 00		 mov	 rdx, QWORD PTR this$[rbp]
  000f5	48 8d 8d 38 01
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  000fc	e8 00 00 00 00	 call	 ??0<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@QEAA@PEAV1@@Z ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`2'::<lambda_1>::<lambda_1>
  00101	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00104	48 8d 55 08	 lea	 rdx, QWORD PTR locker$[rbp]
  00108	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv129[rbp]
  0010f	e8 00 00 00 00	 call	 ??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@1@@Z@@Z ; std::condition_variable_any::wait<std::unique_lock<std::mutex>,`SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`2'::<lambda_1> >

; 94   : 			auto lock = _need_stop || NotFull();
; 95   : 			if (lock) {
; 96   : 				_event(EnumEvent::FULL);
; 97   : 			}
; 98   : 			return lock;
; 99   : 			});
; 100  : 		if (_need_stop) {

  00114	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0011b	0f b6 40 6c	 movzx	 eax, BYTE PTR [rax+108]
  0011f	85 c0		 test	 eax, eax
  00121	74 0b		 je	 SHORT $LN2@Add

; 101  : 			return;

  00123	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  00127	e8 00 00 00 00	 call	 ??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
  0012c	eb 48		 jmp	 SHORT $LN1@Add
$LN2@Add:

; 102  : 		}
; 103  : 
; 104  : 		_queue.emplace_back(std::forward<F>(x));

  0012e	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00135	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv140[rbp], rax
  0013c	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR x$[rbp]
  00143	e8 00 00 00 00	 call	 ??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::forward<std::function<void __cdecl(void)> >
  00148	48 8b d0	 mov	 rdx, rax
  0014b	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv140[rbp]
  00152	e8 00 00 00 00	 call	 ??$emplace_back@V?$function@$$A6AXXZ@std@@@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@$$QEAV?$function@$$A6AXXZ@1@@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::emplace_back<std::function<void __cdecl(void)> >

; 105  : 		_not_empty.notify_one();

  00157	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0015e	48 05 c8 00 00
	00		 add	 rax, 200		; 000000c8H
  00164	48 8b c8	 mov	 rcx, rax
  00167	e8 00 00 00 00	 call	 ?notify_one@condition_variable_any@std@@QEAAXXZ ; std::condition_variable_any::notify_one
  0016c	90		 npad	 1

; 106  : 	}

  0016d	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  00171	e8 00 00 00 00	 call	 ??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
$LN1@Add:
  00176	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0017a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z$rtcFrameData
  00181	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00186	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0018d	48 33 cd	 xor	 rcx, rbp
  00190	e8 00 00 00 00	 call	 __security_check_cookie
  00195	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  0019c	5f		 pop	 rdi
  0019d	5d		 pop	 rbp
  0019e	c3		 ret	 0
??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z ENDP ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
locker$ = 8
$T4 = 244
$T5 = 276
$T6 = 312
tv140 = 328
tv129 = 328
tv76 = 328
tv82 = 336
__$ArrayPad$ = 344
this$ = 384
x$ = 392
?dtor$0@?0???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@4HA PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@4HA ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
locker$ = 8
$T4 = 244
$T5 = 276
$T6 = 312
tv140 = 328
tv129 = 328
tv76 = 328
tv82 = 336
__$ArrayPad$ = 344
this$ = 384
x$ = 392
?dtor$0@?0???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@4HA PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z@4HA ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$move@AEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YA$$QEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$move@AEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YA$$QEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z PROC ; std::move<std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > &>, COMDAT

; 1432 : _NODISCARD constexpr remove_reference_t<_Ty>&& move(_Ty&& _Arg) noexcept { // forward _Arg as movable

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1433 :     return static_cast<remove_reference_t<_Ty>&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1434 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$move@AEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YA$$QEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z ENDP ; std::move<std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\condition_variable
;	COMDAT ??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@1@@Z@@Z
_TEXT	SEGMENT
this$ = 224
_Xtrnl$ = 232
_Pred$ = 240
??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@1@@Z@@Z PROC ; std::condition_variable_any::wait<std::unique_lock<std::mutex>,`SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`2'::<lambda_1> >, COMDAT

; 61   :     void wait(_Mutex& _Xtrnl, _Predicate _Pred) { // wait for signal and check predicate

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DDDD6958_condition_variable
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN2@wait:

; 62   :         while (!_Pred()) {

  00040	48 8d 8d f0 00
	00 00		 lea	 rcx, QWORD PTR _Pred$[rbp]
  00047	e8 00 00 00 00	 call	 ??R<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEBA@XZ ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`2'::<lambda_1>::operator()
  0004c	0f b6 c0	 movzx	 eax, al
  0004f	85 c0		 test	 eax, eax
  00051	75 15		 jne	 SHORT $LN3@wait

; 63   :             wait(_Xtrnl);

  00053	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Xtrnl$[rbp]
  0005a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00061	e8 00 00 00 00	 call	 ??$wait@V?$unique_lock@Vmutex@std@@@std@@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@@Z ; std::condition_variable_any::wait<std::unique_lock<std::mutex> >

; 64   :         }

  00066	eb d8		 jmp	 SHORT $LN2@wait
$LN3@wait:

; 65   :     }

  00068	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@1@@Z@@Z ENDP ; std::condition_variable_any::wait<std::unique_lock<std::mutex>,`SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`2'::<lambda_1> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ??0<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEAA@PEAV2@@Z
_TEXT	SEGMENT
this$ = 224
_This$ = 232
??0<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEAA@PEAV2@@Z PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`2'::<lambda_1>::<lambda_1>, COMDAT

; 42   : 			});

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _This$[rbp]
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx
  0004c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005a	5f		 pop	 rdi
  0005b	5d		 pop	 rbp
  0005c	c3		 ret	 0
??0<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEAA@PEAV2@@Z ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`2'::<lambda_1>::<lambda_1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ??R<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEBA@XZ
_TEXT	SEGMENT
tv73 = 192
this$ = 240
??R<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEBA@XZ PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`2'::<lambda_1>::operator(), COMDAT

; 42   : 			});

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 41   : 			return _need_stop || NotEmpty();

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	0f b6 40 6c	 movzx	 eax, BYTE PTR [rax+108]
  00044	85 c0		 test	 eax, eax
  00046	75 22		 jne	 SHORT $LN3@operator
  00048	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00052	e8 00 00 00 00	 call	 ?NotEmpty@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::NotEmpty
  00057	0f b6 c0	 movzx	 eax, al
  0005a	85 c0		 test	 eax, eax
  0005c	75 0c		 jne	 SHORT $LN3@operator
  0005e	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv73[rbp], 0
  00068	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0006a	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv73[rbp], 1
$LN4@operator:
  00074	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv73[rbp]

; 42   : 			});

  0007b	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00082	5f		 pop	 rdi
  00083	5d		 pop	 rbp
  00084	c3		 ret	 0
??R<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEBA@XZ ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00041	e8 00 00 00 00	 call	 ??0?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAA@XZ ; std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >
  00046	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 8b c8	 mov	 rcx, rax
  00050	e8 00 00 00 00	 call	 ??0?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAA@XZ ; std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >
  00055	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  0003c	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
  0004f	90		 npad	 1

; 1114 : }

  00050	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::function<void __cdecl(void)>,void *> >, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??$?0U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::function<void __cdecl(void)>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00042	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xatomic.h
;	COMDAT ??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z
_TEXT	SEGMENT
_Source$ = 224
??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z PROC ; std::_Atomic_address_as<long,std::_Atomic_padded<int> >, COMDAT

; 68   : _NODISCARD volatile _Integral* _Atomic_address_as(_Ty& _Source) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__AE76A8A9_xatomic@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 69   :     // gets a pointer to the argument as an integral type (to pass to intrinsics)
; 70   :     static_assert(is_integral_v<_Integral>, "Tried to reinterpret memory as non-integral");
; 71   :     return &reinterpret_cast<volatile _Integral&>(_Source);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Source$[rbp]

; 72   : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z ENDP ; std::_Atomic_address_as<long,std::_Atomic_padded<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?CVthread@std@@$0A@@?$shared_ptr@Vthread@std@@@std@@QEBAPEAVthread@1@XZ
_TEXT	SEGMENT
this$ = 224
??$?CVthread@std@@$0A@@?$shared_ptr@Vthread@std@@@std@@QEBAPEAVthread@1@XZ PROC ; std::shared_ptr<std::thread>::operator-><std::thread,0>, COMDAT

; 1204 :     _NODISCARD _Ty2* operator->() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1205 :         return get();

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@Vthread@std@@@std@@IEBAPEAVthread@2@XZ ; std::_Ptr_base<std::thread>::get
  00043	90		 npad	 1

; 1206 :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??$?CVthread@std@@$0A@@?$shared_ptr@Vthread@std@@@std@@QEBAPEAVthread@1@XZ ENDP ; std::shared_ptr<std::thread>::operator-><std::thread,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::__autoclassinit2, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  00034	33 c0		 xor	 eax, eax
  00036	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR classSize$[rbp]
  0003d	f3 aa		 rep stosb
  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 224
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::operator++, COMDAT

; 110  :     _List_unchecked_iterator& operator++() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 111  :         _Mybase::operator++();

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator++

; 112  :         return *this;

  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 113  :     }

  00049	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00050	5f		 pop	 rdi
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEBAAEAV?$shared_ptr@Vthread@std@@@1@XZ
_TEXT	SEGMENT
this$ = 224
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEBAAEAV?$shared_ptr@Vthread@std@@@1@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::operator*, COMDAT

; 102  :     _NODISCARD reference operator*() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 103  :         return const_cast<reference>(_Mybase::operator*());

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$shared_ptr@Vthread@std@@@1@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator*

; 104  :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEBAAEAV?$shared_ptr@Vthread@std@@@1@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 224
_Pnode$ = 232
_Plist$ = 240
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >, COMDAT

; 98   :     _List_unchecked_iterator(_Nodeptr _Pnode, const _Mylist* _Plist)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 99   :         : _Mybase(_Pnode, _Plist) { // construct with node pointer _Pnode

  00040	4c 8b 85 f0 00
	00 00		 mov	 r8, QWORD PTR _Plist$[rbp]
  00047	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Pnode$[rbp]
  0004e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>

; 100  :     }

  0005a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00061	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00068	5f		 pop	 rdi
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 192
this$ = 240
_Right$ = 248
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator!=, COMDAT

; 75   :     _NODISCARD bool operator!=(const _List_unchecked_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 76   :         return !(*this == _Right);

  0003b	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  00042	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	e8 00 00 00 00	 call	 ??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator==
  0004e	0f b6 c0	 movzx	 eax, al
  00051	85 c0		 test	 eax, eax
  00053	75 0c		 jne	 SHORT $LN3@operator
  00055	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv69[rbp], 1
  0005f	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00061	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv69[rbp], 0
$LN4@operator:
  0006b	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv69[rbp]

; 77   :     }

  00072	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00079	5f		 pop	 rdi
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv67 = 192
this$ = 240
_Right$ = 248
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator==, COMDAT

; 71   :     _NODISCARD bool operator==(const _List_unchecked_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 72   :         return _Ptr == _Right._Ptr;

  0003b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004f	75 0c		 jne	 SHORT $LN3@operator
  00051	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv67[rbp], 1
  0005b	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0005d	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv67[rbp], 0
$LN4@operator:
  00067	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv67[rbp]

; 73   :     }

  0006e	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00075	5f		 pop	 rdi
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 224
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator++, COMDAT

; 49   :     _List_unchecked_const_iterator& operator++() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 50   :         _Ptr = _Ptr->_Next;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00047	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 51   :         return *this;

  0004d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 52   :     }

  00054	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005b	5f		 pop	 rdi
  0005c	5d		 pop	 rbp
  0005d	c3		 ret	 0
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$shared_ptr@Vthread@std@@@1@XZ
_TEXT	SEGMENT
this$ = 224
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$shared_ptr@Vthread@std@@@1@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator*, COMDAT

; 41   :     _NODISCARD reference operator*() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 42   :         return _Ptr->_Myval;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 83 c0 10	 add	 rax, 16

; 43   :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$shared_ptr@Vthread@std@@@1@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 224
_Pnode$ = 232
_Plist$ = 240
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>, COMDAT

; 36   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 37   :         : _Ptr(_Pnode) { // construct with node pointer _Pnode

  00040	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Pnode$[rbp]
  0004e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 38   :         this->_Adopt(_Plist);

  00051	48 8b 95 f0 00
	00 00		 mov	 rdx, QWORD PTR _Plist$[rbp]
  00058	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005f	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 39   :     }

  00064	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
_Rel_time$ = 288
??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z PROC ; std::this_thread::sleep_for<__int64,std::ratio<1,1000> >, COMDAT

; 169  :     void sleep_for(const chrono::duration<_Rep, _Period>& _Rel_time) { // sleep for duration

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F7EEAF5_thread
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 170  :         sleep_until(chrono::steady_clock::now() + _Rel_time);

  00036	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0003d	e8 00 00 00 00	 call	 ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ; std::chrono::steady_clock::now
  00042	4c 8b 85 20 01
	00 00		 mov	 r8, QWORD PTR _Rel_time$[rbp]
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  00053	e8 00 00 00 00	 call	 ??$?HUsteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@_JU?$ratio@$00$0DOI@@2@@chrono@std@@YA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@01@AEBV201@AEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@01@@Z ; std::chrono::operator+<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> >,__int64,std::ratio<1,1000> >
  00058	48 8b c8	 mov	 rcx, rax
  0005b	e8 00 00 00 00	 call	 ??$sleep_until@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@this_thread@std@@YAXAEBV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@1@@Z ; std::this_thread::sleep_until<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >

; 171  :     }

  00060	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z ENDP ; std::this_thread::sleep_for<__int64,std::ratio<1,1000> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><int,void>, COMDAT

; 78   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]
  00043	48 63 00	 movsxd	 rax, DWORD PTR [rax]
  00046	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004d	48 89 01	 mov	 QWORD PTR [rcx], rax
  00050	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><int,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$function@$$A6AXXZ@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_G?$function@$$A6AXXZ@std@@QEAAPEAXI@Z PROC		; std::function<void __cdecl(void)>::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1?$function@$$A6AXXZ@std@@QEAA@XZ
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 40 00 00 00	 mov	 edx, 64			; 00000040H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_G?$function@$$A6AXXZ@std@@QEAAPEAXI@Z ENDP		; std::function<void __cdecl(void)>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$function@$$A6AXXZ@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$function@$$A6AXXZ@std@@QEAA@XZ PROC		; std::function<void __cdecl(void)>::~function<void __cdecl(void)>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1?$_Func_class@X$$V@std@@QEAA@XZ ; std::_Func_class<void>::~_Func_class<void>
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1?$function@$$A6AXXZ@std@@QEAA@XZ ENDP		; std::function<void __cdecl(void)>::~function<void __cdecl(void)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$function@$$A6AXXZ@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??0?$function@$$A6AXXZ@std@@QEAA@$$QEAV01@@Z PROC	; std::function<void __cdecl(void)>::function<void __cdecl(void)>, COMDAT

; 1197 :     function(function&& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00043	e8 00 00 00 00	 call	 ??0?$_Func_class@X$$V@std@@QEAA@XZ ; std::_Func_class<void>::_Func_class<void>
  00048	90		 npad	 1

; 1198 :         this->_Reset_move(_STD move(_Right));

  00049	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00050	e8 00 00 00 00	 call	 ??$move@AEAV?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::move<std::function<void __cdecl(void)> &>
  00055	90		 npad	 1
  00056	48 8b d0	 mov	 rdx, rax
  00059	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	e8 00 00 00 00	 call	 ?_Reset_move@?$_Func_class@X$$V@std@@IEAAX$$QEAV12@@Z ; std::_Func_class<void>::_Reset_move
  00065	90		 npad	 1

; 1199 :     }

  00066	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
??0?$function@$$A6AXXZ@std@@QEAA@$$QEAV01@@Z ENDP	; std::function<void __cdecl(void)>::function<void __cdecl(void)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z PROC		; std::function<void __cdecl(void)>::function<void __cdecl(void)>, COMDAT

; 1162 :     function(const function& _Right) { // construct holding copy of _Right

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00042	e8 00 00 00 00	 call	 ??0?$_Func_class@X$$V@std@@QEAA@XZ ; std::_Func_class<void>::_Func_class<void>
  00047	90		 npad	 1

; 1163 :         this->_Reset_copy(_Right);

  00048	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  0004f	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00056	e8 00 00 00 00	 call	 ?_Reset_copy@?$_Func_class@X$$V@std@@IEAAXAEBV12@@Z ; std::_Func_class<void>::_Reset_copy
  0005b	90		 npad	 1

; 1164 :     }

  0005c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00063	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006a	5f		 pop	 rdi
  0006b	5d		 pop	 rbp
  0006c	c3		 ret	 0
??0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z ENDP		; std::function<void __cdecl(void)>::function<void __cdecl(void)>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
_Right$ = 232
?dtor$0@?0???0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::function<void __cdecl(void)>::function<void __cdecl(void)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Func_class@X$$V@std@@QEAA@XZ ; std::_Func_class<void>::~_Func_class<void>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::function<void __cdecl(void)>::function<void __cdecl(void)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
_Right$ = 232
?dtor$0@?0???0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::function<void __cdecl(void)>::function<void __cdecl(void)>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Func_class@X$$V@std@@QEAA@XZ ; std::_Func_class<void>::~_Func_class<void>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$function@$$A6AXXZ@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::function<void __cdecl(void)>::function<void __cdecl(void)>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z PROC ; std::_Func_class<void>::_Set, COMDAT

; 1133 :     void _Set(_Ptrt* _Ptr) noexcept { // store pointer to object

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1134 :         _Mystorage._Ptrs[_Small_object_num_ptrs - 1] = _Ptr;

  0003c	b8 08 00 00 00	 mov	 eax, 8
  00041	48 6b c0 07	 imul	 rax, rax, 7
  00045	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004c	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00053	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 1135 :     }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z ENDP ; std::_Func_class<void>::_Set
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ PROC ; std::_Func_class<void>::_Getimpl, COMDAT

; 1129 :     _Ptrt* _Getimpl() const noexcept { // get pointer to object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1130 :         return _Mystorage._Ptrs[_Small_object_num_ptrs - 1];

  00037	b8 08 00 00 00	 mov	 eax, 8
  0003c	48 6b c0 07	 imul	 rax, rax, 7
  00040	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00047	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]

; 1131 :     }

  0004b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ ENDP ; std::_Func_class<void>::_Getimpl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Local@?$_Func_class@X$$V@std@@AEBA_NXZ
_TEXT	SEGMENT
tv68 = 192
this$ = 240
?_Local@?$_Func_class@X$$V@std@@AEBA_NXZ PROC		; std::_Func_class<void>::_Local, COMDAT

; 1117 :     bool _Local() const noexcept { // test for locally stored copy of object

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1118 :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00037	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ ; std::_Func_class<void>::_Getimpl
  00043	90		 npad	 1
  00044	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004b	48 3b c1	 cmp	 rax, rcx
  0004e	75 0c		 jne	 SHORT $LN3@Local
  00050	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv68[rbp], 1
  0005a	eb 0a		 jmp	 SHORT $LN4@Local
$LN3@Local:
  0005c	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv68[rbp], 0
$LN4@Local:
  00066	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv68[rbp]

; 1119 :     }

  0006d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?_Local@?$_Func_class@X$$V@std@@AEBA_NXZ ENDP		; std::_Func_class<void>::_Local
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Tidy@?$_Func_class@X$$V@std@@IEAAXXZ
_TEXT	SEGMENT
tv71 = 192
tv81 = 200
tv78 = 208
this$ = 256
?_Tidy@?$_Func_class@X$$V@std@@IEAAXXZ PROC		; std::_Func_class<void>::_Tidy, COMDAT

; 1086 :     void _Tidy() noexcept { // clean up

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1087 :         if (!_Empty()) { // destroy callable object and maybe delete it

  00037	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ ; std::_Func_class<void>::_Empty
  00043	90		 npad	 1
  00044	0f b6 c0	 movzx	 eax, al
  00047	85 c0		 test	 eax, eax
  00049	75 71		 jne	 SHORT $LN2@Tidy

; 1088 :             _Getimpl()->_Delete_this(!_Local());

  0004b	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00052	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ ; std::_Func_class<void>::_Getimpl
  00057	90		 npad	 1
  00058	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  0005f	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv71[rbp]
  00066	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00069	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0006d	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00074	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0007b	e8 00 00 00 00	 call	 ?_Local@?$_Func_class@X$$V@std@@AEBA_NXZ ; std::_Func_class<void>::_Local
  00080	90		 npad	 1
  00081	0f b6 c0	 movzx	 eax, al
  00084	85 c0		 test	 eax, eax
  00086	75 09		 jne	 SHORT $LN4@Tidy
  00088	c6 85 d0 00 00
	00 01		 mov	 BYTE PTR tv78[rbp], 1
  0008f	eb 07		 jmp	 SHORT $LN5@Tidy
$LN4@Tidy:
  00091	c6 85 d0 00 00
	00 00		 mov	 BYTE PTR tv78[rbp], 0
$LN5@Tidy:
  00098	0f b6 95 d0 00
	00 00		 movzx	 edx, BYTE PTR tv78[rbp]
  0009f	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv71[rbp]
  000a6	ff 95 c8 00 00
	00		 call	 QWORD PTR tv81[rbp]
  000ac	90		 npad	 1

; 1089 :             _Set(nullptr);

  000ad	33 d2		 xor	 edx, edx
  000af	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b6	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z ; std::_Func_class<void>::_Set
  000bb	90		 npad	 1
$LN2@Tidy:

; 1090 :         }
; 1091 :     }

  000bc	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000c3	5f		 pop	 rdi
  000c4	5d		 pop	 rbp
  000c5	c3		 ret	 0
?_Tidy@?$_Func_class@X$$V@std@@IEAAXXZ ENDP		; std::_Func_class<void>::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Reset_move@?$_Func_class@X$$V@std@@IEAAX$$QEAV12@@Z
_TEXT	SEGMENT
tv76 = 192
tv83 = 200
this$ = 240
_Right$ = 248
?_Reset_move@?$_Func_class@X$$V@std@@IEAAX$$QEAV12@@Z PROC ; std::_Func_class<void>::_Reset_move, COMDAT

; 1029 :     void _Reset_move(_Func_class&& _Right) noexcept { // move _Right's stored object

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1030 :         if (!_Right._Empty()) {

  0003c	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00043	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ ; std::_Func_class<void>::_Empty
  00048	90		 npad	 1
  00049	0f b6 c0	 movzx	 eax, al
  0004c	85 c0		 test	 eax, eax
  0004e	0f 85 a0 00 00
	00		 jne	 $LN2@Reset_move

; 1031 :             if (_Right._Local()) { // move and tidy

  00054	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0005b	e8 00 00 00 00	 call	 ?_Local@?$_Func_class@X$$V@std@@AEBA_NXZ ; std::_Func_class<void>::_Local
  00060	90		 npad	 1
  00061	0f b6 c0	 movzx	 eax, al
  00064	85 c0		 test	 eax, eax
  00066	74 60		 je	 SHORT $LN3@Reset_move

; 1032 :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00068	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0006f	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ ; std::_Func_class<void>::_Getimpl
  00074	90		 npad	 1
  00075	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0007c	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv76[rbp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0008a	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  00091	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00098	48 8b d0	 mov	 rdx, rax
  0009b	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv76[rbp]
  000a2	ff 95 c8 00 00
	00		 call	 QWORD PTR tv83[rbp]
  000a8	90		 npad	 1
  000a9	48 8b d0	 mov	 rdx, rax
  000ac	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b3	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z ; std::_Func_class<void>::_Set
  000b8	90		 npad	 1

; 1033 :                 _Right._Tidy();

  000b9	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  000c0	e8 00 00 00 00	 call	 ?_Tidy@?$_Func_class@X$$V@std@@IEAAXXZ ; std::_Func_class<void>::_Tidy
  000c5	90		 npad	 1

; 1034 :             } else { // steal from _Right

  000c6	eb 2c		 jmp	 SHORT $LN2@Reset_move
$LN3@Reset_move:

; 1035 :                 _Set(_Right._Getimpl());

  000c8	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  000cf	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ ; std::_Func_class<void>::_Getimpl
  000d4	90		 npad	 1
  000d5	48 8b d0	 mov	 rdx, rax
  000d8	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000df	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z ; std::_Func_class<void>::_Set
  000e4	90		 npad	 1

; 1036 :                 _Right._Set(nullptr);

  000e5	33 d2		 xor	 edx, edx
  000e7	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  000ee	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z ; std::_Func_class<void>::_Set
  000f3	90		 npad	 1
$LN2@Reset_move:

; 1037 :             }
; 1038 :         }
; 1039 :     }

  000f4	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000fb	5f		 pop	 rdi
  000fc	5d		 pop	 rbp
  000fd	c3		 ret	 0
?_Reset_move@?$_Func_class@X$$V@std@@IEAAX$$QEAV12@@Z ENDP ; std::_Func_class<void>::_Reset_move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Reset_copy@?$_Func_class@X$$V@std@@IEAAXAEBV12@@Z
_TEXT	SEGMENT
tv72 = 192
tv79 = 200
this$ = 240
_Right$ = 248
?_Reset_copy@?$_Func_class@X$$V@std@@IEAAXAEBV12@@Z PROC ; std::_Func_class<void>::_Reset_copy, COMDAT

; 1023 :     void _Reset_copy(const _Func_class& _Right) { // copy _Right's stored object

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1024 :         if (!_Right._Empty()) {

  0003b	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00042	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ ; std::_Func_class<void>::_Empty
  00047	0f b6 c0	 movzx	 eax, al
  0004a	85 c0		 test	 eax, eax
  0004c	75 4d		 jne	 SHORT $LN2@Reset_copy

; 1025 :             _Set(_Right._Getimpl()->_Copy(&_Mystorage));

  0004e	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00055	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ ; std::_Func_class<void>::_Getimpl
  0005a	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv72[rbp], rax
  00061	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv72[rbp]
  00068	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006e	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00075	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007c	48 8b d0	 mov	 rdx, rax
  0007f	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv72[rbp]
  00086	ff 95 c8 00 00
	00		 call	 QWORD PTR tv79[rbp]
  0008c	48 8b d0	 mov	 rdx, rax
  0008f	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00096	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z ; std::_Func_class<void>::_Set
$LN2@Reset_copy:

; 1026 :         }
; 1027 :     }

  0009b	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000a2	5f		 pop	 rdi
  000a3	5d		 pop	 rbp
  000a4	c3		 ret	 0
?_Reset_copy@?$_Func_class@X$$V@std@@IEAAXAEBV12@@Z ENDP ; std::_Func_class<void>::_Reset_copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ
_TEXT	SEGMENT
tv67 = 192
this$ = 240
?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ PROC		; std::_Func_class<void>::_Empty, COMDAT

; 1019 :     bool _Empty() const noexcept { // return true if no stored object

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1020 :         return !_Getimpl();

  00037	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ ; std::_Func_class<void>::_Getimpl
  00043	90		 npad	 1
  00044	48 85 c0	 test	 rax, rax
  00047	75 0c		 jne	 SHORT $LN3@Empty
  00049	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv67[rbp], 1
  00053	eb 0a		 jmp	 SHORT $LN4@Empty
$LN3@Empty:
  00055	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv67[rbp], 0
$LN4@Empty:
  0005f	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv67[rbp]

; 1021 :     }

  00066	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0006d	5f		 pop	 rdi
  0006e	5d		 pop	 rbp
  0006f	c3		 ret	 0
?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ ENDP		; std::_Func_class<void>::_Empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??1?$_Func_class@X$$V@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Func_class@X$$V@std@@QEAA@XZ PROC			; std::_Func_class<void>::~_Func_class<void>, COMDAT

; 1010 :     ~_Func_class() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1011 :         _Tidy();

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Tidy@?$_Func_class@X$$V@std@@IEAAXXZ ; std::_Func_class<void>::_Tidy
  00043	90		 npad	 1

; 1012 :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??1?$_Func_class@X$$V@std@@QEAA@XZ ENDP			; std::_Func_class<void>::~_Func_class<void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??R?$_Func_class@X$$V@std@@QEBAXXZ
_TEXT	SEGMENT
_Impl$ = 8
this$ = 256
??R?$_Func_class@X$$V@std@@QEBAXXZ PROC			; std::_Func_class<void>::operator(), COMDAT

; 1002 :     _Ret operator()(_Types... _Args) const { // call through stored object

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1003 :         if (_Empty()) {

  00036	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@X$$V@std@@IEBA_NXZ ; std::_Func_class<void>::_Empty
  00042	0f b6 c0	 movzx	 eax, al
  00045	85 c0		 test	 eax, eax
  00047	74 05		 je	 SHORT $LN2@operator

; 1004 :             _Xbad_function_call();

  00049	e8 00 00 00 00	 call	 ?_Xbad_function_call@std@@YAXXZ ; std::_Xbad_function_call
$LN2@operator:

; 1005 :         }
; 1006 :         const auto _Impl = _Getimpl();

  0004e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@X$$V@std@@AEBAPEAV?$_Func_base@X$$V@2@XZ ; std::_Func_class<void>::_Getimpl
  0005a	48 89 45 08	 mov	 QWORD PTR _Impl$[rbp], rax

; 1007 :         return _Impl->_Do_call(_STD forward<_Types>(_Args)...);

  0005e	48 8b 45 08	 mov	 rax, QWORD PTR _Impl$[rbp]
  00062	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00065	48 8b 4d 08	 mov	 rcx, QWORD PTR _Impl$[rbp]
  00069	ff 50 10	 call	 QWORD PTR [rax+16]
$LN3@operator:

; 1008 :     }

  0006c	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00073	5f		 pop	 rdi
  00074	5d		 pop	 rbp
  00075	c3		 ret	 0
??R?$_Func_class@X$$V@std@@QEBAXXZ ENDP			; std::_Func_class<void>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$_Func_class@X$$V@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_Func_class@X$$V@std@@QEAA@XZ PROC			; std::_Func_class<void>::_Func_class<void>, COMDAT

; 998  :     _Func_class() noexcept { // construct without stored object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 999  :         _Set(nullptr);

  00037	33 d2		 xor	 edx, edx
  00039	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00040	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@X$$V@std@@AEAAXPEAV?$_Func_base@X$$V@2@@Z ; std::_Func_class<void>::_Set
  00045	90		 npad	 1

; 1000 :     }

  00046	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
??0?$_Func_class@X$$V@std@@QEAA@XZ ENDP			; std::_Func_class<void>::_Func_class<void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAX_K@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::__autoclassinit2, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  00034	33 c0		 xor	 eax, eax
  00036	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR classSize$[rbp]
  0003d	f3 aa		 rep stosb
  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAX_K@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 224
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::operator++, COMDAT

; 110  :     _List_unchecked_iterator& operator++() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 111  :         _Mybase::operator++();

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator++

; 112  :         return *this;

  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 113  :     }

  00049	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00050	5f		 pop	 rdi
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEBAAEAV?$function@$$A6AXXZ@1@XZ
_TEXT	SEGMENT
this$ = 224
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEBAAEAV?$function@$$A6AXXZ@1@XZ PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::operator*, COMDAT

; 102  :     _NODISCARD reference operator*() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 103  :         return const_cast<reference>(_Mybase::operator*());

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$function@$$A6AXXZ@1@XZ ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator*

; 104  :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEBAAEAV?$function@$$A6AXXZ@1@XZ ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 224
_Pnode$ = 232
_Plist$ = 240
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z PROC ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >, COMDAT

; 98   :     _List_unchecked_iterator(_Nodeptr _Pnode, const _Mylist* _Plist)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 99   :         : _Mybase(_Pnode, _Plist) { // construct with node pointer _Pnode

  00040	4c 8b 85 f0 00
	00 00		 mov	 r8, QWORD PTR _Plist$[rbp]
  00047	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Pnode$[rbp]
  0004e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>

; 100  :     }

  0005a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00061	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00068	5f		 pop	 rdi
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 192
this$ = 240
_Right$ = 248
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator!=, COMDAT

; 75   :     _NODISCARD bool operator!=(const _List_unchecked_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 76   :         return !(*this == _Right);

  0003b	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  00042	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	e8 00 00 00 00	 call	 ??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator==
  0004e	0f b6 c0	 movzx	 eax, al
  00051	85 c0		 test	 eax, eax
  00053	75 0c		 jne	 SHORT $LN3@operator
  00055	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv69[rbp], 1
  0005f	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00061	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv69[rbp], 0
$LN4@operator:
  0006b	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv69[rbp]

; 77   :     }

  00072	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00079	5f		 pop	 rdi
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator!=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv67 = 192
this$ = 240
_Right$ = 248
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator==, COMDAT

; 71   :     _NODISCARD bool operator==(const _List_unchecked_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 72   :         return _Ptr == _Right._Ptr;

  0003b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00049	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004c	48 39 08	 cmp	 QWORD PTR [rax], rcx
  0004f	75 0c		 jne	 SHORT $LN3@operator
  00051	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv67[rbp], 1
  0005b	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  0005d	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv67[rbp], 0
$LN4@operator:
  00067	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv67[rbp]

; 73   :     }

  0006e	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00075	5f		 pop	 rdi
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
??8?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 224
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator++, COMDAT

; 49   :     _List_unchecked_const_iterator& operator++() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 50   :         _Ptr = _Ptr->_Next;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00047	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 51   :         return *this;

  0004d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 52   :     }

  00054	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005b	5f		 pop	 rdi
  0005c	5d		 pop	 rbp
  0005d	c3		 ret	 0
??E?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAAAEAV01@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$function@$$A6AXXZ@1@XZ
_TEXT	SEGMENT
this$ = 224
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$function@$$A6AXXZ@1@XZ PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator*, COMDAT

; 41   :     _NODISCARD reference operator*() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 42   :         return _Ptr->_Myval;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 83 c0 10	 add	 rax, 16

; 43   :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??D?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBAAEBV?$function@$$A6AXXZ@1@XZ ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z
_TEXT	SEGMENT
this$ = 224
_Pnode$ = 232
_Plist$ = 240
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z PROC ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>, COMDAT

; 36   :     _List_unchecked_const_iterator(_Nodeptr _Pnode, const _Mylist* _Plist)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 37   :         : _Ptr(_Pnode) { // construct with node pointer _Pnode

  00040	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Pnode$[rbp]
  0004e	48 89 08	 mov	 QWORD PTR [rax], rcx

; 38   :         this->_Adopt(_Plist);

  00051	48 8b 95 f0 00
	00 00		 mov	 rdx, QWORD PTR _Plist$[rbp]
  00058	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005f	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ; std::_Iterator_base0::_Adopt

; 39   :     }

  00064	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??0?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z ENDP ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$_Emplace@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@QEAU21@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z
_TEXT	SEGMENT
_Mysize$ = 8
_Op$ = 40
$T4 = 280
tv80 = 296
tv82 = 304
__$ArrayPad$ = 312
this$ = 352
_Where$ = 360
<_Val_0>$ = 368
??$_Emplace@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@QEAU21@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z PROC ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Emplace<std::shared_ptr<std::thread> >, COMDAT

; 950  :     _Nodeptr _Emplace(const _Nodeptr _Where, _Valty&&... _Val) { // insert element at _Where

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR [rsp+392]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c5	 xor	 rax, rbp
  0003e	48 89 85 38 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00045	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  0004c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 951  :         size_type& _Mysize = _Mypair._Myval2._Mysize;

  00051	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00058	48 83 c0 10	 add	 rax, 16
  0005c	48 89 45 08	 mov	 QWORD PTR _Mysize$[rbp], rax

; 952  :         if (_Mysize == max_size()) {

  00060	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00067	e8 00 00 00 00	 call	 ?max_size@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEBA_KXZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::max_size
  0006c	48 8b 4d 08	 mov	 rcx, QWORD PTR _Mysize$[rbp]
  00070	48 39 01	 cmp	 QWORD PTR [rcx], rax
  00073	75 0c		 jne	 SHORT $LN2@Emplace

; 953  :             _Xlength_error("list<T> too long");

  00075	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@MOGOBHAF@list?$DMT?$DO?5too?5long@
  0007c	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Emplace:

; 954  :         }
; 955  : 
; 956  :         _List_node_emplace_op2<_Alnode> _Op{_Getal(), _STD forward<_Valty>(_Val)...};

  00081	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00088	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Getal
  0008d	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  00094	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR <_Val_0>$[rbp]
  0009b	e8 00 00 00 00	 call	 ??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z ; std::forward<std::shared_ptr<std::thread> >
  000a0	48 89 85 30 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  000a7	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR tv82[rbp]
  000ae	48 8b 95 28 01
	00 00		 mov	 rdx, QWORD PTR tv80[rbp]
  000b5	48 8d 4d 28	 lea	 rcx, QWORD PTR _Op$[rbp]
  000b9	e8 00 00 00 00	 call	 ??$?0V?$shared_ptr@Vthread@std@@@std@@@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@AEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > ><std::shared_ptr<std::thread> >

; 957  :         ++_Mysize;

  000be	48 8b 45 08	 mov	 rax, QWORD PTR _Mysize$[rbp]
  000c2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c5	48 ff c0	 inc	 rax
  000c8	48 8b 4d 08	 mov	 rcx, QWORD PTR _Mysize$[rbp]
  000cc	48 89 01	 mov	 QWORD PTR [rcx], rax

; 958  :         return _Op._Transfer_before(_Where);

  000cf	48 8b 95 68 01
	00 00		 mov	 rdx, QWORD PTR _Where$[rbp]
  000d6	48 8d 4d 28	 lea	 rcx, QWORD PTR _Op$[rbp]
  000da	e8 00 00 00 00	 call	 ?_Transfer_before@?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@QEAU32@@Z ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::_Transfer_before
  000df	48 89 85 18 01
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000e6	48 8d 4d 28	 lea	 rcx, QWORD PTR _Op$[rbp]
  000ea	e8 00 00 00 00	 call	 ??1?$_List_node_emplace_op2@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@QEAA@XZ ; std::_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::~_List_node_emplace_op2<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
  000ef	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR $T4[rbp]

; 959  :     }

  000f6	48 8b f8	 mov	 rdi, rax
  000f9	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Emplace@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@QEAU21@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z$rtcFrameData
  00104	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00109	48 8b c7	 mov	 rax, rdi
  0010c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00113	48 33 cd	 xor	 rcx, rbp
  00116	e8 00 00 00 00	 call	 __security_check_cookie
  0011b	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  00122	5f		 pop	 rdi
  00123	5d		 pop	 rbp
  00124	c3		 ret	 0
??$_Emplace@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@QEAU21@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z ENDP ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Emplace<std::shared_ptr<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z PROC ; std::forward<std::shared_ptr<std::thread> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z ENDP ; std::forward<std::shared_ptr<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??$emplace_back@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z
_TEXT	SEGMENT
_Result$ = 8
tv76 = 216
tv74 = 224
this$ = 272
<_Val_0>$ = 280
??$emplace_back@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z PROC ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::emplace_back<std::shared_ptr<std::thread> >, COMDAT

; 930  :     decltype(auto) emplace_back(_Valty&&... _Val) { // insert element at end

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 931  :         reference _Result = _Emplace(_Mypair._Myval2._Myhead, _STD forward<_Valty>(_Val)...)->_Myval;

  0003b	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR <_Val_0>$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@V?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z ; std::forward<std::shared_ptr<std::thread> >
  00047	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0004e	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00055	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00059	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv74[rbp], rax
  00060	4c 8b 85 d8 00
	00 00		 mov	 r8, QWORD PTR tv76[rbp]
  00067	48 8b 95 e0 00
	00 00		 mov	 rdx, QWORD PTR tv74[rbp]
  0006e	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00075	e8 00 00 00 00	 call	 ??$_Emplace@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@QEAU21@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Emplace<std::shared_ptr<std::thread> >
  0007a	48 83 c0 10	 add	 rax, 16
  0007e	48 89 45 08	 mov	 QWORD PTR _Result$[rbp], rax

; 932  : 
; 933  : #if _HAS_CXX17
; 934  :         return _Result;

  00082	48 8b 45 08	 mov	 rax, QWORD PTR _Result$[rbp]

; 935  : #else // ^^^ _HAS_CXX17 // !_HAS_CXX17 vvv
; 936  :         (void) _Result;
; 937  : #endif // _HAS_CXX17
; 938  :     }

  00086	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  0008d	5f		 pop	 rdi
  0008e	5d		 pop	 rbp
  0008f	c3		 ret	 0
??$emplace_back@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z ENDP ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::emplace_back<std::shared_ptr<std::thread> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G?$shared_ptr@Vthread@std@@@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_G?$shared_ptr@Vthread@std@@@std@@QEAAPEAXI@Z PROC	; std::shared_ptr<std::thread>::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ ; std::shared_ptr<std::thread>::~shared_ptr<std::thread>
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 10 00 00 00	 mov	 edx, 16
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_G?$shared_ptr@Vthread@std@@@std@@QEAAPEAXI@Z ENDP	; std::shared_ptr<std::thread>::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$shared_ptr@Vthread@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$shared_ptr@Vthread@std@@@std@@QEAAX_K@Z PROC ; std::shared_ptr<std::thread>::__autoclassinit2, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  00034	33 c0		 xor	 eax, eax
  00036	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR classSize$[rbp]
  0003d	f3 aa		 rep stosb
  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?__autoclassinit2@?$shared_ptr@Vthread@std@@@std@@QEAAX_K@Z ENDP ; std::shared_ptr<std::thread>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ PROC		; std::shared_ptr<std::thread>::~shared_ptr<std::thread>, COMDAT

; 1132 :     ~shared_ptr() noexcept { // release resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1133 :         this->_Decref();

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@Vthread@std@@@std@@IEAAXXZ ; std::_Ptr_base<std::thread>::_Decref
  00043	90		 npad	 1

; 1134 :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ ENDP		; std::shared_ptr<std::thread>::~shared_ptr<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@Vthread@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??0?$shared_ptr@Vthread@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::shared_ptr<std::thread>::shared_ptr<std::thread>, COMDAT

; 1088 :     shared_ptr(shared_ptr&& _Right) noexcept { // construct shared_ptr object that takes resource from _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00043	e8 00 00 00 00	 call	 ??0?$_Ptr_base@Vthread@std@@@std@@IEAA@XZ ; std::_Ptr_base<std::thread>::_Ptr_base<std::thread>
  00048	90		 npad	 1

; 1089 :         this->_Move_construct_from(_STD move(_Right));

  00049	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00050	e8 00 00 00 00	 call	 ??$move@AEAV?$shared_ptr@Vthread@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vthread@std@@@0@AEAV10@@Z ; std::move<std::shared_ptr<std::thread> &>
  00055	90		 npad	 1
  00056	48 8b d0	 mov	 rdx, rax
  00059	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	e8 00 00 00 00	 call	 ??$_Move_construct_from@Vthread@std@@@?$_Ptr_base@Vthread@std@@@std@@IEAAX$$QEAV01@@Z ; std::_Ptr_base<std::thread>::_Move_construct_from<std::thread>
  00065	90		 npad	 1

; 1090 :     }

  00066	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
??0?$shared_ptr@Vthread@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::shared_ptr<std::thread>::shared_ptr<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@Vthread@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$shared_ptr@Vthread@std@@@std@@QEAA@XZ PROC		; std::shared_ptr<std::thread>::shared_ptr<std::thread>, COMDAT

; 1016 :     constexpr shared_ptr() noexcept {} // construct empty shared_ptr

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ??0?$_Ptr_base@Vthread@std@@@std@@IEAA@XZ ; std::_Ptr_base<std::thread>::_Ptr_base<std::thread>
  00043	90		 npad	 1
  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
??0?$shared_ptr@Vthread@std@@@std@@QEAA@XZ ENDP		; std::shared_ptr<std::thread>::shared_ptr<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@Vthread@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Decref@?$_Ptr_base@Vthread@std@@@std@@IEAAXXZ PROC	; std::_Ptr_base<std::thread>::_Decref, COMDAT

; 881  :     void _Decref() noexcept { // decrement reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 882  :         if (_Rep) {

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00043	74 11		 je	 SHORT $LN2@Decref

; 883  :             _Rep->_Decref();

  00045	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00050	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decref
  00055	90		 npad	 1
$LN2@Decref:

; 884  :         }
; 885  :     }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
?_Decref@?$_Ptr_base@Vthread@std@@@std@@IEAAXXZ ENDP	; std::_Ptr_base<std::thread>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ??0?$_Ptr_base@Vthread@std@@@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_Ptr_base@Vthread@std@@@std@@IEAA@XZ PROC		; std::_Ptr_base<std::thread>::_Ptr_base<std::thread>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory

; 910  :     element_type* _Ptr{nullptr};

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 911  :     _Ref_count_base* _Rep{nullptr};

  00045	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; File E:\project\game_server\Server\ThreadPool.cpp

  00054	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00062	5f		 pop	 rdi
  00063	5d		 pop	 rbp
  00064	c3		 ret	 0
??0?$_Ptr_base@Vthread@std@@@std@@IEAA@XZ ENDP		; std::_Ptr_base<std::thread>::_Ptr_base<std::thread>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$_Ptr_base@Vthread@std@@@std@@IEBAPEAVthread@2@XZ
_TEXT	SEGMENT
this$ = 224
?get@?$_Ptr_base@Vthread@std@@@std@@IEBAPEAVthread@2@XZ PROC ; std::_Ptr_base<std::thread>::get, COMDAT

; 816  :     _NODISCARD element_type* get() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 817  :         return _Ptr;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 818  :     }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?get@?$_Ptr_base@Vthread@std@@@std@@IEBAPEAVthread@2@XZ ENDP ; std::_Ptr_base<std::thread>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z
_TEXT	SEGMENT
_Rx$ = 8
_Ret$ = 40
$T4 = 280
$T5 = 312
$T6 = 340
tv84 = 360
tv82 = 368
tv85 = 376
__$ArrayPad$ = 384
__$ReturnUdt$ = 432
<_Args_0>$ = 440
<_Args_1>$ = 448
??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z PROC ; std::make_shared<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>, COMDAT

; 1592 : _NODISCARD shared_ptr<_Ty> make_shared(_Types&&... _Args) { // make a shared_ptr

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec b8 01
	00 00		 sub	 rsp, 440		; 000001b8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 6e 00 00 00	 mov	 ecx, 110		; 0000006eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 d8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+472]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c5	 xor	 rax, rbp
  0003e	48 89 85 80 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00045	c7 85 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR $T6[rbp], 0
  0004f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00056	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1593 :     const auto _Rx = new _Ref_count_obj2<_Ty>(_STD forward<_Types>(_Args)...);

  0005b	b9 20 00 00 00	 mov	 ecx, 32			; 00000020H
  00060	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  00065	48 89 85 38 01
	00 00		 mov	 QWORD PTR $T5[rbp], rax
  0006c	48 83 bd 38 01
	00 00 00	 cmp	 QWORD PTR $T5[rbp], 0
  00074	74 49		 je	 SHORT $LN3@make_share
  00076	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR <_Args_1>$[rbp]
  0007d	e8 00 00 00 00	 call	 ??$forward@PEAVThreadPool@@@std@@YA$$QEAPEAVThreadPool@@AEAPEAV1@@Z ; std::forward<ThreadPool *>
  00082	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  00089	48 8b 8d b8 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00090	e8 00 00 00 00	 call	 ??$forward@P8ThreadPool@@EAAXXZ@std@@YA$$QEAP8ThreadPool@@EAAXXZAEAP81@EAAXXZ@Z ; std::forward<void (__cdecl ThreadPool::*)(void)>
  00095	48 89 85 70 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  0009c	4c 8b 85 68 01
	00 00		 mov	 r8, QWORD PTR tv84[rbp]
  000a3	48 8b 95 70 01
	00 00		 mov	 rdx, QWORD PTR tv82[rbp]
  000aa	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  000b1	e8 00 00 00 00	 call	 ??$?0P8ThreadPool@@EAAXXZPEAV0@@?$_Ref_count_obj2@Vthread@std@@@std@@QEAA@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ; std::_Ref_count_obj2<std::thread>::_Ref_count_obj2<std::thread><void (__cdecl ThreadPool::*)(void),ThreadPool *>
  000b6	48 89 85 78 01
	00 00		 mov	 QWORD PTR tv85[rbp], rax
  000bd	eb 0b		 jmp	 SHORT $LN4@make_share
$LN3@make_share:
  000bf	48 c7 85 78 01
	00 00 00 00 00
	00		 mov	 QWORD PTR tv85[rbp], 0
$LN4@make_share:
  000ca	48 8b 85 78 01
	00 00		 mov	 rax, QWORD PTR tv85[rbp]
  000d1	48 89 85 18 01
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000d8	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR $T4[rbp]
  000df	48 89 45 08	 mov	 QWORD PTR _Rx$[rbp], rax

; 1594 :     shared_ptr<_Ty> _Ret;

  000e3	ba 10 00 00 00	 mov	 edx, 16
  000e8	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ret$[rbp]
  000ec	e8 00 00 00 00	 call	 ?__autoclassinit2@?$shared_ptr@Vthread@std@@@std@@QEAAX_K@Z
  000f1	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ret$[rbp]
  000f5	e8 00 00 00 00	 call	 ??0?$shared_ptr@Vthread@std@@@std@@QEAA@XZ ; std::shared_ptr<std::thread>::shared_ptr<std::thread>

; 1595 :     _Ret._Set_ptr_rep_and_enable_shared(_STD addressof(_Rx->_Storage._Value), _Rx);

  000fa	48 8b 45 08	 mov	 rax, QWORD PTR _Rx$[rbp]
  000fe	48 83 c0 10	 add	 rax, 16
  00102	48 8b c8	 mov	 rcx, rax
  00105	e8 00 00 00 00	 call	 ??$addressof@Vthread@std@@@std@@YAPEAVthread@0@AEAV10@@Z ; std::addressof<std::thread>
  0010a	4c 8b 45 08	 mov	 r8, QWORD PTR _Rx$[rbp]
  0010e	48 8b d0	 mov	 rdx, rax
  00111	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ret$[rbp]
  00115	e8 00 00 00 00	 call	 ??$_Set_ptr_rep_and_enable_shared@Vthread@std@@@?$shared_ptr@Vthread@std@@@std@@AEAAXQEAVthread@1@QEAV_Ref_count_base@1@@Z ; std::shared_ptr<std::thread>::_Set_ptr_rep_and_enable_shared<std::thread>

; 1596 :     return _Ret;

  0011a	48 8d 55 28	 lea	 rdx, QWORD PTR _Ret$[rbp]
  0011e	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00125	e8 00 00 00 00	 call	 ??0?$shared_ptr@Vthread@std@@@std@@QEAA@$$QEAV01@@Z ; std::shared_ptr<std::thread>::shared_ptr<std::thread>
  0012a	8b 85 54 01 00
	00		 mov	 eax, DWORD PTR $T6[rbp]
  00130	83 c8 01	 or	 eax, 1
  00133	89 85 54 01 00
	00		 mov	 DWORD PTR $T6[rbp], eax
  00139	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ret$[rbp]
  0013d	e8 00 00 00 00	 call	 ??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ ; std::shared_ptr<std::thread>::~shared_ptr<std::thread>
  00142	48 8b 85 b0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1597 : }

  00149	48 8b f8	 mov	 rdi, rax
  0014c	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00150	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z$rtcFrameData
  00157	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0015c	48 8b c7	 mov	 rax, rdi
  0015f	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00166	48 33 cd	 xor	 rcx, rbp
  00169	e8 00 00 00 00	 call	 __security_check_cookie
  0016e	48 8d a5 98 01
	00 00		 lea	 rsp, QWORD PTR [rbp+408]
  00175	5f		 pop	 rdi
  00176	5d		 pop	 rbp
  00177	c3		 ret	 0
??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ENDP ; std::make_shared<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Rx$ = 8
_Ret$ = 40
$T4 = 280
$T5 = 312
$T6 = 340
tv84 = 360
tv82 = 368
tv85 = 376
__$ArrayPad$ = 384
__$ReturnUdt$ = 432
<_Args_0>$ = 440
<_Args_1>$ = 448
?dtor$0@?0???$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA PROC ; `std::make_shared<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00019	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00020	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00025	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00029	5f		 pop	 rdi
  0002a	5d		 pop	 rbp
  0002b	c3		 ret	 0
?dtor$0@?0???$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA ENDP ; `std::make_shared<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Rx$ = 8
_Ret$ = 40
$T4 = 280
$T5 = 312
$T6 = 340
tv84 = 360
tv82 = 368
tv85 = 376
__$ArrayPad$ = 384
__$ReturnUdt$ = 432
<_Args_0>$ = 440
<_Args_1>$ = 448
?dtor$0@?0???$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA PROC ; `std::make_shared<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00019	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00020	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00025	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00029	5f		 pop	 rdi
  0002a	5d		 pop	 rbp
  0002b	c3		 ret	 0
?dtor$0@?0???$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z@4HA ENDP ; `std::make_shared<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z PROC ; std::forward<std::function<void __cdecl(void)> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z ENDP ; std::forward<std::function<void __cdecl(void)> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z
_TEXT	SEGMENT
_Exc$ = 8
_Tup$ = 56
_Fp$ = 104
$T5 = 328
$T6 = 376
tv131 = 392
__$ArrayPad$ = 400
_Flag$ = 448
_Fx$ = 456
??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z PROC ; std::call_once<`ThreadPool::Stop'::`2'::<lambda_1> >, COMDAT

; 551  : void(call_once)(once_flag& _Flag, _Fn&& _Fx, _Args&&... _Ax) { // call _Fx(_Ax...) once

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 01
	00 00		 sub	 rsp, 456		; 000001c8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 72 00 00 00	 mov	 ecx, 114		; 00000072H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 e8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+488]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 90 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 552  :     using _Tuple = tuple<_Fn&&, _Args&&..., exception_ptr&>;
; 553  :     using _Seq   = make_index_sequence<1 + sizeof...(_Args)>;
; 554  : 
; 555  :     exception_ptr _Exc;

  0004c	ba 10 00 00 00	 mov	 edx, 16
  00051	48 8d 4d 08	 lea	 rcx, QWORD PTR _Exc$[rbp]
  00055	e8 00 00 00 00	 call	 ?__autoclassinit2@exception_ptr@std@@QEAAX_K@Z
  0005a	48 8d 4d 08	 lea	 rcx, QWORD PTR _Exc$[rbp]
  0005e	e8 00 00 00 00	 call	 ??0exception_ptr@std@@QEAA@XZ ; std::exception_ptr::exception_ptr
  00063	90		 npad	 1

; 556  :     _Tuple _Tup(_STD forward<_Fn>(_Fx), _STD forward<_Args>(_Ax)..., _Exc);

  00064	48 8b 8d c8 01
	00 00		 mov	 rcx, QWORD PTR _Fx$[rbp]
  0006b	e8 00 00 00 00	 call	 ??$forward@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@std@@YA$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAV1?1??23@QEAAXXZ@@Z ; std::forward<`ThreadPool::Stop'::`2'::<lambda_1> >
  00070	4c 8d 45 08	 lea	 r8, QWORD PTR _Exc$[rbp]
  00074	48 8b d0	 mov	 rdx, rax
  00077	48 8d 4d 38	 lea	 rcx, QWORD PTR _Tup$[rbp]
  0007b	e8 00 00 00 00	 call	 ??$?0V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@$0A@@?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@QEAA@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@1@@Z ; std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &><`ThreadPool::Stop'::`2'::<lambda_1>,std::exception_ptr &,0>

; 557  : 
; 558  :     _Execute_once_fp_t _Fp = &_Callback_once<_Tuple, _Seq, 1 + sizeof...(_Args)>;

  00080	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??$_Callback_once@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@U?$integer_sequence@_K$0A@@2@$00@std@@YAHPEAX0PEAPEAX@Z ; std::_Callback_once<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &>,std::integer_sequence<unsigned __int64,0>,1>
  00087	48 89 45 68	 mov	 QWORD PTR _Fp$[rbp], rax

; 559  : 
; 560  :     if (_Execute_once(_Flag, _Fp, _STD addressof(_Tup)) != 0) {

  0008b	48 8d 4d 38	 lea	 rcx, QWORD PTR _Tup$[rbp]
  0008f	e8 00 00 00 00	 call	 ??$addressof@V?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@std@@@std@@YAPEAV?$tuple@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@AEAVexception_ptr@std@@@0@AEAV10@@Z ; std::addressof<std::tuple<`ThreadPool::Stop'::`2'::<lambda_1> &&,std::exception_ptr &> >
  00094	4c 8b c0	 mov	 r8, rax
  00097	48 8b 55 68	 mov	 rdx, QWORD PTR _Fp$[rbp]
  0009b	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR _Flag$[rbp]
  000a2	e8 00 00 00 00	 call	 ?_Execute_once@std@@YAHAEAUonce_flag@1@P6AHPEAX1PEAPEAX@Z1@Z ; std::_Execute_once
  000a7	85 c0		 test	 eax, eax
  000a9	74 0b		 je	 SHORT $LN2@call_once

; 561  :         return;

  000ab	48 8d 4d 08	 lea	 rcx, QWORD PTR _Exc$[rbp]
  000af	e8 00 00 00 00	 call	 ??1exception_ptr@std@@QEAA@XZ ; std::exception_ptr::~exception_ptr
  000b4	eb 51		 jmp	 SHORT $LN4@call_once
$LN2@call_once:

; 562  :     }
; 563  : 
; 564  :     if (_Exc) {

  000b6	48 8d 4d 08	 lea	 rcx, QWORD PTR _Exc$[rbp]
  000ba	e8 00 00 00 00	 call	 ??Bexception_ptr@std@@QEBA_NXZ ; std::exception_ptr::operator bool
  000bf	0f b6 c0	 movzx	 eax, al
  000c2	85 c0		 test	 eax, eax
  000c4	74 31		 je	 SHORT $LN3@call_once

; 565  :         _STD rethrow_exception(_Exc);

  000c6	48 8d 85 48 01
	00 00		 lea	 rax, QWORD PTR $T5[rbp]
  000cd	48 89 85 78 01
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  000d4	48 8d 55 08	 lea	 rdx, QWORD PTR _Exc$[rbp]
  000d8	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR $T6[rbp]
  000df	e8 00 00 00 00	 call	 ??0exception_ptr@std@@QEAA@AEBV01@@Z ; std::exception_ptr::exception_ptr
  000e4	48 89 85 88 01
	00 00		 mov	 QWORD PTR tv131[rbp], rax
  000eb	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR tv131[rbp]
  000f2	e8 00 00 00 00	 call	 ?rethrow_exception@std@@YAXVexception_ptr@1@@Z ; std::rethrow_exception
$LN3@call_once:

; 566  :     }
; 567  : 
; 568  :     _XGetLastError();

  000f7	e8 00 00 00 00	 call	 ?_XGetLastError@std@@YAXXZ ; std::_XGetLastError
  000fc	90		 npad	 1

; 569  : }

  000fd	48 8d 4d 08	 lea	 rcx, QWORD PTR _Exc$[rbp]
  00101	e8 00 00 00 00	 call	 ??1exception_ptr@std@@QEAA@XZ ; std::exception_ptr::~exception_ptr
  00106	90		 npad	 1
$LN4@call_once:
  00107	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0010b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z$rtcFrameData
  00112	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00117	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0011e	48 33 cd	 xor	 rcx, rbp
  00121	e8 00 00 00 00	 call	 __security_check_cookie
  00126	48 8d a5 a8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+424]
  0012d	5f		 pop	 rdi
  0012e	5d		 pop	 rbp
  0012f	c3		 ret	 0
$LN7@call_once:
??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z ENDP ; std::call_once<`ThreadPool::Stop'::`2'::<lambda_1> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Exc$ = 8
_Tup$ = 56
_Fp$ = 104
$T5 = 328
$T6 = 376
tv131 = 392
__$ArrayPad$ = 400
_Flag$ = 448
_Fx$ = 456
?dtor$0@?0???$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z@4HA PROC ; `std::call_once<`ThreadPool::Stop'::`2'::<lambda_1> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR _Exc$[rbp]
  00018	e8 00 00 00 00	 call	 ??1exception_ptr@std@@QEAA@XZ ; std::exception_ptr::~exception_ptr
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z@4HA ENDP ; `std::call_once<`ThreadPool::Stop'::`2'::<lambda_1> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Exc$ = 8
_Tup$ = 56
_Fp$ = 104
$T5 = 328
$T6 = 376
tv131 = 392
__$ArrayPad$ = 400
_Flag$ = 448
_Fx$ = 456
?dtor$0@?0???$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z@4HA PROC ; `std::call_once<`ThreadPool::Stop'::`2'::<lambda_1> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR _Exc$[rbp]
  00018	e8 00 00 00 00	 call	 ??1exception_ptr@std@@QEAA@XZ ; std::exception_ptr::~exception_ptr
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z@4HA ENDP ; `std::call_once<`ThreadPool::Stop'::`2'::<lambda_1> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ??0<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEAA@PEAV2@@Z
_TEXT	SEGMENT
this$ = 224
_This$ = 232
??0<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEAA@PEAV2@@Z PROC ; `ThreadPool::Stop'::`2'::<lambda_1>::<lambda_1>, COMDAT

; 23   : 		});

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _This$[rbp]
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx
  0004c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005a	5f		 pop	 rdi
  0005b	5d		 pop	 rbp
  0005c	c3		 ret	 0
??0<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEAA@PEAV2@@Z ENDP ; `ThreadPool::Stop'::`2'::<lambda_1>::<lambda_1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ??R<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEBA@XZ
_TEXT	SEGMENT
tv71 = 192
this$ = 240
??R<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEBA@XZ PROC	; `ThreadPool::Stop'::`2'::<lambda_1>::operator(), COMDAT

; 23   : 		});

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 21   : 		std::cout << "call once stop" << std::endl;

  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@FHKAOMPO@call?5once?5stop@
  0003d	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00044	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00049	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  00050	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  00057	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv71[rbp]
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 22   : 		StopThreadGroup();

  00064	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0006e	e8 00 00 00 00	 call	 ?StopThreadGroup@ThreadPool@@AEAAXXZ ; ThreadPool::StopThreadGroup

; 23   : 		});

  00073	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0007a	5f		 pop	 rdi
  0007b	5d		 pop	 rbp
  0007c	c3		 ret	 0
??R<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEBA@XZ ENDP	; `ThreadPool::Stop'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z
_TEXT	SEGMENT
this$ = 224
_Func$ = 232
??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z PROC ; std::function<void __cdecl(enum EnumEvent)>::function<void __cdecl(enum EnumEvent)><`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void>, COMDAT

; 1167 :     function(_Fx _Func) { // construct wrapper holding copy of _Func

  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00041	e8 00 00 00 00	 call	 ??0?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ ; std::_Func_class<void,enum EnumEvent>::_Func_class<void,enum EnumEvent>
  00046	90		 npad	 1

; 1168 :         this->_Reset(_STD move(_Func));

  00047	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR _Func$[rbp]
  0004e	e8 00 00 00 00	 call	 ??$move@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YA$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z ; std::move<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &>
  00053	48 8b d0	 mov	 rdx, rax
  00056	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005d	e8 00 00 00 00	 call	 ??$_Reset@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z ; std::_Func_class<void,enum EnumEvent>::_Reset<`ThreadPool::ThreadPool'::`1'::<lambda_1_> >
  00062	90		 npad	 1

; 1169 :     }

  00063	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00071	5f		 pop	 rdi
  00072	5d		 pop	 rbp
  00073	c3		 ret	 0
??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z ENDP ; std::function<void __cdecl(enum EnumEvent)>::function<void __cdecl(enum EnumEvent)><`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
_Func$ = 232
?dtor$0@?0???$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z@4HA PROC ; `std::function<void __cdecl(enum EnumEvent)>::function<void __cdecl(enum EnumEvent)><`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ ; std::_Func_class<void,enum EnumEvent>::~_Func_class<void,enum EnumEvent>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z@4HA ENDP ; `std::function<void __cdecl(enum EnumEvent)>::function<void __cdecl(enum EnumEvent)><`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
this$ = 224
_Func$ = 232
?dtor$0@?0???$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z@4HA PROC ; `std::function<void __cdecl(enum EnumEvent)>::function<void __cdecl(enum EnumEvent)><`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ ; std::_Func_class<void,enum EnumEvent>::~_Func_class<void,enum EnumEvent>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z@4HA ENDP ; `std::function<void __cdecl(enum EnumEvent)>::function<void __cdecl(enum EnumEvent)><`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$invoke@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@std@@YAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z
_TEXT	SEGMENT
tv73 = 192
tv71 = 200
_Obj$ = 240
<_Args_0>$ = 248
??$invoke@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@std@@YAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z PROC ; std::invoke<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &,enum EnumEvent>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z ; std::forward<enum EnumEvent>
  00047	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  0004e	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00055	e8 00 00 00 00	 call	 ??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z ; std::forward<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &>
  0005a	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  00061	48 8b 95 c0 00
	00 00		 mov	 rdx, QWORD PTR tv73[rbp]
  00068	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR tv71[rbp]
  0006f	e8 00 00 00 00	 call	 ??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@_Invoker_functor@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z ; std::_Invoker_functor::_Call<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &,enum EnumEvent>
  00074	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0007b	5f		 pop	 rdi
  0007c	5d		 pop	 rbp
  0007d	c3		 ret	 0
??$invoke@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@std@@YAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z ENDP ; std::invoke<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &,enum EnumEvent>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@_Invoker_functor@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z
_TEXT	SEGMENT
tv73 = 192
tv71 = 200
_Obj$ = 240
<_Args_0>$ = 248
??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@_Invoker_functor@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z PROC ; std::_Invoker_functor::_Call<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &,enum EnumEvent>, COMDAT

; 1571 : _IMPLEMENT_INVOKE(_EMPTY_ARGUMENT, inline)

  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z ; std::forward<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &>
  00047	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  0004e	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00055	e8 00 00 00 00	 call	 ??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z ; std::forward<enum EnumEvent>
  0005a	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  0005d	88 85 c8 00 00
	00		 mov	 BYTE PTR tv71[rbp], al
  00063	0f b6 95 c8 00
	00 00		 movzx	 edx, BYTE PTR tv71[rbp]
  0006a	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv73[rbp]
  00071	e8 00 00 00 00	 call	 ??R<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@QEBA@W4EnumEvent@@@Z ; `ThreadPool::ThreadPool'::`1'::<lambda_1_>::operator()
  00076	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
??$_Call@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@W4EnumEvent@@@_Invoker_functor@std@@SAXAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@$$QEAW4EnumEvent@@@Z ENDP ; std::_Invoker_functor::_Call<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &,enum EnumEvent>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z PROC ; std::forward<enum EnumEvent>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z ENDP ; std::forward<enum EnumEvent>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z PROC ; std::forward<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@std@@YAAEAV<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@AEAV1?0???02@QEAA@H@Z@@Z ENDP ; std::forward<`ThreadPool::ThreadPool'::`1'::<lambda_1_> &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ??R<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@QEBA@W4EnumEvent@@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv78 = 248
tv82 = 256
tv88 = 264
this$ = 304
e$ = 312
??R<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@QEBA@W4EnumEvent@@@Z PROC ; `ThreadPool::ThreadPool'::`1'::<lambda_1_>::operator(), COMDAT

; 7    : 		}),

  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec 38 01
	00 00		 sub	 rsp, 312		; 00000138H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 4e 00 00 00	 mov	 ecx, 78			; 0000004eH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 5    : 			std::cout << "______e := " << (int)e << " ___ " 

  0003a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0M@CCLFAFBA@______e?5?3?$DN?5@
  00041	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00048	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0004d	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  00054	0f be 85 38 01
	00 00		 movsx	 eax, BYTE PTR e$[rbp]
  0005b	8b d0		 mov	 edx, eax
  0005d	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  00064	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
  0006a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05JCNIFBKL@?5___?5@
  00071	48 8b c8	 mov	 rcx, rax
  00074	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00079	48 89 85 00 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  00080	48 8d 8d c4 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00087	e8 00 00 00 00	 call	 ?get_id@this_thread@std@@YA?AVid@thread@2@XZ ; std::this_thread::get_id
  0008c	8b 00		 mov	 eax, DWORD PTR [rax]
  0008e	89 85 e4 00 00
	00		 mov	 DWORD PTR $T2[rbp], eax
  00094	8b 95 e4 00 00
	00		 mov	 edx, DWORD PTR $T2[rbp]
  0009a	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR tv82[rbp]
  000a1	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z ; std::operator<<<char,std::char_traits<char> >
  000a6	48 89 85 08 01
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  000ad	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  000b4	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR tv88[rbp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 7    : 		}),

  000c1	48 8d a5 18 01
	00 00		 lea	 rsp, QWORD PTR [rbp+280]
  000c8	5f		 pop	 rdi
  000c9	5d		 pop	 rbp
  000ca	c3		 ret	 0
??R<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@QEBA@W4EnumEvent@@@Z ENDP ; `ThreadPool::ThreadPool'::`1'::<lambda_1_>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$atomic@H@std@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 224
__param0$ = 232
??0?$atomic@H@std@@QEAA@H@Z PROC			; std::atomic<int>::atomic<int>, COMDAT
$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	8b 95 e8 00 00
	00		 mov	 edx, DWORD PTR __param0$[rbp]
  00034	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003b	e8 00 00 00 00	 call	 ??0?$_Atomic_integral_facade@H@std@@QEAA@H@Z
  00040	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
??0?$atomic@H@std@@QEAA@H@Z ENDP			; std::atomic<int>::atomic<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ??B?$atomic@H@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
??B?$atomic@H@std@@QEBAHXZ PROC				; std::atomic<int>::operator int, COMDAT

; 1595 :     operator _Ty() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__43A8C20F_atomic
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1596 :         return this->load();

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?load@?$_Atomic_storage@H$03@std@@QEBAHXZ ; std::_Atomic_storage<int,4>::load
  00043	90		 npad	 1

; 1597 :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??B?$atomic@H@std@@QEBAHXZ ENDP				; std::atomic<int>::operator int
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Atomic_integral_facade@H@std@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 224
__param0$ = 232
??0?$_Atomic_integral_facade@H@std@@QEAA@H@Z PROC	; std::_Atomic_integral_facade<int>::_Atomic_integral_facade<int>, COMDAT
$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	8b 95 e8 00 00
	00		 mov	 edx, DWORD PTR __param0$[rbp]
  00034	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003b	e8 00 00 00 00	 call	 ??0?$_Atomic_integral@H$03@std@@QEAA@H@Z
  00040	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
??0?$_Atomic_integral_facade@H@std@@QEAA@H@Z ENDP	; std::_Atomic_integral_facade<int>::_Atomic_integral_facade<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Atomic_integral@H$03@std@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 224
__param0$ = 232
??0?$_Atomic_integral@H$03@std@@QEAA@H@Z PROC		; std::_Atomic_integral<int,4>::_Atomic_integral<int,4>, COMDAT
$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	8b 95 e8 00 00
	00		 mov	 edx, DWORD PTR __param0$[rbp]
  00034	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003b	e8 00 00 00 00	 call	 ??0?$_Atomic_storage@H$03@std@@QEAA@H@Z ; std::_Atomic_storage<int,4>::_Atomic_storage<int,4>
  00040	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
??0?$_Atomic_integral@H$03@std@@QEAA@H@Z ENDP		; std::_Atomic_integral<int,4>::_Atomic_integral<int,4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ??E?$_Atomic_integral@H$03@std@@QEAAHH@Z
_TEXT	SEGMENT
_After$ = 4
this$ = 256
__formal$ = 264
??E?$_Atomic_integral@H$03@std@@QEAAHH@Z PROC		; std::_Atomic_integral<int,4>::operator++, COMDAT

; 1008 :     _Ty operator++(int) noexcept {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__43A8C20F_atomic
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	90		 npad	 1

; 1009 :         unsigned long _After =

  0003b	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00042	e8 00 00 00 00	 call	 ??$_Atomic_address_as@JU?$_Atomic_padded@H@std@@@std@@YAPECJAEAU?$_Atomic_padded@H@0@@Z ; std::_Atomic_address_as<long,std::_Atomic_padded<int> >
  00047	90		 npad	 1
  00048	b9 01 00 00 00	 mov	 ecx, 1
  0004d	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  00051	ff c1		 inc	 ecx
  00053	8b c1		 mov	 eax, ecx
  00055	89 45 04	 mov	 DWORD PTR _After$[rbp], eax

; 1010 :             static_cast<unsigned long>(_InterlockedIncrement(_Atomic_address_as<long>(this->_Storage)));
; 1011 :         --_After;

  00058	8b 45 04	 mov	 eax, DWORD PTR _After$[rbp]
  0005b	ff c8		 dec	 eax
  0005d	89 45 04	 mov	 DWORD PTR _After$[rbp], eax

; 1012 :         return static_cast<_Ty>(_After);

  00060	8b 45 04	 mov	 eax, DWORD PTR _After$[rbp]

; 1013 :     }

  00063	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006a	5f		 pop	 rdi
  0006b	5d		 pop	 rbp
  0006c	c3		 ret	 0
??E?$_Atomic_integral@H$03@std@@QEAAHH@Z ENDP		; std::_Atomic_integral<int,4>::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ?load@?$_Atomic_storage@H$03@std@@QEBAHXZ
_TEXT	SEGMENT
_As_bytes$ = 4
__$ArrayPad$ = 216
this$ = 256
?load@?$_Atomic_storage@H$03@std@@QEBAHXZ PROC		; std::_Atomic_storage<int,4>::load, COMDAT

; 584  :     _NODISCARD _Ty load() const noexcept { // load with sequential consistency

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 d8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__43A8C20F_atomic
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 585  :         auto _As_bytes = _ISO_VOLATILE_LOAD32(_Storage);

  00048	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 ??$_Atomic_address_as@$$CBJ$$CBU?$_Atomic_padded@H@std@@@std@@YAPEDJAEBU?$_Atomic_padded@H@0@@Z ; std::_Atomic_address_as<long const ,std::_Atomic_padded<int> const >
  00057	90		 npad	 1
  00058	8b 00		 mov	 eax, DWORD PTR [rax]
  0005a	89 45 04	 mov	 DWORD PTR _As_bytes$[rbp], eax

; 586  :         _Compiler_or_memory_barrier();
; 587  :         return reinterpret_cast<_Ty&>(_As_bytes);

  0005d	8b 45 04	 mov	 eax, DWORD PTR _As_bytes$[rbp]

; 588  :     }

  00060	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00067	48 33 cd	 xor	 rcx, rbp
  0006a	e8 00 00 00 00	 call	 __security_check_cookie
  0006f	90		 npad	 1
  00070	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00077	5f		 pop	 rdi
  00078	5d		 pop	 rbp
  00079	c3		 ret	 0
?load@?$_Atomic_storage@H$03@std@@QEBAHXZ ENDP		; std::_Atomic_storage<int,4>::load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ??0?$_Atomic_storage@H$03@std@@QEAA@H@Z
_TEXT	SEGMENT
this$ = 224
_Value$ = 232
??0?$_Atomic_storage@H$03@std@@QEAA@H@Z PROC		; std::_Atomic_storage<int,4>::_Atomic_storage<int,4>, COMDAT

; 548  :     /* implicit */ constexpr _Atomic_storage(const _Ty _Value) noexcept : _Storage{_Value} {

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__43A8C20F_atomic
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	90		 npad	 1
  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	8b 8d e8 00 00
	00		 mov	 ecx, DWORD PTR _Value$[rbp]
  00048	89 08		 mov	 DWORD PTR [rax], ecx

; 549  :         // non-atomically initialize this atomic
; 550  :     }

  0004a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00051	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00058	5f		 pop	 rdi
  00059	5d		 pop	 rbp
  0005a	c3		 ret	 0
??0?$_Atomic_storage@H$03@std@@QEAA@H@Z ENDP		; std::_Atomic_storage<int,4>::_Atomic_storage<int,4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ??B?$atomic@_N@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 224
??B?$atomic@_N@std@@QEBA_NXZ PROC			; std::atomic<bool>::operator bool, COMDAT

; 1595 :     operator _Ty() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__43A8C20F_atomic
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1596 :         return this->load();

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?load@?$_Atomic_storage@_N$00@std@@QEBA_NXZ ; std::_Atomic_storage<bool,1>::load
  00043	90		 npad	 1

; 1597 :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??B?$atomic@_N@std@@QEBA_NXZ ENDP			; std::atomic<bool>::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ??4?$atomic@_N@std@@QEAA_N_N@Z
_TEXT	SEGMENT
this$ = 224
_Value$ = 232
??4?$atomic@_N@std@@QEAA_N_N@Z PROC			; std::atomic<bool>::operator=, COMDAT

; 1508 :     _Ty operator=(const _Ty _Value) noexcept {

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__43A8C20F_atomic
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	90		 npad	 1

; 1509 :         this->store(_Value);

  0003b	0f b6 95 e8 00
	00 00		 movzx	 edx, BYTE PTR _Value$[rbp]
  00042	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	e8 00 00 00 00	 call	 ?store@?$_Atomic_storage@_N$00@std@@QEAAX_N@Z ; std::_Atomic_storage<bool,1>::store
  0004e	90		 npad	 1

; 1510 :         return _Value;

  0004f	0f b6 85 e8 00
	00 00		 movzx	 eax, BYTE PTR _Value$[rbp]

; 1511 :     }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??4?$atomic@_N@std@@QEAA_N_N@Z ENDP			; std::atomic<bool>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ?load@?$_Atomic_storage@_N$00@std@@QEBA_NXZ
_TEXT	SEGMENT
_As_bytes$ = 4
__$ArrayPad$ = 216
this$ = 256
?load@?$_Atomic_storage@_N$00@std@@QEBA_NXZ PROC	; std::_Atomic_storage<bool,1>::load, COMDAT

; 428  :     _NODISCARD _Ty load() const noexcept { // load with sequential consistency

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 d8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__43A8C20F_atomic
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 429  :         char _As_bytes = _ISO_VOLATILE_LOAD8(_Storage);

  00048	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 ??$_Atomic_address_as@$$CBD$$CBU?$_Atomic_padded@_N@std@@@std@@YAPEDDAEBU?$_Atomic_padded@_N@0@@Z ; std::_Atomic_address_as<char const ,std::_Atomic_padded<bool> const >
  00057	90		 npad	 1
  00058	0f b6 00	 movzx	 eax, BYTE PTR [rax]
  0005b	88 45 04	 mov	 BYTE PTR _As_bytes$[rbp], al

; 430  :         _Compiler_or_memory_barrier();
; 431  :         return reinterpret_cast<_Ty&>(_As_bytes);

  0005e	0f b6 45 04	 movzx	 eax, BYTE PTR _As_bytes$[rbp]

; 432  :     }

  00062	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00069	48 33 cd	 xor	 rcx, rbp
  0006c	e8 00 00 00 00	 call	 __security_check_cookie
  00071	90		 npad	 1
  00072	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00079	5f		 pop	 rdi
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
?load@?$_Atomic_storage@_N$00@std@@QEBA_NXZ ENDP	; std::_Atomic_storage<bool,1>::load
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\atomic
;	COMDAT ?store@?$_Atomic_storage@_N$00@std@@QEAAX_N@Z
_TEXT	SEGMENT
_Mem$ = 8
_As_bytes$ = 36
this$ = 288
_Value$ = 296
?store@?$_Atomic_storage@_N$00@std@@QEAAX_N@Z PROC	; std::_Atomic_storage<bool,1>::store, COMDAT

; 394  :     void store(const _Ty _Value) noexcept { // store with sequential consistency

$LN3:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__43A8C20F_atomic
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	90		 npad	 1

; 395  :         const auto _Mem      = _Atomic_address_as<char>(_Storage);

  0003b	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 ??$_Atomic_address_as@DU?$_Atomic_padded@_N@std@@@std@@YAPECDAEAU?$_Atomic_padded@_N@0@@Z ; std::_Atomic_address_as<char,std::_Atomic_padded<bool> >
  0004a	90		 npad	 1
  0004b	48 89 45 08	 mov	 QWORD PTR _Mem$[rbp], rax

; 396  :         const char _As_bytes = _Atomic_reinterpret_as<char>(_Value);

  0004f	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR _Value$[rbp]
  00056	e8 00 00 00 00	 call	 ??$_Atomic_reinterpret_as@D_N@std@@YADAEB_N@Z ; std::_Atomic_reinterpret_as<char,bool>
  0005b	90		 npad	 1
  0005c	88 45 24	 mov	 BYTE PTR _As_bytes$[rbp], al

; 397  : #if defined(_M_ARM) || defined(_M_ARM64)
; 398  :         _Memory_barrier();
; 399  :         __iso_volatile_store8(_Mem, _As_bytes);
; 400  :         _Memory_barrier();
; 401  : #else // ^^^ ARM32/ARM64 hardware / x86/x64 hardware vvv
; 402  :         (void) _InterlockedExchange8(_Mem, _As_bytes);

  0005f	0f b6 45 24	 movzx	 eax, BYTE PTR _As_bytes$[rbp]
  00063	48 8b 4d 08	 mov	 rcx, QWORD PTR _Mem$[rbp]
  00067	86 01		 xchg	 BYTE PTR [rcx], al

; 403  : #endif // hardware
; 404  :     }

  00069	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00070	5f		 pop	 rdi
  00071	5d		 pop	 rbp
  00072	c3		 ret	 0
?store@?$_Atomic_storage@_N$00@std@@QEAAX_N@Z ENDP	; std::_Atomic_storage<bool,1>::store
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAX_K@Z PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::__autoclassinit2, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  00034	33 c0		 xor	 eax, eax
  00036	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR classSize$[rbp]
  0003d	f3 aa		 rep stosb
  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?__autoclassinit2@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAX_K@Z ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1425 :         return *this;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1426 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :         return *this;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1422 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$ = 4
_Pnext$ = 40
_Head$ = 72
_Pnextnext$4 = 104
__$ArrayPad$ = 312
this$ = 352
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ PROC ; std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >::_Orphan_non_end, COMDAT

; 392  :     void _Orphan_non_end() noexcept { // orphan iterators except end()

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR [rsp+392]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 38 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 393  : #if _ITERATOR_DEBUG_LEVEL == 2
; 394  :         _Lockit _Lock(_LOCK_DEBUG);

  00048	ba 03 00 00 00	 mov	 edx, 3
  0004d	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00051	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00057	90		 npad	 1

; 395  :         _Iterator_base12** _Pnext = &this->_Myproxy->_Myfirstiter;

  00058	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00062	48 83 c0 08	 add	 rax, 8
  00066	48 89 45 28	 mov	 QWORD PTR _Pnext$[rbp], rax

; 396  :         const auto _Head          = _Myhead;

  0006a	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00071	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00075	48 89 45 48	 mov	 QWORD PTR _Head$[rbp], rax
$LN2@Orphan_non:

; 397  :         while (*_Pnext) {

  00079	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  0007d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00081	74 48		 je	 SHORT $LN3@Orphan_non

; 398  :             _Iterator_base12** _Pnextnext = &(*_Pnext)->_Mynextiter;

  00083	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00087	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008a	48 83 c0 08	 add	 rax, 8
  0008e	48 89 45 68	 mov	 QWORD PTR _Pnextnext$4[rbp], rax

; 399  :             if (static_cast<_List_const_iterator<_List_val>&>(**_Pnext)._Ptr == _Head) { // iterator is end(), move on

  00092	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 8b 4d 48	 mov	 rcx, QWORD PTR _Head$[rbp]
  0009d	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000a1	75 0a		 jne	 SHORT $LN4@Orphan_non

; 400  :                 _Pnext = _Pnextnext;

  000a3	48 8b 45 68	 mov	 rax, QWORD PTR _Pnextnext$4[rbp]
  000a7	48 89 45 28	 mov	 QWORD PTR _Pnext$[rbp], rax

; 401  :             } else { // orphan the iterator

  000ab	eb 1c		 jmp	 SHORT $LN5@Orphan_non
$LN4@Orphan_non:

; 402  :                 (*_Pnext)->_Myproxy = nullptr;

  000ad	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  000b1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 403  :                 *_Pnext             = *_Pnextnext;

  000bb	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  000bf	48 8b 4d 68	 mov	 rcx, QWORD PTR _Pnextnext$4[rbp]
  000c3	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000c6	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN5@Orphan_non:

; 404  :             }
; 405  :         }

  000c9	eb ae		 jmp	 SHORT $LN2@Orphan_non
$LN3@Orphan_non:

; 406  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 407  :     }

  000cb	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$[rbp]
  000cf	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000d5	90		 npad	 1
  000d6	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000da	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ$rtcFrameData
  000e1	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000e6	90		 npad	 1
  000e7	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000ee	48 33 cd	 xor	 rcx, rbp
  000f1	e8 00 00 00 00	 call	 __security_check_cookie
  000f6	90		 npad	 1
  000f7	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  000fe	5f		 pop	 rdi
  000ff	5d		 pop	 rbp
  00100	c3		 ret	 0
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ ENDP ; std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >::_Orphan_non_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAA@XZ PROC ; std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >, COMDAT

; 368  :     _List_val() : _Myhead(), _Mysize(0) { // initialize data

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00051	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00058	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 369  :     }

  00060	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00067	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??0?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAA@XZ ENDP ; std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal, COMDAT

; 1714 :     const _Alnode& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1715 :         return _Mypair._Get_first();

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1>::_Get_first
  00046	90		 npad	 1

; 1716 :     }

  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal, COMDAT

; 1710 :     _Alnode& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1711 :         return _Mypair._Get_first();

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1>::_Get_first
  00046	90		 npad	 1

; 1712 :     }

  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S16$ = 36
_Proxy$ = 72
_Al$ = 120
_Newhead$ = 152
__$ArrayPad$ = 360
this$ = 400
?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Alloc_sentinel_and_proxy, COMDAT

; 1691 :     void _Alloc_sentinel_and_proxy() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 98 01
	00 00		 sub	 rsp, 408		; 00000198H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 66 00 00 00	 mov	 ecx, 102		; 00000066H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 b8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+440]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 68 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1692 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

  00047	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal
  00053	48 8b d0	 mov	 rdx, rax
  00056	48 8d 4d 24	 lea	 rcx, QWORD PTR $S16$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$?0U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::function<void __cdecl(void)>,void *> >
  0005f	48 8d 45 24	 lea	 rax, QWORD PTR $S16$[rbp]
  00063	48 89 45 08	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 1693 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00067	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006e	4c 8b c0	 mov	 r8, rax
  00071	48 8b 55 08	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  00075	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00079	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0007e	90		 npad	 1

; 1694 :         auto& _Al     = _Getal();

  0007f	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00086	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal
  0008b	48 89 45 78	 mov	 QWORD PTR _Al$[rbp], rax

; 1695 :         auto _Newhead = _Al.allocate(1);

  0008f	ba 01 00 00 00	 mov	 edx, 1
  00094	48 8b 4d 78	 mov	 rcx, QWORD PTR _Al$[rbp]
  00098	e8 00 00 00 00	 call	 ?allocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z ; std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >::allocate
  0009d	48 89 85 98 00
	00 00		 mov	 QWORD PTR _Newhead$[rbp], rax

; 1696 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  000a4	48 8b 85 98 00
	00 00		 mov	 rax, QWORD PTR _Newhead$[rbp]
  000ab	48 8d 95 98 00
	00 00		 lea	 rdx, QWORD PTR _Newhead$[rbp]
  000b2	48 8b c8	 mov	 rcx, rax
  000b5	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *,std::_List_node<std::function<void __cdecl(void)>,void *> * &>

; 1697 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  000ba	48 8b 85 98 00
	00 00		 mov	 rax, QWORD PTR _Newhead$[rbp]
  000c1	48 83 c0 08	 add	 rax, 8
  000c5	48 8d 95 98 00
	00 00		 lea	 rdx, QWORD PTR _Newhead$[rbp]
  000cc	48 8b c8	 mov	 rcx, rax
  000cf	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::function<void __cdecl(void)>,void *> *,std::_List_node<std::function<void __cdecl(void)>,void *> * &>

; 1698 :         _Mypair._Myval2._Myhead = _Newhead;

  000d4	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000db	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR _Newhead$[rbp]
  000e2	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1699 :         _Proxy._Release();

  000e6	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000ea	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000ef	90		 npad	 1

; 1700 :     }

  000f0	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000f4	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000f9	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ$rtcFrameData
  00104	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00109	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00110	48 33 cd	 xor	 rcx, rbp
  00113	e8 00 00 00 00	 call	 __security_check_cookie
  00118	48 8d a5 78 01
	00 00		 lea	 rsp, QWORD PTR [rbp+376]
  0011f	5f		 pop	 rdi
  00120	5d		 pop	 rbp
  00121	c3		 ret	 0
?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Alloc_sentinel_and_proxy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S16$ = 36
_Proxy$ = 72
_Al$ = 120
_Newhead$ = 152
__$ArrayPad$ = 360
this$ = 400
?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ@4HA PROC ; `std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Alloc_sentinel_and_proxy'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ@4HA ENDP ; `std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Alloc_sentinel_and_proxy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S16$ = 36
_Proxy$ = 72
_Al$ = 120
_Newhead$ = 152
__$ArrayPad$ = 360
this$ = 400
?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ@4HA PROC ; `std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Alloc_sentinel_and_proxy'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ@4HA ENDP ; `std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Alloc_sentinel_and_proxy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Tidy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 8
_My_data$ = 40
this$ = 288
?_Tidy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Tidy, COMDAT

; 1309 :     void _Tidy() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1310 :         auto& _Al      = _Getal();

  00037	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal
  00043	90		 npad	 1
  00044	48 89 45 08	 mov	 QWORD PTR _Al$[rbp], rax

; 1311 :         auto& _My_data = _Mypair._Myval2;

  00048	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 89 45 28	 mov	 QWORD PTR _My_data$[rbp], rax

; 1312 :         _My_data._Orphan_all();

  00053	48 8b 4d 28	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1313 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  0005d	48 8b 45 28	 mov	 rax, QWORD PTR _My_data$[rbp]
  00061	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00065	48 8b 4d 08	 mov	 rcx, QWORD PTR _Al$[rbp]
  00069	e8 00 00 00 00	 call	 ??$_Free_non_head@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::function<void __cdecl(void)>,void *>::_Free_non_head<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  0006e	90		 npad	 1

; 1314 :         _Node::_Freenode0(_Al, _My_data._Myhead);

  0006f	48 8b 45 28	 mov	 rax, QWORD PTR _My_data$[rbp]
  00073	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00077	48 8b 4d 08	 mov	 rcx, QWORD PTR _Al$[rbp]
  0007b	e8 00 00 00 00	 call	 ??$_Freenode0@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::function<void __cdecl(void)>,void *>::_Freenode0<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  00080	90		 npad	 1

; 1315 :     }

  00081	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00088	5f		 pop	 rdi
  00089	5d		 pop	 rbp
  0008a	c3		 ret	 0
?_Tidy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?clear@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAXXZ
_TEXT	SEGMENT
_My_data$ = 8
tv75 = 216
tv73 = 224
this$ = 272
?clear@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAXXZ PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::clear, COMDAT

; 1299 :     void clear() noexcept { // erase all

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1300 :         auto& _My_data = _Mypair._Myval2;

  00037	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 1301 :         _My_data._Orphan_non_end();

  00042	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00046	e8 00 00 00 00	 call	 ?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@QEAAXXZ ; std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >::_Orphan_non_end
  0004b	90		 npad	 1

; 1302 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  0004c	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00050	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00054	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  0005b	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00062	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal
  00067	90		 npad	 1
  00068	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  0006f	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv75[rbp]
  00076	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR tv73[rbp]
  0007d	e8 00 00 00 00	 call	 ??$_Free_non_head@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::function<void __cdecl(void)>,void *>::_Free_non_head<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  00082	90		 npad	 1

; 1303 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00083	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00087	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0008b	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0008f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00093	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1304 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  00096	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0009a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0009e	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  000a2	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000a6	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1305 :         _My_data._Mysize        = 0;

  000aa	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  000ae	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 1306 :     }

  000b6	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  000bd	5f		 pop	 rdi
  000be	5d		 pop	 rbp
  000bf	c3		 ret	 0
?clear@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAXXZ ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?empty@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv68 = 192
this$ = 240
?empty@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_NXZ PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::empty, COMDAT

; 1141 :     _NODISCARD bool empty() const noexcept { // test if sequence is empty

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1142 :         return _Mypair._Myval2._Mysize == 0;

  00037	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  00043	75 0c		 jne	 SHORT $LN3@empty
  00045	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv68[rbp], 1
  0004f	eb 0a		 jmp	 SHORT $LN4@empty
$LN3@empty:
  00051	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv68[rbp], 0
$LN4@empty:
  0005b	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv68[rbp]

; 1143 :     }

  00062	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?empty@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_NXZ ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?max_size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
this$ = 288
?max_size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::max_size, COMDAT

; 1136 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1137 :         return _Min_value(

  00037	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal
  00043	90		 npad	 1
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::max_size
  0004c	90		 npad	 1
  0004d	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00054	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00059	90		 npad	 1
  0005a	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  00061	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00068	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0006f	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  00074	90		 npad	 1
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1138 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alnode_traits::max_size(_Getal()));
; 1139 :     }

  00078	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
?max_size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 224
?size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::size, COMDAT

; 1132 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1133 :         return _Mypair._Myval2._Mysize;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1134 :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Unchecked_end@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
?_Unchecked_end@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Unchecked_end, COMDAT

; 1054 :     _Unchecked_iterator _Unchecked_end() { // return unchecked iterator for end of mutable sequence

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1055 :         return _Unchecked_iterator(_Mypair._Myval2._Myhead, nullptr);

  0003b	45 33 c0	 xor	 r8d, r8d
  0003e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00045	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00049	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00050	e8 00 00 00 00	 call	 ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >
  00055	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1056 :     }

  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
?_Unchecked_end@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Unchecked_begin@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
?_Unchecked_begin@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Unchecked_begin, COMDAT

; 1046 :     _Unchecked_iterator _Unchecked_begin() { // return iterator for beginning of mutable sequence

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1047 :         return _Unchecked_iterator(_Mypair._Myval2._Myhead->_Next, nullptr);

  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00046	45 33 c0	 xor	 r8d, r8d
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00053	e8 00 00 00 00	 call	 ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >
  00058	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1048 :     }

  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
?_Unchecked_begin@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S1$ = 36
__$ArrayPad$ = 248
this$ = 288
??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >, COMDAT

; 984  :     ~list() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 f8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 985  :         _Tidy();

  00048	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004f	e8 00 00 00 00	 call	 ?_Tidy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Tidy
  00054	90		 npad	 1

; 986  : #if _ITERATOR_DEBUG_LEVEL != 0 // TRANSITION, ABI
; 987  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

  00055	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal
  00061	90		 npad	 1
  00062	48 8b d0	 mov	 rdx, rax
  00065	48 8d 4d 24	 lea	 rcx, QWORD PTR $S1$[rbp]
  00069	e8 00 00 00 00	 call	 ??$?0U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::function<void __cdecl(void)>,void *> >
  0006e	90		 npad	 1
  0006f	48 8d 45 24	 lea	 rax, QWORD PTR $S1$[rbp]
  00073	48 89 45 08	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 988  :         _Delete_plain_internal(_Alproxy, _Mypair._Myval2._Myproxy);

  00077	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00081	48 8b 4d 08	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00085	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  0008a	90		 npad	 1

; 989  : #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 990  :     }

  0008b	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0008f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00096	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0009b	90		 npad	 1
  0009c	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000a3	48 33 cd	 xor	 rcx, rbp
  000a6	e8 00 00 00 00	 call	 __security_check_cookie
  000ab	90		 npad	 1
  000ac	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000b3	5f		 pop	 rdi
  000b4	5d		 pop	 rbp
  000b5	c3		 ret	 0
??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Swap_val@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
_My_data$ = 8
_Right_data$ = 40
this$ = 288
_Right$ = 296
?_Swap_val@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@@Z PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Swap_val, COMDAT

; 897  :     void _Swap_val(list& _Right) noexcept { // swap with _Right, same allocator

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 898  :         auto& _My_data    = _Mypair._Myval2;

  0003c	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 899  :         auto& _Right_data = _Right._Mypair._Myval2;

  00047	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  0004e	48 89 45 28	 mov	 QWORD PTR _Right_data$[rbp], rax

; 900  :         _My_data._Swap_proxy_and_iterators(_Right_data);

  00052	48 8b 55 28	 mov	 rdx, QWORD PTR _Right_data$[rbp]
  00056	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0005a	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators
  0005f	90		 npad	 1

; 901  :         _Swap_adl(_My_data._Myhead, _Right_data._Myhead);

  00060	48 8b 45 28	 mov	 rax, QWORD PTR _Right_data$[rbp]
  00064	48 83 c0 08	 add	 rax, 8
  00068	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0006c	48 83 c1 08	 add	 rcx, 8
  00070	48 8b d0	 mov	 rdx, rax
  00073	e8 00 00 00 00	 call	 ??$_Swap_adl@PEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@YAXAEAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@0@0@Z ; std::_Swap_adl<std::_List_node<std::function<void __cdecl(void)>,void *> *>
  00078	90		 npad	 1

; 902  :         _STD swap(_My_data._Mysize, _Right_data._Mysize);

  00079	48 8b 45 28	 mov	 rax, QWORD PTR _Right_data$[rbp]
  0007d	48 83 c0 10	 add	 rax, 16
  00081	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00085	48 83 c1 10	 add	 rcx, 16
  00089	48 8b d0	 mov	 rdx, rax
  0008c	e8 00 00 00 00	 call	 ??$swap@_KX@std@@YAXAEA_K0@Z ; std::swap<unsigned __int64,void>
  00091	90		 npad	 1

; 903  :     }

  00092	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00099	5f		 pop	 rdi
  0009a	5d		 pop	 rbp
  0009b	c3		 ret	 0
?_Swap_val@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@@Z ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Swap_val
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??4?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_Right$ = 264
??4?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::operator=, COMDAT

; 888  :         _NOEXCEPT_COND(noexcept(_Move_assign(_Right, _Choose_pocma<_Alnode>{}))) { // partially strengthened

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 889  :         if (this != _STD addressof(_Right)) { // different, assign it

  0003c	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00043	e8 00 00 00 00	 call	 ??$addressof@V?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YAPEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z ; std::addressof<std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > >
  00048	90		 npad	 1
  00049	48 39 85 00 01
	00 00		 cmp	 QWORD PTR this$[rbp], rax
  00050	74 2f		 je	 SHORT $LN2@operator

; 890  :             _Move_assign(_Right, _Choose_pocma<_Alnode>{});

  00052	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00059	48 8b f8	 mov	 rdi, rax
  0005c	33 c0		 xor	 eax, eax
  0005e	b9 01 00 00 00	 mov	 ecx, 1
  00063	f3 aa		 rep stosb
  00065	44 0f b6 85 c4
	00 00 00	 movzx	 r8d, BYTE PTR $T1[rbp]
  0006d	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  00074	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0007b	e8 00 00 00 00	 call	 ?_Move_assign@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Move_assign
  00080	90		 npad	 1
$LN2@operator:

; 891  :         }
; 892  : 
; 893  :         return *this;

  00081	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 894  :     }

  00088	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
??4?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Move_assign@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z
_TEXT	SEGMENT
tv74 = 192
tv72 = 200
this$ = 240
_Right$ = 248
__formal$ = 256
?_Move_assign@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Move_assign, COMDAT

; 849  :     void _Move_assign(list& _Right, _Equal_allocators) noexcept {

$LN3:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 850  :         clear();

  00041	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00048	e8 00 00 00 00	 call	 ?clear@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAXXZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::clear
  0004d	90		 npad	 1

; 851  :         _Pocma(_Getal(), _Right._Getal());

  0004e	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00055	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal
  0005a	90		 npad	 1
  0005b	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv74[rbp], rax
  00062	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00069	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Getal
  0006e	90		 npad	 1
  0006f	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv72[rbp], rax
  00076	48 8b 95 c0 00
	00 00		 mov	 rdx, QWORD PTR tv74[rbp]
  0007d	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR tv72[rbp]
  00084	e8 00 00 00 00	 call	 ??$_Pocma@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@YAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@0@0@Z ; std::_Pocma<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >
  00089	90		 npad	 1

; 852  :         _Swap_val(_Right);

  0008a	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  00091	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00098	e8 00 00 00 00	 call	 ?_Swap_val@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Swap_val
  0009d	90		 npad	 1

; 853  :     }

  0009e	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000a5	5f		 pop	 rdi
  000a6	5d		 pop	 rbp
  000a7	c3		 ret	 0
?_Move_assign@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXAEAV12@U_Equal_allocators@2@@Z ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Move_assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 196
tv69 = 216
this$ = 256
??0?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ PROC ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >, COMDAT

; 736  :     list() : _Mypair(_Zero_then_variadic_args_t()) { // construct empty list

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00044	0f b6 95 c4 00
	00 00		 movzx	 edx, BYTE PTR $T1[rbp]
  0004b	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv69[rbp]
  00052	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >,std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,1><>

; 737  :         _Alloc_sentinel_and_proxy();

  00057	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005e	e8 00 00 00 00	 call	 ?_Alloc_sentinel_and_proxy@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@AEAAXXZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Alloc_sentinel_and_proxy

; 738  :     }

  00063	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006a	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00071	5f		 pop	 rdi
  00072	5d		 pop	 rbp
  00073	c3		 ret	 0
??0?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ ENDP ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@@Z
_TEXT	SEGMENT
__formal$ = 224
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00037	48 b8 33 33 33
	33 33 33 33 03	 mov	 rax, 230584300921369395	; 0333333333333333H

; 768  :     }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@QEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
__formal$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@QEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00040	48 6b 85 f0 00
	00 00 50	 imul	 rax, QWORD PTR _Count$[rbp], 80 ; 00000050H
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00052	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@2@QEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00042	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0FA@@std@@YA_K_K@Z ; std::_Get_size_of_n<80>
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?allocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00040	48 6b 85 f0 00
	00 00 50	 imul	 rax, QWORD PTR _Count$[rbp], 80 ; 00000050H
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00052	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
?deallocate@?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAA@XZ PROC ; std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??0?$allocator@U?$_List_node@V?$function@$$A6AXXZ@std@@PEAX@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >::allocator<std::_List_node<std::function<void __cdecl(void)>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ?NotFull@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ
_TEXT	SEGMENT
full$ = 4
$T1 = 228
$T2 = 260
tv91 = 276
tv70 = 276
tv83 = 280
tv89 = 288
this$ = 336
?NotFull@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ PROC ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::NotFull, COMDAT

; 116  : 	bool NotFull() {

$LN8:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 117  : 		auto full = _queue.size() >= _max_size;

  00036	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?size@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_KXZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::size
  00045	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004c	48 63 49 68	 movsxd	 rcx, DWORD PTR [rcx+104]
  00050	48 3b c1	 cmp	 rax, rcx
  00053	72 0c		 jb	 SHORT $LN4@NotFull
  00055	c7 85 14 01 00
	00 01 00 00 00	 mov	 DWORD PTR tv70[rbp], 1
  0005f	eb 0a		 jmp	 SHORT $LN5@NotFull
$LN4@NotFull:
  00061	c7 85 14 01 00
	00 00 00 00 00	 mov	 DWORD PTR tv70[rbp], 0
$LN5@NotFull:
  0006b	0f b6 85 14 01
	00 00		 movzx	 eax, BYTE PTR tv70[rbp]
  00072	88 45 04	 mov	 BYTE PTR full$[rbp], al

; 118  : 		if (full) {

  00075	0f b6 45 04	 movzx	 eax, BYTE PTR full$[rbp]
  00079	85 c0		 test	 eax, eax
  0007b	74 5b		 je	 SHORT $LN2@NotFull

; 119  : 			std::cout << "cache buffer is full, please waitting, thread id: " 

  0007d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0DD@FIHHIPGM@cache?5buffer?5is?5full?0?5please?5wa@
  00084	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0008b	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00090	48 89 85 18 01
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  00097	48 8d 8d e4 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0009e	e8 00 00 00 00	 call	 ?get_id@this_thread@std@@YA?AVid@thread@2@XZ ; std::this_thread::get_id
  000a3	8b 00		 mov	 eax, DWORD PTR [rax]
  000a5	89 85 04 01 00
	00		 mov	 DWORD PTR $T2[rbp], eax
  000ab	8b 95 04 01 00
	00		 mov	 edx, DWORD PTR $T2[rbp]
  000b1	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR tv83[rbp]
  000b8	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z ; std::operator<<<char,std::char_traits<char> >
  000bd	48 89 85 20 01
	00 00		 mov	 QWORD PTR tv89[rbp], rax
  000c4	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  000cb	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR tv89[rbp]
  000d2	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
$LN2@NotFull:

; 120  : 				<< std::this_thread::get_id() << std::endl;
; 121  : 		}
; 122  : 		return !full;

  000d8	0f b6 45 04	 movzx	 eax, BYTE PTR full$[rbp]
  000dc	85 c0		 test	 eax, eax
  000de	75 0c		 jne	 SHORT $LN6@NotFull
  000e0	c7 85 14 01 00
	00 01 00 00 00	 mov	 DWORD PTR tv91[rbp], 1
  000ea	eb 0a		 jmp	 SHORT $LN7@NotFull
$LN6@NotFull:
  000ec	c7 85 14 01 00
	00 00 00 00 00	 mov	 DWORD PTR tv91[rbp], 0
$LN7@NotFull:
  000f6	0f b6 85 14 01
	00 00		 movzx	 eax, BYTE PTR tv91[rbp]

; 123  : 	}

  000fd	48 8d a5 38 01
	00 00		 lea	 rsp, QWORD PTR [rbp+312]
  00104	5f		 pop	 rdi
  00105	5d		 pop	 rbp
  00106	c3		 ret	 0
?NotFull@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ ENDP ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::NotFull
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ?NotEmpty@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ
_TEXT	SEGMENT
empty$ = 4
$T1 = 228
$T2 = 260
tv89 = 276
tv81 = 280
tv87 = 288
this$ = 336
?NotEmpty@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ PROC ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::NotEmpty, COMDAT

; 107  : 	bool NotEmpty() {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 108  : 		auto empty = _queue.empty();

  00036	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ?empty@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEBA_NXZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::empty
  00045	88 45 04	 mov	 BYTE PTR empty$[rbp], al

; 109  : 		if (empty) {

  00048	0f b6 45 04	 movzx	 eax, BYTE PTR empty$[rbp]
  0004c	85 c0		 test	 eax, eax
  0004e	74 6a		 je	 SHORT $LN2@NotEmpty

; 110  : 			std::cout << "cache buffer is empty, please waitting ..."

  00050	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0CL@KMJOIDCD@cache?5buffer?5is?5empty?0?5please?5w@
  00057	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0005e	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00063	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BD@BKEGLPGN@?5this?5thread?5id?3?$DN?5@
  0006a	48 8b c8	 mov	 rcx, rax
  0006d	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00072	48 89 85 18 01
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00079	48 8d 8d e4 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00080	e8 00 00 00 00	 call	 ?get_id@this_thread@std@@YA?AVid@thread@2@XZ ; std::this_thread::get_id
  00085	8b 00		 mov	 eax, DWORD PTR [rax]
  00087	89 85 04 01 00
	00		 mov	 DWORD PTR $T2[rbp], eax
  0008d	8b 95 04 01 00
	00		 mov	 edx, DWORD PTR $T2[rbp]
  00093	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR tv81[rbp]
  0009a	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z ; std::operator<<<char,std::char_traits<char> >
  0009f	48 89 85 20 01
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  000a6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  000ad	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR tv87[rbp]
  000b4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
$LN2@NotEmpty:

; 111  : 				<< " this thread id:= " << std::this_thread::get_id()
; 112  : 				<< std::endl;
; 113  : 		}
; 114  : 		return !empty;

  000ba	0f b6 45 04	 movzx	 eax, BYTE PTR empty$[rbp]
  000be	85 c0		 test	 eax, eax
  000c0	75 0c		 jne	 SHORT $LN4@NotEmpty
  000c2	c7 85 14 01 00
	00 01 00 00 00	 mov	 DWORD PTR tv89[rbp], 1
  000cc	eb 0a		 jmp	 SHORT $LN5@NotEmpty
$LN4@NotEmpty:
  000ce	c7 85 14 01 00
	00 00 00 00 00	 mov	 DWORD PTR tv89[rbp], 0
$LN5@NotEmpty:
  000d8	0f b6 85 14 01
	00 00		 movzx	 eax, BYTE PTR tv89[rbp]

; 115  : 	}

  000df	48 8d a5 38 01
	00 00		 lea	 rsp, QWORD PTR [rbp+312]
  000e6	5f		 pop	 rdi
  000e7	5d		 pop	 rbp
  000e8	c3		 ret	 0
?NotEmpty@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAA_NXZ ENDP ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::NotEmpty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ?Stop@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXXZ
_TEXT	SEGMENT
locker$4 = 8
__$ArrayPad$ = 216
this$ = 256
?Stop@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXXZ PROC ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Stop, COMDAT

; 63   : 	void Stop() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 d8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 64   : 		{
; 65   : 			std::lock_guard<U> locker(_mutex);

  00047	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 83 c0 18	 add	 rax, 24
  00052	48 8b d0	 mov	 rdx, rax
  00055	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$4[rbp]
  00059	e8 00 00 00 00	 call	 ??0?$lock_guard@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ; std::lock_guard<std::mutex>::lock_guard<std::mutex>

; 66   : 			_need_stop = true;

  0005e	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00065	c6 40 6c 01	 mov	 BYTE PTR [rax+108], 1

; 67   : 		}

  00069	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$4[rbp]
  0006d	e8 00 00 00 00	 call	 ??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ ; std::lock_guard<std::mutex>::~lock_guard<std::mutex>

; 68   : 		_not_full.notify_all();

  00072	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00079	48 83 c0 70	 add	 rax, 112		; 00000070H
  0007d	48 8b c8	 mov	 rcx, rax
  00080	e8 00 00 00 00	 call	 ?notify_all@condition_variable_any@std@@QEAAXXZ ; std::condition_variable_any::notify_all

; 69   : 		_not_empty.notify_all();

  00085	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008c	48 05 c8 00 00
	00		 add	 rax, 200		; 000000c8H
  00092	48 8b c8	 mov	 rcx, rax
  00095	e8 00 00 00 00	 call	 ?notify_all@condition_variable_any@std@@QEAAXXZ ; std::condition_variable_any::notify_all

; 70   : 	}

  0009a	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0009e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Stop@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXXZ$rtcFrameData
  000a5	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000aa	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000b1	48 33 cd	 xor	 rcx, rbp
  000b4	e8 00 00 00 00	 call	 __security_check_cookie
  000b9	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000c0	5f		 pop	 rdi
  000c1	5d		 pop	 rbp
  000c2	c3		 ret	 0
?Stop@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXXZ ENDP ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Stop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z
_TEXT	SEGMENT
locker$ = 8
$T4 = 244
$T5 = 276
$T6 = 312
tv129 = 328
tv76 = 328
tv82 = 336
__$ArrayPad$ = 344
this$ = 384
list$ = 392
?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z PROC ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take, COMDAT

; 35   : 	{

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 58 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 36   : 		std::cout << "SyncQueue Add "

  0004c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0P@NGJDHBOA@SyncQueue?5Add?5@
  00053	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0005a	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0005f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BE@GFBIAGP@?0?5this?5thread?5id?3?$DN?5@
  00066	48 8b c8	 mov	 rcx, rax
  00069	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0006e	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  00075	48 8d 8d f4 00
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0007c	e8 00 00 00 00	 call	 ?get_id@this_thread@std@@YA?AVid@thread@2@XZ ; std::this_thread::get_id
  00081	8b 00		 mov	 eax, DWORD PTR [rax]
  00083	89 85 14 01 00
	00		 mov	 DWORD PTR $T5[rbp], eax
  00089	8b 95 14 01 00
	00		 mov	 edx, DWORD PTR $T5[rbp]
  0008f	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv76[rbp]
  00096	e8 00 00 00 00	 call	 ??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z ; std::operator<<<char,std::char_traits<char> >
  0009b	48 89 85 50 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  000a2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  000a9	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR tv82[rbp]
  000b0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 37   : 			<< ", this thread id:= " << std::this_thread::get_id()
; 38   : 			<< std::endl;
; 39   : 		std::unique_lock<U> locker(_mutex);

  000b6	ba 10 00 00 00	 mov	 edx, 16
  000bb	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  000bf	e8 00 00 00 00	 call	 ?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QEAAX_K@Z
  000c4	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000cb	48 83 c0 18	 add	 rax, 24
  000cf	48 8b d0	 mov	 rdx, rax
  000d2	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  000d6	e8 00 00 00 00	 call	 ??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
  000db	90		 npad	 1

; 40   : 		_not_empty.wait(locker, [this]() {

  000dc	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e3	48 05 c8 00 00
	00		 add	 rax, 200		; 000000c8H
  000e9	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv129[rbp], rax
  000f0	48 8b 95 80 01
	00 00		 mov	 rdx, QWORD PTR this$[rbp]
  000f7	48 8d 8d 38 01
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  000fe	e8 00 00 00 00	 call	 ??0<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@QEAA@PEAV2@@Z ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`2'::<lambda_1>::<lambda_1>
  00103	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00106	48 8d 55 08	 lea	 rdx, QWORD PTR locker$[rbp]
  0010a	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv129[rbp]
  00111	e8 00 00 00 00	 call	 ??$wait@V?$unique_lock@Vmutex@std@@@std@@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@2@@Z@@condition_variable_any@std@@QEAAXAEAV?$unique_lock@Vmutex@std@@@1@V<lambda_1>@?1??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@1@@Z@@Z ; std::condition_variable_any::wait<std::unique_lock<std::mutex>,`SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`2'::<lambda_1> >

; 41   : 			return _need_stop || NotEmpty();
; 42   : 			});
; 43   : 		if (_need_stop) {

  00116	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0011d	0f b6 40 6c	 movzx	 eax, BYTE PTR [rax+108]
  00121	85 c0		 test	 eax, eax
  00123	74 0b		 je	 SHORT $LN2@Take

; 44   : 			return;

  00125	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  00129	e8 00 00 00 00	 call	 ??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
  0012e	eb 3b		 jmp	 SHORT $LN1@Take
$LN2@Take:

; 45   : 		}
; 46   : 
; 47   : 		list = std::move(_queue);

  00130	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00137	48 8b c8	 mov	 rcx, rax
  0013a	e8 00 00 00 00	 call	 ??$move@AEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@std@@YA$$QEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@0@AEAV10@@Z ; std::move<std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > > &>
  0013f	48 8b d0	 mov	 rdx, rax
  00142	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR list$[rbp]
  00149	e8 00 00 00 00	 call	 ??4?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::operator=

; 48   : 		_not_full.notify_one();

  0014e	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00155	48 83 c0 70	 add	 rax, 112		; 00000070H
  00159	48 8b c8	 mov	 rcx, rax
  0015c	e8 00 00 00 00	 call	 ?notify_one@condition_variable_any@std@@QEAAXXZ ; std::condition_variable_any::notify_one
  00161	90		 npad	 1

; 49   : 	}

  00162	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  00166	e8 00 00 00 00	 call	 ??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
$LN1@Take:
  0016b	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0016f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z$rtcFrameData
  00176	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0017b	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00182	48 33 cd	 xor	 rcx, rbp
  00185	e8 00 00 00 00	 call	 __security_check_cookie
  0018a	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  00191	5f		 pop	 rdi
  00192	5d		 pop	 rbp
  00193	c3		 ret	 0
?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z ENDP ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
locker$ = 8
$T4 = 244
$T5 = 276
$T6 = 312
tv129 = 328
tv76 = 328
tv82 = 336
__$ArrayPad$ = 344
this$ = 384
list$ = 392
?dtor$0@?0??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@4HA PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@4HA ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
locker$ = 8
$T4 = 244
$T5 = 276
$T6 = 312
tv129 = 328
tv76 = 328
tv82 = 336
__$ArrayPad$ = 344
this$ = 384
list$ = 392
?dtor$0@?0??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@4HA PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR locker$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z@4HA ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z
_TEXT	SEGMENT
this$ = 224
t$ = 232
?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z PROC ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Put, COMDAT

; 31   : 	void Put(T&& t) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 32   : 		Add(std::forward<T>(t));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR t$[rbp]
  00042	e8 00 00 00 00	 call	 ??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::forward<std::function<void __cdecl(void)> >
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00051	e8 00 00 00 00	 call	 ??$Add@V?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> >

; 33   : 	}

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z ENDP ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Put
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z
_TEXT	SEGMENT
this$ = 224
t$ = 232
?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z PROC ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Put, COMDAT

; 28   : 	void Put(const T& t) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 29   : 		Add(t);

  0003b	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR t$[rbp]
  00042	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	e8 00 00 00 00	 call	 ??$Add@AEBV?$function@$$A6AXXZ@std@@@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@AEAAXAEBV?$function@$$A6AXXZ@std@@@Z ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Add<std::function<void __cdecl(void)> const &>

; 30   : 	}

  0004e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00055	5f		 pop	 rdi
  00056	5d		 pop	 rbp
  00057	c3		 ret	 0
?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z ENDP ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Put
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ??1?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@XZ PROC ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::~SyncQueue<std::function<void __cdecl(void)>,std::mutex>, COMDAT

; 23   : 	~SyncQueue() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 24   : 		_queue.clear();

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?clear@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAXXZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::clear
  00046	90		 npad	 1

; 25   : 	}

  00047	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 05 20 01 00
	00		 add	 rax, 288		; 00000120H
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??1?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@XZ
  0005c	90		 npad	 1
  0005d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 05 c8 00 00
	00		 add	 rax, 200		; 000000c8H
  0006a	48 8b c8	 mov	 rcx, rax
  0006d	e8 00 00 00 00	 call	 ??1condition_variable_any@std@@QEAA@XZ ; std::condition_variable_any::~condition_variable_any
  00072	90		 npad	 1
  00073	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007a	48 83 c0 70	 add	 rax, 112		; 00000070H
  0007e	48 8b c8	 mov	 rcx, rax
  00081	e8 00 00 00 00	 call	 ??1condition_variable_any@std@@QEAA@XZ ; std::condition_variable_any::~condition_variable_any
  00086	90		 npad	 1
  00087	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008e	48 83 c0 18	 add	 rax, 24
  00092	48 8b c8	 mov	 rcx, rax
  00095	e8 00 00 00 00	 call	 ??1mutex@std@@QEAA@XZ
  0009a	90		 npad	 1
  0009b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a2	48 8b c8	 mov	 rcx, rax
  000a5	e8 00 00 00 00	 call	 ??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
  000aa	90		 npad	 1
  000ab	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000b2	5f		 pop	 rdi
  000b3	5d		 pop	 rbp
  000b4	c3		 ret	 0
??1?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@XZ ENDP ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::~SyncQueue<std::function<void __cdecl(void)>,std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\SyncQueue.h
;	COMDAT ??0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z
_TEXT	SEGMENT
tv93 = 192
this$ = 240
max_size$ = 248
e$ = 256
??0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z PROC ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>, COMDAT

; 22   : 		_event(std::forward<_Event>(e)){}

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__D006B14F_SyncQueue@h
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00046	48 8b c8	 mov	 rcx, rax
  00049	e8 00 00 00 00	 call	 ??0?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
  0004e	90		 npad	 1
  0004f	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00056	48 83 c0 18	 add	 rax, 24
  0005a	48 8b c8	 mov	 rcx, rax
  0005d	e8 00 00 00 00	 call	 ??0mutex@std@@QEAA@XZ	; std::mutex::mutex
  00062	90		 npad	 1

; 20   : 		:_max_size(max_size),

  00063	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006a	8b 8d f8 00 00
	00		 mov	 ecx, DWORD PTR max_size$[rbp]
  00070	89 48 68	 mov	 DWORD PTR [rax+104], ecx

; 21   : 		_need_stop(false),

  00073	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007a	c6 40 6c 00	 mov	 BYTE PTR [rax+108], 0

; 22   : 		_event(std::forward<_Event>(e)){}

  0007e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00085	48 83 c0 70	 add	 rax, 112		; 00000070H
  00089	48 8b c8	 mov	 rcx, rax
  0008c	e8 00 00 00 00	 call	 ??0condition_variable_any@std@@QEAA@XZ ; std::condition_variable_any::condition_variable_any
  00091	90		 npad	 1
  00092	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00099	48 05 c8 00 00
	00		 add	 rax, 200		; 000000c8H
  0009f	48 8b c8	 mov	 rcx, rax
  000a2	e8 00 00 00 00	 call	 ??0condition_variable_any@std@@QEAA@XZ ; std::condition_variable_any::condition_variable_any
  000a7	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ae	48 05 20 01 00
	00		 add	 rax, 288		; 00000120H
  000b4	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv93[rbp], rax
  000bb	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR e$[rbp]
  000c2	e8 00 00 00 00	 call	 ??$forward@V?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z ; std::forward<std::function<void __cdecl(enum EnumEvent)> >
  000c7	48 8b d0	 mov	 rdx, rax
  000ca	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv93[rbp]
  000d1	e8 00 00 00 00	 call	 ??0?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@$$QEAV01@@Z ; std::function<void __cdecl(enum EnumEvent)>::function<void __cdecl(enum EnumEvent)>
  000d6	90		 npad	 1
  000d7	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000de	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000e5	5f		 pop	 rdi
  000e6	5d		 pop	 rbp
  000e7	c3		 ret	 0
??0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z ENDP ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv93 = 192
this$ = 240
max_size$ = 248
e$ = 256
?dtor$0@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv93 = 192
this$ = 240
max_size$ = 248
e$ = 256
?dtor$1@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	48 83 c1 18	 add	 rcx, 24
  0001f	e8 00 00 00 00	 call	 ??1mutex@std@@QEAA@XZ
  00024	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00028	5f		 pop	 rdi
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?dtor$1@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv93 = 192
this$ = 240
max_size$ = 248
e$ = 256
?dtor$2@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0001f	e8 00 00 00 00	 call	 ??1condition_variable_any@std@@QEAA@XZ ; std::condition_variable_any::~condition_variable_any
  00024	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00028	5f		 pop	 rdi
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?dtor$2@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
tv93 = 192
this$ = 240
max_size$ = 248
e$ = 256
?dtor$0@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
tv93 = 192
this$ = 240
max_size$ = 248
e$ = 256
?dtor$1@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	48 83 c1 18	 add	 rcx, 24
  0001f	e8 00 00 00 00	 call	 ??1mutex@std@@QEAA@XZ
  00024	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00028	5f		 pop	 rdi
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?dtor$1@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
tv93 = 192
this$ = 240
max_size$ = 248
e$ = 256
?dtor$2@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA PROC ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	48 83 c1 70	 add	 rcx, 112		; 00000070H
  0001f	e8 00 00 00 00	 call	 ??1condition_variable_any@std@@QEAA@XZ ; std::condition_variable_any::~condition_variable_any
  00024	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00028	5f		 pop	 rdi
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?dtor$2@?0???0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z@4HA ENDP ; `SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1425 :         return *this;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1426 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :         return *this;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1422 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$ = 4
_Pnext$ = 40
_Head$ = 72
_Pnextnext$4 = 104
__$ArrayPad$ = 312
this$ = 352
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ PROC ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >::_Orphan_non_end, COMDAT

; 392  :     void _Orphan_non_end() noexcept { // orphan iterators except end()

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR [rsp+392]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 38 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 393  : #if _ITERATOR_DEBUG_LEVEL == 2
; 394  :         _Lockit _Lock(_LOCK_DEBUG);

  00048	ba 03 00 00 00	 mov	 edx, 3
  0004d	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00051	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00057	90		 npad	 1

; 395  :         _Iterator_base12** _Pnext = &this->_Myproxy->_Myfirstiter;

  00058	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00062	48 83 c0 08	 add	 rax, 8
  00066	48 89 45 28	 mov	 QWORD PTR _Pnext$[rbp], rax

; 396  :         const auto _Head          = _Myhead;

  0006a	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00071	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00075	48 89 45 48	 mov	 QWORD PTR _Head$[rbp], rax
$LN2@Orphan_non:

; 397  :         while (*_Pnext) {

  00079	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  0007d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00081	74 48		 je	 SHORT $LN3@Orphan_non

; 398  :             _Iterator_base12** _Pnextnext = &(*_Pnext)->_Mynextiter;

  00083	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00087	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008a	48 83 c0 08	 add	 rax, 8
  0008e	48 89 45 68	 mov	 QWORD PTR _Pnextnext$4[rbp], rax

; 399  :             if (static_cast<_List_const_iterator<_List_val>&>(**_Pnext)._Ptr == _Head) { // iterator is end(), move on

  00092	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00096	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00099	48 8b 4d 48	 mov	 rcx, QWORD PTR _Head$[rbp]
  0009d	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000a1	75 0a		 jne	 SHORT $LN4@Orphan_non

; 400  :                 _Pnext = _Pnextnext;

  000a3	48 8b 45 68	 mov	 rax, QWORD PTR _Pnextnext$4[rbp]
  000a7	48 89 45 28	 mov	 QWORD PTR _Pnext$[rbp], rax

; 401  :             } else { // orphan the iterator

  000ab	eb 1c		 jmp	 SHORT $LN5@Orphan_non
$LN4@Orphan_non:

; 402  :                 (*_Pnext)->_Myproxy = nullptr;

  000ad	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  000b1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000b4	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 403  :                 *_Pnext             = *_Pnextnext;

  000bb	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  000bf	48 8b 4d 68	 mov	 rcx, QWORD PTR _Pnextnext$4[rbp]
  000c3	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000c6	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN5@Orphan_non:

; 404  :             }
; 405  :         }

  000c9	eb ae		 jmp	 SHORT $LN2@Orphan_non
$LN3@Orphan_non:

; 406  : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 407  :     }

  000cb	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$[rbp]
  000cf	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000d5	90		 npad	 1
  000d6	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000da	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ$rtcFrameData
  000e1	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000e6	90		 npad	 1
  000e7	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000ee	48 33 cd	 xor	 rcx, rbp
  000f1	e8 00 00 00 00	 call	 __security_check_cookie
  000f6	90		 npad	 1
  000f7	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  000fe	5f		 pop	 rdi
  000ff	5d		 pop	 rbp
  00100	c3		 ret	 0
?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ ENDP ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >::_Orphan_non_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >, COMDAT

; 368  :     _List_val() : _Myhead(), _Mysize(0) { // initialize data

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00051	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00058	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 369  :     }

  00060	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00067	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
??0?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ PROC ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Getal, COMDAT

; 1714 :     const _Alnode& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1715 :         return _Mypair._Get_first();

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1>::_Get_first
  00046	90		 npad	 1

; 1716 :     }

  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ENDP ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ PROC ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Getal, COMDAT

; 1710 :     _Alnode& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1711 :         return _Mypair._Get_first();

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ; std::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1>::_Get_first
  00046	90		 npad	 1

; 1712 :     }

  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ENDP ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S17$ = 36
_Proxy$ = 72
_Al$ = 120
_Newhead$ = 152
__$ArrayPad$ = 360
this$ = 400
?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ PROC ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Alloc_sentinel_and_proxy, COMDAT

; 1691 :     void _Alloc_sentinel_and_proxy() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 98 01
	00 00		 sub	 rsp, 408		; 00000198H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 66 00 00 00	 mov	 ecx, 102		; 00000066H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 b8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+440]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 68 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1692 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

  00047	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Getal
  00053	48 8b d0	 mov	 rdx, rax
  00056	48 8d 4d 24	 lea	 rcx, QWORD PTR $S17$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$?0U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::shared_ptr<std::thread>,void *> >
  0005f	48 8d 45 24	 lea	 rax, QWORD PTR $S17$[rbp]
  00063	48 89 45 08	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 1693 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  00067	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006e	4c 8b c0	 mov	 r8, rax
  00071	48 8b 55 08	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  00075	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00079	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0007e	90		 npad	 1

; 1694 :         auto& _Al     = _Getal();

  0007f	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00086	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Getal
  0008b	48 89 45 78	 mov	 QWORD PTR _Al$[rbp], rax

; 1695 :         auto _Newhead = _Al.allocate(1);

  0008f	ba 01 00 00 00	 mov	 edx, 1
  00094	48 8b 4d 78	 mov	 rcx, QWORD PTR _Al$[rbp]
  00098	e8 00 00 00 00	 call	 ?allocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z ; std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >::allocate
  0009d	48 89 85 98 00
	00 00		 mov	 QWORD PTR _Newhead$[rbp], rax

; 1696 :         _Construct_in_place(_Newhead->_Next, _Newhead);

  000a4	48 8b 85 98 00
	00 00		 mov	 rax, QWORD PTR _Newhead$[rbp]
  000ab	48 8d 95 98 00
	00 00		 lea	 rdx, QWORD PTR _Newhead$[rbp]
  000b2	48 8b c8	 mov	 rcx, rax
  000b5	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *,std::_List_node<std::shared_ptr<std::thread>,void *> * &>

; 1697 :         _Construct_in_place(_Newhead->_Prev, _Newhead);

  000ba	48 8b 85 98 00
	00 00		 mov	 rax, QWORD PTR _Newhead$[rbp]
  000c1	48 83 c0 08	 add	 rax, 8
  000c5	48 8d 95 98 00
	00 00		 lea	 rdx, QWORD PTR _Newhead$[rbp]
  000cc	48 8b c8	 mov	 rcx, rax
  000cf	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@AEAPEAU12@@std@@YAXAEAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@0@0@Z ; std::_Construct_in_place<std::_List_node<std::shared_ptr<std::thread>,void *> *,std::_List_node<std::shared_ptr<std::thread>,void *> * &>

; 1698 :         _Mypair._Myval2._Myhead = _Newhead;

  000d4	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000db	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR _Newhead$[rbp]
  000e2	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1699 :         _Proxy._Release();

  000e6	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000ea	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000ef	90		 npad	 1

; 1700 :     }

  000f0	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000f4	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000f9	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000fd	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ$rtcFrameData
  00104	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00109	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00110	48 33 cd	 xor	 rcx, rbp
  00113	e8 00 00 00 00	 call	 __security_check_cookie
  00118	48 8d a5 78 01
	00 00		 lea	 rsp, QWORD PTR [rbp+376]
  0011f	5f		 pop	 rdi
  00120	5d		 pop	 rbp
  00121	c3		 ret	 0
?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ ENDP ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Alloc_sentinel_and_proxy
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S17$ = 36
_Proxy$ = 72
_Al$ = 120
_Newhead$ = 152
__$ArrayPad$ = 360
this$ = 400
?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ@4HA PROC ; `std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Alloc_sentinel_and_proxy'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ@4HA ENDP ; `std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Alloc_sentinel_and_proxy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S17$ = 36
_Proxy$ = 72
_Al$ = 120
_Newhead$ = 152
__$ArrayPad$ = 360
this$ = 400
?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ@4HA PROC ; `std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Alloc_sentinel_and_proxy'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ@4HA ENDP ; `std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Alloc_sentinel_and_proxy'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Tidy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Al$ = 8
_My_data$ = 40
this$ = 288
?_Tidy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ PROC ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Tidy, COMDAT

; 1309 :     void _Tidy() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1310 :         auto& _Al      = _Getal();

  00037	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Getal
  00043	90		 npad	 1
  00044	48 89 45 08	 mov	 QWORD PTR _Al$[rbp], rax

; 1311 :         auto& _My_data = _Mypair._Myval2;

  00048	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 89 45 28	 mov	 QWORD PTR _My_data$[rbp], rax

; 1312 :         _My_data._Orphan_all();

  00053	48 8b 4d 28	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00057	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0005c	90		 npad	 1

; 1313 :         _Node::_Free_non_head(_Al, _My_data._Myhead);

  0005d	48 8b 45 28	 mov	 rax, QWORD PTR _My_data$[rbp]
  00061	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00065	48 8b 4d 08	 mov	 rcx, QWORD PTR _Al$[rbp]
  00069	e8 00 00 00 00	 call	 ??$_Free_non_head@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::shared_ptr<std::thread>,void *>::_Free_non_head<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
  0006e	90		 npad	 1

; 1314 :         _Node::_Freenode0(_Al, _My_data._Myhead);

  0006f	48 8b 45 28	 mov	 rax, QWORD PTR _My_data$[rbp]
  00073	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00077	48 8b 4d 08	 mov	 rcx, QWORD PTR _Al$[rbp]
  0007b	e8 00 00 00 00	 call	 ??$_Freenode0@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::shared_ptr<std::thread>,void *>::_Freenode0<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
  00080	90		 npad	 1

; 1315 :     }

  00081	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00088	5f		 pop	 rdi
  00089	5d		 pop	 rbp
  0008a	c3		 ret	 0
?_Tidy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ ENDP ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?clear@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAXXZ
_TEXT	SEGMENT
_My_data$ = 8
tv75 = 216
tv73 = 224
this$ = 272
?clear@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAXXZ PROC ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::clear, COMDAT

; 1299 :     void clear() noexcept { // erase all

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1300 :         auto& _My_data = _Mypair._Myval2;

  00037	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 1301 :         _My_data._Orphan_non_end();

  00042	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00046	e8 00 00 00 00	 call	 ?_Orphan_non_end@?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@QEAAXXZ ; std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >::_Orphan_non_end
  0004b	90		 npad	 1

; 1302 :         _Node::_Free_non_head(_Getal(), _My_data._Myhead);

  0004c	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00050	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00054	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  0005b	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00062	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Getal
  00067	90		 npad	 1
  00068	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  0006f	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv75[rbp]
  00076	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR tv73[rbp]
  0007d	e8 00 00 00 00	 call	 ??$_Free_non_head@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@PEAU01@@Z ; std::_List_node<std::shared_ptr<std::thread>,void *>::_Free_non_head<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >
  00082	90		 npad	 1

; 1303 :         _My_data._Myhead->_Next = _My_data._Myhead;

  00083	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00087	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0008b	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0008f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00093	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1304 :         _My_data._Myhead->_Prev = _My_data._Myhead;

  00096	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0009a	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0009e	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  000a2	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000a6	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1305 :         _My_data._Mysize        = 0;

  000aa	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  000ae	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0

; 1306 :     }

  000b6	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  000bd	5f		 pop	 rdi
  000be	5d		 pop	 rbp
  000bf	c3		 ret	 0
?clear@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAXXZ ENDP ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?max_size@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
this$ = 288
?max_size@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEBA_KXZ PROC ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::max_size, COMDAT

; 1136 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1137 :         return _Min_value(

  00037	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEBAAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Getal
  00043	90		 npad	 1
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@@Z ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::max_size
  0004c	90		 npad	 1
  0004d	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00054	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00059	90		 npad	 1
  0005a	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  00061	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00068	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0006f	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  00074	90		 npad	 1
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1138 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alnode_traits::max_size(_Getal()));
; 1139 :     }

  00078	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
?max_size@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEBA_KXZ ENDP ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Unchecked_end@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
?_Unchecked_end@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Unchecked_end, COMDAT

; 1054 :     _Unchecked_iterator _Unchecked_end() { // return unchecked iterator for end of mutable sequence

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1055 :         return _Unchecked_iterator(_Mypair._Myval2._Myhead, nullptr);

  0003b	45 33 c0	 xor	 r8d, r8d
  0003e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00045	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  00049	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00050	e8 00 00 00 00	 call	 ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >
  00055	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1056 :     }

  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
?_Unchecked_end@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ?_Unchecked_begin@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
?_Unchecked_begin@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ PROC ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Unchecked_begin, COMDAT

; 1046 :     _Unchecked_iterator _Unchecked_begin() { // return iterator for beginning of mutable sequence

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1047 :         return _Unchecked_iterator(_Mypair._Myval2._Myhead->_Next, nullptr);

  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00046	45 33 c0	 xor	 r8d, r8d
  00049	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004c	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00053	e8 00 00 00 00	 call	 ??0?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAA@PEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@1@PEBV?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@1@@Z ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >
  00058	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1048 :     }

  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
?_Unchecked_begin@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ ENDP ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S2$ = 36
__$ArrayPad$ = 248
this$ = 288
??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ PROC ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::~list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >, COMDAT

; 984  :     ~list() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 f8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 985  :         _Tidy();

  00048	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004f	e8 00 00 00 00	 call	 ?_Tidy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Tidy
  00054	90		 npad	 1

; 986  : #if _ITERATOR_DEBUG_LEVEL != 0 // TRANSITION, ABI
; 987  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alnode, _Getal());

  00055	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Getal
  00061	90		 npad	 1
  00062	48 8b d0	 mov	 rdx, rax
  00065	48 8d 4d 24	 lea	 rcx, QWORD PTR $S2$[rbp]
  00069	e8 00 00 00 00	 call	 ??$?0U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><std::_List_node<std::shared_ptr<std::thread>,void *> >
  0006e	90		 npad	 1
  0006f	48 8d 45 24	 lea	 rax, QWORD PTR $S2$[rbp]
  00073	48 89 45 08	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 988  :         _Delete_plain_internal(_Alproxy, _Mypair._Myval2._Myproxy);

  00077	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007e	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00081	48 8b 4d 08	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  00085	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  0008a	90		 npad	 1

; 989  : #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 990  :     }

  0008b	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0008f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ$rtcFrameData
  00096	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0009b	90		 npad	 1
  0009c	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000a3	48 33 cd	 xor	 rcx, rbp
  000a6	e8 00 00 00 00	 call	 __security_check_cookie
  000ab	90		 npad	 1
  000ac	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000b3	5f		 pop	 rdi
  000b4	5d		 pop	 rbp
  000b5	c3		 ret	 0
??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ ENDP ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::~list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\list
;	COMDAT ??0?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 196
tv69 = 216
this$ = 256
??0?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ PROC ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >, COMDAT

; 736  :     list() : _Mypair(_Zero_then_variadic_args_t()) { // construct empty list

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2EF0BD34_list
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00044	0f b6 95 c4 00
	00 00		 movzx	 edx, BYTE PTR $T1[rbp]
  0004b	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv69[rbp]
  00052	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1>::_Compressed_pair<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >,std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,1><>

; 737  :         _Alloc_sentinel_and_proxy();

  00057	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005e	e8 00 00 00 00	 call	 ?_Alloc_sentinel_and_proxy@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@AEAAXXZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Alloc_sentinel_and_proxy

; 738  :     }

  00063	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006a	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00071	5f		 pop	 rdi
  00072	5d		 pop	 rbp
  00073	c3		 ret	 0
??0?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ ENDP ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@@Z
_TEXT	SEGMENT
__formal$ = 224
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00037	48 b8 ff ff ff
	ff ff ff ff 07	 mov	 rax, 576460752303423487	; 07ffffffffffffffH

; 768  :     }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SA_KAEBV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@QEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
__formal$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@QEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00040	48 6b 85 f0 00
	00 00 20	 imul	 rax, QWORD PTR _Count$[rbp], 32 ; 00000020H
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00052	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@@std@@SAXAEAV?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@2@QEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> > >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00042	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0CA@@std@@YA_K_K@Z ; std::_Get_size_of_n<32>
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?allocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAPEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z PROC ; std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00040	48 6b 85 f0 00
	00 00 20	 imul	 rax, QWORD PTR _Count$[rbp], 32 ; 00000020H
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00052	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
?deallocate@?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAAXQEAU?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@2@_K@Z ENDP ; std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAA@XZ PROC ; std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??0?$allocator@U?$_List_node@V?$shared_ptr@Vthread@std@@@std@@PEAX@std@@@std@@QEAA@XZ ENDP ; std::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >::allocator<std::_List_node<std::shared_ptr<std::thread>,void *> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ?Runable@ThreadPool@@AEAAXXZ
_TEXT	SEGMENT
list$ = 8
<range>$L0$6 = 56
<begin>$L0$7 = 88
<end>$L0$8 = 120
task$9 = 152
$T10 = 376
$T11 = 404
tv161 = 424
tv154 = 424
tv78 = 424
__$ArrayPad$ = 432
this$ = 480
?Runable@ThreadPool@@AEAAXXZ PROC			; ThreadPool::Runable, COMDAT

; 50   : {

$LN10:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 01
	00 00		 sub	 rsp, 488		; 000001e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 7a 00 00 00	 mov	 ecx, 122		; 0000007aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	02 00 00	 mov	 rcx, QWORD PTR [rsp+520]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 b0 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 51   : 	std::list<Task> list;

  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8d 4d 08	 lea	 rcx, QWORD PTR list$[rbp]
  00050	e8 00 00 00 00	 call	 ?__autoclassinit2@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAAX_K@Z
  00055	48 8d 4d 08	 lea	 rcx, QWORD PTR list$[rbp]
  00059	e8 00 00 00 00	 call	 ??0?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
  0005e	90		 npad	 1
$LN2@Runable:

; 52   : 	while (_running)

  0005f	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00066	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  0006c	48 8b c8	 mov	 rcx, rax
  0006f	e8 00 00 00 00	 call	 ??B?$atomic@_N@std@@QEBA_NXZ ; std::atomic<bool>::operator bool
  00074	0f b6 c0	 movzx	 eax, al
  00077	85 c0		 test	 eax, eax
  00079	0f 84 44 01 00
	00		 je	 $LN3@Runable

; 53   : 	{		
; 54   : 		_queue.Take(list);

  0007f	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00086	48 83 c0 18	 add	 rax, 24
  0008a	48 89 85 a8 01
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  00091	48 8d 55 08	 lea	 rdx, QWORD PTR list$[rbp]
  00095	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  0009c	e8 00 00 00 00	 call	 ?Take@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEAV?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@@Z ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Take

; 55   : 		for (auto& task : list) {

  000a1	48 8d 45 08	 lea	 rax, QWORD PTR list$[rbp]
  000a5	48 89 45 38	 mov	 QWORD PTR <range>$L0$6[rbp], rax
  000a9	ba 08 00 00 00	 mov	 edx, 8
  000ae	48 8d 4d 58	 lea	 rcx, QWORD PTR <begin>$L0$7[rbp]
  000b2	e8 00 00 00 00	 call	 ?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAX_K@Z
  000b7	48 8d 55 58	 lea	 rdx, QWORD PTR <begin>$L0$7[rbp]
  000bb	48 8b 4d 38	 mov	 rcx, QWORD PTR <range>$L0$6[rbp]
  000bf	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Unchecked_begin
  000c4	ba 08 00 00 00	 mov	 edx, 8
  000c9	48 8d 4d 78	 lea	 rcx, QWORD PTR <end>$L0$8[rbp]
  000cd	e8 00 00 00 00	 call	 ?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAX_K@Z
  000d2	48 8d 55 78	 lea	 rdx, QWORD PTR <end>$L0$8[rbp]
  000d6	48 8b 4d 38	 mov	 rcx, QWORD PTR <range>$L0$6[rbp]
  000da	e8 00 00 00 00	 call	 ?_Unchecked_end@?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@2@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::_Unchecked_end
  000df	eb 09		 jmp	 SHORT $LN6@Runable
$LN4@Runable:
  000e1	48 8d 4d 58	 lea	 rcx, QWORD PTR <begin>$L0$7[rbp]
  000e5	e8 00 00 00 00	 call	 ??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::operator++
$LN6@Runable:
  000ea	48 8d 55 78	 lea	 rdx, QWORD PTR <end>$L0$8[rbp]
  000ee	48 8d 4d 58	 lea	 rcx, QWORD PTR <begin>$L0$7[rbp]
  000f2	e8 00 00 00 00	 call	 ??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > >,std::_Iterator_base0>::operator!=
  000f7	0f b6 c0	 movzx	 eax, al
  000fa	85 c0		 test	 eax, eax
  000fc	74 6d		 je	 SHORT $LN5@Runable
  000fe	48 8d 4d 58	 lea	 rcx, QWORD PTR <begin>$L0$7[rbp]
  00102	e8 00 00 00 00	 call	 ??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$function@$$A6AXXZ@std@@@std@@@std@@@std@@QEBAAEAV?$function@$$A6AXXZ@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::function<void __cdecl(void)> > > >::operator*
  00107	48 89 85 98 00
	00 00		 mov	 QWORD PTR task$9[rbp], rax

; 56   : 			if (!_running)

  0010e	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00115	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  0011b	48 8b c8	 mov	 rcx, rax
  0011e	e8 00 00 00 00	 call	 ??B?$atomic@_N@std@@QEBA_NXZ ; std::atomic<bool>::operator bool
  00123	0f b6 c0	 movzx	 eax, al
  00126	85 c0		 test	 eax, eax
  00128	75 0e		 jne	 SHORT $LN7@Runable

; 57   : 				return;

  0012a	48 8d 4d 08	 lea	 rcx, QWORD PTR list$[rbp]
  0012e	e8 00 00 00 00	 call	 ??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
  00133	e9 94 00 00 00	 jmp	 $LN1@Runable
$LN7@Runable:

; 58   : 			task();

  00138	48 8b 8d 98 00
	00 00		 mov	 rcx, QWORD PTR task$9[rbp]
  0013f	e8 00 00 00 00	 call	 ??R?$_Func_class@X$$V@std@@QEBAXXZ ; std::_Func_class<void>::operator()

; 59   : 			_finish_task_count++;

  00144	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0014b	48 05 84 01 00
	00		 add	 rax, 388		; 00000184H
  00151	48 89 85 a8 01
	00 00		 mov	 QWORD PTR tv154[rbp], rax
  00158	33 d2		 xor	 edx, edx
  0015a	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR tv154[rbp]
  00161	e8 00 00 00 00	 call	 ??E?$_Atomic_integral@H$03@std@@QEAAHH@Z ; std::_Atomic_integral<int,4>::operator++

; 60   : 		}

  00166	e9 76 ff ff ff	 jmp	 $LN4@Runable
$LN5@Runable:

; 61   : 		std::cout << "runable" << std::endl;

  0016b	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_07JEDMOLAO@runable@
  00172	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00179	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0017e	48 89 85 a8 01
	00 00		 mov	 QWORD PTR tv161[rbp], rax
  00185	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  0018c	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR tv161[rbp]
  00193	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 62   : 		std::this_thread::sleep_for(std::chrono::milliseconds(100));

  00199	c7 85 94 01 00
	00 64 00 00 00	 mov	 DWORD PTR $T11[rbp], 100 ; 00000064H
  001a3	48 8d 95 94 01
	00 00		 lea	 rdx, QWORD PTR $T11[rbp]
  001aa	48 8d 8d 78 01
	00 00		 lea	 rcx, QWORD PTR $T10[rbp]
  001b1	e8 00 00 00 00	 call	 ??$?0HX@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEAA@AEBH@Z ; std::chrono::duration<__int64,std::ratio<1,1000> >::duration<__int64,std::ratio<1,1000> ><int,void>
  001b6	48 8b c8	 mov	 rcx, rax
  001b9	e8 00 00 00 00	 call	 ??$sleep_for@_JU?$ratio@$00$0DOI@@std@@@this_thread@std@@YAXAEBV?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@1@@Z ; std::this_thread::sleep_for<__int64,std::ratio<1,1000> >

; 63   : 	}

  001be	e9 9c fe ff ff	 jmp	 $LN2@Runable
$LN3@Runable:

; 64   : }

  001c3	48 8d 4d 08	 lea	 rcx, QWORD PTR list$[rbp]
  001c7	e8 00 00 00 00	 call	 ??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
$LN1@Runable:
  001cc	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  001d0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?Runable@ThreadPool@@AEAAXXZ$rtcFrameData
  001d7	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  001dc	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  001e3	48 33 cd	 xor	 rcx, rbp
  001e6	e8 00 00 00 00	 call	 __security_check_cookie
  001eb	48 8d a5 c8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+456]
  001f2	5f		 pop	 rdi
  001f3	5d		 pop	 rbp
  001f4	c3		 ret	 0
?Runable@ThreadPool@@AEAAXXZ ENDP			; ThreadPool::Runable
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
list$ = 8
<range>$L0$6 = 56
<begin>$L0$7 = 88
<end>$L0$8 = 120
task$9 = 152
$T10 = 376
$T11 = 404
tv161 = 424
tv154 = 424
tv78 = 424
__$ArrayPad$ = 432
this$ = 480
?dtor$0@?0??Runable@ThreadPool@@AEAAXXZ@4HA PROC	; `ThreadPool::Runable'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR list$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??Runable@ThreadPool@@AEAAXXZ@4HA ENDP	; `ThreadPool::Runable'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
list$ = 8
<range>$L0$6 = 56
<begin>$L0$7 = 88
<end>$L0$8 = 120
task$9 = 152
$T10 = 376
$T11 = 404
tv161 = 424
tv154 = 424
tv78 = 424
__$ArrayPad$ = 432
this$ = 480
?dtor$0@?0??Runable@ThreadPool@@AEAAXXZ@4HA PROC	; `ThreadPool::Runable'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR list$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$list@V?$function@$$A6AXXZ@std@@V?$allocator@V?$function@$$A6AXXZ@std@@@2@@std@@QEAA@XZ ; std::list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >::~list<std::function<void __cdecl(void)>,std::allocator<std::function<void __cdecl(void)> > >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??Runable@ThreadPool@@AEAAXXZ@4HA ENDP	; `ThreadPool::Runable'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ?StopThreadGroup@ThreadPool@@AEAAXXZ
_TEXT	SEGMENT
<range>$L0$5 = 8
<begin>$L0$6 = 40
<end>$L0$7 = 72
thr$8 = 104
tv143 = 312
tv141 = 320
tv148 = 328
__$ArrayPad$ = 336
this$ = 384
?StopThreadGroup@ThreadPool@@AEAAXXZ PROC		; ThreadPool::StopThreadGroup, COMDAT

; 67   : {

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 50 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 68   : 	_running = false;

  00047	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  00054	33 d2		 xor	 edx, edx
  00056	48 8b c8	 mov	 rcx, rax
  00059	e8 00 00 00 00	 call	 ??4?$atomic@_N@std@@QEAA_N_N@Z ; std::atomic<bool>::operator=

; 69   : 
; 70   : 	for (auto& thr : _threads) {

  0005e	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00065	48 89 45 08	 mov	 QWORD PTR <range>$L0$5[rbp], rax
  00069	ba 08 00 00 00	 mov	 edx, 8
  0006e	48 8d 4d 28	 lea	 rcx, QWORD PTR <begin>$L0$6[rbp]
  00072	e8 00 00 00 00	 call	 ?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z
  00077	48 8d 55 28	 lea	 rdx, QWORD PTR <begin>$L0$6[rbp]
  0007b	48 8b 4d 08	 mov	 rcx, QWORD PTR <range>$L0$5[rbp]
  0007f	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Unchecked_begin
  00084	ba 08 00 00 00	 mov	 edx, 8
  00089	48 8d 4d 48	 lea	 rcx, QWORD PTR <end>$L0$7[rbp]
  0008d	e8 00 00 00 00	 call	 ?__autoclassinit2@?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAX_K@Z
  00092	48 8d 55 48	 lea	 rdx, QWORD PTR <end>$L0$7[rbp]
  00096	48 8b 4d 08	 mov	 rcx, QWORD PTR <range>$L0$5[rbp]
  0009a	e8 00 00 00 00	 call	 ?_Unchecked_end@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA?AV?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@2@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::_Unchecked_end
  0009f	eb 09		 jmp	 SHORT $LN4@StopThread
$LN2@StopThread:
  000a1	48 8d 4d 28	 lea	 rcx, QWORD PTR <begin>$L0$6[rbp]
  000a5	e8 00 00 00 00	 call	 ??E?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::operator++
$LN4@StopThread:
  000aa	48 8d 55 48	 lea	 rdx, QWORD PTR <end>$L0$7[rbp]
  000ae	48 8d 4d 28	 lea	 rcx, QWORD PTR <begin>$L0$6[rbp]
  000b2	e8 00 00 00 00	 call	 ??9?$_List_unchecked_const_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@U_Iterator_base0@2@@std@@QEBA_NAEBV01@@Z ; std::_List_unchecked_const_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > >,std::_Iterator_base0>::operator!=
  000b7	0f b6 c0	 movzx	 eax, al
  000ba	85 c0		 test	 eax, eax
  000bc	74 20		 je	 SHORT $LN3@StopThread
  000be	48 8d 4d 28	 lea	 rcx, QWORD PTR <begin>$L0$6[rbp]
  000c2	e8 00 00 00 00	 call	 ??D?$_List_unchecked_iterator@V?$_List_val@U?$_List_simple_types@V?$shared_ptr@Vthread@std@@@std@@@std@@@std@@@std@@QEBAAEAV?$shared_ptr@Vthread@std@@@1@XZ ; std::_List_unchecked_iterator<std::_List_val<std::_List_simple_types<std::shared_ptr<std::thread> > > >::operator*
  000c7	48 89 45 68	 mov	 QWORD PTR thr$8[rbp], rax

; 71   : 		thr->join();

  000cb	48 8b 4d 68	 mov	 rcx, QWORD PTR thr$8[rbp]
  000cf	e8 00 00 00 00	 call	 ??$?CVthread@std@@$0A@@?$shared_ptr@Vthread@std@@@std@@QEBAPEAVthread@1@XZ ; std::shared_ptr<std::thread>::operator-><std::thread,0>
  000d4	48 8b c8	 mov	 rcx, rax
  000d7	e8 00 00 00 00	 call	 ?join@thread@std@@QEAAXXZ ; std::thread::join

; 72   : 	}

  000dc	eb c3		 jmp	 SHORT $LN2@StopThread
$LN3@StopThread:

; 73   : 	_threads.clear();	

  000de	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e5	48 8b c8	 mov	 rcx, rax
  000e8	e8 00 00 00 00	 call	 ?clear@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAAXXZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::clear

; 74   : 
; 75   : 	_queue.Stop();

  000ed	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f4	48 83 c0 18	 add	 rax, 24
  000f8	48 8b c8	 mov	 rcx, rax
  000fb	e8 00 00 00 00	 call	 ?Stop@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXXZ ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Stop

; 76   : 	std::cout << "_finish_task_count:= "

  00100	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BG@GPONIBBL@_finish_task_count?3?$DN?5@
  00107	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0010e	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00113	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv143[rbp], rax
  0011a	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00121	48 05 84 01 00
	00		 add	 rax, 388		; 00000184H
  00127	48 8b c8	 mov	 rcx, rax
  0012a	e8 00 00 00 00	 call	 ??B?$atomic@H@std@@QEBAHXZ ; std::atomic<int>::operator int
  0012f	89 85 40 01 00
	00		 mov	 DWORD PTR tv141[rbp], eax
  00135	8b 95 40 01 00
	00		 mov	 edx, DWORD PTR tv141[rbp]
  0013b	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR tv143[rbp]
  00142	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
  00148	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv148[rbp], rax
  0014f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  00156	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv148[rbp]
  0015d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 77   : 		<< _finish_task_count
; 78   : 		<< std::endl;
; 79   : }

  00163	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00167	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?StopThreadGroup@ThreadPool@@AEAAXXZ$rtcFrameData
  0016e	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00173	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0017a	48 33 cd	 xor	 rcx, rbp
  0017d	e8 00 00 00 00	 call	 __security_check_cookie
  00182	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  00189	5f		 pop	 rdi
  0018a	5d		 pop	 rbp
  0018b	c3		 ret	 0
?StopThreadGroup@ThreadPool@@AEAAXXZ ENDP		; ThreadPool::StopThreadGroup
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ?Start@ThreadPool@@AEAAXH@Z
_TEXT	SEGMENT
n$1 = 4
$T2 = 232
$T3 = 264
$T4 = 296
tv87 = 328
tv71 = 328
tv90 = 336
tv89 = 344
this$ = 384
n_thread$ = 392
?Start@ThreadPool@@AEAAXH@Z PROC			; ThreadPool::Start, COMDAT

; 37   : {

$LN7:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 38   : 	std::cout << "start" << std::endl;

  0003a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_05FAGFPHJG@start@
  00041	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00048	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0004d	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  00054	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  0005b	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv71[rbp]
  00062	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 39   : 	_running = true;

  00068	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006f	48 05 80 01 00
	00		 add	 rax, 384		; 00000180H
  00075	b2 01		 mov	 dl, 1
  00077	48 8b c8	 mov	 rcx, rax
  0007a	e8 00 00 00 00	 call	 ??4?$atomic@_N@std@@QEAA_N_N@Z ; std::atomic<bool>::operator=

; 40   : 
; 41   : 	for (int n = 0; n < n_thread; n++)

  0007f	c7 45 04 00 00
	00 00		 mov	 DWORD PTR n$1[rbp], 0
  00086	eb 08		 jmp	 SHORT $LN4@Start
$LN2@Start:
  00088	8b 45 04	 mov	 eax, DWORD PTR n$1[rbp]
  0008b	ff c0		 inc	 eax
  0008d	89 45 04	 mov	 DWORD PTR n$1[rbp], eax
$LN4@Start:
  00090	8b 85 88 01 00
	00		 mov	 eax, DWORD PTR n_thread$[rbp]
  00096	39 45 04	 cmp	 DWORD PTR n$1[rbp], eax
  00099	7d 7e		 jge	 SHORT $LN3@Start

; 42   : 	{
; 43   : 		_threads.emplace_back(std::make_shared<std::thread>(

  0009b	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a2	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  000a9	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b0	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  000b7	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?Runable@ThreadPool@@AEAAXXZ ; ThreadPool::Runable
  000be	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T3[rbp], rax
  000c5	4c 8d 85 e8 00
	00 00		 lea	 r8, QWORD PTR $T2[rbp]
  000cc	48 8d 95 08 01
	00 00		 lea	 rdx, QWORD PTR $T3[rbp]
  000d3	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  000da	e8 00 00 00 00	 call	 ??$make_shared@Vthread@std@@P8ThreadPool@@EAAXXZPEAV3@@std@@YA?AV?$shared_ptr@Vthread@std@@@0@$$QEAP8ThreadPool@@EAAXXZ$$QEAPEAV2@@Z ; std::make_shared<std::thread,void (__cdecl ThreadPool::*)(void),ThreadPool *>
  000df	48 89 85 50 01
	00 00		 mov	 QWORD PTR tv90[rbp], rax
  000e6	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR tv90[rbp]
  000ed	48 89 85 58 01
	00 00		 mov	 QWORD PTR tv89[rbp], rax
  000f4	48 8b 95 58 01
	00 00		 mov	 rdx, QWORD PTR tv89[rbp]
  000fb	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv87[rbp]
  00102	e8 00 00 00 00	 call	 ??$emplace_back@V?$shared_ptr@Vthread@std@@@std@@@?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@$$QEAV?$shared_ptr@Vthread@std@@@1@@Z ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::emplace_back<std::shared_ptr<std::thread> >
  00107	90		 npad	 1
  00108	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0010f	e8 00 00 00 00	 call	 ??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ ; std::shared_ptr<std::thread>::~shared_ptr<std::thread>

; 44   : 			&ThreadPool::Runable, this
; 45   : 		));
; 46   : 	}

  00114	e9 6f ff ff ff	 jmp	 $LN2@Start
$LN3@Start:

; 47   : }

  00119	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  00120	5f		 pop	 rdi
  00121	5d		 pop	 rbp
  00122	c3		 ret	 0
?Start@ThreadPool@@AEAAXH@Z ENDP			; ThreadPool::Start
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
n$1 = 4
$T2 = 232
$T3 = 264
$T4 = 296
tv87 = 328
tv71 = 328
tv90 = 336
tv89 = 344
this$ = 384
n_thread$ = 392
?dtor$0@?0??Start@ThreadPool@@AEAAXH@Z@4HA PROC		; `ThreadPool::Start'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ ; std::shared_ptr<std::thread>::~shared_ptr<std::thread>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0??Start@ThreadPool@@AEAAXH@Z@4HA ENDP		; `ThreadPool::Start'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
n$1 = 4
$T2 = 232
$T3 = 264
$T4 = 296
tv87 = 328
tv71 = 328
tv90 = 336
tv89 = 344
this$ = 384
n_thread$ = 392
?dtor$0@?0??Start@ThreadPool@@AEAAXH@Z@4HA PROC		; `ThreadPool::Start'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@Vthread@std@@@std@@QEAA@XZ ; std::shared_ptr<std::thread>::~shared_ptr<std::thread>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0??Start@ThreadPool@@AEAAXH@Z@4HA ENDP		; `ThreadPool::Start'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ?AddTask@ThreadPool@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z
_TEXT	SEGMENT
tv68 = 192
this$ = 240
task$ = 248
?AddTask@ThreadPool@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z PROC ; ThreadPool::AddTask, COMDAT

; 32   : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 33   : 	_queue.Put(task);

  0003b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 83 c0 18	 add	 rax, 24
  00046	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv68[rbp], rax
  0004d	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR task$[rbp]
  00054	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv68[rbp]
  0005b	e8 00 00 00 00	 call	 ?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Put

; 34   : }

  00060	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00067	5f		 pop	 rdi
  00068	5d		 pop	 rbp
  00069	c3		 ret	 0
?AddTask@ThreadPool@@QEAAXAEBV?$function@$$A6AXXZ@std@@@Z ENDP ; ThreadPool::AddTask
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ?AddTask@ThreadPool@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z
_TEXT	SEGMENT
tv70 = 192
this$ = 240
task$ = 248
?AddTask@ThreadPool@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z PROC ; ThreadPool::AddTask, COMDAT

; 27   : {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 28   : 	_queue.Put(std::forward<Task>(task));

  0003b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 83 c0 18	 add	 rax, 24
  00046	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv70[rbp], rax
  0004d	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR task$[rbp]
  00054	e8 00 00 00 00	 call	 ??$forward@V?$function@$$A6AXXZ@std@@@std@@YA$$QEAV?$function@$$A6AXXZ@0@AEAV10@@Z ; std::forward<std::function<void __cdecl(void)> >
  00059	48 8b d0	 mov	 rdx, rax
  0005c	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv70[rbp]
  00063	e8 00 00 00 00	 call	 ?Put@?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::Put

; 29   : }

  00068	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?AddTask@ThreadPool@@QEAAX$$QEAV?$function@$$A6AXXZ@std@@@Z ENDP ; ThreadPool::AddTask
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ?Stop@ThreadPool@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 200
this$ = 256
?Stop@ThreadPool@@QEAAXXZ PROC				; ThreadPool::Stop, COMDAT

; 19   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 20   : 	std::call_once(_flag, [this]() {

  00036	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR this$[rbp]
  0003d	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00044	e8 00 00 00 00	 call	 ??0<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@QEAA@PEAV2@@Z ; `ThreadPool::Stop'::`2'::<lambda_1>::<lambda_1>
  00049	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00050	48 81 c1 78 01
	00 00		 add	 rcx, 376		; 00000178H
  00057	48 8b d0	 mov	 rdx, rax
  0005a	e8 00 00 00 00	 call	 ??$call_once@V<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@$$V@std@@YAXAEAUonce_flag@0@$$QEAV<lambda_1>@?1??Stop@ThreadPool@@QEAAXXZ@@Z ; std::call_once<`ThreadPool::Stop'::`2'::<lambda_1> >

; 21   : 		std::cout << "call once stop" << std::endl;
; 22   : 		StopThreadGroup();
; 23   : 		});
; 24   : }

  0005f	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
?Stop@ThreadPool@@QEAAXXZ ENDP				; ThreadPool::Stop
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ??1ThreadPool@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1ThreadPool@@QEAA@XZ PROC				; ThreadPool::~ThreadPool, COMDAT

; 14   : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 15   : 	Stop();

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?Stop@ThreadPool@@QEAAXXZ ; ThreadPool::Stop
  00043	90		 npad	 1

; 16   : }

  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 83 c0 18	 add	 rax, 24
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 ??1?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@XZ ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::~SyncQueue<std::function<void __cdecl(void)>,std::mutex>
  00057	90		 npad	 1
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 ??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::~list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >
  00067	90		 npad	 1
  00068	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??1ThreadPool@@QEAA@XZ ENDP				; ThreadPool::~ThreadPool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ??0ThreadPool@@QEAA@H@Z
_TEXT	SEGMENT
$T1 = 208
$T2 = 292
tv89 = 312
tv79 = 312
this$ = 352
n_cpu$ = 360
??0ThreadPool@@QEAA@H@Z PROC				; ThreadPool::ThreadPool, COMDAT

; 9    : {

$LN6:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR [rsp+392]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00041	48 8b c8	 mov	 rcx, rax
  00044	e8 00 00 00 00	 call	 ??0?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >
  00049	90		 npad	 1

; 4    : 	:_queue(max_task_count, [](EnumEvent e) {

  0004a	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00051	48 83 c0 18	 add	 rax, 24
  00055	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  0005c	0f b6 95 24 01
	00 00		 movzx	 edx, BYTE PTR $T2[rbp]
  00063	48 8d 8d d0 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0006a	e8 00 00 00 00	 call	 ??$?0V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@X@?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@V<lambda_1_>@?0???0ThreadPool@@QEAA@H@Z@@Z ; std::function<void __cdecl(enum EnumEvent)>::function<void __cdecl(enum EnumEvent)><`ThreadPool::ThreadPool'::`1'::<lambda_1_>,void>
  0006f	90		 npad	 1
  00070	4c 8d 85 d0 00
	00 00		 lea	 r8, QWORD PTR $T1[rbp]
  00077	ba 0a 00 00 00	 mov	 edx, 10
  0007c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR tv79[rbp]
  00083	e8 00 00 00 00	 call	 ??0?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@H$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@Z ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::SyncQueue<std::function<void __cdecl(void)>,std::mutex>
  00088	90		 npad	 1
  00089	48 8d 8d d0 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00090	e8 00 00 00 00	 call	 ??1?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@XZ

; 9    : {

  00095	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0009c	48 05 78 01 00
	00		 add	 rax, 376		; 00000178H
  000a2	48 8b c8	 mov	 rcx, rax
  000a5	e8 00 00 00 00	 call	 ??0once_flag@std@@QEAA@XZ ; std::once_flag::once_flag

; 5    : 			std::cout << "______e := " << (int)e << " ___ " 
; 6    : 				<< std::this_thread::get_id() << std::endl;
; 7    : 		}),
; 8    : 	_finish_task_count(0)

  000aa	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b1	48 05 84 01 00
	00		 add	 rax, 388		; 00000184H
  000b7	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv89[rbp], rax
  000be	33 d2		 xor	 edx, edx
  000c0	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR tv89[rbp]
  000c7	e8 00 00 00 00	 call	 ??0?$atomic@H@std@@QEAA@H@Z

; 10   : 	Start(n_cpu);

  000cc	8b 95 68 01 00
	00		 mov	 edx, DWORD PTR n_cpu$[rbp]
  000d2	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000d9	e8 00 00 00 00	 call	 ?Start@ThreadPool@@AEAAXH@Z ; ThreadPool::Start
  000de	90		 npad	 1

; 11   : }

  000df	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e6	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  000ed	5f		 pop	 rdi
  000ee	5d		 pop	 rbp
  000ef	c3		 ret	 0
??0ThreadPool@@QEAA@H@Z ENDP				; ThreadPool::ThreadPool
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 208
$T2 = 292
tv89 = 312
tv79 = 312
this$ = 352
n_cpu$ = 360
?dtor$0@?0???0ThreadPool@@QEAA@H@Z@4HA PROC		; `ThreadPool::ThreadPool'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::~list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ThreadPool@@QEAA@H@Z@4HA ENDP		; `ThreadPool::ThreadPool'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 208
$T2 = 292
tv89 = 312
tv79 = 312
this$ = 352
n_cpu$ = 360
?dtor$1@?0???0ThreadPool@@QEAA@H@Z@4HA PROC		; `ThreadPool::ThreadPool'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 8d d0 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0ThreadPool@@QEAA@H@Z@4HA ENDP		; `ThreadPool::ThreadPool'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 208
$T2 = 292
tv89 = 312
tv79 = 312
this$ = 352
n_cpu$ = 360
?dtor$2@?0???0ThreadPool@@QEAA@H@Z@4HA PROC		; `ThreadPool::ThreadPool'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	48 83 c1 18	 add	 rcx, 24
  0001f	e8 00 00 00 00	 call	 ??1?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@XZ ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::~SyncQueue<std::function<void __cdecl(void)>,std::mutex>
  00024	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00028	5f		 pop	 rdi
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?dtor$2@?0???0ThreadPool@@QEAA@H@Z@4HA ENDP		; `ThreadPool::ThreadPool'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 208
$T2 = 292
tv89 = 312
tv79 = 312
this$ = 352
n_cpu$ = 360
?dtor$0@?0???0ThreadPool@@QEAA@H@Z@4HA PROC		; `ThreadPool::ThreadPool'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$list@V?$shared_ptr@Vthread@std@@@std@@V?$allocator@V?$shared_ptr@Vthread@std@@@std@@@2@@std@@QEAA@XZ ; std::list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >::~list<std::shared_ptr<std::thread>,std::allocator<std::shared_ptr<std::thread> > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0ThreadPool@@QEAA@H@Z@4HA ENDP		; `ThreadPool::ThreadPool'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 208
$T2 = 292
tv89 = 312
tv79 = 312
this$ = 352
n_cpu$ = 360
?dtor$1@?0???0ThreadPool@@QEAA@H@Z@4HA PROC		; `ThreadPool::ThreadPool'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 8d d0 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0ThreadPool@@QEAA@H@Z@4HA ENDP		; `ThreadPool::ThreadPool'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 208
$T2 = 292
tv89 = 312
tv79 = 312
this$ = 352
n_cpu$ = 360
?dtor$2@?0???0ThreadPool@@QEAA@H@Z@4HA PROC		; `ThreadPool::ThreadPool'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	48 83 c1 18	 add	 rcx, 24
  0001f	e8 00 00 00 00	 call	 ??1?$SyncQueue@V?$function@$$A6AXXZ@std@@Vmutex@2@@@QEAA@XZ ; SyncQueue<std::function<void __cdecl(void)>,std::mutex>::~SyncQueue<std::function<void __cdecl(void)>,std::mutex>
  00024	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00028	5f		 pop	 rdi
  00029	5d		 pop	 rbp
  0002a	c3		 ret	 0
?dtor$2@?0???0ThreadPool@@QEAA@H@Z@4HA ENDP		; `ThreadPool::ThreadPool'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
tv80 = 192
_Ostr$ = 240
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 950  :     basic_ostream<_Elem, _Traits>& _Ostr) { // insert newline and flush stream

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 951  :     _Ostr.put(_Ostr.widen('\n'));

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00044	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  00058	b2 0a		 mov	 dl, 10
  0005a	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv80[rbp]
  00061	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  00067	0f b6 d0	 movzx	 edx, al
  0006a	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00071	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z

; 952  :     _Ostr.flush();

  00077	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 953  :     return _Ostr;

  00084	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]

; 954  : }

  0008b	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z
_TEXT	SEGMENT
_Str$ = 224
_Id$ = 232
??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z PROC ; std::operator<<<char,std::char_traits<char> >, COMDAT

; 235  : basic_ostream<_Ch, _Tr>& operator<<(basic_ostream<_Ch, _Tr>& _Str, thread::id _Id) { // insert id into stream

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F7EEAF5_thread
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 236  :     return _Str << _Id._Id;

  0003a	8b 95 e8 00 00
	00		 mov	 edx, DWORD PTR _Id$[rbp]
  00040	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Str$[rbp]
  00047	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@I@Z

; 237  : }

  0004d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
??$?6DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@Vid@thread@0@@Z ENDP ; std::operator<<<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 738  :     const char* _Val) { // insert NTBS into char stream

$LN25:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 38 02
	00 00		 sub	 rsp, 568		; 00000238H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 8e 00 00 00	 mov	 ecx, 142		; 0000008eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 58
	02 00 00	 mov	 rcx, QWORD PTR [rsp+600]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 00 02
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 739  :     using _Elem = char;
; 740  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 741  : 
; 742  :     ios_base::iostate _State = ios_base::goodbit;

  0004c	c7 45 04 00 00
	00 00		 mov	 DWORD PTR _State$[rbp], 0

; 743  :     streamsize _Count        = static_cast<streamsize>(_Traits::length(_Val));

  00053	48 8b 8d 38 02
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  0005a	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0005f	48 89 45 28	 mov	 QWORD PTR _Count$[rbp], rax

; 744  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

  00063	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0006a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00071	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00078	48 03 c8	 add	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 8b c8	 mov	 rcx, rax
  00081	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  00087	48 85 c0	 test	 rax, rax
  0008a	7e 5b		 jle	 SHORT $LN17@operator
  0008c	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00093	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00096	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0009a	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000a1	48 03 c8	 add	 rcx, rax
  000a4	48 8b c1	 mov	 rax, rcx
  000a7	48 8b c8	 mov	 rcx, rax
  000aa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  000b0	48 3b 45 28	 cmp	 rax, QWORD PTR _Count$[rbp]
  000b4	7e 31		 jle	 SHORT $LN17@operator
  000b6	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000bd	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c0	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000c4	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000cb	48 03 c8	 add	 rcx, rax
  000ce	48 8b c1	 mov	 rax, rcx
  000d1	48 8b c8	 mov	 rcx, rax
  000d4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  000da	48 2b 45 28	 sub	 rax, QWORD PTR _Count$[rbp]
  000de	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv137[rbp], rax
  000e5	eb 0b		 jmp	 SHORT $LN18@operator
$LN17@operator:
  000e7	48 c7 85 e8 01
	00 00 00 00 00
	00		 mov	 QWORD PTR tv137[rbp], 0
$LN18@operator:
  000f2	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv137[rbp]
  000f9	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax

; 745  :     const typename _Myos::sentry _Ok(_Ostr);

  000fd	48 8b 95 30 02
	00 00		 mov	 rdx, QWORD PTR _Ostr$[rbp]
  00104	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00108	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  0010d	90		 npad	 1

; 746  : 
; 747  :     if (!_Ok) {

  0010e	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00112	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  00117	0f b6 c0	 movzx	 eax, al
  0011a	85 c0		 test	 eax, eax
  0011c	75 0e		 jne	 SHORT $LN8@operator

; 748  :         _State |= ios_base::badbit;

  0011e	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  00121	83 c8 04	 or	 eax, 4
  00124	89 45 04	 mov	 DWORD PTR _State$[rbp], eax

; 749  :     } else { // state okay, insert

  00127	e9 b6 02 00 00	 jmp	 $LN9@operator
$LN8@operator:

; 750  :         _TRY_IO_BEGIN
; 751  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

  0012c	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00133	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00136	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0013a	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00141	48 03 c8	 add	 rcx, rax
  00144	48 8b c1	 mov	 rax, rcx
  00147	48 8b c8	 mov	 rcx, rax
  0014a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
  00150	89 85 e4 01 00
	00		 mov	 DWORD PTR tv139[rbp], eax
  00156	8b 85 e4 01 00
	00		 mov	 eax, DWORD PTR tv139[rbp]
  0015c	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  00161	83 f8 40	 cmp	 eax, 64			; 00000040H
  00164	0f 84 e3 00 00
	00		 je	 $LN11@operator

; 752  :             for (; 0 < _Pad; --_Pad) { // pad on left

  0016a	eb 0b		 jmp	 SHORT $LN4@operator
$LN2@operator:
  0016c	48 8b 45 48	 mov	 rax, QWORD PTR _Pad$[rbp]
  00170	48 ff c8	 dec	 rax
  00173	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax
$LN4@operator:
  00177	48 83 7d 48 00	 cmp	 QWORD PTR _Pad$[rbp], 0
  0017c	0f 8e cb 00 00
	00		 jle	 $LN11@operator

; 753  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

  00182	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00189	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0018c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00190	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00197	48 03 c8	 add	 rcx, rax
  0019a	48 8b c1	 mov	 rax, rcx
  0019d	48 8b c8	 mov	 rcx, rax
  001a0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  001a6	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv311[rbp], rax
  001ad	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv311[rbp]
  001b4	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv194[rbp], rax
  001bb	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  001c2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001c5	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  001c9	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  001d0	48 03 c8	 add	 rcx, rax
  001d3	48 8b c1	 mov	 rax, rcx
  001d6	48 8b c8	 mov	 rcx, rax
  001d9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  001df	88 85 f8 01 00
	00		 mov	 BYTE PTR tv312[rbp], al
  001e5	0f b6 85 f8 01
	00 00		 movzx	 eax, BYTE PTR tv312[rbp]
  001ec	88 85 f9 01 00
	00		 mov	 BYTE PTR tv192[rbp], al
  001f2	0f b6 95 f9 01
	00 00		 movzx	 edx, BYTE PTR tv192[rbp]
  001f9	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR tv194[rbp]
  00200	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  00206	89 85 fc 01 00
	00		 mov	 DWORD PTR tv313[rbp], eax
  0020c	8b 85 fc 01 00
	00		 mov	 eax, DWORD PTR tv313[rbp]
  00212	89 85 54 01 00
	00		 mov	 DWORD PTR $T4[rbp], eax
  00218	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0021d	89 85 74 01 00
	00		 mov	 DWORD PTR $T5[rbp], eax
  00223	48 8d 95 54 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  0022a	48 8d 8d 74 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00231	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00236	0f b6 c0	 movzx	 eax, al
  00239	85 c0		 test	 eax, eax
  0023b	74 0b		 je	 SHORT $LN12@operator

; 754  :                     _State |= ios_base::badbit; // insertion failed, quit

  0023d	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  00240	83 c8 04	 or	 eax, 4
  00243	89 45 04	 mov	 DWORD PTR _State$[rbp], eax

; 755  :                     break;

  00246	eb 05		 jmp	 SHORT $LN11@operator
$LN12@operator:

; 756  :                 }
; 757  :             }

  00248	e9 1f ff ff ff	 jmp	 $LN2@operator
$LN11@operator:

; 758  :         }
; 759  : 
; 760  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

  0024d	83 7d 04 00	 cmp	 DWORD PTR _State$[rbp], 0
  00251	75 6e		 jne	 SHORT $LN13@operator
  00253	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0025a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0025d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00261	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00268	48 03 c8	 add	 rcx, rax
  0026b	48 8b c1	 mov	 rax, rcx
  0026e	48 8b c8	 mov	 rcx, rax
  00271	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00277	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv314[rbp], rax
  0027e	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv314[rbp]
  00285	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv219[rbp], rax
  0028c	4c 8b 45 28	 mov	 r8, QWORD PTR _Count$[rbp]
  00290	48 8b 95 38 02
	00 00		 mov	 rdx, QWORD PTR _Val$[rbp]
  00297	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR tv219[rbp]
  0029e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
  002a4	48 89 85 f8 01
	00 00		 mov	 QWORD PTR tv315[rbp], rax
  002ab	48 8b 45 28	 mov	 rax, QWORD PTR _Count$[rbp]
  002af	48 39 85 f8 01
	00 00		 cmp	 QWORD PTR tv315[rbp], rax
  002b6	74 09		 je	 SHORT $LN13@operator

; 761  :             _State |= ios_base::badbit;

  002b8	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  002bb	83 c8 04	 or	 eax, 4
  002be	89 45 04	 mov	 DWORD PTR _State$[rbp], eax
$LN13@operator:

; 762  :         }
; 763  : 
; 764  :         if (_State == ios_base::goodbit) {

  002c1	83 7d 04 00	 cmp	 DWORD PTR _State$[rbp], 0
  002c5	0f 85 e3 00 00
	00		 jne	 $LN14@operator

; 765  :             for (; 0 < _Pad; --_Pad) { // pad on right

  002cb	eb 0b		 jmp	 SHORT $LN7@operator
$LN5@operator:
  002cd	48 8b 45 48	 mov	 rax, QWORD PTR _Pad$[rbp]
  002d1	48 ff c8	 dec	 rax
  002d4	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax
$LN7@operator:
  002d8	48 83 7d 48 00	 cmp	 QWORD PTR _Pad$[rbp], 0
  002dd	0f 8e cb 00 00
	00		 jle	 $LN14@operator

; 766  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

  002e3	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  002ea	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002ed	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  002f1	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  002f8	48 03 c8	 add	 rcx, rax
  002fb	48 8b c1	 mov	 rax, rcx
  002fe	48 8b c8	 mov	 rcx, rax
  00301	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00307	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv316[rbp], rax
  0030e	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv316[rbp]
  00315	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv256[rbp], rax
  0031c	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00323	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00326	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0032a	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00331	48 03 c8	 add	 rcx, rax
  00334	48 8b c1	 mov	 rax, rcx
  00337	48 8b c8	 mov	 rcx, rax
  0033a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  00340	88 85 f8 01 00
	00		 mov	 BYTE PTR tv317[rbp], al
  00346	0f b6 85 f8 01
	00 00		 movzx	 eax, BYTE PTR tv317[rbp]
  0034d	88 85 f9 01 00
	00		 mov	 BYTE PTR tv254[rbp], al
  00353	0f b6 95 f9 01
	00 00		 movzx	 edx, BYTE PTR tv254[rbp]
  0035a	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR tv256[rbp]
  00361	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  00367	89 85 fc 01 00
	00		 mov	 DWORD PTR tv318[rbp], eax
  0036d	8b 85 fc 01 00
	00		 mov	 eax, DWORD PTR tv318[rbp]
  00373	89 85 94 01 00
	00		 mov	 DWORD PTR $T6[rbp], eax
  00379	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0037e	89 85 b4 01 00
	00		 mov	 DWORD PTR $T7[rbp], eax
  00384	48 8d 95 94 01
	00 00		 lea	 rdx, QWORD PTR $T6[rbp]
  0038b	48 8d 8d b4 01
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  00392	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00397	0f b6 c0	 movzx	 eax, al
  0039a	85 c0		 test	 eax, eax
  0039c	74 0b		 je	 SHORT $LN15@operator

; 767  :                     _State |= ios_base::badbit; // insertion failed, quit

  0039e	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  003a1	83 c8 04	 or	 eax, 4
  003a4	89 45 04	 mov	 DWORD PTR _State$[rbp], eax

; 768  :                     break;

  003a7	eb 05		 jmp	 SHORT $LN14@operator
$LN15@operator:

; 769  :                 }
; 770  :             }

  003a9	e9 1f ff ff ff	 jmp	 $LN5@operator
$LN14@operator:

; 771  :         }
; 772  : 
; 773  :         _Ostr.width(0);

  003ae	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  003b5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003b8	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  003bc	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  003c3	48 03 c8	 add	 rcx, rax
  003c6	48 8b c1	 mov	 rax, rcx
  003c9	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv277[rbp], rax
  003d0	33 d2		 xor	 edx, edx
  003d2	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR tv277[rbp]
  003d9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
  003df	90		 npad	 1
  003e0	eb 00		 jmp	 SHORT $LN9@operator
$LN23@operator:
$LN9@operator:

; 774  :         _CATCH_IO_(ios_base, _Ostr)
; 775  :     }
; 776  : 
; 777  :     _Ostr.setstate(_State);

  003e2	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  003e9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003ec	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  003f0	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  003f7	48 03 c8	 add	 rcx, rax
  003fa	48 8b c1	 mov	 rax, rcx
  003fd	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv306[rbp], rax
  00404	45 33 c0	 xor	 r8d, r8d
  00407	8b 55 04	 mov	 edx, DWORD PTR _State$[rbp]
  0040a	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR tv306[rbp]
  00411	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 778  :     return _Ostr;

  00417	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0041e	48 89 85 d8 01
	00 00		 mov	 QWORD PTR $T8[rbp], rax
  00425	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00429	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0042e	48 8b 85 d8 01
	00 00		 mov	 rax, QWORD PTR $T8[rbp]

; 779  : }

  00435	48 8b f8	 mov	 rdi, rax
  00438	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0043c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData
  00443	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00448	48 8b c7	 mov	 rax, rdi
  0044b	48 8b 8d 00 02
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00452	48 33 cd	 xor	 rcx, rbp
  00455	e8 00 00 00 00	 call	 __security_check_cookie
  0045a	48 8d a5 18 02
	00 00		 lea	 rsp, QWORD PTR [rbp+536]
  00461	5f		 pop	 rdi
  00462	5d		 pop	 rbp
  00463	c3		 ret	 0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00018	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 774  :         _CATCH_IO_(ios_base, _Ostr)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00014	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0001b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00022	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00029	48 03 c8	 add	 rcx, rax
  0002c	48 8b c1	 mov	 rax, rcx
  0002f	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv291[rbp], rax
  00036	41 b0 01	 mov	 r8b, 1
  00039	ba 04 00 00 00	 mov	 edx, 4
  0003e	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR tv291[rbp]
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  0004b	90		 npad	 1
  0004c	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  00053	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00018	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 774  :         _CATCH_IO_(ios_base, _Ostr)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00014	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0001b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00022	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00029	48 03 c8	 add	 rcx, rax
  0002c	48 8b c1	 mov	 rax, rcx
  0002f	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv291[rbp], rax
  00036	41 b0 01	 mov	 r8b, 1
  00039	ba 04 00 00 00	 mov	 edx, 4
  0003e	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR tv291[rbp]
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  0004b	90		 npad	 1
  0004c	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  00053	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@XZ PROC	; std::function<void __cdecl(enum EnumEvent)>::~function<void __cdecl(enum EnumEvent)>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ ; std::_Func_class<void,enum EnumEvent>::~_Func_class<void,enum EnumEvent>
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@XZ ENDP	; std::function<void __cdecl(enum EnumEvent)>::~function<void __cdecl(enum EnumEvent)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??0?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@$$QEAV01@@Z PROC ; std::function<void __cdecl(enum EnumEvent)>::function<void __cdecl(enum EnumEvent)>, COMDAT

; 1197 :     function(function&& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00043	e8 00 00 00 00	 call	 ??0?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ ; std::_Func_class<void,enum EnumEvent>::_Func_class<void,enum EnumEvent>
  00048	90		 npad	 1

; 1198 :         this->_Reset_move(_STD move(_Right));

  00049	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00050	e8 00 00 00 00	 call	 ??$move@AEAV?$function@$$A6AXW4EnumEvent@@@Z@std@@@std@@YA$$QEAV?$function@$$A6AXW4EnumEvent@@@Z@0@AEAV10@@Z ; std::move<std::function<void __cdecl(enum EnumEvent)> &>
  00055	90		 npad	 1
  00056	48 8b d0	 mov	 rdx, rax
  00059	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	e8 00 00 00 00	 call	 ?_Reset_move@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV12@@Z ; std::_Func_class<void,enum EnumEvent>::_Reset_move
  00065	90		 npad	 1

; 1199 :     }

  00066	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
??0?$function@$$A6AXW4EnumEvent@@@Z@std@@QEAA@$$QEAV01@@Z ENDP ; std::function<void __cdecl(enum EnumEvent)>::function<void __cdecl(enum EnumEvent)>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z PROC ; std::_Func_class<void,enum EnumEvent>::_Set, COMDAT

; 1133 :     void _Set(_Ptrt* _Ptr) noexcept { // store pointer to object

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1134 :         _Mystorage._Ptrs[_Small_object_num_ptrs - 1] = _Ptr;

  0003c	b8 08 00 00 00	 mov	 eax, 8
  00041	48 6b c0 07	 imul	 rax, rax, 7
  00045	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004c	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00053	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 1135 :     }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z ENDP ; std::_Func_class<void,enum EnumEvent>::_Set
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ PROC ; std::_Func_class<void,enum EnumEvent>::_Getimpl, COMDAT

; 1129 :     _Ptrt* _Getimpl() const noexcept { // get pointer to object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1130 :         return _Mystorage._Ptrs[_Small_object_num_ptrs - 1];

  00037	b8 08 00 00 00	 mov	 eax, 8
  0003c	48 6b c0 07	 imul	 rax, rax, 7
  00040	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00047	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]

; 1131 :     }

  0004b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ ENDP ; std::_Func_class<void,enum EnumEvent>::_Getimpl
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Local@?$_Func_class@XW4EnumEvent@@@std@@AEBA_NXZ
_TEXT	SEGMENT
tv68 = 192
this$ = 240
?_Local@?$_Func_class@XW4EnumEvent@@@std@@AEBA_NXZ PROC	; std::_Func_class<void,enum EnumEvent>::_Local, COMDAT

; 1117 :     bool _Local() const noexcept { // test for locally stored copy of object

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1118 :         return _Getimpl() == static_cast<const void*>(&_Mystorage);

  00037	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ ; std::_Func_class<void,enum EnumEvent>::_Getimpl
  00043	90		 npad	 1
  00044	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004b	48 3b c1	 cmp	 rax, rcx
  0004e	75 0c		 jne	 SHORT $LN3@Local
  00050	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv68[rbp], 1
  0005a	eb 0a		 jmp	 SHORT $LN4@Local
$LN3@Local:
  0005c	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv68[rbp], 0
$LN4@Local:
  00066	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv68[rbp]

; 1119 :     }

  0006d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?_Local@?$_Func_class@XW4EnumEvent@@@std@@AEBA_NXZ ENDP	; std::_Func_class<void,enum EnumEvent>::_Local
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Tidy@?$_Func_class@XW4EnumEvent@@@std@@IEAAXXZ
_TEXT	SEGMENT
tv71 = 192
tv81 = 200
tv78 = 208
this$ = 256
?_Tidy@?$_Func_class@XW4EnumEvent@@@std@@IEAAXXZ PROC	; std::_Func_class<void,enum EnumEvent>::_Tidy, COMDAT

; 1086 :     void _Tidy() noexcept { // clean up

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1087 :         if (!_Empty()) { // destroy callable object and maybe delete it

  00037	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XW4EnumEvent@@@std@@IEBA_NXZ ; std::_Func_class<void,enum EnumEvent>::_Empty
  00043	90		 npad	 1
  00044	0f b6 c0	 movzx	 eax, al
  00047	85 c0		 test	 eax, eax
  00049	75 71		 jne	 SHORT $LN2@Tidy

; 1088 :             _Getimpl()->_Delete_this(!_Local());

  0004b	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00052	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ ; std::_Func_class<void,enum EnumEvent>::_Getimpl
  00057	90		 npad	 1
  00058	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  0005f	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv71[rbp]
  00066	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00069	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0006d	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  00074	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0007b	e8 00 00 00 00	 call	 ?_Local@?$_Func_class@XW4EnumEvent@@@std@@AEBA_NXZ ; std::_Func_class<void,enum EnumEvent>::_Local
  00080	90		 npad	 1
  00081	0f b6 c0	 movzx	 eax, al
  00084	85 c0		 test	 eax, eax
  00086	75 09		 jne	 SHORT $LN4@Tidy
  00088	c6 85 d0 00 00
	00 01		 mov	 BYTE PTR tv78[rbp], 1
  0008f	eb 07		 jmp	 SHORT $LN5@Tidy
$LN4@Tidy:
  00091	c6 85 d0 00 00
	00 00		 mov	 BYTE PTR tv78[rbp], 0
$LN5@Tidy:
  00098	0f b6 95 d0 00
	00 00		 movzx	 edx, BYTE PTR tv78[rbp]
  0009f	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv71[rbp]
  000a6	ff 95 c8 00 00
	00		 call	 QWORD PTR tv81[rbp]
  000ac	90		 npad	 1

; 1089 :             _Set(nullptr);

  000ad	33 d2		 xor	 edx, edx
  000af	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b6	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z ; std::_Func_class<void,enum EnumEvent>::_Set
  000bb	90		 npad	 1
$LN2@Tidy:

; 1090 :         }
; 1091 :     }

  000bc	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000c3	5f		 pop	 rdi
  000c4	5d		 pop	 rbp
  000c5	c3		 ret	 0
?_Tidy@?$_Func_class@XW4EnumEvent@@@std@@IEAAXXZ ENDP	; std::_Func_class<void,enum EnumEvent>::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Reset_move@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV12@@Z
_TEXT	SEGMENT
tv76 = 192
tv83 = 200
this$ = 240
_Right$ = 248
?_Reset_move@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV12@@Z PROC ; std::_Func_class<void,enum EnumEvent>::_Reset_move, COMDAT

; 1029 :     void _Reset_move(_Func_class&& _Right) noexcept { // move _Right's stored object

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1030 :         if (!_Right._Empty()) {

  0003c	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00043	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XW4EnumEvent@@@std@@IEBA_NXZ ; std::_Func_class<void,enum EnumEvent>::_Empty
  00048	90		 npad	 1
  00049	0f b6 c0	 movzx	 eax, al
  0004c	85 c0		 test	 eax, eax
  0004e	0f 85 a0 00 00
	00		 jne	 $LN2@Reset_move

; 1031 :             if (_Right._Local()) { // move and tidy

  00054	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0005b	e8 00 00 00 00	 call	 ?_Local@?$_Func_class@XW4EnumEvent@@@std@@AEBA_NXZ ; std::_Func_class<void,enum EnumEvent>::_Local
  00060	90		 npad	 1
  00061	0f b6 c0	 movzx	 eax, al
  00064	85 c0		 test	 eax, eax
  00066	74 60		 je	 SHORT $LN3@Reset_move

; 1032 :                 _Set(_Right._Getimpl()->_Move(&_Mystorage));

  00068	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0006f	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ ; std::_Func_class<void,enum EnumEvent>::_Getimpl
  00074	90		 npad	 1
  00075	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0007c	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv76[rbp]
  00083	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00086	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0008a	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  00091	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00098	48 8b d0	 mov	 rdx, rax
  0009b	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv76[rbp]
  000a2	ff 95 c8 00 00
	00		 call	 QWORD PTR tv83[rbp]
  000a8	90		 npad	 1
  000a9	48 8b d0	 mov	 rdx, rax
  000ac	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b3	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z ; std::_Func_class<void,enum EnumEvent>::_Set
  000b8	90		 npad	 1

; 1033 :                 _Right._Tidy();

  000b9	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  000c0	e8 00 00 00 00	 call	 ?_Tidy@?$_Func_class@XW4EnumEvent@@@std@@IEAAXXZ ; std::_Func_class<void,enum EnumEvent>::_Tidy
  000c5	90		 npad	 1

; 1034 :             } else { // steal from _Right

  000c6	eb 2c		 jmp	 SHORT $LN2@Reset_move
$LN3@Reset_move:

; 1035 :                 _Set(_Right._Getimpl());

  000c8	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  000cf	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ ; std::_Func_class<void,enum EnumEvent>::_Getimpl
  000d4	90		 npad	 1
  000d5	48 8b d0	 mov	 rdx, rax
  000d8	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000df	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z ; std::_Func_class<void,enum EnumEvent>::_Set
  000e4	90		 npad	 1

; 1036 :                 _Right._Set(nullptr);

  000e5	33 d2		 xor	 edx, edx
  000e7	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  000ee	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z ; std::_Func_class<void,enum EnumEvent>::_Set
  000f3	90		 npad	 1
$LN2@Reset_move:

; 1037 :             }
; 1038 :         }
; 1039 :     }

  000f4	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000fb	5f		 pop	 rdi
  000fc	5d		 pop	 rbp
  000fd	c3		 ret	 0
?_Reset_move@?$_Func_class@XW4EnumEvent@@@std@@IEAAX$$QEAV12@@Z ENDP ; std::_Func_class<void,enum EnumEvent>::_Reset_move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ?_Empty@?$_Func_class@XW4EnumEvent@@@std@@IEBA_NXZ
_TEXT	SEGMENT
tv67 = 192
this$ = 240
?_Empty@?$_Func_class@XW4EnumEvent@@@std@@IEBA_NXZ PROC	; std::_Func_class<void,enum EnumEvent>::_Empty, COMDAT

; 1019 :     bool _Empty() const noexcept { // return true if no stored object

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1020 :         return !_Getimpl();

  00037	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ ; std::_Func_class<void,enum EnumEvent>::_Getimpl
  00043	90		 npad	 1
  00044	48 85 c0	 test	 rax, rax
  00047	75 0c		 jne	 SHORT $LN3@Empty
  00049	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv67[rbp], 1
  00053	eb 0a		 jmp	 SHORT $LN4@Empty
$LN3@Empty:
  00055	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv67[rbp], 0
$LN4@Empty:
  0005f	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv67[rbp]

; 1021 :     }

  00066	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0006d	5f		 pop	 rdi
  0006e	5d		 pop	 rbp
  0006f	c3		 ret	 0
?_Empty@?$_Func_class@XW4EnumEvent@@@std@@IEBA_NXZ ENDP	; std::_Func_class<void,enum EnumEvent>::_Empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??1?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ PROC	; std::_Func_class<void,enum EnumEvent>::~_Func_class<void,enum EnumEvent>, COMDAT

; 1010 :     ~_Func_class() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1011 :         _Tidy();

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Tidy@?$_Func_class@XW4EnumEvent@@@std@@IEAAXXZ ; std::_Func_class<void,enum EnumEvent>::_Tidy
  00043	90		 npad	 1

; 1012 :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??1?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ ENDP	; std::_Func_class<void,enum EnumEvent>::~_Func_class<void,enum EnumEvent>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??R?$_Func_class@XW4EnumEvent@@@std@@QEBAXW4EnumEvent@@@Z
_TEXT	SEGMENT
_Impl$ = 8
tv79 = 216
tv77 = 224
this$ = 272
<_Args_0>$ = 280
??R?$_Func_class@XW4EnumEvent@@@std@@QEBAXW4EnumEvent@@@Z PROC ; std::_Func_class<void,enum EnumEvent>::operator(), COMDAT

; 1002 :     _Ret operator()(_Types... _Args) const { // call through stored object

$LN4:
  00000	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1003 :         if (_Empty()) {

  0003a	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00041	e8 00 00 00 00	 call	 ?_Empty@?$_Func_class@XW4EnumEvent@@@std@@IEBA_NXZ ; std::_Func_class<void,enum EnumEvent>::_Empty
  00046	0f b6 c0	 movzx	 eax, al
  00049	85 c0		 test	 eax, eax
  0004b	74 05		 je	 SHORT $LN2@operator

; 1004 :             _Xbad_function_call();

  0004d	e8 00 00 00 00	 call	 ?_Xbad_function_call@std@@YAXXZ ; std::_Xbad_function_call
$LN2@operator:

; 1005 :         }
; 1006 :         const auto _Impl = _Getimpl();

  00052	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00059	e8 00 00 00 00	 call	 ?_Getimpl@?$_Func_class@XW4EnumEvent@@@std@@AEBAPEAV?$_Func_base@XW4EnumEvent@@@2@XZ ; std::_Func_class<void,enum EnumEvent>::_Getimpl
  0005e	48 89 45 08	 mov	 QWORD PTR _Impl$[rbp], rax

; 1007 :         return _Impl->_Do_call(_STD forward<_Types>(_Args)...);

  00062	48 8b 45 08	 mov	 rax, QWORD PTR _Impl$[rbp]
  00066	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00069	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  0006d	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00074	48 8d 8d 18 01
	00 00		 lea	 rcx, QWORD PTR <_Args_0>$[rbp]
  0007b	e8 00 00 00 00	 call	 ??$forward@W4EnumEvent@@@std@@YA$$QEAW4EnumEvent@@AEAW41@@Z ; std::forward<enum EnumEvent>
  00080	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  00087	48 8b 95 e0 00
	00 00		 mov	 rdx, QWORD PTR tv77[rbp]
  0008e	48 8b 4d 08	 mov	 rcx, QWORD PTR _Impl$[rbp]
  00092	ff 95 d8 00 00
	00		 call	 QWORD PTR tv79[rbp]
$LN3@operator:

; 1008 :     }

  00098	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  0009f	5f		 pop	 rdi
  000a0	5d		 pop	 rbp
  000a1	c3		 ret	 0
??R?$_Func_class@XW4EnumEvent@@@std@@QEBAXW4EnumEvent@@@Z ENDP ; std::_Func_class<void,enum EnumEvent>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\functional
;	COMDAT ??0?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ PROC	; std::_Func_class<void,enum EnumEvent>::_Func_class<void,enum EnumEvent>, COMDAT

; 998  :     _Func_class() noexcept { // construct without stored object

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C6677F44_functional
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 999  :         _Set(nullptr);

  00037	33 d2		 xor	 edx, edx
  00039	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00040	e8 00 00 00 00	 call	 ?_Set@?$_Func_class@XW4EnumEvent@@@std@@AEAAXPEAV?$_Func_base@XW4EnumEvent@@@2@@Z ; std::_Func_class<void,enum EnumEvent>::_Set
  00045	90		 npad	 1

; 1000 :     }

  00046	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
??0?$_Func_class@XW4EnumEvent@@@std@@QEAA@XZ ENDP	; std::_Func_class<void,enum EnumEvent>::_Func_class<void,enum EnumEvent>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ
_TEXT	SEGMENT
_Rx$ = 8
_Ret$ = 40
$T4 = 280
$T5 = 312
$T6 = 340
tv75 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 416
??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ PROC ; std::make_shared<std::mutex>, COMDAT

; 1592 : _NODISCARD shared_ptr<_Ty> make_shared(_Types&&... _Args) { // make a shared_ptr

$LN9:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 c8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+456]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 70 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	c7 85 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR $T6[rbp], 0
  00045	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  0004c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1593 :     const auto _Rx = new _Ref_count_obj2<_Ty>(_STD forward<_Types>(_Args)...);

  00051	b9 60 00 00 00	 mov	 ecx, 96			; 00000060H
  00056	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new
  0005b	48 89 85 38 01
	00 00		 mov	 QWORD PTR $T5[rbp], rax
  00062	48 83 bd 38 01
	00 00 00	 cmp	 QWORD PTR $T5[rbp], 0
  0006a	74 15		 je	 SHORT $LN3@make_share
  0006c	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00073	e8 00 00 00 00	 call	 ??$?0$$V@?$_Ref_count_obj2@Vmutex@std@@@std@@QEAA@XZ ; std::_Ref_count_obj2<std::mutex>::_Ref_count_obj2<std::mutex><>
  00078	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  0007f	eb 0b		 jmp	 SHORT $LN4@make_share
$LN3@make_share:
  00081	48 c7 85 68 01
	00 00 00 00 00
	00		 mov	 QWORD PTR tv75[rbp], 0
$LN4@make_share:
  0008c	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR tv75[rbp]
  00093	48 89 85 18 01
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  0009a	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR $T4[rbp]
  000a1	48 89 45 08	 mov	 QWORD PTR _Rx$[rbp], rax

; 1594 :     shared_ptr<_Ty> _Ret;

  000a5	ba 10 00 00 00	 mov	 edx, 16
  000aa	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ret$[rbp]
  000ae	e8 00 00 00 00	 call	 ?__autoclassinit2@?$shared_ptr@Vmutex@std@@@std@@QEAAX_K@Z
  000b3	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ret$[rbp]
  000b7	e8 00 00 00 00	 call	 ??0?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ ; std::shared_ptr<std::mutex>::shared_ptr<std::mutex>

; 1595 :     _Ret._Set_ptr_rep_and_enable_shared(_STD addressof(_Rx->_Storage._Value), _Rx);

  000bc	48 8b 45 08	 mov	 rax, QWORD PTR _Rx$[rbp]
  000c0	48 83 c0 10	 add	 rax, 16
  000c4	48 8b c8	 mov	 rcx, rax
  000c7	e8 00 00 00 00	 call	 ??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z ; std::addressof<std::mutex>
  000cc	4c 8b 45 08	 mov	 r8, QWORD PTR _Rx$[rbp]
  000d0	48 8b d0	 mov	 rdx, rax
  000d3	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ret$[rbp]
  000d7	e8 00 00 00 00	 call	 ??$_Set_ptr_rep_and_enable_shared@Vmutex@std@@@?$shared_ptr@Vmutex@std@@@std@@AEAAXQEAVmutex@1@QEAV_Ref_count_base@1@@Z ; std::shared_ptr<std::mutex>::_Set_ptr_rep_and_enable_shared<std::mutex>

; 1596 :     return _Ret;

  000dc	48 8d 55 28	 lea	 rdx, QWORD PTR _Ret$[rbp]
  000e0	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000e7	e8 00 00 00 00	 call	 ??0?$shared_ptr@Vmutex@std@@@std@@QEAA@$$QEAV01@@Z ; std::shared_ptr<std::mutex>::shared_ptr<std::mutex>
  000ec	8b 85 54 01 00
	00		 mov	 eax, DWORD PTR $T6[rbp]
  000f2	83 c8 01	 or	 eax, 1
  000f5	89 85 54 01 00
	00		 mov	 DWORD PTR $T6[rbp], eax
  000fb	48 8d 4d 28	 lea	 rcx, QWORD PTR _Ret$[rbp]
  000ff	e8 00 00 00 00	 call	 ??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ ; std::shared_ptr<std::mutex>::~shared_ptr<std::mutex>
  00104	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1597 : }

  0010b	48 8b f8	 mov	 rdi, rax
  0010e	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00112	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ$rtcFrameData
  00119	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0011e	48 8b c7	 mov	 rax, rdi
  00121	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00128	48 33 cd	 xor	 rcx, rbp
  0012b	e8 00 00 00 00	 call	 __security_check_cookie
  00130	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  00137	5f		 pop	 rdi
  00138	5d		 pop	 rbp
  00139	c3		 ret	 0
??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ ENDP ; std::make_shared<std::mutex>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Rx$ = 8
_Ret$ = 40
$T4 = 280
$T5 = 312
$T6 = 340
tv75 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 416
?dtor$0@?0???$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ@4HA PROC ; `std::make_shared<std::mutex>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	ba 60 00 00 00	 mov	 edx, 96			; 00000060H
  00019	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00020	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00025	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00029	5f		 pop	 rdi
  0002a	5d		 pop	 rbp
  0002b	c3		 ret	 0
?dtor$0@?0???$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ@4HA ENDP ; `std::make_shared<std::mutex>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Rx$ = 8
_Ret$ = 40
$T4 = 280
$T5 = 312
$T6 = 340
tv75 = 360
__$ArrayPad$ = 368
__$ReturnUdt$ = 416
?dtor$0@?0???$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ@4HA PROC ; `std::make_shared<std::mutex>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	ba 60 00 00 00	 mov	 edx, 96			; 00000060H
  00019	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  00020	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00025	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00029	5f		 pop	 rdi
  0002a	5d		 pop	 rbp
  0002b	c3		 ret	 0
?dtor$0@?0???$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ@4HA ENDP ; `std::make_shared<std::mutex>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?DVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAAEAVmutex@1@XZ
_TEXT	SEGMENT
this$ = 224
??$?DVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAAEAVmutex@1@XZ PROC ; std::shared_ptr<std::mutex>::operator*<std::mutex,0>, COMDAT

; 1199 :     _NODISCARD _Ty2& operator*() const noexcept { // return reference to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1200 :         return *get();

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@Vmutex@std@@@std@@IEBAPEAVmutex@2@XZ ; std::_Ptr_base<std::mutex>::get
  00043	90		 npad	 1

; 1201 :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??$?DVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAAEAVmutex@1@XZ ENDP ; std::shared_ptr<std::mutex>::operator*<std::mutex,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??$?CVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAPEAVmutex@1@XZ
_TEXT	SEGMENT
this$ = 224
??$?CVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAPEAVmutex@1@XZ PROC ; std::shared_ptr<std::mutex>::operator-><std::mutex,0>, COMDAT

; 1204 :     _NODISCARD _Ty2* operator->() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1205 :         return get();

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?get@?$_Ptr_base@Vmutex@std@@@std@@IEBAPEAVmutex@2@XZ ; std::_Ptr_base<std::mutex>::get
  00043	90		 npad	 1

; 1206 :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??$?CVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAPEAVmutex@1@XZ ENDP ; std::shared_ptr<std::mutex>::operator-><std::mutex,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\condition_variable
;	COMDAT ?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ
_TEXT	SEGMENT
this$ = 224
?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ PROC ; std::condition_variable_any::_Mycnd, COMDAT

; 152  :     _Cnd_t _Mycnd() noexcept { // get pointer to _Cnd_internal_imp_t inside _Cnd_storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DDDD6958_condition_variable
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 153  :         return reinterpret_cast<_Cnd_t>(&_Cnd_storage);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 c0 10	 add	 rax, 16

; 154  :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ ENDP ; std::condition_variable_any::_Mycnd
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$shared_ptr@Vmutex@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$shared_ptr@Vmutex@std@@@std@@QEAAX_K@Z PROC ; std::shared_ptr<std::mutex>::__autoclassinit2, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  00034	33 c0		 xor	 eax, eax
  00036	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR classSize$[rbp]
  0003d	f3 aa		 rep stosb
  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?__autoclassinit2@?$shared_ptr@Vmutex@std@@@std@@QEAAX_K@Z ENDP ; std::shared_ptr<std::mutex>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?swap@?$shared_ptr@Vmutex@std@@@std@@QEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
?swap@?$shared_ptr@Vmutex@std@@@std@@QEAAXAEAV12@@Z PROC ; std::shared_ptr<std::mutex>::swap, COMDAT

; 1173 :     void swap(shared_ptr& _Other) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1174 :         this->_Swap(_Other);

  0003c	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Other$[rbp]
  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004a	e8 00 00 00 00	 call	 ?_Swap@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEAV12@@Z ; std::_Ptr_base<std::mutex>::_Swap
  0004f	90		 npad	 1

; 1175 :     }

  00050	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
?swap@?$shared_ptr@Vmutex@std@@@std@@QEAAXAEAV12@@Z ENDP ; std::shared_ptr<std::mutex>::swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??4?$shared_ptr@Vmutex@std@@@std@@QEAAAEAV01@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 200
tv74 = 232
this$ = 272
_Right$ = 280
??4?$shared_ptr@Vmutex@std@@@std@@QEAAAEAV01@$$QEAV01@@Z PROC ; std::shared_ptr<std::mutex>::operator=, COMDAT

; 1148 :     shared_ptr& operator=(shared_ptr&& _Right) noexcept { // take resource from _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1149 :         shared_ptr(_STD move(_Right)).swap(*this);

  0003c	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00043	e8 00 00 00 00	 call	 ??$move@AEAV?$shared_ptr@Vmutex@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vmutex@std@@@0@AEAV10@@Z ; std::move<std::shared_ptr<std::mutex> &>
  00048	90		 npad	 1
  00049	48 8b d0	 mov	 rdx, rax
  0004c	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00053	e8 00 00 00 00	 call	 ??0?$shared_ptr@Vmutex@std@@@std@@QEAA@$$QEAV01@@Z ; std::shared_ptr<std::mutex>::shared_ptr<std::mutex>
  00058	90		 npad	 1
  00059	48 89 85 e8 00
	00 00		 mov	 QWORD PTR tv74[rbp], rax
  00060	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR this$[rbp]
  00067	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR tv74[rbp]
  0006e	e8 00 00 00 00	 call	 ?swap@?$shared_ptr@Vmutex@std@@@std@@QEAAXAEAV12@@Z ; std::shared_ptr<std::mutex>::swap
  00073	90		 npad	 1
  00074	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0007b	e8 00 00 00 00	 call	 ??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ ; std::shared_ptr<std::mutex>::~shared_ptr<std::mutex>
  00080	90		 npad	 1

; 1150 :         return *this;

  00081	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1151 :     }

  00088	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  0008f	5f		 pop	 rdi
  00090	5d		 pop	 rbp
  00091	c3		 ret	 0
??4?$shared_ptr@Vmutex@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ENDP ; std::shared_ptr<std::mutex>::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ PROC		; std::shared_ptr<std::mutex>::~shared_ptr<std::mutex>, COMDAT

; 1132 :     ~shared_ptr() noexcept { // release resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1133 :         this->_Decref();

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Decref@?$_Ptr_base@Vmutex@std@@@std@@IEAAXXZ ; std::_Ptr_base<std::mutex>::_Decref
  00043	90		 npad	 1

; 1134 :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ ENDP		; std::shared_ptr<std::mutex>::~shared_ptr<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@Vmutex@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??0?$shared_ptr@Vmutex@std@@@std@@QEAA@$$QEAV01@@Z PROC	; std::shared_ptr<std::mutex>::shared_ptr<std::mutex>, COMDAT

; 1088 :     shared_ptr(shared_ptr&& _Right) noexcept { // construct shared_ptr object that takes resource from _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00043	e8 00 00 00 00	 call	 ??0?$_Ptr_base@Vmutex@std@@@std@@IEAA@XZ ; std::_Ptr_base<std::mutex>::_Ptr_base<std::mutex>
  00048	90		 npad	 1

; 1089 :         this->_Move_construct_from(_STD move(_Right));

  00049	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00050	e8 00 00 00 00	 call	 ??$move@AEAV?$shared_ptr@Vmutex@std@@@std@@@std@@YA$$QEAV?$shared_ptr@Vmutex@std@@@0@AEAV10@@Z ; std::move<std::shared_ptr<std::mutex> &>
  00055	90		 npad	 1
  00056	48 8b d0	 mov	 rdx, rax
  00059	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	e8 00 00 00 00	 call	 ??$_Move_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAX$$QEAV01@@Z ; std::_Ptr_base<std::mutex>::_Move_construct_from<std::mutex>
  00065	90		 npad	 1

; 1090 :     }

  00066	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
??0?$shared_ptr@Vmutex@std@@@std@@QEAA@$$QEAV01@@Z ENDP	; std::shared_ptr<std::mutex>::shared_ptr<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@Vmutex@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??0?$shared_ptr@Vmutex@std@@@std@@QEAA@AEBV01@@Z PROC	; std::shared_ptr<std::mutex>::shared_ptr<std::mutex>, COMDAT

; 1078 :     shared_ptr(const shared_ptr& _Other) noexcept { // construct shared_ptr object that owns same resource as _Other

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00043	e8 00 00 00 00	 call	 ??0?$_Ptr_base@Vmutex@std@@@std@@IEAA@XZ ; std::_Ptr_base<std::mutex>::_Ptr_base<std::mutex>
  00048	90		 npad	 1

; 1079 :         this->_Copy_construct_from(_Other);

  00049	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Other$[rbp]
  00050	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00057	e8 00 00 00 00	 call	 ??$_Copy_construct_from@Vmutex@std@@@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEBV?$shared_ptr@Vmutex@std@@@1@@Z ; std::_Ptr_base<std::mutex>::_Copy_construct_from<std::mutex>
  0005c	90		 npad	 1

; 1080 :     }

  0005d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006b	5f		 pop	 rdi
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??0?$shared_ptr@Vmutex@std@@@std@@QEAA@AEBV01@@Z ENDP	; std::shared_ptr<std::mutex>::shared_ptr<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ PROC		; std::shared_ptr<std::mutex>::shared_ptr<std::mutex>, COMDAT

; 1016 :     constexpr shared_ptr() noexcept {} // construct empty shared_ptr

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ??0?$_Ptr_base@Vmutex@std@@@std@@IEAA@XZ ; std::_Ptr_base<std::mutex>::_Ptr_base<std::mutex>
  00043	90		 npad	 1
  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
??0?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ ENDP		; std::shared_ptr<std::mutex>::shared_ptr<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Swap@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEAV12@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
?_Swap@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEAV12@@Z PROC ; std::_Ptr_base<std::mutex>::_Swap, COMDAT

; 887  :     void _Swap(_Ptr_base& _Right) noexcept { // swap pointers

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 888  :         _STD swap(_Ptr, _Right._Ptr);

  0003c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004a	48 8b d0	 mov	 rdx, rax
  0004d	e8 00 00 00 00	 call	 ??$swap@PEAVmutex@std@@X@std@@YAXAEAPEAVmutex@0@0@Z ; std::swap<std::mutex *,void>
  00052	90		 npad	 1

; 889  :         _STD swap(_Rep, _Right._Rep);

  00053	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  0005a	48 83 c0 08	 add	 rax, 8
  0005e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00065	48 83 c1 08	 add	 rcx, 8
  00069	48 8b d0	 mov	 rdx, rax
  0006c	e8 00 00 00 00	 call	 ??$swap@PEAV_Ref_count_base@std@@X@std@@YAXAEAPEAV_Ref_count_base@0@0@Z ; std::swap<std::_Ref_count_base *,void>
  00071	90		 npad	 1

; 890  :     }

  00072	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00079	5f		 pop	 rdi
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
?_Swap@?$_Ptr_base@Vmutex@std@@@std@@IEAAXAEAV12@@Z ENDP ; std::_Ptr_base<std::mutex>::_Swap
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@?$_Ptr_base@Vmutex@std@@@std@@IEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Decref@?$_Ptr_base@Vmutex@std@@@std@@IEAAXXZ PROC	; std::_Ptr_base<std::mutex>::_Decref, COMDAT

; 881  :     void _Decref() noexcept { // decrement reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 882  :         if (_Rep) {

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00043	74 11		 je	 SHORT $LN2@Decref

; 883  :             _Rep->_Decref();

  00045	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00050	e8 00 00 00 00	 call	 ?_Decref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decref
  00055	90		 npad	 1
$LN2@Decref:

; 884  :         }
; 885  :     }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
?_Decref@?$_Ptr_base@Vmutex@std@@@std@@IEAAXXZ ENDP	; std::_Ptr_base<std::mutex>::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ??0?$_Ptr_base@Vmutex@std@@@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_Ptr_base@Vmutex@std@@@std@@IEAA@XZ PROC		; std::_Ptr_base<std::mutex>::_Ptr_base<std::mutex>, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory

; 910  :     element_type* _Ptr{nullptr};

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 911  :     _Ref_count_base* _Rep{nullptr};

  00045	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
; File E:\project\game_server\Server\ThreadPool.cpp

  00054	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00062	5f		 pop	 rdi
  00063	5d		 pop	 rbp
  00064	c3		 ret	 0
??0?$_Ptr_base@Vmutex@std@@@std@@IEAA@XZ ENDP		; std::_Ptr_base<std::mutex>::_Ptr_base<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?get@?$_Ptr_base@Vmutex@std@@@std@@IEBAPEAVmutex@2@XZ
_TEXT	SEGMENT
this$ = 224
?get@?$_Ptr_base@Vmutex@std@@@std@@IEBAPEAVmutex@2@XZ PROC ; std::_Ptr_base<std::mutex>::get, COMDAT

; 816  :     _NODISCARD element_type* get() const noexcept { // return pointer to resource

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 817  :         return _Ptr;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 818  :     }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?get@?$_Ptr_base@Vmutex@std@@@std@@IEBAPEAVmutex@2@XZ ENDP ; std::_Ptr_base<std::mutex>::get
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\condition_variable
;	COMDAT ?notify_all@condition_variable_any@std@@QEAAXXZ
_TEXT	SEGMENT
_Lck$ = 8
__$ArrayPad$ = 216
this$ = 256
?notify_all@condition_variable_any@std@@QEAAXXZ PROC	; std::condition_variable_any::notify_all, COMDAT

; 43   :     void notify_all() noexcept { // wake up all waiters

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 d8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DDDD6958_condition_variable
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 44   :         lock_guard<mutex> _Lck(*_Myptr);

  00048	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 ??$?DVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAAEAVmutex@1@XZ ; std::shared_ptr<std::mutex>::operator*<std::mutex,0>
  00057	90		 npad	 1
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8d 4d 08	 lea	 rcx, QWORD PTR _Lck$[rbp]
  0005f	e8 00 00 00 00	 call	 ??0?$lock_guard@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ; std::lock_guard<std::mutex>::lock_guard<std::mutex>
  00064	90		 npad	 1

; 45   :         _Check_C_return(_Cnd_broadcast(_Mycnd()));

  00065	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006c	e8 00 00 00 00	 call	 ?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ ; std::condition_variable_any::_Mycnd
  00071	90		 npad	 1
  00072	48 8b c8	 mov	 rcx, rax
  00075	e8 00 00 00 00	 call	 _Cnd_broadcast
  0007a	90		 npad	 1
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ?_Check_C_return@std@@YAHH@Z ; std::_Check_C_return
  00082	90		 npad	 1

; 46   :     }

  00083	48 8d 4d 08	 lea	 rcx, QWORD PTR _Lck$[rbp]
  00087	e8 00 00 00 00	 call	 ??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ ; std::lock_guard<std::mutex>::~lock_guard<std::mutex>
  0008c	90		 npad	 1
  0008d	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00091	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?notify_all@condition_variable_any@std@@QEAAXXZ$rtcFrameData
  00098	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0009d	90		 npad	 1
  0009e	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000a5	48 33 cd	 xor	 rcx, rbp
  000a8	e8 00 00 00 00	 call	 __security_check_cookie
  000ad	90		 npad	 1
  000ae	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?notify_all@condition_variable_any@std@@QEAAXXZ ENDP	; std::condition_variable_any::notify_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\condition_variable
;	COMDAT ?notify_one@condition_variable_any@std@@QEAAXXZ
_TEXT	SEGMENT
_Lck$ = 8
__$ArrayPad$ = 216
this$ = 256
?notify_one@condition_variable_any@std@@QEAAXXZ PROC	; std::condition_variable_any::notify_one, COMDAT

; 38   :     void notify_one() noexcept { // wake up one waiter

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 d8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DDDD6958_condition_variable
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 39   :         lock_guard<mutex> _Lck(*_Myptr);

  00048	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 8b c8	 mov	 rcx, rax
  00052	e8 00 00 00 00	 call	 ??$?DVmutex@std@@$0A@@?$shared_ptr@Vmutex@std@@@std@@QEBAAEAVmutex@1@XZ ; std::shared_ptr<std::mutex>::operator*<std::mutex,0>
  00057	90		 npad	 1
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8d 4d 08	 lea	 rcx, QWORD PTR _Lck$[rbp]
  0005f	e8 00 00 00 00	 call	 ??0?$lock_guard@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ; std::lock_guard<std::mutex>::lock_guard<std::mutex>
  00064	90		 npad	 1

; 40   :         _Check_C_return(_Cnd_signal(_Mycnd()));

  00065	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006c	e8 00 00 00 00	 call	 ?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ ; std::condition_variable_any::_Mycnd
  00071	90		 npad	 1
  00072	48 8b c8	 mov	 rcx, rax
  00075	e8 00 00 00 00	 call	 _Cnd_signal
  0007a	90		 npad	 1
  0007b	8b c8		 mov	 ecx, eax
  0007d	e8 00 00 00 00	 call	 ?_Check_C_return@std@@YAHH@Z ; std::_Check_C_return
  00082	90		 npad	 1

; 41   :     }

  00083	48 8d 4d 08	 lea	 rcx, QWORD PTR _Lck$[rbp]
  00087	e8 00 00 00 00	 call	 ??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ ; std::lock_guard<std::mutex>::~lock_guard<std::mutex>
  0008c	90		 npad	 1
  0008d	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00091	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?notify_one@condition_variable_any@std@@QEAAXXZ$rtcFrameData
  00098	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0009d	90		 npad	 1
  0009e	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000a5	48 33 cd	 xor	 rcx, rbp
  000a8	e8 00 00 00 00	 call	 __security_check_cookie
  000ad	90		 npad	 1
  000ae	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000b5	5f		 pop	 rdi
  000b6	5d		 pop	 rbp
  000b7	c3		 ret	 0
?notify_one@condition_variable_any@std@@QEAAXXZ ENDP	; std::condition_variable_any::notify_one
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\condition_variable
;	COMDAT ??1condition_variable_any@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1condition_variable_any@std@@QEAA@XZ PROC		; std::condition_variable_any::~condition_variable_any, COMDAT

; 31   :     ~condition_variable_any() noexcept { // destroy

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DDDD6958_condition_variable
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 32   :         _Cnd_destroy_in_situ(_Mycnd());

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ ; std::condition_variable_any::_Mycnd
  00043	90		 npad	 1
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 _Cnd_destroy_in_situ
  0004c	90		 npad	 1

; 33   :     }

  0004d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ ; std::shared_ptr<std::mutex>::~shared_ptr<std::mutex>
  0005c	90		 npad	 1
  0005d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00064	5f		 pop	 rdi
  00065	5d		 pop	 rbp
  00066	c3		 ret	 0
??1condition_variable_any@std@@QEAA@XZ ENDP		; std::condition_variable_any::~condition_variable_any
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\condition_variable
;	COMDAT ??0condition_variable_any@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 200
tv83 = 232
this$ = 272
??0condition_variable_any@std@@QEAA@XZ PROC		; std::condition_variable_any::condition_variable_any, COMDAT

; 26   :     condition_variable_any() { // construct

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DDDD6958_condition_variable
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b c8	 mov	 rcx, rax
  00040	e8 00 00 00 00	 call	 ??0?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ ; std::shared_ptr<std::mutex>::shared_ptr<std::mutex>
  00045	90		 npad	 1

; 27   :         _Myptr = _STD make_shared<mutex>();

  00046	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0004d	e8 00 00 00 00	 call	 ??$make_shared@Vmutex@std@@$$V@std@@YA?AV?$shared_ptr@Vmutex@std@@@0@XZ ; std::make_shared<std::mutex>
  00052	48 89 85 e8 00
	00 00		 mov	 QWORD PTR tv83[rbp], rax
  00059	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00060	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR tv83[rbp]
  00067	48 8b c8	 mov	 rcx, rax
  0006a	e8 00 00 00 00	 call	 ??4?$shared_ptr@Vmutex@std@@@std@@QEAAAEAV01@$$QEAV01@@Z ; std::shared_ptr<std::mutex>::operator=
  0006f	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00076	e8 00 00 00 00	 call	 ??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ ; std::shared_ptr<std::mutex>::~shared_ptr<std::mutex>

; 28   :         _Cnd_init_in_situ(_Mycnd());

  0007b	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00082	e8 00 00 00 00	 call	 ?_Mycnd@condition_variable_any@std@@AEAAPEAU_Cnd_internal_imp_t@@XZ ; std::condition_variable_any::_Mycnd
  00087	48 8b c8	 mov	 rcx, rax
  0008a	e8 00 00 00 00	 call	 _Cnd_init_in_situ
  0008f	90		 npad	 1

; 29   :     }

  00090	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00097	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  0009e	5f		 pop	 rdi
  0009f	5d		 pop	 rbp
  000a0	c3		 ret	 0
??0condition_variable_any@std@@QEAA@XZ ENDP		; std::condition_variable_any::condition_variable_any
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
tv83 = 232
this$ = 272
?dtor$0@?0???0condition_variable_any@std@@QEAA@XZ@4HA PROC ; `std::condition_variable_any::condition_variable_any'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ ; std::shared_ptr<std::mutex>::~shared_ptr<std::mutex>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0condition_variable_any@std@@QEAA@XZ@4HA ENDP ; `std::condition_variable_any::condition_variable_any'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
tv83 = 232
this$ = 272
?dtor$0@?0???0condition_variable_any@std@@QEAA@XZ@4HA PROC ; `std::condition_variable_any::condition_variable_any'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$shared_ptr@Vmutex@std@@@std@@QEAA@XZ ; std::shared_ptr<std::mutex>::~shared_ptr<std::mutex>
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0condition_variable_any@std@@QEAA@XZ@4HA ENDP ; `std::condition_variable_any::condition_variable_any'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ PROC		; std::lock_guard<std::mutex>::~lock_guard<std::mutex>, COMDAT

; 441  :     ~lock_guard() noexcept { // unlock

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 442  :         _MyMutex.unlock();

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00041	e8 00 00 00 00	 call	 ?unlock@_Mutex_base@std@@QEAAXXZ ; std::_Mutex_base::unlock
  00046	90		 npad	 1

; 443  :     }

  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
??1?$lock_guard@Vmutex@std@@@std@@QEAA@XZ ENDP		; std::lock_guard<std::mutex>::~lock_guard<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ??0?$lock_guard@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z
_TEXT	SEGMENT
this$ = 224
_Mtx$ = 232
??0?$lock_guard@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z PROC ; std::lock_guard<std::mutex>::lock_guard<std::mutex>, COMDAT

; 434  :     explicit lock_guard(_Mutex& _Mtx) : _MyMutex(_Mtx) { // construct and lock

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Mtx$[rbp]
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx

; 435  :         _MyMutex.lock();

  0004c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00056	e8 00 00 00 00	 call	 ?lock@_Mutex_base@std@@QEAAXXZ ; std::_Mutex_base::lock

; 436  :     }

  0005b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00062	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
??0?$lock_guard@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ENDP ; std::lock_guard<std::mutex>::lock_guard<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QEAAX_K@Z PROC ; std::unique_lock<std::mutex>::__autoclassinit2, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  00034	33 c0		 xor	 eax, eax
  00036	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR classSize$[rbp]
  0003d	f3 aa		 rep stosb
  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?__autoclassinit2@?$unique_lock@Vmutex@std@@@std@@QEAAX_K@Z ENDP ; std::unique_lock<std::mutex>::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ?_Validate@?$unique_lock@Vmutex@std@@@std@@AEBAXXZ
_TEXT	SEGMENT
this$ = 224
?_Validate@?$unique_lock@Vmutex@std@@@std@@AEBAXXZ PROC	; std::unique_lock<std::mutex>::_Validate, COMDAT

; 261  :     void _Validate() const { // check if the mutex can be locked

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 262  :         if (!_Pmtx) {

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00041	75 0a		 jne	 SHORT $LN2@Validate

; 263  :             _Throw_system_error(errc::operation_not_permitted);

  00043	b9 01 00 00 00	 mov	 ecx, 1
  00048	e8 00 00 00 00	 call	 ?_Throw_system_error@std@@YAXW4errc@1@@Z ; std::_Throw_system_error
$LN2@Validate:

; 264  :         }
; 265  : 
; 266  :         if (_Owns) {

  0004d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  00058	85 c0		 test	 eax, eax
  0005a	74 0a		 je	 SHORT $LN3@Validate

; 267  :             _Throw_system_error(errc::resource_deadlock_would_occur);

  0005c	b9 24 00 00 00	 mov	 ecx, 36			; 00000024H
  00061	e8 00 00 00 00	 call	 ?_Throw_system_error@std@@YAXW4errc@1@@Z ; std::_Throw_system_error
$LN3@Validate:
$LN4@Validate:

; 268  :         }
; 269  :     }

  00066	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006d	5f		 pop	 rdi
  0006e	5d		 pop	 rbp
  0006f	c3		 ret	 0
?_Validate@?$unique_lock@Vmutex@std@@@std@@AEBAXXZ ENDP	; std::unique_lock<std::mutex>::_Validate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ?unlock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?unlock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ PROC	; std::unique_lock<std::mutex>::unlock, COMDAT

; 224  :     void unlock() { // try to unlock the mutex

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 225  :         if (!_Pmtx || !_Owns) {

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00041	74 0f		 je	 SHORT $LN3@unlock
  00043	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004a	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  0004e	85 c0		 test	 eax, eax
  00050	75 0a		 jne	 SHORT $LN2@unlock
$LN3@unlock:

; 226  :             _Throw_system_error(errc::operation_not_permitted);

  00052	b9 01 00 00 00	 mov	 ecx, 1
  00057	e8 00 00 00 00	 call	 ?_Throw_system_error@std@@YAXW4errc@1@@Z ; std::_Throw_system_error
$LN2@unlock:

; 227  :         }
; 228  : 
; 229  :         _Pmtx->unlock();

  0005c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00063	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00066	e8 00 00 00 00	 call	 ?unlock@_Mutex_base@std@@QEAAXXZ ; std::_Mutex_base::unlock

; 230  :         _Owns = false;

  0006b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00072	c6 40 08 00	 mov	 BYTE PTR [rax+8], 0
$LN4@unlock:

; 231  :     }

  00076	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
?unlock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ ENDP	; std::unique_lock<std::mutex>::unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ?lock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?lock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ PROC	; std::unique_lock<std::mutex>::lock, COMDAT

; 191  :     void lock() { // lock the mutex

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 192  :         _Validate();

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ?_Validate@?$unique_lock@Vmutex@std@@@std@@AEBAXXZ ; std::unique_lock<std::mutex>::_Validate

; 193  :         _Pmtx->lock();

  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0004c	e8 00 00 00 00	 call	 ?lock@_Mutex_base@std@@QEAAXXZ ; std::_Mutex_base::lock

; 194  :         _Owns = true;

  00051	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00058	c6 40 08 01	 mov	 BYTE PTR [rax+8], 1

; 195  :     }

  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
?lock@?$unique_lock@Vmutex@std@@@std@@QEAAXXZ ENDP	; std::unique_lock<std::mutex>::lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ PROC		; std::unique_lock<std::mutex>::~unique_lock<std::mutex>, COMDAT

; 182  :     ~unique_lock() noexcept { // clean up

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 183  :         if (_Owns) {

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]
  00042	85 c0		 test	 eax, eax
  00044	74 10		 je	 SHORT $LN2@unique_loc

; 184  :             _Pmtx->unlock();

  00046	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00050	e8 00 00 00 00	 call	 ?unlock@_Mutex_base@std@@QEAAXXZ ; std::_Mutex_base::unlock
  00055	90		 npad	 1
$LN2@unique_loc:

; 185  :         }
; 186  :     }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??1?$unique_lock@Vmutex@std@@@std@@QEAA@XZ ENDP		; std::unique_lock<std::mutex>::~unique_lock<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z
_TEXT	SEGMENT
this$ = 224
_Mtx$ = 232
??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z PROC ; std::unique_lock<std::mutex>::unique_lock<std::mutex>, COMDAT

; 131  :     explicit unique_lock(_Mutex& _Mtx) : _Pmtx(_STD addressof(_Mtx)), _Owns(false) { // construct and lock

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Mtx$[rbp]
  00042	e8 00 00 00 00	 call	 ??$addressof@Vmutex@std@@@std@@YAPEAVmutex@0@AEAV10@@Z ; std::addressof<std::mutex>
  00047	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	48 89 01	 mov	 QWORD PTR [rcx], rax
  00051	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00058	c6 40 08 00	 mov	 BYTE PTR [rax+8], 0

; 132  :         _Pmtx->lock();

  0005c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00063	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00066	e8 00 00 00 00	 call	 ?lock@_Mutex_base@std@@QEAAXXZ ; std::_Mutex_base::lock

; 133  :         _Owns = true;

  0006b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00072	c6 40 08 01	 mov	 BYTE PTR [rax+8], 1

; 134  :     }

  00076	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00084	5f		 pop	 rdi
  00085	5d		 pop	 rbp
  00086	c3		 ret	 0
??0?$unique_lock@Vmutex@std@@@std@@QEAA@AEAVmutex@1@@Z ENDP ; std::unique_lock<std::mutex>::unique_lock<std::mutex>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gmutex@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gmutex@std@@QEAAPEAXI@Z PROC				; std::mutex::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1mutex@std@@QEAA@XZ
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 50 00 00 00	 mov	 edx, 80			; 00000050H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gmutex@std@@QEAAPEAXI@Z ENDP				; std::mutex::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1mutex@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1mutex@std@@QEAA@XZ PROC				; std::mutex::~mutex, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1_Mutex_base@std@@QEAA@XZ ; std::_Mutex_base::~_Mutex_base
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1mutex@std@@QEAA@XZ ENDP				; std::mutex::~mutex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ??0mutex@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0mutex@std@@QEAA@XZ PROC				; std::mutex::mutex, COMDAT

; 85   :     /* constexpr */ mutex() noexcept // TRANSITION, ABI

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 86   :         : _Mutex_base() {}

  00037	33 d2		 xor	 edx, edx
  00039	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00040	e8 00 00 00 00	 call	 ??0_Mutex_base@std@@QEAA@H@Z ; std::_Mutex_base::_Mutex_base
  00045	90		 npad	 1
  00046	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
??0mutex@std@@QEAA@XZ ENDP				; std::mutex::mutex
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ
_TEXT	SEGMENT
this$ = 224
?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ PROC ; std::_Mutex_base::_Mymtx, COMDAT

; 78   :     _Mtx_t _Mymtx() noexcept { // get pointer to _Mtx_internal_imp_t inside _Mtx_storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 79   :         return reinterpret_cast<_Mtx_t>(&_Mtx_storage);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 80   :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ ENDP ; std::_Mutex_base::_Mymtx
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ?unlock@_Mutex_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?unlock@_Mutex_base@std@@QEAAXXZ PROC			; std::_Mutex_base::unlock, COMDAT

; 62   :     void unlock() { // unlock the mutex

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 63   :         _Check_C_return(_Mtx_unlock(_Mymtx()));

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 _Mtx_unlock
  0004a	8b c8		 mov	 ecx, eax
  0004c	e8 00 00 00 00	 call	 ?_Check_C_return@std@@YAHH@Z ; std::_Check_C_return

; 64   :     }

  00051	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00058	5f		 pop	 rdi
  00059	5d		 pop	 rbp
  0005a	c3		 ret	 0
?unlock@_Mutex_base@std@@QEAAXXZ ENDP			; std::_Mutex_base::unlock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ?lock@_Mutex_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?lock@_Mutex_base@std@@QEAAXXZ PROC			; std::_Mutex_base::lock, COMDAT

; 46   :     void lock() { // lock the mutex

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 47   :         _Check_C_return(_Mtx_lock(_Mymtx()));

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
  00042	48 8b c8	 mov	 rcx, rax
  00045	e8 00 00 00 00	 call	 _Mtx_lock
  0004a	8b c8		 mov	 ecx, eax
  0004c	e8 00 00 00 00	 call	 ?_Check_C_return@std@@YAHH@Z ; std::_Check_C_return

; 48   :     }

  00051	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00058	5f		 pop	 rdi
  00059	5d		 pop	 rbp
  0005a	c3		 ret	 0
?lock@_Mutex_base@std@@QEAAXXZ ENDP			; std::_Mutex_base::lock
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ??1_Mutex_base@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1_Mutex_base@std@@QEAA@XZ PROC			; std::_Mutex_base::~_Mutex_base, COMDAT

; 39   :     ~_Mutex_base() noexcept { // clean up

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 40   :         _Mtx_destroy_in_situ(_Mymtx());

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
  00043	90		 npad	 1
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 _Mtx_destroy_in_situ
  0004c	90		 npad	 1

; 41   :     }

  0004d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00054	5f		 pop	 rdi
  00055	5d		 pop	 rbp
  00056	c3		 ret	 0
??1_Mutex_base@std@@QEAA@XZ ENDP			; std::_Mutex_base::~_Mutex_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\mutex
;	COMDAT ??0_Mutex_base@std@@QEAA@H@Z
_TEXT	SEGMENT
tv64 = 192
this$ = 240
_Flags$ = 248
??0_Mutex_base@std@@QEAA@H@Z PROC			; std::_Mutex_base::_Mutex_base, COMDAT

; 35   :     _Mutex_base(int _Flags = 0) noexcept { // construct with _Flags

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__0E7D0904_mutex
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	90		 npad	 1

; 36   :         _Mtx_init_in_situ(_Mymtx(), _Flags | _Mtx_try);

  0003b	8b 85 f8 00 00
	00		 mov	 eax, DWORD PTR _Flags$[rbp]
  00041	83 c8 02	 or	 eax, 2
  00044	89 85 c0 00 00
	00		 mov	 DWORD PTR tv64[rbp], eax
  0004a	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00051	e8 00 00 00 00	 call	 ?_Mymtx@_Mutex_base@std@@AEAAPEAU_Mtx_internal_imp_t@@XZ ; std::_Mutex_base::_Mymtx
  00056	90		 npad	 1
  00057	8b 8d c0 00 00
	00		 mov	 ecx, DWORD PTR tv64[rbp]
  0005d	8b d1		 mov	 edx, ecx
  0005f	48 8b c8	 mov	 rcx, rax
  00062	e8 00 00 00 00	 call	 _Mtx_init_in_situ
  00067	90		 npad	 1

; 37   :     }

  00068	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006f	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00076	5f		 pop	 rdi
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
??0_Mutex_base@std@@QEAA@H@Z ENDP			; std::_Mutex_base::_Mutex_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??0id@thread@std@@AEAA@I@Z
_TEXT	SEGMENT
this$ = 224
_Other_id$ = 232
??0id@thread@std@@AEAA@I@Z PROC				; std::thread::id::id, COMDAT

; 180  :     id(_Thrd_id_t _Other_id) : _Id(_Other_id) { // construct from unique id

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F7EEAF5_thread
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00041	8b 8d e8 00 00
	00		 mov	 ecx, DWORD PTR _Other_id$[rbp]
  00047	89 08		 mov	 DWORD PTR [rax], ecx

; 181  :     }

  00049	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
??0id@thread@std@@AEAA@I@Z ENDP				; std::thread::id::id
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ?get_id@this_thread@std@@YA?AVid@thread@2@XZ
_TEXT	SEGMENT
__$ReturnUdt$ = 224
?get_id@this_thread@std@@YA?AVid@thread@2@XZ PROC	; std::this_thread::get_id, COMDAT

; 198  : _NODISCARD inline thread::id this_thread::get_id() noexcept { // return id for current thread

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F7EEAF5_thread
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 199  :     return _Thrd_id();

  00037	e8 00 00 00 00	 call	 _Thrd_id
  0003c	90		 npad	 1
  0003d	8b d0		 mov	 edx, eax
  0003f	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00046	e8 00 00 00 00	 call	 ??0id@thread@std@@AEAA@I@Z ; std::thread::id::id
  0004b	90		 npad	 1
  0004c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 200  : }

  00053	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005a	5f		 pop	 rdi
  0005b	5d		 pop	 rbp
  0005c	c3		 ret	 0
?get_id@this_thread@std@@YA?AVid@thread@2@XZ ENDP	; std::this_thread::get_id
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gthread@std@@QEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gthread@std@@QEAAPEAXI@Z PROC			; std::thread::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1thread@std@@QEAA@XZ	; std::thread::~thread
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 10 00 00 00	 mov	 edx, 16
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gthread@std@@QEAAPEAXI@Z ENDP			; std::thread::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ?join@thread@std@@QEAAXXZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 256
this$ = 320
?join@thread@std@@QEAAXXZ PROC				; std::thread::join, COMDAT

; 104  :     void join() { // join thread

$LN6:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	56		 push	 rsi
  00007	57		 push	 rdi
  00008	48 81 ec 40 01
	00 00		 sub	 rsp, 320		; 00000140H
  0000f	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00014	48 8b fc	 mov	 rdi, rsp
  00017	b9 50 00 00 00	 mov	 ecx, 80			; 00000050H
  0001c	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00021	f3 ab		 rep stosd
  00023	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  0002b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F7EEAF5_thread
  00032	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 105  :         if (!joinable()) {

  00037	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  00043	0f b6 c0	 movzx	 eax, al
  00046	85 c0		 test	 eax, eax
  00048	75 0a		 jne	 SHORT $LN2@join

; 106  :             _Throw_Cpp_error(_INVALID_ARGUMENT);

  0004a	b9 01 00 00 00	 mov	 ecx, 1
  0004f	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN2@join:

; 107  :         }
; 108  : 
; 109  :         if (_Thr._Id == _Thrd_id()) {

  00054	e8 00 00 00 00	 call	 _Thrd_id
  00059	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	39 41 08	 cmp	 DWORD PTR [rcx+8], eax
  00063	75 0a		 jne	 SHORT $LN3@join

; 110  :             _Throw_Cpp_error(_RESOURCE_DEADLOCK_WOULD_OCCUR);

  00065	b9 05 00 00 00	 mov	 ecx, 5
  0006a	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN3@join:

; 111  :         }
; 112  : 
; 113  :         if (_Thrd_join(_Thr, nullptr) != _Thrd_success) {

  0006f	48 8d 85 00 01
	00 00		 lea	 rax, QWORD PTR $T2[rbp]
  00076	48 8b f8	 mov	 rdi, rax
  00079	48 8b b5 40 01
	00 00		 mov	 rsi, QWORD PTR this$[rbp]
  00080	b9 10 00 00 00	 mov	 ecx, 16
  00085	f3 a4		 rep movsb
  00087	33 d2		 xor	 edx, edx
  00089	48 8d 8d 00 01
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  00090	e8 00 00 00 00	 call	 _Thrd_join
  00095	85 c0		 test	 eax, eax
  00097	74 0a		 je	 SHORT $LN4@join

; 114  :             _Throw_Cpp_error(_NO_SUCH_PROCESS);

  00099	b9 02 00 00 00	 mov	 ecx, 2
  0009e	e8 00 00 00 00	 call	 ?_Throw_Cpp_error@std@@YAXH@Z ; std::_Throw_Cpp_error
$LN4@join:

; 115  :         }
; 116  : 
; 117  :         _Thr = {};

  000a3	48 8d 85 c8 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  000aa	48 8b f8	 mov	 rdi, rax
  000ad	33 c0		 xor	 eax, eax
  000af	b9 10 00 00 00	 mov	 ecx, 16
  000b4	f3 aa		 rep stosb
  000b6	48 8d 85 c8 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  000bd	48 8b bd 40 01
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  000c4	48 8b f0	 mov	 rsi, rax
  000c7	b9 10 00 00 00	 mov	 ecx, 16
  000cc	f3 a4		 rep movsb
$LN5@join:

; 118  :     }

  000ce	48 8d a5 20 01
	00 00		 lea	 rsp, QWORD PTR [rbp+288]
  000d5	5f		 pop	 rdi
  000d6	5e		 pop	 rsi
  000d7	5d		 pop	 rbp
  000d8	c3		 ret	 0
?join@thread@std@@QEAAXXZ ENDP				; std::thread::join
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ?joinable@thread@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 192
this$ = 240
?joinable@thread@std@@QEBA_NXZ PROC			; std::thread::joinable, COMDAT

; 100  :     _NODISCARD bool joinable() const noexcept { // return true if this thread can be joined

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F7EEAF5_thread
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 101  :         return _Thr._Id != 0;

  00037	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	83 78 08 00	 cmp	 DWORD PTR [rax+8], 0
  00042	74 0c		 je	 SHORT $LN3@joinable
  00044	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv67[rbp], 1
  0004e	eb 0a		 jmp	 SHORT $LN4@joinable
$LN3@joinable:
  00050	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv67[rbp], 0
$LN4@joinable:
  0005a	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv67[rbp]

; 102  :     }

  00061	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00068	5f		 pop	 rdi
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
?joinable@thread@std@@QEBA_NXZ ENDP			; std::thread::joinable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\thread
;	COMDAT ??1thread@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1thread@std@@QEAA@XZ PROC				; std::thread::~thread, COMDAT

; 74   :     ~thread() noexcept { // clean up

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4F7EEAF5_thread
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 75   :         if (joinable()) {

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?joinable@thread@std@@QEBA_NXZ ; std::thread::joinable
  00043	90		 npad	 1
  00044	0f b6 c0	 movzx	 eax, al
  00047	85 c0		 test	 eax, eax
  00049	74 07		 je	 SHORT $LN3@thread

; 76   :             _STD terminate();

  0004b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_terminate
  00051	90		 npad	 1
$LN3@thread:

; 77   :         }
; 78   :     }

  00052	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00059	5f		 pop	 rdi
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
$LN4@thread:
??1thread@std@@QEAA@XZ ENDP				; std::thread::~thread
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\thr\xthreads.h
;	COMDAT ?_Check_C_return@std@@YAHH@Z
_TEXT	SEGMENT
_Res$ = 224
?_Check_C_return@std@@YAHH@Z PROC			; std::_Check_C_return, COMDAT

; 137  : inline int _Check_C_return(int _Res) { // throw exception on failure

$LN4:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	55		 push	 rbp
  00005	57		 push	 rdi
  00006	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	8b 8c 24 08 01
	00 00		 mov	 ecx, DWORD PTR [rsp+264]
  00028	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F1833197_xthreads@h
  0002f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 138  :     if (_Res != _Thrd_success) {

  00034	83 bd e0 00 00
	00 00		 cmp	 DWORD PTR _Res$[rbp], 0
  0003b	74 0b		 je	 SHORT $LN2@Check_C_re

; 139  :         _Throw_C_error(_Res);

  0003d	8b 8d e0 00 00
	00		 mov	 ecx, DWORD PTR _Res$[rbp]
  00043	e8 00 00 00 00	 call	 ?_Throw_C_error@std@@YAXH@Z ; std::_Throw_C_error
$LN2@Check_C_re:

; 140  :     }
; 141  : 
; 142  :     return _Res;

  00048	8b 85 e0 00 00
	00		 mov	 eax, DWORD PTR _Res$[rbp]
$LN3@Check_C_re:

; 143  : }

  0004e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00055	5f		 pop	 rdi
  00056	5d		 pop	 rbp
  00057	c3		 ret	 0
?_Check_C_return@std@@YAHH@Z ENDP			; std::_Check_C_return
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ
_TEXT	SEGMENT
this$ = 224
?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ PROC ; std::chrono::duration<double,std::ratio<1,1000000000> >::count, COMDAT

; 88   :         _NODISCARD constexpr _Rep count() const _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 89   :             return _MyRep;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]

; 90   :         }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?count@?$duration@NU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBANXZ ENDP ; std::chrono::duration<double,std::ratio<1,1000000000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 224
?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000> >::count, COMDAT

; 88   :         _NODISCARD constexpr _Rep count() const _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 89   :             return _MyRep;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 90   :         }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?count@?$duration@_JU?$ratio@$00$0DOI@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 224
?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1> >::count, COMDAT

; 88   :         _NODISCARD constexpr _Rep count() const _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 89   :             return _MyRep;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 90   :         }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?count@?$duration@_JU?$ratio@$00$00@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ
_TEXT	SEGMENT
this$ = 224
?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ PROC ; std::chrono::duration<double,std::ratio<1,1> >::count, COMDAT

; 88   :         _NODISCARD constexpr _Rep count() const _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 89   :             return _MyRep;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	f2 0f 10 00	 movsd	 xmm0, QWORD PTR [rax]

; 90   :         }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?count@?$duration@NU?$ratio@$00$00@std@@@chrono@std@@QEBANXZ ENDP ; std::chrono::duration<double,std::ratio<1,1> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>, COMDAT

; 78   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00050	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch, COMDAT

; 194  :         _NODISCARD constexpr _Duration time_since_epoch() const _NOEXCEPT_COND(is_arithmetic_v<rep>) { // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 195  :             // get duration from epoch
; 196  :             return _MyDur;

  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004d	48 89 01	 mov	 QWORD PTR [rcx], rax
  00050	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 197  :         }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
?time_since_epoch@?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@XZ ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_since_epoch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z PROC ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >, COMDAT

; 184  :         constexpr explicit time_point(const _Duration& _Other) _NOEXCEPT_COND(is_arithmetic_v<rep>) // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 185  :             : _MyDur(_Other) { // construct from a duration

  0003c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Other$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 186  :         }

  00050	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ENDP ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=, COMDAT

; 127  :             _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 128  :             _MyRep -= _Right._MyRep;

  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00050	48 2b c1	 sub	 rax, rcx
  00053	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005a	48 89 01	 mov	 QWORD PTR [rcx], rax

; 129  :             return *this;

  0005d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 130  :         }

  00064	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006b	5f		 pop	 rdi
  0006c	5d		 pop	 rbp
  0006d	c3		 ret	 0
??Z?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator-=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=, COMDAT

; 121  :             _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 122  :             _MyRep += _Right._MyRep;

  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004d	48 03 01	 add	 rax, QWORD PTR [rcx]
  00050	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00057	48 89 01	 mov	 QWORD PTR [rcx], rax

; 123  :             return *this;

  0005a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 124  :         }

  00061	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00068	5f		 pop	 rdi
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
??Y?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAAAEAV012@AEBV012@@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::operator+=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 224
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count, COMDAT

; 88   :         _NODISCARD constexpr _Rep count() const _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 89   :             return _MyRep;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 90   :         }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?count@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
_TEXT	SEGMENT
_Freq$ = 8
_Ctr$ = 40
_Whole$ = 72
_Part$ = 104
$T1 = 328
$T2 = 360
__$ReturnUdt$ = 416
?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ PROC ; std::chrono::steady_clock::now, COMDAT

; 647  :         _NODISCARD static time_point now() noexcept { // get current time

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 c8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+456]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 648  :             const long long _Freq = _Query_perf_frequency(); // doesn't change after system boot

  00037	e8 00 00 00 00	 call	 _Query_perf_frequency
  0003c	90		 npad	 1
  0003d	48 89 45 08	 mov	 QWORD PTR _Freq$[rbp], rax

; 649  :             const long long _Ctr  = _Query_perf_counter();

  00041	e8 00 00 00 00	 call	 _Query_perf_counter
  00046	90		 npad	 1
  00047	48 89 45 28	 mov	 QWORD PTR _Ctr$[rbp], rax

; 650  :             static_assert(period::num == 1, "This assumes period::num == 1.");
; 651  :             const long long _Whole = (_Ctr / _Freq) * period::den;

  0004b	48 8b 45 28	 mov	 rax, QWORD PTR _Ctr$[rbp]
  0004f	48 99		 cdq
  00051	48 f7 7d 08	 idiv	 QWORD PTR _Freq$[rbp]
  00055	48 69 c0 00 ca
	9a 3b		 imul	 rax, rax, 1000000000	; 3b9aca00H
  0005c	48 89 45 48	 mov	 QWORD PTR _Whole$[rbp], rax

; 652  :             const long long _Part  = (_Ctr % _Freq) * period::den / _Freq;

  00060	48 8b 45 28	 mov	 rax, QWORD PTR _Ctr$[rbp]
  00064	48 99		 cdq
  00066	48 f7 7d 08	 idiv	 QWORD PTR _Freq$[rbp]
  0006a	48 8b c2	 mov	 rax, rdx
  0006d	48 69 c0 00 ca
	9a 3b		 imul	 rax, rax, 1000000000	; 3b9aca00H
  00074	48 99		 cdq
  00076	48 f7 7d 08	 idiv	 QWORD PTR _Freq$[rbp]
  0007a	48 89 45 68	 mov	 QWORD PTR _Part$[rbp], rax

; 653  :             return time_point(duration(_Whole + _Part));

  0007e	48 8b 45 68	 mov	 rax, QWORD PTR _Part$[rbp]
  00082	48 8b 4d 48	 mov	 rcx, QWORD PTR _Whole$[rbp]
  00086	48 03 c8	 add	 rcx, rax
  00089	48 8b c1	 mov	 rax, rcx
  0008c	48 89 85 68 01
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  00093	48 8d 95 68 01
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  0009a	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  000a1	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,1000000000> >::duration<__int64,std::ratio<1,1000000000> ><__int64,void>
  000a6	90		 npad	 1
  000a7	48 8b d0	 mov	 rdx, rax
  000aa	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000b1	e8 00 00 00 00	 call	 ??0?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
  000b6	90		 npad	 1
  000b7	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 654  :         }

  000be	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  000c5	5f		 pop	 rdi
  000c6	5d		 pop	 rbp
  000c7	c3		 ret	 0
?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ ENDP ; std::chrono::steady_clock::now
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z PROC ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>, COMDAT

; 78   :             : _MyRep(static_cast<_Rep>(_Val)) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 89 08	 mov	 QWORD PTR [rax], rcx
  00050	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z ENDP ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ PROC ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch, COMDAT

; 194  :         _NODISCARD constexpr _Duration time_since_epoch() const _NOEXCEPT_COND(is_arithmetic_v<rep>) { // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 195  :             // get duration from epoch
; 196  :             return _MyDur;

  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0004d	48 89 01	 mov	 QWORD PTR [rcx], rax
  00050	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 197  :         }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
?time_since_epoch@?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEBA?AV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@XZ ENDP ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_since_epoch
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z PROC ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >, COMDAT

; 184  :         constexpr explicit time_point(const _Duration& _Other) _NOEXCEPT_COND(is_arithmetic_v<rep>) // strengthened

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 185  :             : _MyDur(_Other) { // construct from a duration

  0003c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Other$[rbp]
  00043	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00046	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004d	48 89 01	 mov	 QWORD PTR [rcx], rax

; 186  :         }

  00050	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ENDP ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ
_TEXT	SEGMENT
this$ = 224
?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ PROC ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count, COMDAT

; 88   :         _NODISCARD constexpr _Rep count() const _NOEXCEPT_COND(is_arithmetic_v<_Rep>) { // strengthened

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 89   :             return _MyRep;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 90   :         }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?count@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEBA_JXZ ENDP ; std::chrono::duration<__int64,std::ratio<1,10000000> >::count
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\chrono
;	COMDAT ?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
__$ReturnUdt$ = 288
?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ PROC ; std::chrono::system_clock::now, COMDAT

; 627  :         _NODISCARD static time_point now() noexcept { // get current time

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4C709847_chrono
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 628  :             return time_point(duration(_Xtime_get_ticks()));

  00037	e8 00 00 00 00	 call	 _Xtime_get_ticks
  0003c	90		 npad	 1
  0003d	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  00044	48 8d 95 e8 00
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  0004b	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00052	e8 00 00 00 00	 call	 ??$?0_JX@?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@chrono@std@@QEAA@AEB_J@Z ; std::chrono::duration<__int64,std::ratio<1,10000000> >::duration<__int64,std::ratio<1,10000000> ><__int64,void>
  00057	90		 npad	 1
  00058	48 8b d0	 mov	 rdx, rax
  0005b	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00062	e8 00 00 00 00	 call	 ??0?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@chrono@std@@QEAA@AEBV?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@12@@Z ; std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
  00067	90		 npad	 1
  00068	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 629  :         }

  0006f	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00076	5f		 pop	 rdi
  00077	5d		 pop	 rbp
  00078	c3		 ret	 0
?now@system_clock@chrono@std@@SA?AV?$time_point@Usystem_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0JIJGIA@@std@@@23@@23@XZ ENDP ; std::chrono::system_clock::now
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z PROC ; std::_Ref_count_base::_Get_deleter, COMDAT

; 667  :     virtual void* _Get_deleter(const type_info&) const noexcept { // return address of deleter object

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 668  :         return nullptr;

  0003c	33 c0		 xor	 eax, eax

; 669  :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_deleter@_Ref_count_base@std@@UEBAPEAXAEBVtype_info@@@Z ENDP ; std::_Ref_count_base::_Get_deleter
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decwref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Decwref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decwref, COMDAT

; 657  :     void _Decwref() noexcept { // decrement weak reference count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 658  :         if (_MT_DECR(_Weaks) == 0) {

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 c0 0c	 add	 rax, 12
  00042	b9 ff ff ff ff	 mov	 ecx, -1
  00047	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  0004b	ff c9		 dec	 ecx
  0004d	8b c1		 mov	 eax, ecx
  0004f	85 c0		 test	 eax, eax
  00051	75 15		 jne	 SHORT $LN2@Decwref

; 659  :             _Delete_this();

  00053	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00064	ff 50 08	 call	 QWORD PTR [rax+8]
  00067	90		 npad	 1
$LN2@Decwref:

; 660  :         }
; 661  :     }

  00068	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?_Decwref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decwref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Decref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Decref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Decref, COMDAT

; 650  :     void _Decref() noexcept { // decrement use count

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 651  :         if (_MT_DECR(_Uses) == 0) {

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 c0 08	 add	 rax, 8
  00042	b9 ff ff ff ff	 mov	 ecx, -1
  00047	f0 0f c1 08	 lock xadd DWORD PTR [rax], ecx
  0004b	ff c9		 dec	 ecx
  0004d	8b c1		 mov	 eax, ecx
  0004f	85 c0		 test	 eax, eax
  00051	75 21		 jne	 SHORT $LN2@Decref

; 652  :             _Destroy();

  00053	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00064	ff 10		 call	 QWORD PTR [rax]
  00066	90		 npad	 1

; 653  :             _Decwref();

  00067	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006e	e8 00 00 00 00	 call	 ?_Decwref@_Ref_count_base@std@@QEAAXXZ ; std::_Ref_count_base::_Decwref
  00073	90		 npad	 1
$LN2@Decref:

; 654  :         }
; 655  :     }

  00074	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0007b	5f		 pop	 rdi
  0007c	5d		 pop	 rbp
  0007d	c3		 ret	 0
?_Decref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Decref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ?_Incref@_Ref_count_base@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Incref@_Ref_count_base@std@@QEAAXXZ PROC		; std::_Ref_count_base::_Incref, COMDAT

; 642  :     void _Incref() noexcept { // increment use count

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 643  :         _MT_INCR(_Uses);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 c0 08	 add	 rax, 8
  00042	f0 ff 00	 lock inc DWORD PTR [rax]

; 644  :     }

  00045	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004c	5f		 pop	 rdi
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
?_Incref@_Ref_count_base@std@@QEAAXXZ ENDP		; std::_Ref_count_base::_Incref
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??1_Ref_count_base@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1_Ref_count_base@std@@UEAA@XZ PROC			; std::_Ref_count_base::~_Ref_count_base, COMDAT

; 624  :     virtual ~_Ref_count_base() noexcept {} // TRANSITION, should be non-virtual

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003e	5f		 pop	 rdi
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??1_Ref_count_base@std@@UEAA@XZ ENDP			; std::_Ref_count_base::~_Ref_count_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\memory
;	COMDAT ??0_Ref_count_base@std@@IEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Ref_count_base@std@@IEAA@XZ PROC			; std::_Ref_count_base::_Ref_count_base, COMDAT

; 670  : };

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__94339243_memory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 614  :     _Atomic_counter_t _Uses  = 1;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	c7 40 08 01 00
	00 00		 mov	 DWORD PTR [rax+8], 1

; 615  :     _Atomic_counter_t _Weaks = 1;

  00045	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	c7 40 0c 01 00
	00 00		 mov	 DWORD PTR [rax+12], 1

; 670  : };

  00053	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0_Ref_count_base@std@@IEAA@XZ ENDP			; std::_Ref_count_base::_Ref_count_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xcall_once.h
;	COMDAT ??$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@0@XZ
_TEXT	SEGMENT
??$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@0@XZ PROC ; std::_Immortalize<std::_Generic_error_category>, COMDAT

; 62   : _Ty& _Immortalize() { // return a reference to an object that will live forever

$LN4:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__502C2D49_xcall_once@h
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 63   :     static_assert(sizeof(void*) == sizeof(once_flag), "TRANSITION, VSO#406237");
; 64   :     static_assert(alignof(void*) == alignof(once_flag), "TRANSITION, VSO#406237");
; 65   :     static void* _Flag = nullptr;
; 66   :     static aligned_union_t<1, _Ty> _Storage;
; 67   :     if (_Execute_once(reinterpret_cast<once_flag&>(_Flag), _Immortalize_impl<_Ty>, &_Storage) == 0) {

  0002a	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:?_Storage@?1???$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@1@XZ@4T?$_Align_type@N$0BA@@1@A ; `std::_Immortalize<std::_Generic_error_category>'::`2'::_Storage
  00031	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Immortalize_impl@V_Generic_error_category@std@@@std@@YAHPEAX0PEAPEAX@Z ; std::_Immortalize_impl<std::_Generic_error_category>
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:?_Flag@?1???$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@1@XZ@4PEAXEA ; `std::_Immortalize<std::_Generic_error_category>'::`2'::_Flag
  0003f	e8 00 00 00 00	 call	 ?_Execute_once@std@@YAHAEAUonce_flag@1@P6AHPEAX1PEAPEAX@Z1@Z ; std::_Execute_once
  00044	85 c0		 test	 eax, eax
  00046	75 06		 jne	 SHORT $LN2@Immortaliz

; 68   :         // _Execute_once should never fail if the callback never fails
; 69   :         _STD terminate();

  00048	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_terminate
$LN2@Immortaliz:

; 70   :     }
; 71   : 
; 72   :     return reinterpret_cast<_Ty&>(_Storage);

  0004e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:?_Storage@?1???$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@1@XZ@4T?$_Align_type@N$0BA@@1@A ; `std::_Immortalize<std::_Generic_error_category>'::`2'::_Storage
$LN3@Immortaliz:

; 73   : }

  00055	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005c	5f		 pop	 rdi
  0005d	5d		 pop	 rbp
  0005e	c3		 ret	 0
??$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@0@XZ ENDP ; std::_Immortalize<std::_Generic_error_category>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G_Generic_error_category@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_G_Generic_error_category@std@@UEAAPEAXI@Z PROC	; std::_Generic_error_category::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1_Generic_error_category@std@@UEAA@XZ
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 10 00 00 00	 mov	 edx, 16
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_G_Generic_error_category@std@@UEAAPEAXI@Z ENDP	; std::_Generic_error_category::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_Generic_error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1_Generic_error_category@std@@UEAA@XZ PROC		; std::_Generic_error_category::~_Generic_error_category, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1error_category@std@@UEAA@XZ ; std::error_category::~error_category
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1_Generic_error_category@std@@UEAA@XZ ENDP		; std::_Generic_error_category::~_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
__$ReturnUdt$ = 264
_Errcode$ = 272
?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z PROC ; std::_Generic_error_category::message, COMDAT

; 416  :     _NODISCARD virtual string message(int _Errcode) const override { // convert to name of error

$LN5:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	c7 85 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR $T1[rbp], 0
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00045	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 417  :         return _Syserror_map(_Errcode);

  0004a	8b 8d 10 01 00
	00		 mov	 ecx, DWORD PTR _Errcode$[rbp]
  00050	e8 00 00 00 00	 call	 ?_Syserror_map@std@@YAPEBDH@Z ; std::_Syserror_map
  00055	48 8b d0	 mov	 rdx, rax
  00058	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0005f	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00064	8b 85 c4 00 00
	00		 mov	 eax, DWORD PTR $T1[rbp]
  0006a	83 c8 01	 or	 eax, 1
  0006d	89 85 c4 00 00
	00		 mov	 DWORD PTR $T1[rbp], eax
  00073	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 418  :     }

  0007a	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00081	5f		 pop	 rdi
  00082	5d		 pop	 rbp
  00083	c3		 ret	 0
?message@_Generic_error_category@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z ENDP ; std::_Generic_error_category::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ?name@_Generic_error_category@std@@UEBAPEBDXZ
_TEXT	SEGMENT
this$ = 224
?name@_Generic_error_category@std@@UEBAPEBDXZ PROC	; std::_Generic_error_category::name, COMDAT

; 412  :     _NODISCARD virtual const char* name() const noexcept override { // get name of category

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 413  :         return "generic";

  00037	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_07DCLBNMLN@generic@

; 414  :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?name@_Generic_error_category@std@@UEBAPEBDXZ ENDP	; std::_Generic_error_category::name
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ??0_Generic_error_category@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Generic_error_category@std@@QEAA@XZ PROC		; std::_Generic_error_category::_Generic_error_category, COMDAT

; 408  :     _Generic_error_category() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ??0error_category@std@@QEAA@XZ ; std::error_category::error_category
  00043	90		 npad	 1
  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7_Generic_error_category@std@@6B@
  00052	48 89 08	 mov	 QWORD PTR [rax], rcx

; 409  :         _Addr = _Generic_addr;

  00055	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005c	48 c7 40 08 03
	00 00 00	 mov	 QWORD PTR [rax+8], 3

; 410  :     }

  00064	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??0_Generic_error_category@std@@QEAA@XZ ENDP		; std::_Generic_error_category::_Generic_error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ?_Throw_system_error@std@@YAXW4errc@1@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 264
$T3 = 320
_Errno$ = 384
?_Throw_system_error@std@@YAXW4errc@1@@Z PROC		; std::_Throw_system_error, COMDAT

; 396  : [[noreturn]] inline void _Throw_system_error(const errc _Errno) {

$LN3:
  00000	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00004	55		 push	 rbp
  00005	56		 push	 rsi
  00006	57		 push	 rdi
  00007	48 81 ec 80 01
	00 00		 sub	 rsp, 384		; 00000180H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 60 00 00 00	 mov	 ecx, 96			; 00000060H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	8b 8c 24 a8 01
	00 00		 mov	 ecx, DWORD PTR [rsp+424]
  00029	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00030	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 397  :     _THROW(system_error{_STD make_error_code(_Errno)});

  00035	8b 95 80 01 00
	00		 mov	 edx, DWORD PTR _Errno$[rbp]
  0003b	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  00042	e8 00 00 00 00	 call	 ?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z ; std::make_error_code
  00047	48 8d 8d 40 01
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  0004e	48 8b f9	 mov	 rdi, rcx
  00051	48 8b f0	 mov	 rsi, rax
  00054	b9 10 00 00 00	 mov	 ecx, 16
  00059	f3 a4		 rep movsb
  0005b	48 8d 95 40 01
	00 00		 lea	 rdx, QWORD PTR $T3[rbp]
  00062	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00069	e8 00 00 00 00	 call	 ??0system_error@std@@QEAA@Verror_code@1@@Z ; std::system_error::system_error
  0006e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI4?AVsystem_error@std@@
  00075	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0007c	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_syst:

; 398  : }

  00081	48 8d a5 60 01
	00 00		 lea	 rsp, QWORD PTR [rbp+352]
  00088	5f		 pop	 rdi
  00089	5e		 pop	 rsi
  0008a	5d		 pop	 rbp
  0008b	c3		 ret	 0
?_Throw_system_error@std@@YAXW4errc@1@@Z ENDP		; std::_Throw_system_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gsystem_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gsystem_error@std@@UEAAPEAXI@Z PROC			; std::system_error::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1system_error@std@@UEAA@XZ
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gsystem_error@std@@UEAAPEAXI@Z ENDP			; std::system_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0system_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0system_error@std@@QEAA@AEBV01@@Z PROC		; std::system_error::system_error, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0_System_error@std@@QEAA@AEBV01@@Z
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7system_error@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx
  00053	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0system_error@std@@QEAA@AEBV01@@Z ENDP		; std::system_error::system_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1system_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1system_error@std@@UEAA@XZ PROC			; std::system_error::~system_error, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1_System_error@std@@UEAA@XZ
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1system_error@std@@UEAA@XZ ENDP			; std::system_error::~system_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ??0system_error@std@@QEAA@Verror_code@1@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 272
this$ = 336
_Errcode$ = 344
??0system_error@std@@QEAA@Verror_code@1@@Z PROC		; std::system_error::system_error, COMDAT

; 359  :     system_error(error_code _Errcode) : _Mybase(_Errcode, "") { // construct from error code

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	56		 push	 rsi
  0000c	57		 push	 rdi
  0000d	48 81 ec 50 01
	00 00		 sub	 rsp, 336		; 00000150H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 54 00 00 00	 mov	 ecx, 84			; 00000054H
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  00030	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00037	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
  00043	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0004a	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  0004f	90		 npad	 1
  00050	48 8d 85 10 01
	00 00		 lea	 rax, QWORD PTR $T2[rbp]
  00057	48 8b f8	 mov	 rdi, rax
  0005a	48 8b b5 58 01
	00 00		 mov	 rsi, QWORD PTR _Errcode$[rbp]
  00061	b9 10 00 00 00	 mov	 ecx, 16
  00066	f3 a4		 rep movsb
  00068	4c 8d 85 c8 00
	00 00		 lea	 r8, QWORD PTR $T1[rbp]
  0006f	48 8d 95 10 01
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  00076	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0007d	e8 00 00 00 00	 call	 ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::_System_error::_System_error
  00082	90		 npad	 1
  00083	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0008a	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  0008f	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00096	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7system_error@std@@6B@
  0009d	48 89 08	 mov	 QWORD PTR [rax], rcx

; 360  :     }

  000a0	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a7	48 8d a5 30 01
	00 00		 lea	 rsp, QWORD PTR [rbp+304]
  000ae	5f		 pop	 rdi
  000af	5e		 pop	 rsi
  000b0	5d		 pop	 rbp
  000b1	c3		 ret	 0
??0system_error@std@@QEAA@Verror_code@1@@Z ENDP		; std::system_error::system_error
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 272
this$ = 336
_Errcode$ = 344
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@@Z@4HA PROC ; `std::system_error::system_error'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@@Z@4HA ENDP ; `std::system_error::system_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 272
this$ = 336
_Errcode$ = 344
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@@Z@4HA PROC ; `std::system_error::system_error'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@@Z@4HA ENDP ; `std::system_error::system_error'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_G_System_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_G_System_error@std@@UEAAPEAXI@Z PROC			; std::_System_error::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1_System_error@std@@UEAA@XZ
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 28 00 00 00	 mov	 edx, 40			; 00000028H
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_G_System_error@std@@UEAAPEAXI@Z ENDP			; std::_System_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0_System_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0_System_error@std@@QEAA@AEBV01@@Z PROC		; std::_System_error::_System_error, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	56		 push	 rsi
  0000c	57		 push	 rdi
  0000d	48 81 ec e0 00
	00 00		 sub	 rsp, 224		; 000000e0H
  00014	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00019	48 8b fc	 mov	 rdi, rsp
  0001c	b9 38 00 00 00	 mov	 ecx, 56			; 00000038H
  00021	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00026	f3 ab		 rep stosd
  00028	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00030	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ??0runtime_error@std@@QEAA@AEBV01@@Z
  00043	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7_System_error@std@@6B@
  00051	48 89 08	 mov	 QWORD PTR [rax], rcx
  00054	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __that$[rbp]
  00062	48 8d 78 18	 lea	 rdi, QWORD PTR [rax+24]
  00066	48 8d 71 18	 lea	 rsi, QWORD PTR [rcx+24]
  0006a	b9 10 00 00 00	 mov	 ecx, 16
  0006f	f3 a4		 rep movsb
  00071	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00078	48 8d a5 c0 00
	00 00		 lea	 rsp, QWORD PTR [rbp+192]
  0007f	5f		 pop	 rdi
  00080	5e		 pop	 rsi
  00081	5d		 pop	 rbp
  00082	c3		 ret	 0
??0_System_error@std@@QEAA@AEBV01@@Z ENDP		; std::_System_error::_System_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1_System_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1_System_error@std@@UEAA@XZ PROC			; std::_System_error::~_System_error, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1runtime_error@std@@UEAA@XZ
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1_System_error@std@@UEAA@XZ ENDP			; std::_System_error::~_System_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 264
$T3 = 296
$T4 = 360
$T5 = 416
tv135 = 440
tv84 = 448
tv69 = 456
tv137 = 464
this$ = 512
_Errcode$ = 520
_Message$ = 528
??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::_System_error::_System_error, COMDAT

; 348  :           _Mycode(_Errcode) { // construct from error code and message string

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	56		 push	 rsi
  00011	57		 push	 rdi
  00012	48 81 ec 00 02
	00 00		 sub	 rsp, 512		; 00000200H
  00019	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001e	48 8b fc	 mov	 rdi, rsp
  00021	b9 80 00 00 00	 mov	 ecx, 128		; 00000080H
  00026	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002b	f3 ab		 rep stosd
  0002d	48 8b 8c 24 28
	02 00 00	 mov	 rcx, QWORD PTR [rsp+552]
  00035	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  0003c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 347  :         : runtime_error(_Makestr(_Errcode, _Message)),

  00041	48 8d 85 c8 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00048	48 89 85 08 01
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  0004f	48 8b 95 10 02
	00 00		 mov	 rdx, QWORD PTR _Message$[rbp]
  00056	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR $T2[rbp]
  0005d	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  00062	48 89 85 b8 01
	00 00		 mov	 QWORD PTR tv135[rbp], rax
  00069	48 8b 85 b8 01
	00 00		 mov	 rax, QWORD PTR tv135[rbp]
  00070	48 89 85 c0 01
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  00077	48 8d 85 68 01
	00 00		 lea	 rax, QWORD PTR $T4[rbp]
  0007e	48 8b f8	 mov	 rdi, rax
  00081	48 8b b5 08 02
	00 00		 mov	 rsi, QWORD PTR _Errcode$[rbp]
  00088	b9 10 00 00 00	 mov	 ecx, 16
  0008d	f3 a4		 rep movsb
  0008f	48 8d 85 a0 01
	00 00		 lea	 rax, QWORD PTR $T5[rbp]
  00096	48 8d 8d 68 01
	00 00		 lea	 rcx, QWORD PTR $T4[rbp]
  0009d	48 8b f8	 mov	 rdi, rax
  000a0	48 8b f1	 mov	 rsi, rcx
  000a3	b9 10 00 00 00	 mov	 ecx, 16
  000a8	f3 a4		 rep movsb
  000aa	4c 8b 85 c0 01
	00 00		 mov	 r8, QWORD PTR tv84[rbp]
  000b1	48 8d 95 a0 01
	00 00		 lea	 rdx, QWORD PTR $T5[rbp]
  000b8	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  000bf	e8 00 00 00 00	 call	 ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ; std::_System_error::_Makestr
  000c4	48 89 85 c8 01
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  000cb	48 8b 85 c8 01
	00 00		 mov	 rax, QWORD PTR tv69[rbp]
  000d2	48 89 85 d0 01
	00 00		 mov	 QWORD PTR tv137[rbp], rax
  000d9	48 8b 95 d0 01
	00 00		 mov	 rdx, QWORD PTR tv137[rbp]
  000e0	48 8b 8d 00 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e7	e8 00 00 00 00	 call	 ??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ; std::runtime_error::runtime_error
  000ec	90		 npad	 1
  000ed	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  000f4	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 348  :           _Mycode(_Errcode) { // construct from error code and message string

  000f9	48 8b 85 00 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00100	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7_System_error@std@@6B@
  00107	48 89 08	 mov	 QWORD PTR [rax], rcx
  0010a	48 8b 85 00 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00111	48 8d 78 18	 lea	 rdi, QWORD PTR [rax+24]
  00115	48 8b b5 08 02
	00 00		 mov	 rsi, QWORD PTR _Errcode$[rbp]
  0011c	b9 10 00 00 00	 mov	 ecx, 16
  00121	f3 a4		 rep movsb

; 349  :     }

  00123	48 8b 85 00 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0012a	48 8d a5 e0 01
	00 00		 lea	 rsp, QWORD PTR [rbp+480]
  00131	5f		 pop	 rdi
  00132	5e		 pop	 rsi
  00133	5d		 pop	 rbp
  00134	c3		 ret	 0
??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::_System_error::_System_error
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 264
$T3 = 296
$T4 = 360
$T5 = 416
tv135 = 440
tv84 = 448
tv69 = 456
tv137 = 464
this$ = 512
_Errcode$ = 520
_Message$ = 528
?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::_System_error::_System_error'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::_System_error::_System_error'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 264
$T3 = 296
$T4 = 360
$T5 = 416
tv135 = 440
tv84 = 448
tv69 = 456
tv137 = 464
this$ = 512
_Errcode$ = 520
_Message$ = 528
?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA PROC ; `std::_System_error::_System_error'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 8d 28 01
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z@4HA ENDP ; `std::_System_error::_System_error'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
_TEXT	SEGMENT
$T1 = 200
$T2 = 260
tv81 = 280
tv87 = 288
tv80 = 296
__$ReturnUdt$ = 336
_Errcode$ = 344
_Message$ = 352
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z PROC ; std::_System_error::_Makestr, COMDAT

; 336  :     static string _Makestr(error_code _Errcode, string _Message) { // compose error message

$LN8:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  00034	c7 85 04 01 00
	00 00 00 00 00	 mov	 DWORD PTR $T2[rbp], 0
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00045	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 337  :         if (!_Message.empty()) {

  0004a	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR _Message$[rbp]
  00051	e8 00 00 00 00	 call	 ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
  00056	0f b6 c0	 movzx	 eax, al
  00059	85 c0		 test	 eax, eax
  0005b	75 13		 jne	 SHORT $LN2@Makestr

; 338  :             _Message.append(": ");

  0005d	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_02LMMGGCAJ@?3?5@
  00064	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR _Message$[rbp]
  0006b	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
$LN2@Makestr:

; 339  :         }
; 340  : 
; 341  :         _Message.append(_Errcode.message());

  00070	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00077	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR _Errcode$[rbp]
  0007e	e8 00 00 00 00	 call	 ?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ; std::error_code::message
  00083	48 89 85 18 01
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  0008a	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR tv81[rbp]
  00091	48 89 85 20 01
	00 00		 mov	 QWORD PTR tv87[rbp], rax
  00098	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR tv87[rbp]
  0009f	48 89 85 28 01
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  000a6	48 8b 95 28 01
	00 00		 mov	 rdx, QWORD PTR tv80[rbp]
  000ad	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR _Message$[rbp]
  000b4	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
  000b9	90		 npad	 1
  000ba	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  000c1	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >

; 342  :         return _Message;

  000c6	48 8b 95 60 01
	00 00		 mov	 rdx, QWORD PTR _Message$[rbp]
  000cd	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000d4	e8 00 00 00 00	 call	 ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
  000d9	8b 85 04 01 00
	00		 mov	 eax, DWORD PTR $T2[rbp]
  000df	83 c8 01	 or	 eax, 1
  000e2	89 85 04 01 00
	00		 mov	 DWORD PTR $T2[rbp], eax
  000e8	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR _Message$[rbp]
  000ef	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  000f4	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 343  :     }

  000fb	48 8d a5 38 01
	00 00		 lea	 rsp, QWORD PTR [rbp+312]
  00102	5f		 pop	 rdi
  00103	5d		 pop	 rbp
  00104	c3		 ret	 0
?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z ENDP ; std::_System_error::_Makestr
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 260
tv81 = 280
tv87 = 288
tv80 = 296
__$ReturnUdt$ = 336
_Errcode$ = 344
_Message$ = 352
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR _Message$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 260
tv81 = 280
tv87 = 288
tv80 = 296
__$ReturnUdt$ = 336
_Errcode$ = 344
_Message$ = 352
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 260
tv81 = 280
tv87 = 288
tv80 = 296
__$ReturnUdt$ = 336
_Errcode$ = 344
_Message$ = 352
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR _Message$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
$T2 = 260
tv81 = 280
tv87 = 288
tv80 = 296
__$ReturnUdt$ = 336
_Errcode$ = 344
_Message$ = 352
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA PROC ; `std::_System_error::_Makestr'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA ENDP ; `std::_System_error::_Makestr'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ??8std@@YA_NAEBVerror_condition@0@0@Z
_TEXT	SEGMENT
tv74 = 192
tv72 = 200
tv76 = 208
tv82 = 212
_Left$ = 256
_Right$ = 264
??8std@@YA_NAEBVerror_condition@0@0@Z PROC		; std::operator==, COMDAT

; 233  :     const error_condition& _Left, const error_condition& _Right) noexcept { // test errors for equality

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 234  :     return _Left.category() == _Right.category() && _Left.value() == _Right.value();

  0003c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  00043	e8 00 00 00 00	 call	 ?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ; std::error_condition::category
  00048	90		 npad	 1
  00049	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv74[rbp], rax
  00050	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00057	e8 00 00 00 00	 call	 ?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ; std::error_condition::category
  0005c	90		 npad	 1
  0005d	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv72[rbp], rax
  00064	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv72[rbp]
  0006b	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv74[rbp]
  00072	e8 00 00 00 00	 call	 ??8error_category@std@@QEBA_NAEBV01@@Z ; std::error_category::operator==
  00077	90		 npad	 1
  00078	0f b6 c0	 movzx	 eax, al
  0007b	85 c0		 test	 eax, eax
  0007d	74 36		 je	 SHORT $LN3@operator
  0007f	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  00086	e8 00 00 00 00	 call	 ?value@error_condition@std@@QEBAHXZ ; std::error_condition::value
  0008b	90		 npad	 1
  0008c	89 85 d0 00 00
	00		 mov	 DWORD PTR tv76[rbp], eax
  00092	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00099	e8 00 00 00 00	 call	 ?value@error_condition@std@@QEBAHXZ ; std::error_condition::value
  0009e	90		 npad	 1
  0009f	8b 8d d0 00 00
	00		 mov	 ecx, DWORD PTR tv76[rbp]
  000a5	3b c8		 cmp	 ecx, eax
  000a7	75 0c		 jne	 SHORT $LN3@operator
  000a9	c7 85 d4 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv82[rbp], 1
  000b3	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  000b5	c7 85 d4 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv82[rbp], 0
$LN4@operator:
  000bf	0f b6 85 d4 00
	00 00		 movzx	 eax, BYTE PTR tv82[rbp]

; 235  : }

  000c6	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000cd	5f		 pop	 rdi
  000ce	5d		 pop	 rbp
  000cf	c3		 ret	 0
??8std@@YA_NAEBVerror_condition@0@0@Z ENDP		; std::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ?category@error_condition@std@@QEBAAEBVerror_category@2@XZ
_TEXT	SEGMENT
this$ = 224
?category@error_condition@std@@QEBAAEBVerror_category@2@XZ PROC ; std::error_condition::category, COMDAT

; 199  :     _NODISCARD const error_category& category() const noexcept { // get category

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 200  :         return *_Mycat;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 201  :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?category@error_condition@std@@QEBAAEBVerror_category@2@XZ ENDP ; std::error_condition::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ?value@error_condition@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
?value@error_condition@std@@QEBAHXZ PROC		; std::error_condition::value, COMDAT

; 195  :     _NODISCARD int value() const noexcept { // get error code

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 196  :         return _Myval;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	8b 00		 mov	 eax, DWORD PTR [rax]

; 197  :     }

  00040	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00047	5f		 pop	 rdi
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
?value@error_condition@std@@QEBAHXZ ENDP		; std::error_condition::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
_Cat$ = 240
??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z PROC ; std::error_condition::error_condition, COMDAT

; 169  :     error_condition(int _Val, const error_category& _Cat) noexcept

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003f	90		 npad	 1

; 170  :         : _Myval(_Val), _Mycat(&_Cat) { // construct from error code and category

  00040	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	8b 8d e8 00 00
	00		 mov	 ecx, DWORD PTR _Val$[rbp]
  0004d	89 08		 mov	 DWORD PTR [rax], ecx
  0004f	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Cat$[rbp]
  0005d	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 171  :     }

  00061	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00068	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ENDP ; std::error_condition::error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ
_TEXT	SEGMENT
$T1 = 196
tv67 = 216
tv78 = 224
tv76 = 232
this$ = 272
__$ReturnUdt$ = 280
?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ PROC ; std::error_code::message, COMDAT

; 150  :     _NODISCARD string message() const { // get name of error code

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002f	c7 85 c4 00 00
	00 00 00 00 00	 mov	 DWORD PTR $T1[rbp], 0
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 151  :         return category().message(value());

  00045	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004c	e8 00 00 00 00	 call	 ?category@error_code@std@@QEBAAEBVerror_category@2@XZ ; std::error_code::category
  00051	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv67[rbp], rax
  00058	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv67[rbp]
  0005f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00062	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00066	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0006d	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00074	e8 00 00 00 00	 call	 ?value@error_code@std@@QEBAHXZ ; std::error_code::value
  00079	89 85 e8 00 00
	00		 mov	 DWORD PTR tv76[rbp], eax
  0007f	44 8b 85 e8 00
	00 00		 mov	 r8d, DWORD PTR tv76[rbp]
  00086	48 8b 95 18 01
	00 00		 mov	 rdx, QWORD PTR __$ReturnUdt$[rbp]
  0008d	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv67[rbp]
  00094	ff 95 e0 00 00
	00		 call	 QWORD PTR tv78[rbp]
  0009a	8b 85 c4 00 00
	00		 mov	 eax, DWORD PTR $T1[rbp]
  000a0	83 c8 01	 or	 eax, 1
  000a3	89 85 c4 00 00
	00		 mov	 DWORD PTR $T1[rbp], eax
  000a9	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 152  :     }

  000b0	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  000b7	5f		 pop	 rdi
  000b8	5d		 pop	 rbp
  000b9	c3		 ret	 0
?message@error_code@std@@QEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ ENDP ; std::error_code::message
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ?category@error_code@std@@QEBAAEBVerror_category@2@XZ
_TEXT	SEGMENT
this$ = 224
?category@error_code@std@@QEBAAEBVerror_category@2@XZ PROC ; std::error_code::category, COMDAT

; 144  :     _NODISCARD const error_category& category() const noexcept { // get category

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 145  :         return *_Mycat;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 146  :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?category@error_code@std@@QEBAAEBVerror_category@2@XZ ENDP ; std::error_code::category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ?value@error_code@std@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
?value@error_code@std@@QEBAHXZ PROC			; std::error_code::value, COMDAT

; 140  :     _NODISCARD int value() const noexcept { // get error code

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 141  :         return _Myval;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	8b 00		 mov	 eax, DWORD PTR [rax]

; 142  :     }

  00040	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00047	5f		 pop	 rdi
  00048	5d		 pop	 rbp
  00049	c3		 ret	 0
?value@error_code@std@@QEBAHXZ ENDP			; std::error_code::value
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ??0error_code@std@@QEAA@HAEBVerror_category@1@@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
_Cat$ = 240
??0error_code@std@@QEAA@HAEBVerror_category@1@@Z PROC	; std::error_code::error_code, COMDAT

; 114  :     error_code(int _Val, const error_category& _Cat) noexcept

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003f	90		 npad	 1

; 115  :         : _Myval(_Val), _Mycat(&_Cat) { // construct from error code and category

  00040	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	8b 8d e8 00 00
	00		 mov	 ecx, DWORD PTR _Val$[rbp]
  0004d	89 08		 mov	 DWORD PTR [rax], ecx
  0004f	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Cat$[rbp]
  0005d	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 116  :     }

  00061	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00068	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ENDP	; std::error_code::error_code
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ??8error_category@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv67 = 192
this$ = 240
_Right$ = 248
??8error_category@std@@QEBA_NAEBV01@@Z PROC		; std::error_category::operator==, COMDAT

; 82   :     _NODISCARD bool operator==(const error_category& _Right) const noexcept { // compare categories for equality

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 83   :         return _Addr == _Right._Addr;

  0003c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004a	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0004e	48 39 48 08	 cmp	 QWORD PTR [rax+8], rcx
  00052	75 0c		 jne	 SHORT $LN3@operator
  00054	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv67[rbp], 1
  0005e	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00060	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv67[rbp], 0
$LN4@operator:
  0006a	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv67[rbp]

; 84   :     }

  00071	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
??8error_category@std@@QEBA_NAEBV01@@Z ENDP		; std::error_category::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z
_TEXT	SEGMENT
tv74 = 192
this$ = 240
_Code$ = 248
_Errval$ = 256
?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z PROC ; std::error_category::equivalent, COMDAT

; 282  :     noexcept { // test if conditions same for this category

$LN5:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 283  :     return *this == _Code.category() && _Code.value() == _Errval;

  00041	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Code$[rbp]
  00048	e8 00 00 00 00	 call	 ?category@error_code@std@@QEBAAEBVerror_category@2@XZ ; std::error_code::category
  0004d	90		 npad	 1
  0004e	48 8b d0	 mov	 rdx, rax
  00051	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00058	e8 00 00 00 00	 call	 ??8error_category@std@@QEBA_NAEBV01@@Z ; std::error_category::operator==
  0005d	90		 npad	 1
  0005e	0f b6 c0	 movzx	 eax, al
  00061	85 c0		 test	 eax, eax
  00063	74 21		 je	 SHORT $LN3@equivalent
  00065	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Code$[rbp]
  0006c	e8 00 00 00 00	 call	 ?value@error_code@std@@QEBAHXZ ; std::error_code::value
  00071	90		 npad	 1
  00072	3b 85 00 01 00
	00		 cmp	 eax, DWORD PTR _Errval$[rbp]
  00078	75 0c		 jne	 SHORT $LN3@equivalent
  0007a	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv74[rbp], 1
  00084	eb 0a		 jmp	 SHORT $LN4@equivalent
$LN3@equivalent:
  00086	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv74[rbp], 0
$LN4@equivalent:
  00090	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv74[rbp]

; 284  : }

  00097	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0009e	5f		 pop	 rdi
  0009f	5d		 pop	 rbp
  000a0	c3		 ret	 0
?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z
_TEXT	SEGMENT
$T1 = 200
tv73 = 232
this$ = 272
_Errval$ = 280
_Cond$ = 288
?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z PROC ; std::error_category::equivalent, COMDAT

; 277  :     noexcept { // test if error code same condition

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003f	90		 npad	 1

; 278  :     return default_error_condition(_Errval) == _Cond;

  00040	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004a	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0004e	48 89 85 e8 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  00055	44 8b 85 18 01
	00 00		 mov	 r8d, DWORD PTR _Errval$[rbp]
  0005c	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00063	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006a	ff 95 e8 00 00
	00		 call	 QWORD PTR tv73[rbp]
  00070	90		 npad	 1
  00071	48 8b 95 20 01
	00 00		 mov	 rdx, QWORD PTR _Cond$[rbp]
  00078	48 8b c8	 mov	 rcx, rax
  0007b	e8 00 00 00 00	 call	 ??8std@@YA_NAEBVerror_condition@0@0@Z ; std::operator==
  00080	90		 npad	 1

; 279  : }

  00081	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  00088	5f		 pop	 rdi
  00089	5d		 pop	 rbp
  0008a	c3		 ret	 0
?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z ENDP ; std::error_category::equivalent
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z
_TEXT	SEGMENT
this$ = 224
__$ReturnUdt$ = 232
_Errval$ = 240
?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z PROC ; std::error_category::default_error_condition, COMDAT

; 272  :     noexcept { // make error_condition for error code

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 273  :     return error_condition(_Errval, *this);

  00041	4c 8b 85 e0 00
	00 00		 mov	 r8, QWORD PTR this$[rbp]
  00048	8b 95 f0 00 00
	00		 mov	 edx, DWORD PTR _Errval$[rbp]
  0004e	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00055	e8 00 00 00 00	 call	 ??0error_condition@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_condition::error_condition
  0005a	90		 npad	 1
  0005b	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 274  : }

  00062	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z ENDP ; std::error_category::default_error_condition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ??1error_category@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1error_category@std@@UEAA@XZ PROC			; std::error_category::~error_category, COMDAT

; 70   :     virtual ~error_category() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003e	5f		 pop	 rdi
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??1error_category@std@@UEAA@XZ ENDP			; std::error_category::~error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ??0error_category@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0error_category@std@@QEAA@XZ PROC			; std::error_category::error_category, COMDAT

; 66   :     /* constexpr */ error_category() noexcept { // TRANSITION, ABI

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 67   :         _Addr = reinterpret_cast<uintptr_t>(this);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00045	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 68   :     }

  00049	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00050	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
??0error_category@std@@QEAA@XZ ENDP			; std::error_category::error_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ?generic_category@std@@YAAEBVerror_category@1@XZ
_TEXT	SEGMENT
?generic_category@std@@YAAEBVerror_category@1@XZ PROC	; std::generic_category, COMDAT

; 478  : _NODISCARD inline const error_category& generic_category() noexcept { // get generic_category

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	90		 npad	 1

; 479  :     return _Immortalize<_Generic_error_category>();

  0002b	e8 00 00 00 00	 call	 ??$_Immortalize@V_Generic_error_category@std@@@std@@YAAEAV_Generic_error_category@0@XZ ; std::_Immortalize<std::_Generic_error_category>
  00030	90		 npad	 1

; 480  : }

  00031	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00038	5f		 pop	 rdi
  00039	5d		 pop	 rbp
  0003a	c3		 ret	 0
?generic_category@std@@YAAEBVerror_category@1@XZ ENDP	; std::generic_category
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\system_error
;	COMDAT ?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 224
_Errno$ = 232
?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z PROC ; std::make_error_code, COMDAT

; 293  : _NODISCARD inline error_code make_error_code(errc _Errno) noexcept { // make an error_code

$LN3:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EF713F69_system_error
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	90		 npad	 1

; 294  :     return error_code(static_cast<int>(_Errno), generic_category());

  0003b	e8 00 00 00 00	 call	 ?generic_category@std@@YAAEBVerror_category@1@XZ ; std::generic_category
  00040	90		 npad	 1
  00041	4c 8b c0	 mov	 r8, rax
  00044	8b 95 e8 00 00
	00		 mov	 edx, DWORD PTR _Errno$[rbp]
  0004a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00051	e8 00 00 00 00	 call	 ??0error_code@std@@QEAA@HAEBVerror_category@1@@Z ; std::error_code::error_code
  00056	90		 npad	 1
  00057	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 295  : }

  0005e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00065	5f		 pop	 rdi
  00066	5d		 pop	 rbp
  00067	c3		 ret	 0
?make_error_code@std@@YA?AVerror_code@1@W4errc@1@@Z ENDP ; std::make_error_code
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xcall_once.h
;	COMDAT ??0once_flag@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0once_flag@std@@QEAA@XZ PROC				; std::once_flag::once_flag, COMDAT

; 18   :     constexpr once_flag() noexcept : _Opaque(nullptr) {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__502C2D49_xcall_once@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00045	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00053	5f		 pop	 rdi
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
??0once_flag@std@@QEAA@XZ ENDP				; std::once_flag::once_flag
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gruntime_error@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gruntime_error@std@@UEAAPEAXI@Z PROC			; std::runtime_error::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1runtime_error@std@@UEAA@XZ
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gruntime_error@std@@UEAAPEAXI@Z ENDP			; std::runtime_error::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0runtime_error@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0runtime_error@std@@QEAA@AEBV01@@Z PROC		; std::runtime_error::runtime_error, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7runtime_error@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx
  00053	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0runtime_error@std@@QEAA@AEBV01@@Z ENDP		; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1runtime_error@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1runtime_error@std@@UEAA@XZ PROC			; std::runtime_error::~runtime_error, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1runtime_error@std@@UEAA@XZ ENDP			; std::runtime_error::~runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\stdexcept
;	COMDAT ??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z PROC ; std::runtime_error::runtime_error, COMDAT

; 127  :     explicit runtime_error(const string& _Message) : _Mybase(_Message.c_str()) { // construct from message string

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2D341E22_stdexcept
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Message$[rbp]
  00042	e8 00 00 00 00	 call	 ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
  00047	48 8b d0	 mov	 rdx, rax
  0004a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00051	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBD@Z ; std::exception::exception
  00056	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7runtime_error@std@@6B@
  00064	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00067	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00075	5f		 pop	 rdi
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
??0runtime_error@std@@QEAA@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z ENDP ; std::runtime_error::runtime_error
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00031	48 8b c8	 mov	 rcx, rax
  00034	e8 00 00 00 00	 call	 ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
  00039	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00040	5f		 pop	 rdi
  00041	5d		 pop	 rbp
  00042	c3		 ret	 0
??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::~_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1425 :         return *this;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1426 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ PROC ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :         return *this;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1422 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ENDP ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4198 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 4199 :         return _Mypair._Get_first();

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEBAAEBV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
  00046	90		 npad	 1

; 4200 :     }

  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal, COMDAT

; 4194 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 4195 :         return _Mypair._Get_first();

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAAAEAV?$allocator@D@2@XZ ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Get_first
  00046	90		 npad	 1

; 4196 :     }

  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z
_TEXT	SEGMENT
tv79 = 192
this$ = 240
_Right$ = 248
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators, COMDAT

; 4190 :     void _Swap_proxy_and_iterators(basic_string& _Right) { // swap all iterators

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4191 :         _Mypair._Myval2._Swap_proxy_and_iterators(_Right._Mypair._Myval2);

  0003b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  00049	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00050	48 8b d0	 mov	 rdx, rax
  00053	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv79[rbp]
  0005a	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ; std::_Container_base12::_Swap_proxy_and_iterators

; 4192 :     }

  0005f	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen, COMDAT

; 4180 :     [[noreturn]] static void _Xlen() { // report a length_error

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4181 :         _Xlength_error("string too long");

  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BA@JFNIOLAK@string?5too?5long@
  00031	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlen:

; 4182 :     }

  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?_Xlen@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Xlen
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
_Ptr$1 = 8
_Al$2 = 40
$T3 = 260
this$ = 320
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate, COMDAT

; 4164 :     void _Tidy_deallocate() noexcept { // initialize buffer, deallocating any storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 4165 :         _Mypair._Myval2._Orphan_all();

  00037	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  00046	90		 npad	 1

; 4166 :         if (_Mypair._Myval2._Large_string_engaged()) {

  00047	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004e	48 8b c8	 mov	 rcx, rax
  00051	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00056	90		 npad	 1
  00057	0f b6 c0	 movzx	 eax, al
  0005a	85 c0		 test	 eax, eax
  0005c	74 53		 je	 SHORT $LN2@Tidy_deall

; 4167 :             const pointer _Ptr = _Mypair._Myval2._Bx._Ptr;

  0005e	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00065	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00069	48 89 45 08	 mov	 QWORD PTR _Ptr$1[rbp], rax

; 4168 :             auto& _Al          = _Getal();

  0006d	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00074	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00079	90		 npad	 1
  0007a	48 89 45 28	 mov	 QWORD PTR _Al$2[rbp], rax

; 4169 :             _Destroy_in_place(_Mypair._Myval2._Bx._Ptr);

  0007e	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00085	48 83 c0 08	 add	 rax, 8
  00089	48 8b c8	 mov	 rcx, rax
  0008c	e8 00 00 00 00	 call	 ??$_Destroy_in_place@PEAD@std@@YAXAEAPEAD@Z ; std::_Destroy_in_place<char *>
  00091	90		 npad	 1

; 4170 :             _Al.deallocate(_Ptr, _Mypair._Myval2._Myres + 1);

  00092	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00099	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0009d	48 ff c0	 inc	 rax
  000a0	4c 8b c0	 mov	 r8, rax
  000a3	48 8b 55 08	 mov	 rdx, QWORD PTR _Ptr$1[rbp]
  000a7	48 8b 4d 28	 mov	 rcx, QWORD PTR _Al$2[rbp]
  000ab	e8 00 00 00 00	 call	 ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ; std::allocator<char>::deallocate
  000b0	90		 npad	 1
$LN2@Tidy_deall:

; 4171 :         }
; 4172 : 
; 4173 :         _Mypair._Myval2._Mysize = 0;

  000b1	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b8	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4174 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  000c0	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000c7	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4175 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4176 :         // write can alias this
; 4177 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  000cf	c6 85 04 01 00
	00 00		 mov	 BYTE PTR $T3[rbp], 0
  000d6	b8 01 00 00 00	 mov	 eax, 1
  000db	48 6b c0 00	 imul	 rax, rax, 0
  000df	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e6	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  000eb	48 8d 95 04 01
	00 00		 lea	 rdx, QWORD PTR $T3[rbp]
  000f2	48 8b c8	 mov	 rcx, rax
  000f5	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
  000fa	90		 npad	 1

; 4178 :     }

  000fb	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  00102	5f		 pop	 rdi
  00103	5d		 pop	 rbp
  00104	c3		 ret	 0
?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ
_TEXT	SEGMENT
$T1 = 196
this$ = 256
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init, COMDAT

; 4156 :     void _Tidy_init() noexcept { // initialize basic_string data members

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 4157 :         _Mypair._Myval2._Mysize = 0;

  00037	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 4158 :         _Mypair._Myval2._Myres  = _BUF_SIZE - 1;

  00046	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 4159 :         // the _Traits::assign is last so the codegen doesn't think the char
; 4160 :         // write can alias this
; 4161 :         _Traits::assign(_Mypair._Myval2._Bx._Buf[0], _Elem());

  00055	c6 85 c4 00 00
	00 00		 mov	 BYTE PTR $T1[rbp], 0
  0005c	b8 01 00 00 00	 mov	 eax, 1
  00061	48 6b c0 00	 imul	 rax, rax, 0
  00065	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006c	48 8d 44 01 08	 lea	 rax, QWORD PTR [rcx+rax+8]
  00071	48 8d 95 c4 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00078	48 8b c8	 mov	 rcx, rax
  0007b	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign
  00080	90		 npad	 1

; 4162 :     }

  00081	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00088	5f		 pop	 rdi
  00089	5d		 pop	 rbp
  0008a	c3		 ret	 0
?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
tv76 = 192
tv74 = 200
this$ = 240
_Requested$ = 248
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4077 :     _NODISCARD size_type _Calculate_growth(const size_type _Requested) const noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 4078 :         return _Calculate_growth(_Requested, _Mypair._Myval2._Myres, max_size());

  0003c	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00043	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  00048	90		 npad	 1
  00049	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  00050	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0005b	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv74[rbp], rax
  00062	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv76[rbp]
  00069	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv74[rbp]
  00070	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Requested$[rbp]
  00077	e8 00 00 00 00	 call	 ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
  0007c	90		 npad	 1

; 4079 :     }

  0007d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00084	5f		 pop	 rdi
  00085	5d		 pop	 rbp
  00086	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBA_K_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z
_TEXT	SEGMENT
_Masked$ = 8
$T4 = 232
__$ArrayPad$ = 248
_Requested$ = 288
_Old$ = 296
_Max$ = 304
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth, COMDAT

; 4064 :         const size_type _Requested, const size_type _Old, const size_type _Max) noexcept {

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c5	 xor	 rax, rbp
  0003e	48 89 85 f8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00045	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  0004c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00051	90		 npad	 1

; 4065 :         const size_type _Masked = _Requested | _ALLOC_MASK;

  00052	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR _Requested$[rbp]
  00059	48 83 c8 0f	 or	 rax, 15
  0005d	48 89 45 08	 mov	 QWORD PTR _Masked$[rbp], rax

; 4066 :         if (_Masked > _Max) { // the mask overflows, settle for max_size()

  00061	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR _Max$[rbp]
  00068	48 39 45 08	 cmp	 QWORD PTR _Masked$[rbp], rax
  0006c	76 09		 jbe	 SHORT $LN2@Calculate_

; 4067 :             return _Max;

  0006e	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR _Max$[rbp]
  00075	eb 69		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 4068 :         }
; 4069 : 
; 4070 :         if (_Old > _Max - _Old / 2) { // similarly, geometric overflows

  00077	33 d2		 xor	 edx, edx
  00079	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Old$[rbp]
  00080	b9 02 00 00 00	 mov	 ecx, 2
  00085	48 f7 f1	 div	 rcx
  00088	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _Max$[rbp]
  0008f	48 2b c8	 sub	 rcx, rax
  00092	48 8b c1	 mov	 rax, rcx
  00095	48 39 85 28 01
	00 00		 cmp	 QWORD PTR _Old$[rbp], rax
  0009c	76 09		 jbe	 SHORT $LN3@Calculate_

; 4071 :             return _Max;

  0009e	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR _Max$[rbp]
  000a5	eb 39		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 4072 :         }
; 4073 : 
; 4074 :         return _Max_value(_Masked, _Old + _Old / 2);

  000a7	33 d2		 xor	 edx, edx
  000a9	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Old$[rbp]
  000b0	b9 02 00 00 00	 mov	 ecx, 2
  000b5	48 f7 f1	 div	 rcx
  000b8	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Old$[rbp]
  000bf	48 03 c8	 add	 rcx, rax
  000c2	48 8b c1	 mov	 rax, rcx
  000c5	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000cc	48 8d 95 e8 00
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  000d3	48 8d 4d 08	 lea	 rcx, QWORD PTR _Masked$[rbp]
  000d7	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  000dc	90		 npad	 1
  000dd	48 8b 00	 mov	 rax, QWORD PTR [rax]
$LN1@Calculate_:

; 4075 :     }

  000e0	48 8b f8	 mov	 rdi, rax
  000e3	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000e7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z$rtcFrameData
  000ee	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f3	90		 npad	 1
  000f4	48 8b c7	 mov	 rax, rdi
  000f7	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000fe	48 33 cd	 xor	 rcx, rbp
  00101	e8 00 00 00 00	 call	 __security_check_cookie
  00106	90		 npad	 1
  00107	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0010e	5f		 pop	 rdi
  0010f	5d		 pop	 rbp
  00110	c3		 ret	 0
?_Calculate_growth@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@CA_K_K00@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv67 = 192
this$ = 240
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty, COMDAT

; 3622 :     _NODISCARD bool empty() const noexcept { // test if sequence is empty

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 3623 :         return size() == 0;

  00037	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
  00043	90		 npad	 1
  00044	48 85 c0	 test	 rax, rax
  00047	75 0c		 jne	 SHORT $LN3@empty
  00049	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv67[rbp], 1
  00053	eb 0a		 jmp	 SHORT $LN4@empty
$LN3@empty:
  00055	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv67[rbp], 0
$LN4@empty:
  0005f	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv67[rbp]

; 3624 :     }

  00066	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0006d	5f		 pop	 rdi
  0006e	5d		 pop	 rbp
  0006f	c3		 ret	 0
?empty@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_NXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::empty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
_Alloc_max$ = 8
_Storage_max$ = 40
$T4 = 264
$T5 = 296
$T6 = 328
__$ArrayPad$ = 344
this$ = 384
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size, COMDAT

; 3570 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 58 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 3571 :         const size_type _Alloc_max   = _Alty_traits::max_size(_Getal());

  00048	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004f	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00054	90		 npad	 1
  00055	48 8b c8	 mov	 rcx, rax
  00058	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ; std::_Default_allocator_traits<std::allocator<char> >::max_size
  0005d	90		 npad	 1
  0005e	48 89 45 08	 mov	 QWORD PTR _Alloc_max$[rbp], rax

; 3572 :         const size_type _Storage_max = // can always store small string

  00062	48 c7 85 08 01
	00 00 10 00 00
	00		 mov	 QWORD PTR $T4[rbp], 16
  0006d	48 8d 95 08 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00074	48 8d 4d 08	 lea	 rcx, QWORD PTR _Alloc_max$[rbp]
  00078	e8 00 00 00 00	 call	 ??$_Max_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Max_value<unsigned __int64>
  0007d	90		 npad	 1
  0007e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00081	48 89 45 28	 mov	 QWORD PTR _Storage_max$[rbp], rax

; 3573 :             _Max_value(_Alloc_max, static_cast<size_type>(_BUF_SIZE));
; 3574 :         return _Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00085	48 8b 45 28	 mov	 rax, QWORD PTR _Storage_max$[rbp]
  00089	48 ff c8	 dec	 rax
  0008c	48 89 85 28 01
	00 00		 mov	 QWORD PTR $T5[rbp], rax
  00093	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00098	90		 npad	 1
  00099	48 89 85 48 01
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  000a0	48 8d 95 28 01
	00 00		 lea	 rdx, QWORD PTR $T5[rbp]
  000a7	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR $T6[rbp]
  000ae	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  000b3	90		 npad	 1
  000b4	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 3575 :             _Storage_max - 1 // -1 is for null terminator and/or npos
; 3576 :         );
; 3577 :     }

  000b7	48 8b f8	 mov	 rdi, rax
  000ba	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ$rtcFrameData
  000c5	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000ca	90		 npad	 1
  000cb	48 8b c7	 mov	 rax, rdi
  000ce	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000d5	48 33 cd	 xor	 rcx, rbp
  000d8	e8 00 00 00 00	 call	 __security_check_cookie
  000dd	90		 npad	 1
  000de	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  000e5	5f		 pop	 rdi
  000e6	5d		 pop	 rbp
  000e7	c3		 ret	 0
?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ
_TEXT	SEGMENT
this$ = 224
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size, COMDAT

; 3566 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 3567 :         return _Mypair._Myval2._Mysize;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]

; 3568 :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
this$ = 224
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str, COMDAT

; 3548 :     _NODISCARD _Ret_z_ const _Elem* c_str() const noexcept { // return pointer to null-terminated immutable array

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 3549 :         return _Mypair._Myval2._Myptr();

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00046	90		 npad	 1

; 3550 :     }

  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?c_str@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBAPEBDXZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::c_str
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2860 :     basic_string& assign(_In_z_ const _Elem* const _Ptr) { // assign [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2861 :         return assign(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00042	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  0004f	4c 8b c0	 mov	 r8, rax
  00052	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00059	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2862 :     }

  00065	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_ptr$1 = 8
$T2 = 228
$T3 = 260
this$ = 320
_Ptr$ = 328
_Count$ = 336
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign, COMDAT

; 2841 :     basic_string& assign(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2842 :         // assign [_Ptr, _Ptr + _Count)
; 2843 :         if (_Count <= _Mypair._Myval2._Myres) {

  00040	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0004b	48 39 85 50 01
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00052	77 6c		 ja	 SHORT $LN2@assign

; 2844 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  00054	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00063	48 89 45 08	 mov	 QWORD PTR _Old_ptr$1[rbp], rax

; 2845 :             _Mypair._Myval2._Mysize = _Count;

  00067	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006e	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00075	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2846 :             _Traits::move(_Old_ptr, _Ptr, _Count);

  00079	4c 8b 85 50 01
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  00080	48 8b 95 48 01
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00087	48 8b 4d 08	 mov	 rcx, QWORD PTR _Old_ptr$1[rbp]
  0008b	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2847 :             _Traits::assign(_Old_ptr[_Count], _Elem());

  00090	c6 85 e4 00 00
	00 00		 mov	 BYTE PTR $T2[rbp], 0
  00097	48 8b 85 50 01
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  0009e	48 8b 4d 08	 mov	 rcx, QWORD PTR _Old_ptr$1[rbp]
  000a2	48 03 c8	 add	 rcx, rax
  000a5	48 8b c1	 mov	 rax, rcx
  000a8	48 8d 95 e4 00
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  000af	48 8b c8	 mov	 rcx, rax
  000b2	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2848 :             return *this;

  000b7	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000be	eb 22		 jmp	 SHORT $LN1@assign
$LN2@assign:

; 2849 :         }
; 2850 : 
; 2851 :         return _Reallocate_for(

  000c0	4c 8b 8d 48 01
	00 00		 mov	 r9, QWORD PTR _Ptr$[rbp]
  000c7	44 0f b6 85 04
	01 00 00	 movzx	 r8d, BYTE PTR $T3[rbp]
  000cf	48 8b 95 50 01
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  000d6	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000dd	e8 00 00 00 00	 call	 ??$_Reallocate_for@V<lambda_1>@?1??assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??assign@01@QEAAAEAV01@QEBD0@Z@PEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_for<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign'::`2'::<lambda_1>,char const *>
$LN1@assign:

; 2852 :             _Count,
; 2853 :             [](_Elem* const _New_ptr, const size_type _Count, const _Elem* const _Ptr) {
; 2854 :                 _Traits::copy(_New_ptr, _Ptr, _Count);
; 2855 :                 _Traits::assign(_New_ptr[_Count], _Elem());
; 2856 :             },
; 2857 :             _Ptr);
; 2858 :     }

  000e2	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  000e9	5f		 pop	 rdi
  000ea	5d		 pop	 rbp
  000eb	c3		 ret	 0
?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2756 :     basic_string& append(_In_z_ const _Elem* const _Ptr) { // append [_Ptr, <null>)

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2757 :         return append(_Ptr, _Convert_size<size_type>(_Traits::length(_Ptr)));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00042	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$_Convert_size@_K@std@@YA_K_K@Z ; std::_Convert_size<unsigned __int64>
  0004f	4c 8b c0	 mov	 r8, rax
  00052	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00059	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00060	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2758 :     }

  00065	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006c	5f		 pop	 rdi
  0006d	5d		 pop	 rbp
  0006e	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
_TEXT	SEGMENT
_Old_size$ = 8
_Old_ptr$1 = 40
$T2 = 260
$T3 = 292
this$ = 352
_Ptr$ = 360
_Count$ = 368
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2734 :     basic_string& append(_In_reads_(_Count) const _Elem* const _Ptr, _CRT_GUARDOVERFLOW const size_type _Count) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00018	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2735 :         // append [_Ptr, _Ptr + _Count)
; 2736 :         const size_type _Old_size = _Mypair._Myval2._Mysize;

  00040	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0004b	48 89 45 08	 mov	 QWORD PTR _Old_size$[rbp], rax

; 2737 :         if (_Count <= _Mypair._Myval2._Myres - _Old_size) {

  0004f	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00056	48 8b 4d 08	 mov	 rcx, QWORD PTR _Old_size$[rbp]
  0005a	48 8b 40 20	 mov	 rax, QWORD PTR [rax+32]
  0005e	48 2b c1	 sub	 rax, rcx
  00061	48 39 85 70 01
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00068	0f 87 8d 00 00
	00		 ja	 $LN2@append

; 2738 :             _Mypair._Myval2._Mysize = _Old_size + _Count;

  0006e	48 8b 85 70 01
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  00075	48 8b 4d 08	 mov	 rcx, QWORD PTR _Old_size$[rbp]
  00079	48 03 c8	 add	 rcx, rax
  0007c	48 8b c1	 mov	 rax, rcx
  0007f	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00086	48 89 41 18	 mov	 QWORD PTR [rcx+24], rax

; 2739 :             _Elem* const _Old_ptr   = _Mypair._Myval2._Myptr();

  0008a	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00091	48 8b c8	 mov	 rcx, rax
  00094	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  00099	48 89 45 28	 mov	 QWORD PTR _Old_ptr$1[rbp], rax

; 2740 :             _Traits::move(_Old_ptr + _Old_size, _Ptr, _Count);

  0009d	48 8b 45 08	 mov	 rax, QWORD PTR _Old_size$[rbp]
  000a1	48 8b 4d 28	 mov	 rcx, QWORD PTR _Old_ptr$1[rbp]
  000a5	48 03 c8	 add	 rcx, rax
  000a8	48 8b c1	 mov	 rax, rcx
  000ab	4c 8b 85 70 01
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  000b2	48 8b 95 68 01
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  000b9	48 8b c8	 mov	 rcx, rax
  000bc	e8 00 00 00 00	 call	 ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::move

; 2741 :             _Traits::assign(_Old_ptr[_Old_size + _Count], _Elem());

  000c1	c6 85 04 01 00
	00 00		 mov	 BYTE PTR $T2[rbp], 0
  000c8	48 8b 85 70 01
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  000cf	48 8b 4d 08	 mov	 rcx, QWORD PTR _Old_size$[rbp]
  000d3	48 03 c8	 add	 rcx, rax
  000d6	48 8b c1	 mov	 rax, rcx
  000d9	48 8b 4d 28	 mov	 rcx, QWORD PTR _Old_ptr$1[rbp]
  000dd	48 03 c8	 add	 rcx, rax
  000e0	48 8b c1	 mov	 rax, rcx
  000e3	48 8d 95 04 01
	00 00		 lea	 rdx, QWORD PTR $T2[rbp]
  000ea	48 8b c8	 mov	 rcx, rax
  000ed	e8 00 00 00 00	 call	 ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ; std::_Narrow_char_traits<char,int>::assign

; 2742 :             return *this;

  000f2	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000f9	eb 2e		 jmp	 SHORT $LN1@append
$LN2@append:

; 2743 :         }
; 2744 : 
; 2745 :         return _Reallocate_grow_by(

  000fb	48 8b 85 70 01
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  00102	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00107	4c 8b 8d 68 01
	00 00		 mov	 r9, QWORD PTR _Ptr$[rbp]
  0010e	44 0f b6 85 24
	01 00 00	 movzx	 r8d, BYTE PTR $T3[rbp]
  00116	48 8b 95 70 01
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  0011d	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00124	e8 00 00 00 00	 call	 ??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Reallocate_grow_by<`std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append'::`2'::<lambda_1>,char const *,unsigned __int64>
$LN1@append:

; 2746 :             _Count,
; 2747 :             [](_Elem* const _New_ptr, const _Elem* const _Old_ptr, const size_type _Old_size, const _Elem* const _Ptr,
; 2748 :                 const size_type _Count) {
; 2749 :                 _Traits::copy(_New_ptr, _Old_ptr, _Old_size);
; 2750 :                 _Traits::copy(_New_ptr + _Old_size, _Ptr, _Count);
; 2751 :                 _Traits::assign(_New_ptr[_Old_size + _Count], _Elem());
; 2752 :             },
; 2753 :             _Ptr, _Count);
; 2754 :     }

  00129	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  00130	5f		 pop	 rdi
  00131	5d		 pop	 rbp
  00132	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z
_TEXT	SEGMENT
tv78 = 192
tv76 = 200
this$ = 240
_Right$ = 248
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append, COMDAT

; 2708 :     basic_string& append(const basic_string& _Right) { // append _Right

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2709 :         return append(_Right._Mypair._Myval2._Myptr(), _Right._Mypair._Myval2._Mysize);

  0003b	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00042	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00046	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0004d	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00054	48 8b c8	 mov	 rcx, rax
  00057	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0005c	48 89 85 c8 00
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  00063	4c 8b 85 c0 00
	00 00		 mov	 r8, QWORD PTR tv78[rbp]
  0006a	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR tv76[rbp]
  00071	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00078	e8 00 00 00 00	 call	 ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append

; 2710 :     }

  0007d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00084	5f		 pop	 rdi
  00085	5d		 pop	 rbp
  00086	c3		 ret	 0
?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@AEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::append
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S11$ = 36
_To_delete$ = 72
__$ArrayPad$ = 280
this$ = 320
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2597 :     ~basic_string() noexcept { // destroy the string

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 18 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 2598 :         _Tidy_deallocate();

  00048	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004f	e8 00 00 00 00	 call	 ?_Tidy_deallocate@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_deallocate
  00054	90		 npad	 1

; 2599 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2600 :         auto&& _Alproxy          = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00055	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00061	90		 npad	 1
  00062	48 8b d0	 mov	 rdx, rax
  00065	48 8d 4d 24	 lea	 rcx, QWORD PTR $S11$[rbp]
  00069	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  0006e	90		 npad	 1
  0006f	48 8d 45 24	 lea	 rax, QWORD PTR $S11$[rbp]
  00073	48 89 45 08	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 2601 :         const auto _To_delete    = _Mypair._Myval2._Myproxy;

  00077	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00081	48 89 45 48	 mov	 QWORD PTR _To_delete$[rbp], rax

; 2602 :         _Mypair._Myval2._Myproxy = nullptr;

  00085	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008c	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 2603 :         _Delete_plain_internal(_Alproxy, _To_delete);

  00093	48 8b 55 48	 mov	 rdx, QWORD PTR _To_delete$[rbp]
  00097	48 8b 4d 08	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  0009b	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  000a0	90		 npad	 1

; 2604 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2605 :     }

  000a1	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a8	48 8b c8	 mov	 rcx, rax
  000ab	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  000b0	90		 npad	 1
  000b1	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000b5	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ$rtcFrameData
  000bc	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000c1	90		 npad	 1
  000c2	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000c9	48 33 cd	 xor	 rcx, rbp
  000cc	e8 00 00 00 00	 call	 __security_check_cookie
  000d1	90		 npad	 1
  000d2	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  000d9	5f		 pop	 rdi
  000da	5d		 pop	 rbp
  000db	c3		 ret	 0
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::~basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_Right_data$ = 8
_Right_size$ = 40
_Right_ptr$ = 72
_My_data$ = 104
_Al$ = 136
_New_capacity$ = 168
_New_array$ = 200
$T4 = 424
$T5 = 456
tv131 = 472
__$ArrayPad$ = 480
this$ = 528
_Right$ = 536
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents, COMDAT

; 2525 :     void _Construct_lv_contents(const basic_string& _Right) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 18 02
	00 00		 sub	 rsp, 536		; 00000218H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 86 00 00 00	 mov	 ecx, 134		; 00000086H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 38
	02 00 00	 mov	 rcx, QWORD PTR [rsp+568]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 e0 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2526 :         // assign by copying data stored in _Right
; 2527 :         // pre: this != &_Right
; 2528 :         // pre: *this owns no memory, iterators orphaned (note:
; 2529 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2530 :         auto& _Right_data             = _Right._Mypair._Myval2;

  0004c	48 8b 85 18 02
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00053	48 89 45 08	 mov	 QWORD PTR _Right_data$[rbp], rax

; 2531 :         const size_type _Right_size   = _Right_data._Mysize;

  00057	48 8b 45 08	 mov	 rax, QWORD PTR _Right_data$[rbp]
  0005b	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  0005f	48 89 45 28	 mov	 QWORD PTR _Right_size$[rbp], rax

; 2532 :         const _Elem* const _Right_ptr = _Right_data._Myptr();

  00063	48 8b 4d 08	 mov	 rcx, QWORD PTR _Right_data$[rbp]
  00067	e8 00 00 00 00	 call	 ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ; std::_String_val<std::_Simple_types<char> >::_Myptr
  0006c	48 89 45 48	 mov	 QWORD PTR _Right_ptr$[rbp], rax

; 2533 :         auto& _My_data                = _Mypair._Myval2;

  00070	48 8b 85 10 02
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00077	48 89 45 68	 mov	 QWORD PTR _My_data$[rbp], rax

; 2534 :         if (_Right_size < _BUF_SIZE) { // stay small, don't allocate

  0007b	48 83 7d 28 10	 cmp	 QWORD PTR _Right_size$[rbp], 16
  00080	73 37		 jae	 SHORT $LN2@Construct_

; 2535 :             _Traits::copy(_My_data._Bx._Buf, _Right_ptr, _BUF_SIZE);

  00082	48 8b 45 68	 mov	 rax, QWORD PTR _My_data$[rbp]
  00086	48 83 c0 08	 add	 rax, 8
  0008a	41 b8 10 00 00
	00		 mov	 r8d, 16
  00090	48 8b 55 48	 mov	 rdx, QWORD PTR _Right_ptr$[rbp]
  00094	48 8b c8	 mov	 rcx, rax
  00097	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2536 :             _My_data._Mysize = _Right_size;

  0009c	48 8b 45 68	 mov	 rax, QWORD PTR _My_data$[rbp]
  000a0	48 8b 4d 28	 mov	 rcx, QWORD PTR _Right_size$[rbp]
  000a4	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2537 :             _My_data._Myres  = _BUF_SIZE - 1;

  000a8	48 8b 45 68	 mov	 rax, QWORD PTR _My_data$[rbp]
  000ac	48 c7 40 20 0f
	00 00 00	 mov	 QWORD PTR [rax+32], 15

; 2538 :             return;

  000b4	e9 d4 00 00 00	 jmp	 $LN1@Construct_
$LN2@Construct_:

; 2539 :         }
; 2540 : 
; 2541 :         auto& _Al                     = _Getal();

  000b9	48 8b 8d 10 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000c0	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000c5	48 89 85 88 00
	00 00		 mov	 QWORD PTR _Al$[rbp], rax

; 2542 :         const size_type _New_capacity = _Min_value(_Right_size | _ALLOC_MASK, max_size());

  000cc	48 8b 8d 10 02
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000d3	e8 00 00 00 00	 call	 ?max_size@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::max_size
  000d8	48 89 85 a8 01
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  000df	48 8b 45 28	 mov	 rax, QWORD PTR _Right_size$[rbp]
  000e3	48 83 c8 0f	 or	 rax, 15
  000e7	48 89 85 c8 01
	00 00		 mov	 QWORD PTR $T5[rbp], rax
  000ee	48 8d 95 a8 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  000f5	48 8d 8d c8 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  000fc	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  00101	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00104	48 89 85 a8 00
	00 00		 mov	 QWORD PTR _New_capacity$[rbp], rax

; 2543 :         const pointer _New_array      = _Al.allocate(_New_capacity + 1); // throws

  0010b	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR _New_capacity$[rbp]
  00112	48 ff c0	 inc	 rax
  00115	48 8b d0	 mov	 rdx, rax
  00118	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  0011f	e8 00 00 00 00	 call	 ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ; std::allocator<char>::allocate
  00124	48 89 85 c8 00
	00 00		 mov	 QWORD PTR _New_array$[rbp], rax

; 2544 :         _Construct_in_place(_My_data._Bx._Ptr, _New_array);

  0012b	48 8b 45 68	 mov	 rax, QWORD PTR _My_data$[rbp]
  0012f	48 83 c0 08	 add	 rax, 8
  00133	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR _New_array$[rbp]
  0013a	48 8b c8	 mov	 rcx, rax
  0013d	e8 00 00 00 00	 call	 ??$_Construct_in_place@PEADAEBQEAD@std@@YAXAEAPEADAEBQEAD@Z ; std::_Construct_in_place<char *,char * const &>

; 2545 :         _Traits::copy(_Unfancy(_New_array), _Right_ptr, _Right_size + 1);

  00142	48 8b 45 28	 mov	 rax, QWORD PTR _Right_size$[rbp]
  00146	48 ff c0	 inc	 rax
  00149	48 89 85 d8 01
	00 00		 mov	 QWORD PTR tv131[rbp], rax
  00150	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR _New_array$[rbp]
  00157	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  0015c	48 8b 8d d8 01
	00 00		 mov	 rcx, QWORD PTR tv131[rbp]
  00163	4c 8b c1	 mov	 r8, rcx
  00166	48 8b 55 48	 mov	 rdx, QWORD PTR _Right_ptr$[rbp]
  0016a	48 8b c8	 mov	 rcx, rax
  0016d	e8 00 00 00 00	 call	 ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ; std::_Narrow_char_traits<char,int>::copy

; 2546 :         _My_data._Mysize = _Right_size;

  00172	48 8b 45 68	 mov	 rax, QWORD PTR _My_data$[rbp]
  00176	48 8b 4d 28	 mov	 rcx, QWORD PTR _Right_size$[rbp]
  0017a	48 89 48 18	 mov	 QWORD PTR [rax+24], rcx

; 2547 :         _My_data._Myres  = _New_capacity;

  0017e	48 8b 45 68	 mov	 rax, QWORD PTR _My_data$[rbp]
  00182	48 8b 8d a8 00
	00 00		 mov	 rcx, QWORD PTR _New_capacity$[rbp]
  00189	48 89 48 20	 mov	 QWORD PTR [rax+32], rcx
$LN1@Construct_:

; 2548 :     }

  0018d	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00191	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z$rtcFrameData
  00198	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0019d	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  001a4	48 33 cd	 xor	 rcx, rbp
  001a7	e8 00 00 00 00	 call	 __security_check_cookie
  001ac	48 8d a5 f8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+504]
  001b3	5f		 pop	 rdi
  001b4	5d		 pop	 rbp
  001b5	c3		 ret	 0
?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
__formal$ = 240
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents, COMDAT

; 2484 :     void _Take_contents(basic_string& _Right, true_type) noexcept {

$LN5:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 2485 :         // assign by stealing _Right's buffer, memcpy optimization
; 2486 :         // pre: this != &_Right
; 2487 :         // pre: allocator propagation (POCMA) from _Right, if necessary, is complete
; 2488 :         // pre: *this owns no memory, iterators orphaned (note:
; 2489 :         // _Buf/_Ptr/_Mysize/_Myres may be garbage init)
; 2490 : #if _ITERATOR_DEBUG_LEVEL != 0
; 2491 :         if (_Right._Mypair._Myval2._Large_string_engaged()) {

  00041	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00048	48 8b c8	 mov	 rcx, rax
  0004b	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00050	90		 npad	 1
  00051	0f b6 c0	 movzx	 eax, al
  00054	85 c0		 test	 eax, eax
  00056	74 16		 je	 SHORT $LN2@Take_conte

; 2492 :             // take ownership of _Right's iterators along with its buffer
; 2493 :             _Swap_proxy_and_iterators(_Right);

  00058	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  0005f	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00066	e8 00 00 00 00	 call	 ?_Swap_proxy_and_iterators@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Swap_proxy_and_iterators
  0006b	90		 npad	 1

; 2494 :         } else {

  0006c	eb 10		 jmp	 SHORT $LN3@Take_conte
$LN2@Take_conte:

; 2495 :             _Right._Mypair._Myval2._Orphan_all();

  0006e	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00075	48 8b c8	 mov	 rcx, rax
  00078	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0007d	90		 npad	 1
$LN3@Take_conte:

; 2496 :         }
; 2497 : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 2498 : 
; 2499 :         _Memcpy_val_from(_Right);

  0007e	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  00085	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008c	e8 00 00 00 00	 call	 ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
  00091	90		 npad	 1

; 2500 :         _Right._Tidy_init();

  00092	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00099	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init
  0009e	90		 npad	 1

; 2501 :     }

  0009f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000a6	5f		 pop	 rdi
  000a7	5d		 pop	 rbp
  000a8	c3		 ret	 0
?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z
_TEXT	SEGMENT
_My_data_mem$ = 8
_Right_data_mem$ = 40
this$ = 288
_Right$ = 296
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from, COMDAT

; 2475 :     void _Memcpy_val_from(const basic_string& _Right) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 2476 :         _STL_INTERNAL_CHECK(_Can_memcpy_val); // TRANSITION, if constexpr
; 2477 :         const auto _My_data_mem =

  0003c	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b c8	 mov	 rcx, rax
  00046	e8 00 00 00 00	 call	 ??$addressof@V?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEAV?$_String_val@U?$_Simple_types@D@std@@@0@AEAV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > >
  0004b	90		 npad	 1
  0004c	48 83 c0 08	 add	 rax, 8
  00050	48 89 45 08	 mov	 QWORD PTR _My_data_mem$[rbp], rax

; 2478 :             reinterpret_cast<unsigned char*>(_STD addressof(_Mypair._Myval2)) + _Memcpy_val_offset;
; 2479 :         const auto _Right_data_mem =

  00054	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  0005b	48 8b c8	 mov	 rcx, rax
  0005e	e8 00 00 00 00	 call	 ??$addressof@$$CBV?$_String_val@U?$_Simple_types@D@std@@@std@@@std@@YAPEBV?$_String_val@U?$_Simple_types@D@std@@@0@AEBV10@@Z ; std::addressof<std::_String_val<std::_Simple_types<char> > const >
  00063	90		 npad	 1
  00064	48 83 c0 08	 add	 rax, 8
  00068	48 89 45 28	 mov	 QWORD PTR _Right_data_mem$[rbp], rax

; 2480 :             reinterpret_cast<const unsigned char*>(_STD addressof(_Right._Mypair._Myval2)) + _Memcpy_val_offset;
; 2481 :         _CSTD memcpy(_My_data_mem, _Right_data_mem, _Memcpy_val_size);

  0006c	41 b8 20 00 00
	00		 mov	 r8d, 32			; 00000020H
  00072	48 8b 55 28	 mov	 rdx, QWORD PTR _Right_data_mem$[rbp]
  00076	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data_mem$[rbp]
  0007a	e8 00 00 00 00	 call	 memcpy
  0007f	90		 npad	 1

; 2482 :     }

  00080	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00087	5f		 pop	 rdi
  00088	5d		 pop	 rbp
  00089	c3		 ret	 0
?_Memcpy_val_from@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Memcpy_val_from
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 260
$T4 = 292
tv94 = 312
tv77 = 312
tv75 = 320
this$ = 368
_Right$ = 376
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2383 :     basic_string(basic_string&& _Right) noexcept : _Mypair(_One_then_variadic_args_t(), _STD move(_Right._Getal())) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 70 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  0004a	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00051	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00056	90		 npad	 1
  00057	48 8b c8	 mov	 rcx, rax
  0005a	e8 00 00 00 00	 call	 ??$move@AEAV?$allocator@D@std@@@std@@YA$$QEAV?$allocator@D@0@AEAV10@@Z ; std::move<std::allocator<char> &>
  0005f	90		 npad	 1
  00060	48 89 85 40 01
	00 00		 mov	 QWORD PTR tv75[rbp], rax
  00067	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  0006e	88 85 e4 00 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00074	4c 8b 85 40 01
	00 00		 mov	 r8, QWORD PTR tv75[rbp]
  0007b	0f b6 95 e4 00
	00 00		 movzx	 edx, BYTE PTR $T2[rbp]
  00082	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR tv77[rbp]
  00089	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  0008e	90		 npad	 1

; 2384 :         // construct by moving _Right
; 2385 :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

  0008f	48 8b 85 70 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00096	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv94[rbp], rax
  0009d	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000a4	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000a9	90		 npad	 1
  000aa	48 8b d0	 mov	 rdx, rax
  000ad	48 8d 8d 04 01
	00 00		 lea	 rcx, QWORD PTR $T3[rbp]
  000b4	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  000b9	90		 npad	 1
  000ba	48 8b d0	 mov	 rdx, rax
  000bd	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR tv94[rbp]
  000c4	e8 00 00 00 00	 call	 ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
  000c9	90		 npad	 1

; 2386 :         _Take_contents(_Right, bool_constant<_Can_memcpy_val>{});

  000ca	48 8d 85 24 01
	00 00		 lea	 rax, QWORD PTR $T4[rbp]
  000d1	48 8b f8	 mov	 rdi, rax
  000d4	33 c0		 xor	 eax, eax
  000d6	b9 01 00 00 00	 mov	 ecx, 1
  000db	f3 aa		 rep stosb
  000dd	44 0f b6 85 24
	01 00 00	 movzx	 r8d, BYTE PTR $T4[rbp]
  000e5	48 8b 95 78 01
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  000ec	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000f3	e8 00 00 00 00	 call	 ?_Take_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEAV12@U?$integral_constant@_N$00@2@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Take_contents
  000f8	90		 npad	 1

; 2387 :     }

  000f9	48 8b 85 70 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00100	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  00107	5f		 pop	 rdi
  00108	5d		 pop	 rbp
  00109	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@$$QEAV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_Alproxy$ = 8
$S13$ = 36
_Proxy$ = 72
$T5 = 308
tv69 = 328
__$ArrayPad$ = 336
this$ = 384
_Ptr$ = 392
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2297 :     basic_string(_In_z_ const _Elem* const _Ptr) : _Mypair(_Zero_then_variadic_args_t()) {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 50 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004c	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  0005a	0f b6 95 34 01
	00 00		 movzx	 edx, BYTE PTR $T5[rbp]
  00061	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR tv69[rbp]
  00068	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><>
  0006d	90		 npad	 1

; 2298 :         // construct from [_Ptr, <null>)
; 2299 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  0006e	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00075	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  0007a	48 8b d0	 mov	 rdx, rax
  0007d	48 8d 4d 24	 lea	 rcx, QWORD PTR $S13$[rbp]
  00081	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  00086	48 8d 45 24	 lea	 rax, QWORD PTR $S13$[rbp]
  0008a	48 89 45 08	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 2300 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  0008e	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00095	4c 8b c0	 mov	 r8, rax
  00098	48 8b 55 08	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  0009c	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000a0	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000a5	90		 npad	 1

; 2301 :         _Tidy_init();

  000a6	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000ad	e8 00 00 00 00	 call	 ?_Tidy_init@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXXZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Tidy_init

; 2302 :         assign(_Ptr);

  000b2	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  000b9	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000c0	e8 00 00 00 00	 call	 ?assign@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::assign

; 2303 :         _Proxy._Release();

  000c5	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000c9	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000ce	90		 npad	 1

; 2304 :     }

  000cf	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000d3	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000d8	90		 npad	 1
  000d9	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e0	48 8b f8	 mov	 rdi, rax
  000e3	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000e7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z$rtcFrameData
  000ee	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f3	48 8b c7	 mov	 rax, rdi
  000f6	48 8b 8d 50 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000fd	48 33 cd	 xor	 rcx, rbp
  00100	e8 00 00 00 00	 call	 __security_check_cookie
  00105	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  0010c	5f		 pop	 rdi
  0010d	5d		 pop	 rbp
  0010e	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S13$ = 36
_Proxy$ = 72
$T5 = 308
tv69 = 328
__$ArrayPad$ = 336
this$ = 384
_Ptr$ = 392
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S13$ = 36
_Proxy$ = 72
$T5 = 308
tv69 = 328
__$ArrayPad$ = 336
this$ = 384
_Ptr$ = 392
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S13$ = 36
_Proxy$ = 72
$T5 = 308
tv69 = 328
__$ArrayPad$ = 336
this$ = 384
_Ptr$ = 392
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S13$ = 36
_Proxy$ = 72
$T5 = 308
tv69 = 328
__$ArrayPad$ = 336
this$ = 384
_Ptr$ = 392
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@QEBD@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Alproxy$ = 8
$S15$ = 36
_Proxy$ = 72
$T5 = 308
$T6 = 340
$T7 = 372
tv78 = 392
tv76 = 400
__$ArrayPad$ = 408
this$ = 448
_Right$ = 456
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z PROC ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >, COMDAT

; 2230 :     basic_string(const basic_string& _Right)

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 01
	00 00		 sub	 rsp, 456		; 000001c8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 72 00 00 00	 mov	 ecx, 114		; 00000072H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 e8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+488]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 98 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2231 :         : _Mypair(_One_then_variadic_args_t(), _Alty_traits::select_on_container_copy_construction(_Right._Getal())) {

  0004c	48 8b 85 c0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 89 85 88 01
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  0005a	48 8b 8d c8 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00061	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEBAAEBV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  00066	48 8b d0	 mov	 rdx, rax
  00069	48 8d 8d 34 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00070	e8 00 00 00 00	 call	 ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
  00075	48 89 85 90 01
	00 00		 mov	 QWORD PTR tv76[rbp], rax
  0007c	0f b6 85 54 01
	00 00		 movzx	 eax, BYTE PTR $T6[rbp]
  00083	88 85 74 01 00
	00		 mov	 BYTE PTR $T7[rbp], al
  00089	4c 8b 85 90 01
	00 00		 mov	 r8, QWORD PTR tv76[rbp]
  00090	0f b6 95 74 01
	00 00		 movzx	 edx, BYTE PTR $T7[rbp]
  00097	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR tv78[rbp]
  0009e	e8 00 00 00 00	 call	 ??$?0V?$allocator@D@std@@$$V@?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@D@1@@Z ; std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1><std::allocator<char> >
  000a3	90		 npad	 1

; 2232 :         // construct by copying _Right
; 2233 :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  000a4	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000ab	e8 00 00 00 00	 call	 ?_Getal@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV?$allocator@D@2@XZ ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Getal
  000b0	48 8b d0	 mov	 rdx, rax
  000b3	48 8d 4d 24	 lea	 rcx, QWORD PTR $S15$[rbp]
  000b7	e8 00 00 00 00	 call	 ??$?0D@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@D@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><char>
  000bc	48 8d 45 24	 lea	 rax, QWORD PTR $S15$[rbp]
  000c0	48 89 45 08	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 2234 :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _Mypair._Myval2);

  000c4	48 8b 85 c0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000cb	4c 8b c0	 mov	 r8, rax
  000ce	48 8b 55 08	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  000d2	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000d6	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  000db	90		 npad	 1

; 2235 :         _Construct_lv_contents(_Right);

  000dc	48 8b 95 c8 01
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  000e3	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000ea	e8 00 00 00 00	 call	 ?_Construct_lv_contents@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXAEBV12@@Z ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::_Construct_lv_contents

; 2236 :         _Proxy._Release();

  000ef	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000f3	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  000f8	90		 npad	 1

; 2237 :     }

  000f9	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  000fd	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00102	90		 npad	 1
  00103	48 8b 85 c0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0010a	48 8b f8	 mov	 rdi, rax
  0010d	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00111	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z$rtcFrameData
  00118	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0011d	48 8b c7	 mov	 rax, rdi
  00120	48 8b 8d 98 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00127	48 33 cd	 xor	 rcx, rbp
  0012a	e8 00 00 00 00	 call	 __security_check_cookie
  0012f	48 8d a5 a8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+424]
  00136	5f		 pop	 rdi
  00137	5d		 pop	 rbp
  00138	c3		 ret	 0
??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z ENDP ; std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S15$ = 36
_Proxy$ = 72
$T5 = 308
$T6 = 340
$T7 = 372
tv78 = 392
tv76 = 400
__$ArrayPad$ = 408
this$ = 448
_Right$ = 456
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S15$ = 36
_Proxy$ = 72
$T5 = 308
$T6 = 340
$T7 = 372
tv78 = 392
tv76 = 400
__$ArrayPad$ = 408
this$ = 448
_Right$ = 456
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S15$ = 36
_Proxy$ = 72
$T5 = 308
$T6 = 340
$T7 = 372
tv78 = 392
tv76 = 400
__$ArrayPad$ = 408
this$ = 448
_Right$ = 456
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Compressed_pair@V?$allocator@D@std@@V?$_String_val@U?$_Simple_types@D@std@@@2@$00@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S15$ = 36
_Proxy$ = 72
$T5 = 308
$T6 = 340
$T7 = 372
tv78 = 392
tv76 = 400
__$ArrayPad$ = 408
this$ = 448
_Right$ = 456
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0???0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::basic_string<char,std::char_traits<char>,std::allocator<char> >::basic_string<char,std::char_traits<char>,std::allocator<char> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00031	48 83 c0 08	 add	 rax, 8
  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
  0003d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00044	5f		 pop	 rdi
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
??1?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::~_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty, COMDAT

; 2148 :         ~_Bxty() noexcept {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003e	5f		 pop	 rdi
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
??1_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::~_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty, COMDAT

; 2146 :         _Bxty() {} // user-provided, for fancy pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00044	5f		 pop	 rdi
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
tv66 = 192
this$ = 240
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged, COMDAT

; 2120 :     bool _Large_string_engaged() const { // returns whether the large string mode (allocated memory) is engaged

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2121 :         return _BUF_SIZE <= _Myres;

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 78 20 10	 cmp	 QWORD PTR [rax+32], 16
  00042	72 0c		 jb	 SHORT $LN3@Large_stri
  00044	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv66[rbp], 1
  0004e	eb 0a		 jmp	 SHORT $LN4@Large_stri
$LN3@Large_stri:
  00050	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv66[rbp], 0
$LN4@Large_stri:
  0005a	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv66[rbp]

; 2122 :     }

  00061	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00068	5f		 pop	 rdi
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ
_TEXT	SEGMENT
_Result$ = 8
this$ = 256
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2111 :     const value_type* _Myptr() const { // determine current pointer to buffer for immutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2112 :         const value_type* _Result = _Bx._Buf;

  00036	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 89 45 08	 mov	 QWORD PTR _Result$[rbp], rax

; 2113 :         if (_Large_string_engaged()) {

  00045	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004c	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00051	0f b6 c0	 movzx	 eax, al
  00054	85 c0		 test	 eax, eax
  00056	74 14		 je	 SHORT $LN2@Myptr

; 2114 :             _Result = _Unfancy(_Bx._Ptr);

  00058	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00063	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00068	48 89 45 08	 mov	 QWORD PTR _Result$[rbp], rax
$LN2@Myptr:

; 2115 :         }
; 2116 : 
; 2117 :         return _Result;

  0006c	48 8b 45 08	 mov	 rax, QWORD PTR _Result$[rbp]

; 2118 :     }

  00070	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00077	5f		 pop	 rdi
  00078	5d		 pop	 rbp
  00079	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBAPEBDXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ
_TEXT	SEGMENT
_Result$ = 8
this$ = 256
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ PROC ; std::_String_val<std::_Simple_types<char> >::_Myptr, COMDAT

; 2102 :     value_type* _Myptr() { // determine current pointer to buffer for mutable string

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 2103 :         value_type* _Result = _Bx._Buf;

  00036	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 c0 08	 add	 rax, 8
  00041	48 89 45 08	 mov	 QWORD PTR _Result$[rbp], rax

; 2104 :         if (_Large_string_engaged()) {

  00045	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004c	e8 00 00 00 00	 call	 ?_Large_string_engaged@?$_String_val@U?$_Simple_types@D@std@@@std@@QEBA_NXZ ; std::_String_val<std::_Simple_types<char> >::_Large_string_engaged
  00051	0f b6 c0	 movzx	 eax, al
  00054	85 c0		 test	 eax, eax
  00056	74 14		 je	 SHORT $LN2@Myptr

; 2105 :             _Result = _Unfancy(_Bx._Ptr);

  00058	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00063	e8 00 00 00 00	 call	 ??$_Unfancy@D@std@@YAPEADPEAD@Z ; std::_Unfancy<char>
  00068	48 89 45 08	 mov	 QWORD PTR _Result$[rbp], rax
$LN2@Myptr:

; 2106 :         }
; 2107 : 
; 2108 :         return _Result;

  0006c	48 8b 45 08	 mov	 rax, QWORD PTR _Result$[rbp]

; 2109 :     }

  00070	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00077	5f		 pop	 rdi
  00078	5d		 pop	 rbp
  00079	c3		 ret	 0
?_Myptr@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAAPEADXZ ENDP ; std::_String_val<std::_Simple_types<char> >::_Myptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ PROC ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >, COMDAT

; 2092 :     _String_val() : _Bx(), _Mysize(0), _Myres(0) {}

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 83 c0 08	 add	 rax, 8
  0004d	48 8b c8	 mov	 rcx, rax
  00050	e8 00 00 00 00	 call	 ??0_Bxty@?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ; std::_String_val<std::_Simple_types<char> >::_Bxty::_Bxty
  00055	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005c	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0
  00064	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 c7 40 20 00
	00 00 00	 mov	 QWORD PTR [rax+32], 0
  00073	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00081	5f		 pop	 rdi
  00082	5d		 pop	 rbp
  00083	c3		 ret	 0
??0?$_String_val@U?$_Simple_types@D@std@@@std@@QEAA@XZ ENDP ; std::_String_val<std::_Simple_types<char> >::_String_val<std::_Simple_types<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 224
_Al$ = 232
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction, COMDAT

; 770  :     _NODISCARD static _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 771  :         return _Al;

  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 772  :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA?AV?$allocator@D@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z
_TEXT	SEGMENT
__formal$ = 224
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<char> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00037	48 c7 c0 ff ff
	ff ff		 mov	 rax, -1

; 768  :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@D@std@@@std@@SA_KAEBV?$allocator@D@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<char> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 200
tv65 = 216
_Left$ = 256
_Right$ = 264
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__18CBD245_utility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 26   :     return _Right < _Left ? _Right : _Left;

  0003c	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00043	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00050	73 10		 jae	 SHORT $LN3@Min_value
  00052	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00059	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv65[rbp], rax
  00060	eb 0e		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00062	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00069	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv65[rbp], rax
$LN4@Min_value:
  00070	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv65[rbp]
  00077	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0007e	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR $T1[rbp]

; 27   : }

  00085	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008c	5f		 pop	 rdi
  0008d	5d		 pop	 rbp
  0008e	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT

; 410  :     _NODISCARD static constexpr int_type eof() noexcept { // return end-of-file metacharacter

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	90		 npad	 1

; 411  :         return static_cast<int_type>(EOF);

  0002b	b8 ff ff ff ff	 mov	 eax, -1

; 412  :     }

  00030	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 192
_Left$ = 240
_Right$ = 248
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT

; 401  :     _NODISCARD static constexpr bool eq_int_type(const int_type& _Left, const int_type& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 402  :         // test for metacharacter equality
; 403  :         return _Left == _Right;

  0003c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00043	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004a	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0004c	39 08		 cmp	 DWORD PTR [rax], ecx
  0004e	75 0c		 jne	 SHORT $LN3@eq_int_typ
  00050	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv65[rbp], 1
  0005a	eb 0a		 jmp	 SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
  0005c	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv65[rbp], 0
$LN4@eq_int_typ:
  00066	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv65[rbp]

; 404  :     }

  0006d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z
_TEXT	SEGMENT
_Left$ = 224
_Right$ = 232
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z PROC ; std::_Narrow_char_traits<char,int>::assign, COMDAT

; 377  :     static _CONSTEXPR17 void assign(_Elem& _Left, const _Elem& _Right) noexcept { // assign an element

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 378  :         _Left = _Right;

  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00043	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004a	0f b6 09	 movzx	 ecx, BYTE PTR [rcx]
  0004d	88 08		 mov	 BYTE PTR [rax], cl

; 379  :     }

  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?assign@?$_Narrow_char_traits@DH@std@@SAXAEADAEBD@Z ENDP ; std::_Narrow_char_traits<char,int>::assign
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 224
_First2$ = 232
_Count$ = 240
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::move, COMDAT

; 366  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 367  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 368  :         return static_cast<_Elem*>(_CSTD memmove(_First1, _First2, _Count));

  00041	4c 8b 85 f0 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  00048	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _First2$[rbp]
  0004f	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _First1$[rbp]
  00056	e8 00 00 00 00	 call	 memmove
  0005b	90		 npad	 1

; 369  :     }

  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
?move@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::move
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z
_TEXT	SEGMENT
_First1$ = 224
_First2$ = 232
_Count$ = 240
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z PROC ; std::_Narrow_char_traits<char,int>::copy, COMDAT

; 331  :         const size_t _Count) noexcept { // strengthened

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 332  :         // copy [_First2, _First2 + _Count) to [_First1, ...)
; 333  :         return static_cast<_Elem*>(_CSTD memcpy(_First1, _First2, _Count));

  00041	4c 8b 85 f0 00
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  00048	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _First2$[rbp]
  0004f	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _First1$[rbp]
  00056	e8 00 00 00 00	 call	 memcpy
  0005b	90		 npad	 1

; 334  :     }

  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
?copy@?$_Narrow_char_traits@DH@std@@SAPEADQEADQEBD_K@Z ENDP ; std::_Narrow_char_traits<char,int>::copy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
tv68 = 192
tv69 = 200
_First$ = 240
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 310  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept { // strengthened

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 311  :         // find length of null-terminated string
; 312  : #if _HAS_CXX17
; 313  : #if _HAS_CHAR8_T
; 314  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 315  : #if _HAS_U8_INTRINSICS
; 316  :             return __builtin_u8strlen(_First);
; 317  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 318  :             return _Char_traits<_Elem, _Int_type>::length(_First);
; 319  : #endif // _HAS_U8_INTRINSICS
; 320  :         } else
; 321  : #endif // _HAS_CHAR8_T
; 322  :         {
; 323  :             return __builtin_strlen(_First);

  00037	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  0003e	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv68[rbp], rax
  00045	48 c7 85 c8 00
	00 00 ff ff ff
	ff		 mov	 QWORD PTR tv69[rbp], -1
$LL3@length:
  00050	48 ff 85 c8 00
	00 00		 inc	 QWORD PTR tv69[rbp]
  00057	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv68[rbp]
  0005e	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR tv69[rbp]
  00065	80 3c 08 00	 cmp	 BYTE PTR [rax+rcx], 0
  00069	75 e5		 jne	 SHORT $LL3@length
  0006b	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR tv69[rbp]

; 324  :         }
; 325  : #else // _HAS_CXX17
; 326  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));
; 327  : #endif // _HAS_CXX17
; 328  :     }

  00072	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00079	5f		 pop	 rdi
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@D@std@@QEAAPEAD_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z PROC		; std::allocator<char>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00042	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$00@std@@YA_K_K@Z ; std::_Get_size_of_n<1>
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?allocate@?$allocator@D@std@@QEAAPEAD_K@Z ENDP		; std::allocator<char>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z PROC	; std::allocator<char>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00040	48 8b 95 f0 00
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  00047	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0004e	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  00053	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005a	5f		 pop	 rdi
  0005b	5d		 pop	 rbp
  0005c	c3		 ret	 0
?deallocate@?$allocator@D@std@@QEAAXQEAD_K@Z ENDP	; std::allocator<char>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@D@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$allocator@D@std@@QEAA@XZ PROC			; std::allocator<char>::allocator<char>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??0?$allocator@D@std@@QEAA@XZ ENDP			; std::allocator<char>::allocator<char>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1349 :         _Ptr = nullptr;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1350 :     }

  00045	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004c	5f		 pop	 rdi
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 200
tv78 = 216
_Obj$ = 256
<_Args_0>$ = 264
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00043	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  00048	90		 npad	 1
  00049	48 8b d0	 mov	 rdx, rax
  0004c	b9 10 00 00 00	 mov	 ecx, 16
  00051	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00056	90		 npad	 1
  00057	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0005e	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  0006a	90		 npad	 1
  0006b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006e	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  00075	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv78[rbp]
  0007c	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00083	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
  00088	90		 npad	 1

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00089	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00090	5f		 pop	 rdi
  00091	5d		 pop	 rbp
  00092	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z
_TEXT	SEGMENT
_Lock$ = 4
_Temp$ = 40
__$ArrayPad$ = 248
this$ = 288
_Right$ = 296
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z PROC ; std::_Container_base12::_Swap_proxy_and_iterators, COMDAT

; 1302 : inline void _Container_base12::_Swap_proxy_and_iterators(_Container_base12& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 f8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004c	90		 npad	 1

; 1303 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1304 :     _Lockit _Lock(_LOCK_DEBUG);

  0004d	ba 03 00 00 00	 mov	 edx, 3
  00052	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00056	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  0005c	90		 npad	 1

; 1305 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1306 : 
; 1307 :     _Container_proxy* _Temp = _Myproxy;

  0005d	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00064	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00067	48 89 45 28	 mov	 QWORD PTR _Temp$[rbp], rax

; 1308 :     _Myproxy                = _Right._Myproxy;

  0006b	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00072	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00079	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0007c	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1309 :     _Right._Myproxy         = _Temp;

  0007f	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00086	48 8b 4d 28	 mov	 rcx, QWORD PTR _Temp$[rbp]
  0008a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1310 : 
; 1311 :     if (_Myproxy) {

  0008d	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00094	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00098	74 14		 je	 SHORT $LN2@Swap_proxy

; 1312 :         _Myproxy->_Mycont = this;

  0009a	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a1	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000a4	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000ab	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN2@Swap_proxy:

; 1313 :     }
; 1314 : 
; 1315 :     if (_Right._Myproxy) {

  000ae	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  000b5	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  000b9	74 14		 je	 SHORT $LN3@Swap_proxy

; 1316 :         _Right._Myproxy->_Mycont = &_Right;

  000bb	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  000c2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c5	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  000cc	48 89 08	 mov	 QWORD PTR [rax], rcx
$LN3@Swap_proxy:

; 1317 :     }
; 1318 : }

  000cf	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$[rbp]
  000d3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000d9	90		 npad	 1
  000da	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000de	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z$rtcFrameData
  000e5	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000ea	90		 npad	 1
  000eb	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000f2	48 33 cd	 xor	 rcx, rbp
  000f5	e8 00 00 00 00	 call	 __security_check_cookie
  000fa	90		 npad	 1
  000fb	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00102	5f		 pop	 rdi
  00103	5d		 pop	 rbp
  00104	c3		 ret	 0
?_Swap_proxy_and_iterators@_Container_base12@std@@QEAAXAEAU12@@Z ENDP ; std::_Container_base12::_Swap_proxy_and_iterators
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 4
_Pnext$5 = 40
__$ArrayPad$ = 248
this$ = 288
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 f8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  00048	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 6d		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00055	ba 03 00 00 00	 mov	 edx, 3
  0005a	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00064	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  00065	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006f	48 83 c0 08	 add	 rax, 8
  00073	48 89 45 28	 mov	 QWORD PTR _Pnext$5[rbp], rax
  00077	eb 12		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  00079	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$5[rbp]
  0007d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00080	48 8b 4d 28	 mov	 rcx, QWORD PTR _Pnext$5[rbp]
  00084	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00088	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  0008b	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$5[rbp]
  0008f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00093	74 10		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  00095	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$5[rbp]
  00099	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009c	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  000a3	eb d4		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  000a5	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ac	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000af	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  000b7	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  000c2	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000c6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000cd	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d2	90		 npad	 1
  000d3	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000da	48 33 cd	 xor	 rcx, rbp
  000dd	e8 00 00 00 00	 call	 __security_check_cookie
  000e2	90		 npad	 1
  000e3	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000ea	5f		 pop	 rdi
  000eb	5d		 pop	 rbp
  000ec	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 224
_Mycont_$ = 232
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Mycont_$[rbp]
  0004a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0004d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0005c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00063	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006a	5f		 pop	 rdi
  0006b	5d		 pop	 rbp
  0006c	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z PROC		; std::_Iterator_base0::_Adopt, COMDAT

; 1155 :     void _Adopt(const void*) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?_Adopt@_Iterator_base0@std@@QEAAXPEBX@Z ENDP		; std::_Iterator_base0::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Convert_size@_K@std@@YA_K_K@Z
_TEXT	SEGMENT
_Len$ = 224
??$_Convert_size@_K@std@@YA_K_K@Z PROC			; std::_Convert_size<unsigned __int64>, COMDAT

; 1073 : _NODISCARD constexpr size_t _Convert_size<size_t>(const size_t _Len) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1074 :     // convert size_t to size_t, unchanged
; 1075 :     return _Len;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Len$[rbp]

; 1076 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$_Convert_size@_K@std@@YA_K_K@Z ENDP			; std::_Convert_size<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 8
_Ptr_container$ = 40
_Min_back_shift$ = 72
_Back_shift$ = 104
_Ptr$ = 352
_Bytes$ = 360
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  0003b	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR _Bytes$[rbp]
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00049	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00050	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00053	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 89 45 08	 mov	 QWORD PTR _Ptr_user$[rbp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00061	b8 08 00 00 00	 mov	 eax, 8
  00066	48 6b c0 ff	 imul	 rax, rax, -1
  0006a	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptr_user$[rbp]
  0006e	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00072	48 89 45 28	 mov	 QWORD PTR _Ptr_container$[rbp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  00076	b8 08 00 00 00	 mov	 eax, 8
  0007b	48 6b c0 fe	 imul	 rax, rax, -2
  0007f	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptr_user$[rbp]
  00083	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  0008d	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00091	75 02		 jne	 SHORT $LN14@Adjust_man
  00093	eb 77		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  00095	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  0009b	83 c0 09	 add	 eax, 9
  0009e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  000a5	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  000aa	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000b1	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000b6	45 33 c9	 xor	 r9d, r9d
  000b9	44 8b c0	 mov	 r8d, eax
  000bc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000c3	b9 02 00 00 00	 mov	 ecx, 2
  000c8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ce	83 f8 01	 cmp	 eax, 1
  000d1	75 03		 jne	 SHORT $LN19@Adjust_man
  000d3	cc		 int	 3
  000d4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000d6	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  000dc	83 c0 09	 add	 eax, 9
  000df	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000e8	44 8b c8	 mov	 r9d, eax
  000eb	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000f2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000f9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  00100	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00106	33 c0		 xor	 eax, eax
  00108	85 c0		 test	 eax, eax
  0010a	75 89		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  0010c	33 c0		 xor	 eax, eax
  0010e	85 c0		 test	 eax, eax
  00110	0f 85 60 ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  00116	48 c7 45 48 10
	00 00 00	 mov	 QWORD PTR _Min_back_shift$[rbp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0011e	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  00125	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ptr_container$[rbp]
  00129	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0012c	48 2b c1	 sub	 rax, rcx
  0012f	48 89 45 68	 mov	 QWORD PTR _Back_shift$[rbp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00133	48 83 7d 68 10	 cmp	 QWORD PTR _Back_shift$[rbp], 16
  00138	72 09		 jb	 SHORT $LN16@Adjust_man
  0013a	48 83 7d 68 2f	 cmp	 QWORD PTR _Back_shift$[rbp], 47 ; 0000002fH
  0013f	77 02		 ja	 SHORT $LN16@Adjust_man
  00141	eb 77		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00143	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  00149	83 c0 13	 add	 eax, 19
  0014c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00153	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00158	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0015f	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00164	45 33 c9	 xor	 r9d, r9d
  00167	44 8b c0	 mov	 r8d, eax
  0016a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00171	b9 02 00 00 00	 mov	 ecx, 2
  00176	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0017c	83 f8 01	 cmp	 eax, 1
  0017f	75 03		 jne	 SHORT $LN20@Adjust_man
  00181	cc		 int	 3
  00182	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  00184	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  0018a	83 c0 13	 add	 eax, 19
  0018d	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00196	44 8b c8	 mov	 r9d, eax
  00199	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  001a0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  001a7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  001ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  001b4	33 c0		 xor	 eax, eax
  001b6	85 c0		 test	 eax, eax
  001b8	75 89		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  001ba	33 c0		 xor	 eax, eax
  001bc	85 c0		 test	 eax, eax
  001be	0f 85 6f ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  001c4	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  001cb	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ptr_container$[rbp]
  001cf	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001d2	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  001d9	5f		 pop	 rdi
  001da	5d		 pop	 rbp
  001db	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 47   :         return ::operator new(_Bytes);

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Bytes$[rbp]
  0003d	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__289D9ECD_limits
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	90		 npad	 1

; 645  :         return LLONG_MAX;

  0002b	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  00035	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003c	5f		 pop	 rdi
  0003d	5d		 pop	 rbp
  0003e	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 200
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A47A247F_exception
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 324  :     _THROW(bad_array_new_length{});

  0002a	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00031	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  0003d	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00044	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00049	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  00050	5f		 pop	 rdi
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?rethrow_exception@std@@YAXVexception_ptr@1@@Z
_TEXT	SEGMENT
_Ptr$ = 224
?rethrow_exception@std@@YAXVexception_ptr@1@@Z PROC	; std::rethrow_exception, COMDAT

; 310  : [[noreturn]] inline void rethrow_exception(_In_ exception_ptr _Ptr) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A47A247F_exception
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 311  :     __ExceptionPtrRethrow(&_Ptr);

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0003d	e8 00 00 00 00	 call	 ?__ExceptionPtrRethrow@@YAXPEBX@Z ; __ExceptionPtrRethrow
  00042	90		 npad	 1

; 312  : }

  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0004a	e8 00 00 00 00	 call	 ??1exception_ptr@std@@QEAA@XZ ; std::exception_ptr::~exception_ptr
  0004f	90		 npad	 1
  00050	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
$LN4@rethrow_ex:
?rethrow_exception@std@@YAXVexception_ptr@1@@Z ENDP	; std::rethrow_exception
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Ptr$ = 224
?dtor$0@?0??rethrow_exception@std@@YAXVexception_ptr@1@@Z@4HA PROC ; `std::rethrow_exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception_ptr@std@@QEAA@XZ ; std::exception_ptr::~exception_ptr
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0??rethrow_exception@std@@YAXVexception_ptr@1@@Z@4HA ENDP ; `std::rethrow_exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Ptr$ = 224
?dtor$0@?0??rethrow_exception@std@@YAXVexception_ptr@1@@Z@4HA PROC ; `std::rethrow_exception'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1exception_ptr@std@@QEAA@XZ ; std::exception_ptr::~exception_ptr
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0??rethrow_exception@std@@YAXVexception_ptr@1@@Z@4HA ENDP ; `std::rethrow_exception'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?current_exception@std@@YA?AVexception_ptr@1@XZ
_TEXT	SEGMENT
__$ReturnUdt$ = 224
?current_exception@std@@YA?AVexception_ptr@1@XZ PROC	; std::current_exception, COMDAT

; 306  : _NODISCARD inline exception_ptr current_exception() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A47A247F_exception
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 307  :     return exception_ptr::_Current_exception();

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Current_exception@exception_ptr@std@@SA?AV12@XZ ; std::exception_ptr::_Current_exception
  00043	90		 npad	 1
  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 308  : }

  0004b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
?current_exception@std@@YA?AVexception_ptr@1@XZ ENDP	; std::current_exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@exception_ptr@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@exception_ptr@std@@QEAAX_K@Z PROC	; std::exception_ptr::__autoclassinit2, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  00034	33 c0		 xor	 eax, eax
  00036	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR classSize$[rbp]
  0003d	f3 aa		 rep stosb
  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?__autoclassinit2@exception_ptr@std@@QEAAX_K@Z ENDP	; std::exception_ptr::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Current_exception@exception_ptr@std@@SA?AV12@XZ
_TEXT	SEGMENT
_Retval$ = 8
__$ArrayPad$ = 232
__$ReturnUdt$ = 272
?_Current_exception@exception_ptr@std@@SA?AV12@XZ PROC	; std::exception_ptr::_Current_exception, COMDAT

; 250  :     static exception_ptr _Current_exception() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 e8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A47A247F_exception
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 251  :         exception_ptr _Retval;

  00048	ba 10 00 00 00	 mov	 edx, 16
  0004d	48 8d 4d 08	 lea	 rcx, QWORD PTR _Retval$[rbp]
  00051	e8 00 00 00 00	 call	 ?__autoclassinit2@exception_ptr@std@@QEAAX_K@Z
  00056	90		 npad	 1
  00057	48 8d 4d 08	 lea	 rcx, QWORD PTR _Retval$[rbp]
  0005b	e8 00 00 00 00	 call	 ??0exception_ptr@std@@QEAA@XZ ; std::exception_ptr::exception_ptr
  00060	90		 npad	 1

; 252  :         __ExceptionPtrCurrentException(&_Retval);

  00061	48 8d 4d 08	 lea	 rcx, QWORD PTR _Retval$[rbp]
  00065	e8 00 00 00 00	 call	 ?__ExceptionPtrCurrentException@@YAXPEAX@Z ; __ExceptionPtrCurrentException
  0006a	90		 npad	 1

; 253  :         return _Retval;

  0006b	48 8d 55 08	 lea	 rdx, QWORD PTR _Retval$[rbp]
  0006f	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00076	e8 00 00 00 00	 call	 ??0exception_ptr@std@@QEAA@AEBV01@@Z ; std::exception_ptr::exception_ptr
  0007b	90		 npad	 1
  0007c	48 8d 4d 08	 lea	 rcx, QWORD PTR _Retval$[rbp]
  00080	e8 00 00 00 00	 call	 ??1exception_ptr@std@@QEAA@XZ ; std::exception_ptr::~exception_ptr
  00085	90		 npad	 1
  00086	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 254  :     }

  0008d	48 8b f8	 mov	 rdi, rax
  00090	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00094	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Current_exception@exception_ptr@std@@SA?AV12@XZ$rtcFrameData
  0009b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000a0	90		 npad	 1
  000a1	48 8b c7	 mov	 rax, rdi
  000a4	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000ab	48 33 cd	 xor	 rcx, rbp
  000ae	e8 00 00 00 00	 call	 __security_check_cookie
  000b3	90		 npad	 1
  000b4	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  000bb	5f		 pop	 rdi
  000bc	5d		 pop	 rbp
  000bd	c3		 ret	 0
?_Current_exception@exception_ptr@std@@SA?AV12@XZ ENDP	; std::exception_ptr::_Current_exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ??Bexception_ptr@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 224
??Bexception_ptr@std@@QEBA_NXZ PROC			; std::exception_ptr::operator bool, COMDAT

; 246  :     explicit operator bool() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A47A247F_exception
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 247  :         return __ExceptionPtrToBool(this);

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?__ExceptionPtrToBool@@YA_NPEBX@Z ; __ExceptionPtrToBool
  00043	90		 npad	 1

; 248  :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??Bexception_ptr@std@@QEBA_NXZ ENDP			; std::exception_ptr::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ??4exception_ptr@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
_Rhs$ = 232
??4exception_ptr@std@@QEAAAEAV01@AEBV01@@Z PROC		; std::exception_ptr::operator=, COMDAT

; 235  :     exception_ptr& operator=(const exception_ptr& _Rhs) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A47A247F_exception
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 236  :         __ExceptionPtrAssign(this, &_Rhs);

  0003c	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Rhs$[rbp]
  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004a	e8 00 00 00 00	 call	 ?__ExceptionPtrAssign@@YAXPEAXPEBX@Z ; __ExceptionPtrAssign
  0004f	90		 npad	 1

; 237  :         return *this;

  00050	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 238  :     }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
??4exception_ptr@std@@QEAAAEAV01@AEBV01@@Z ENDP		; std::exception_ptr::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ??0exception_ptr@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
_Rhs$ = 232
??0exception_ptr@std@@QEAA@AEBV01@@Z PROC		; std::exception_ptr::exception_ptr, COMDAT

; 231  :     exception_ptr(const exception_ptr& _Rhs) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A47A247F_exception
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 232  :         __ExceptionPtrCopy(this, &_Rhs);

  0003c	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Rhs$[rbp]
  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004a	e8 00 00 00 00	 call	 ?__ExceptionPtrCopy@@YAXPEAXPEBX@Z ; __ExceptionPtrCopy
  0004f	90		 npad	 1

; 233  :     }

  00050	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
??0exception_ptr@std@@QEAA@AEBV01@@Z ENDP		; std::exception_ptr::exception_ptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ??1exception_ptr@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1exception_ptr@std@@QEAA@XZ PROC			; std::exception_ptr::~exception_ptr, COMDAT

; 227  :     ~exception_ptr() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A47A247F_exception
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 228  :         __ExceptionPtrDestroy(this);

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?__ExceptionPtrDestroy@@YAXPEAX@Z ; __ExceptionPtrDestroy
  00043	90		 npad	 1

; 229  :     }

  00044	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004b	5f		 pop	 rdi
  0004c	5d		 pop	 rbp
  0004d	c3		 ret	 0
??1exception_ptr@std@@QEAA@XZ ENDP			; std::exception_ptr::~exception_ptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ??0exception_ptr@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0exception_ptr@std@@QEAA@XZ PROC			; std::exception_ptr::exception_ptr, COMDAT

; 219  :     exception_ptr() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A47A247F_exception
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 220  :         __ExceptionPtrCreate(this);

  00037	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?__ExceptionPtrCreate@@YAXPEAX@Z ; __ExceptionPtrCreate
  00043	90		 npad	 1

; 221  :     }

  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
??0exception_ptr@std@@QEAA@XZ ENDP			; std::exception_ptr::exception_ptr
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx
  00053	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 137  :         : bad_alloc("bad array new length")

  00037	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  0003e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00045	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0004a	90		 npad	 1

; 138  :     {

  0004b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  00059	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0005c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00063	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006a	5f		 pop	 rdi
  0006b	5d		 pop	 rbp
  0006c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx
  00053	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 126  :         : exception(_Message, 1)

  0003c	41 b8 01 00 00
	00		 mov	 r8d, 1
  00042	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Message$[rbp]
  00049	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00050	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00055	90		 npad	 1

; 127  :     {

  00056	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00064	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00067	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00075	5f		 pop	 rdi
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 192
this$ = 240
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00042	74 14		 je	 SHORT $LN3@what
  00044	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00056	eb 0e		 jmp	 SHORT $LN4@what
$LN3@what:
  00058	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0005f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
$LN4@what:
  00066	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv69[rbp]

; 93   :     }

  0006d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  00048	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 83 c0 08	 add	 rax, 8
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 __std_exception_destroy
  0005b	90		 npad	 1

; 88   :     }

  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0004a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  0004d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	48 83 c0 08	 add	 rax, 8
  00058	48 8b f8	 mov	 rdi, rax
  0005b	33 c0		 xor	 eax, eax
  0005d	b9 10 00 00 00	 mov	 ecx, 16
  00062	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00064	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 83 c0 08	 add	 rax, 8
  0006f	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Other$[rbp]
  00076	48 83 c1 08	 add	 rcx, 8
  0007a	48 8b d0	 mov	 rdx, rax
  0007d	e8 00 00 00 00	 call	 __std_exception_copy
  00082	90		 npad	 1

; 71   :     }

  00083	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00091	5f		 pop	 rdi
  00092	5d		 pop	 rbp
  00093	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
__formal$ = 240
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1
  00041	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0004f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  00052	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00059	48 83 c0 08	 add	 rax, 8
  0005d	48 8b f8	 mov	 rdi, rax
  00060	33 c0		 xor	 eax, eax
  00062	b9 10 00 00 00	 mov	 ecx, 16
  00067	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00069	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00070	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Message$[rbp]
  00077	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  0007b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00082	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00089	5f		 pop	 rdi
  0008a	5d		 pop	 rbp
  0008b	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBD@Z
_TEXT	SEGMENT
_InitData$ = 8
__$ArrayPad$ = 232
this$ = 272
_Message$ = 280
??0exception@std@@QEAA@QEBD@Z PROC			; std::exception::exception, COMDAT

; 56   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 e8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004c	90		 npad	 1
  0004d	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0005b	48 89 08	 mov	 QWORD PTR [rax], rcx

; 55   :         : _Data()

  0005e	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00065	48 83 c0 08	 add	 rax, 8
  00069	48 8b f8	 mov	 rdi, rax
  0006c	33 c0		 xor	 eax, eax
  0006e	b9 10 00 00 00	 mov	 ecx, 16
  00073	f3 aa		 rep stosb

; 57   :         __std_exception_data _InitData = { _Message, true };

  00075	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR _Message$[rbp]
  0007c	48 89 45 08	 mov	 QWORD PTR _InitData$[rbp], rax
  00080	c6 45 10 01	 mov	 BYTE PTR _InitData$[rbp+8], 1

; 58   :         __std_exception_copy(&_InitData, &_Data);

  00084	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008b	48 83 c0 08	 add	 rax, 8
  0008f	48 8b d0	 mov	 rdx, rax
  00092	48 8d 4d 08	 lea	 rcx, QWORD PTR _InitData$[rbp]
  00096	e8 00 00 00 00	 call	 __std_exception_copy
  0009b	90		 npad	 1

; 59   :     }

  0009c	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a3	48 8b f8	 mov	 rdi, rax
  000a6	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000aa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??0exception@std@@QEAA@QEBD@Z$rtcFrameData
  000b1	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b6	90		 npad	 1
  000b7	48 8b c7	 mov	 rax, rdi
  000ba	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000c1	48 33 cd	 xor	 rcx, rbp
  000c4	e8 00 00 00 00	 call	 __security_check_cookie
  000c9	90		 npad	 1
  000ca	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  000d1	5f		 pop	 rdi
  000d2	5d		 pop	 rbp
  000d3	c3		 ret	 0
??0exception@std@@QEAA@QEBD@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 224
_Where$ = 232
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7F8AB566_vcruntime_new@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 169  :         (void)_Size;
; 170  :         return _Where;

  0003c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Where$[rbp]

; 171  :     }

  00043	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
__formal$ = 240
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1
  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\ThreadPool.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__573757CE_ThreadPool@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003e	5f		 pop	 rdi
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
