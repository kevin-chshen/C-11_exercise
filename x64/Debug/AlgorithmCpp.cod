; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28105.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__7F8AB566_vcruntime_new@h DB 01H
__09340588_corecrt_math@h DB 01H
__24E9E95F_stdlib@h DB 01H
__2FC657CE_cstdlib DB 01H
__70639AFA_cmath DB 01H
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__8A0D8D63_cstddef DB 01H
__C8593937_type_traits DB 01H
__B0C4CEA9_malloc@h DB 01H
__96AB3BB0_vcruntime_exception@h DB 01H
__A47A247F_exception DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__35D7DDB3_corecrt_memory@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__A29A7DFB_string@h DB 01H
__5467428D_corecrt_wconio@h DB 01H
__4442441F_corecrt_wio@h DB 01H
__45F4AF76_corecrt_wtime@h DB 01H
__186FF47F_stat@h DB 01H
__534C724A_wchar@h DB 01H
__289D9ECD_limits DB 01H
__F3238959_xutility DB 01H
__725EB186_xmemory DB 01H
__D64083BB_tuple DB 01H
__2DF72A1A_xpolymorphic_allocator@h DB 01H
__068D371A_xstring DB 01H
__2D341E22_stdexcept DB 01H
__502C2D49_xcall_once@h DB 01H
__EF713F69_system_error DB 01H
__B69C91F9_vcruntime_typeinfo@h DB 01H
__83FC7A40_typeinfo DB 01H
__94339243_memory DB 01H
__B876C54C_xfacet DB 01H
__7242C389_ctype@h DB 01H
__9C759988_xlocinfo DB 01H
__D9B3432B_xlocale DB 01H
__A590EE9B_xiosbase DB 01H
__4734253C_xlocnum DB 01H
__1421D064_ios DB 01H
__4EB666AB_algorithm DB 01H
__DC63C0AB_AlgorithmCpp@cpp DB 01H
__6530EE2D_vector DB 01H
__A973ACD5_istream DB 01H
__CAA399EF_ostream DB 01H
__2F94A69E_streambuf DB 01H
__E4744B4B_iosfwd DB 01H
__18CBD245_utility DB 01H
__EFD44557_xstddef DB 01H
__AE76A8A9_xatomic@h DB 01H
__2CBBF969_numeric DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?run@AlgorithmCpp@@QEAAXXZ			; AlgorithmCpp::run
PUBLIC	?foo@AlgorithmCpp@@AEAAXXZ			; AlgorithmCpp::foo
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	??0_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QEAA@AEBU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
PUBLIC	?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
PUBLIC	?eof@?$_Narrow_char_traits@DH@std@@SAHXZ	; std::_Narrow_char_traits<char,int>::eof
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	??0?$allocator@H@std@@QEAA@XZ			; std::allocator<int>::allocator<int>
PUBLIC	?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z	; std::allocator<int>::deallocate
PUBLIC	?allocate@?$allocator@H@std@@QEAAPEAH_K@Z	; std::allocator<int>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z ; std::_Default_allocator_traits<std::allocator<int> >::max_size
PUBLIC	??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
PUBLIC	??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
PUBLIC	?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z ; std::vector<int,std::allocator<int> >::resize
PUBLIC	?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
PUBLIC	?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
PUBLIC	?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ ; std::vector<int,std::allocator<int> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ ; std::vector<int,std::allocator<int> >::_Unchecked_end
PUBLIC	?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::size
PUBLIC	?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::max_size
PUBLIC	?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::capacity
PUBLIC	?_Ufill@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHPEAH_KU_Value_init_tag@2@@Z ; std::vector<int,std::allocator<int> >::_Ufill
PUBLIC	?_Umove_if_noexcept1@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00U?$integral_constant@_N$00@2@@Z ; std::vector<int,std::allocator<int> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00@Z ; std::vector<int,std::allocator<int> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z ; std::vector<int,std::allocator<int> >::_Calculate_growth
PUBLIC	?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ; std::vector<int,std::allocator<int> >::_Buy_raw
PUBLIC	?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ; std::vector<int,std::allocator<int> >::_Buy_nonzero
PUBLIC	?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z ; std::vector<int,std::allocator<int> >::_Change_array
PUBLIC	?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ; std::vector<int,std::allocator<int> >::_Tidy
PUBLIC	?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range
PUBLIC	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
PUBLIC	?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
PUBLIC	?__autoclassinit2@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z ; std::vector<int,std::allocator<int> >::__autoclassinit2
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*
PUBLIC	??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator++
PUBLIC	??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_JAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator-
PUBLIC	??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator==
PUBLIC	?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Compat
PUBLIC	?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z ; std::_Verify_range
PUBLIC	?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Seek_to
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator=
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*
PUBLIC	??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator++
PUBLIC	?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Unwrapped
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator=
PUBLIC	?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAX_K@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::__autoclassinit2
PUBLIC	??$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z ; std::iota<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int>
PUBLIC	??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
PUBLIC	??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ; std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
PUBLIC	??1?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@XZ ; std::pair<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >::~pair<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
PUBLIC	??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
PUBLIC	??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ; std::distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
PUBLIC	??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z ; std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
PUBLIC	??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ; std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<int> > >
PUBLIC	??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize<std::_Value_init_tag>
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><std::allocator<int> const &>
PUBLIC	??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
PUBLIC	??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
PUBLIC	??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
PUBLIC	??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
PUBLIC	??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
PUBLIC	??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
PUBLIC	??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
PUBLIC	??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z ; std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
PUBLIC	??$_Get_unwrapped_unverified@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YAAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z ; std::_Get_unwrapped_unverified<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
PUBLIC	??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
PUBLIC	??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z ; std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
PUBLIC	??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z ; std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
PUBLIC	??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z ; std::forward<std::allocator<int> const &>
PUBLIC	??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Unfancy@H@std@@YAPEAHPEAH@Z			; std::_Unfancy<int>
PUBLIC	??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >
PUBLIC	??$_Get_size_of_n@$03@std@@YA_K_K@Z		; std::_Get_size_of_n<4>
PUBLIC	??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z ; std::_Pass_fn<std::less<void>,0>
PUBLIC	??$_Minmax_element_unchecked@PEAHU?$less@X@std@@@std@@YA?AU?$pair@PEAHPEAH@0@PEAH0U?$less@X@0@@Z ; std::_Minmax_element_unchecked<int *,std::less<void> >
PUBLIC	??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBQEAH@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int *>
PUBLIC	??$?0AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@AEAV01@$0A@@?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z ; std::pair<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >::pair<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > ><std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &,0>
PUBLIC	??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z ; std::_Debug_lt_pred<std::less<void> &,int &,int &,0>
PUBLIC	??$?RAEAHAEAH@?$less@X@std@@QEBA_NAEAH0@Z	; std::less<void>::operator()<int &,int &>
PUBLIC	??$is_sorted_until@PEAHU?$less@X@std@@@std@@YAPEAHQEAHPEAHU?$less@X@0@@Z ; std::is_sorted_until<int *,std::less<void> >
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z		; std::_Zero_range<int *>
PUBLIC	??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,std::allocator<int> >
PUBLIC	??$?0AEAPEAHAEAPEAH$0A@@?$pair@PEAHPEAH@std@@QEAA@AEAPEAH0@Z ; std::pair<int *,int *>::pair<int *,int *><int * &,int * &,0>
PUBLIC	??$forward@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEAV10@@Z ; std::forward<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &>
PUBLIC	??$_Adl_verify_range@PEAHPEAH@std@@YAXAEBQEAH0@Z ; std::_Adl_verify_range<int *,int *>
PUBLIC	??$_Get_unwrapped@H@std@@YAPEAHQEAH@Z		; std::_Get_unwrapped<int>
PUBLIC	??$_Seek_wrapped@H@std@@YAXAEAPEAHQEAH@Z	; std::_Seek_wrapped<int>
PUBLIC	??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z	; std::_Copy_memmove<int *,int *>
PUBLIC	??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z		; std::_Refancy<int *,0>
PUBLIC	??$forward@AEAPEAH@std@@YAAEAPEAHAEAPEAH@Z	; std::forward<int * &>
PUBLIC	??$_Verify_range@H@std@@YAXQEBH0@Z		; std::_Verify_range<int>
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_C@_01CLKCMJKC@?5@				; `string'
PUBLIC	??_C@_01EEMJAFIK@?6@				; `string'
PUBLIC	??_C@_0L@FANOCPDH@?5?0?5min?3?5?$DN?5@		; `string'
PUBLIC	??_C@_06JOLCJBIP@max?5?3?5@			; `string'
PUBLIC	??_C@_0BB@FHNJFLFF@?5?0?5is_sorted?5?3?$DN?5@	; `string'
PUBLIC	??_C@_06OPIKJNJO@pos?3?$DN?5@			; `string'
PUBLIC	??_C@_0GK@FAHAKJIH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@ ; `string'
PUBLIC	??_C@_0GI@GNFKJBEL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@GCNAHLKO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1LO@MGELDLOO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ ; `string'
PUBLIC	??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@ ; `string'
PUBLIC	??_C@_1ME@LLCFNFIO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ ; `string'
PUBLIC	??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ ; `string'
PUBLIC	??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@ ; `string'
PUBLIC	??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ ; `string'
PUBLIC	??_C@_0DC@KEKNBAEB@can?8t?5increment?5value?9initializ@ ; `string'
PUBLIC	??_C@_1MG@OPNGNDCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ ; `string'
PUBLIC	??_C@_1GI@EDCILPL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@ ; `string'
PUBLIC	??_C@_0CJ@OAAAAGPM@can?8t?5increment?5vector?5iterator@ ; `string'
PUBLIC	??_C@_1FG@LDPPKMGP@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@	; `string'
PUBLIC	??_C@_1NE@PFDEEMPK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ ; `string'
PUBLIC	??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ ; `string'
PUBLIC	??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ ; `string'
PUBLIC	??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@ ; `string'
PUBLIC	??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@ ; `string'
PUBLIC	??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ ; `string'
PUBLIC	??_C@_0BD@FEEMDEPI@invalid?5comparator@		; `string'
PUBLIC	??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@ ; `string'
PUBLIC	??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	?uncaught_exception@std@@YA_NXZ:PROC		; std::uncaught_exception
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	memmove:PROC
EXTRN	memset:PROC
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	__imp_?good@ios_base@std@@QEBA_NXZ:PROC
EXTRN	__imp_?flags@ios_base@std@@QEBAHXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEBA_JXZ:PROC
EXTRN	__imp_?width@ios_base@std@@QEAA_J_J@Z:PROC
EXTRN	__imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z:PROC
EXTRN	__imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z:PROC
EXTRN	__imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z:PROC
EXTRN	__imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ:PROC
EXTRN	__imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ:PROC
EXTRN	__imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z:PROC
EXTRN	__imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_N@Z:PROC
EXTRN	__imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z:PROC
EXTRN	__imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z:PROC
EXTRN	__imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ:PROC
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A:BYTE
EXTRN	__security_cookie:QWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?run@AlgorithmCpp@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?run@AlgorithmCpp@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?foo@AlgorithmCpp@@AEAAXXZ DD imagerel $LN28
	DD	imagerel $LN28+1861
	DD	imagerel $unwind$?foo@AlgorithmCpp@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA DD imagerel ?dtor$0@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
	DD	imagerel ?dtor$0@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$0@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA DD imagerel ?dtor$1@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
	DD	imagerel ?dtor$1@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA+36
	DD	imagerel $unwind$?dtor$1@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$6@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA DD imagerel ?dtor$6@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
	DD	imagerel ?dtor$6@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA+39
	DD	imagerel $unwind$?dtor$6@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$10@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA DD imagerel ?dtor$10@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
	DD	imagerel ?dtor$10@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA+39
	DD	imagerel $unwind$?dtor$10@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$15@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA DD imagerel ?dtor$15@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
	DD	imagerel ?dtor$15@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA+39
	DD	imagerel $unwind$?dtor$15@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$18@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA DD imagerel ?dtor$18@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
	DD	imagerel ?dtor$18@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA+39
	DD	imagerel $unwind$?dtor$18@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+148
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+476
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+237
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+147
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+126
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN6
	DD	imagerel $LN6+236
	DD	imagerel $unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Iterator_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+155
	DD	imagerel $unwind$??1_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD imagerel $LN6
	DD	imagerel $LN6+290
	DD	imagerel $unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+118
	DD	imagerel $unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD imagerel $LN15
	DD	imagerel $LN15+302
	DD	imagerel $unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD imagerel $LN4
	DD	imagerel $LN4+124
	DD	imagerel $unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD imagerel $LN3
	DD	imagerel $LN3+58
	DD	imagerel $unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+143
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@H@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??0?$allocator@H@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@H@std@@QEAAPEAH_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?allocate@?$allocator@H@std@@QEAAPEAH_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+166
	DD	imagerel $unwind$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+209
	DD	imagerel $unwind$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+114
	DD	imagerel $unwind$?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+147
	DD	imagerel $unwind$?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+147
	DD	imagerel $unwind$?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Ufill@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHPEAH_KU_Value_init_tag@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+113
	DD	imagerel $unwind$?_Ufill@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHPEAH_KU_Value_init_tag@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00@Z DD imagerel $LN3
	DD	imagerel $LN3+142
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+200
	DD	imagerel $unwind$?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+214
	DD	imagerel $unwind$?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+114
	DD	imagerel $unwind$?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+322
	DD	imagerel $unwind$?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+285
	DD	imagerel $unwind$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DD imagerel $LN9
	DD	imagerel $LN9+267
	DD	imagerel $unwind$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?__autoclassinit2@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+130
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ DD imagerel $LN21
	DD	imagerel $LN21+385
	DD	imagerel $unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ DD imagerel $LN21
	DD	imagerel $LN21+386
	DD	imagerel $unwind$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_JAEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+117
	DD	imagerel $unwind$??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_JAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_NAEBV01@@Z DD imagerel $LN5
	DD	imagerel $LN5+141
	DD	imagerel $unwind$??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_NAEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAXAEBV12@@Z DD imagerel $LN12
	DD	imagerel $LN12+231
	DD	imagerel $unwind$?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAXAEBV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z DD imagerel $LN21
	DD	imagerel $LN21+374
	DD	imagerel $unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z DD imagerel $LN3
	DD	imagerel $LN3+92
	DD	imagerel $unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+107
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+73
	DD	imagerel $unwind$?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z DD imagerel $LN8
	DD	imagerel $LN8+202
	DD	imagerel $unwind$??$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA DD imagerel ?dtor$0@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA
	DD	imagerel ?dtor$0@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA DD imagerel ?dtor$1@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA
	DD	imagerel ?dtor$1@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD imagerel $LN25
	DD	imagerel $LN25+1124
	DD	imagerel $unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA+91
	DD	imagerel $unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DD imagerel $LN9
	DD	imagerel $LN9+299
	DD	imagerel $unwind$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA DD imagerel ?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
	DD	imagerel ?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA DD imagerel ?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
	DD	imagerel ?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??1?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+149
	DD	imagerel $unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@QEBA@H@Z DD imagerel ??R<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@QEBA@H@Z
	DD	imagerel ??R<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@QEBA@H@Z+115
	DD	imagerel $unwind$??R<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@QEBA@H@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z DD imagerel ??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z
	DD	imagerel ??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z+427
	DD	imagerel $unwind$??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA DD imagerel ?dtor$0@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA
	DD	imagerel ?dtor$0@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA DD imagerel ?dtor$1@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA
	DD	imagerel ?dtor$1@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$2@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA DD imagerel ?dtor$2@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA
	DD	imagerel ?dtor$2@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA+39
	DD	imagerel $unwind$?dtor$2@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$3@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA DD imagerel ?dtor$3@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA
	DD	imagerel ?dtor$3@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA+36
	DD	imagerel $unwind$?dtor$3@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DD imagerel $LN5
	DD	imagerel $LN5+154
	DD	imagerel $unwind$??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA DD imagerel ?dtor$0@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
	DD	imagerel ?dtor$0@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA DD imagerel ?dtor$1@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
	DD	imagerel ?dtor$1@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z DD imagerel $LN9
	DD	imagerel $LN9+299
	DD	imagerel $unwind$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA DD imagerel ?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA
	DD	imagerel ?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA DD imagerel ?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA
	DD	imagerel ?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DD imagerel $LN7
	DD	imagerel $LN7+268
	DD	imagerel $unwind$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA DD imagerel ?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
	DD	imagerel ?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA DD imagerel ?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
	DD	imagerel ?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+430
	DD	imagerel $unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+314
	DD	imagerel $unwind$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+36
	DD	imagerel $unwind$?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN4
	DD	imagerel $LN4+171
	DD	imagerel $unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+145
	DD	imagerel $unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD imagerel $LN7
	DD	imagerel $LN7+284
	DD	imagerel $unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+108
	DD	imagerel $unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+195
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+117
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+123
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+114
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+380
	DD	imagerel $unwind$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA DD imagerel ?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA DD imagerel ?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA
	DD	imagerel ?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped_unverified@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YAAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Get_unwrapped_unverified@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YAAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z DD imagerel $LN12
	DD	imagerel $LN12+369
	DD	imagerel $unwind$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA DD imagerel ?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA DD imagerel ?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA
	DD	imagerel ?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z DD imagerel $LN7
	DD	imagerel $LN7+237
	DD	imagerel $unwind$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA DD imagerel ?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA
	DD	imagerel ?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA DD imagerel ?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA
	DD	imagerel ?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD imagerel $LN11
	DD	imagerel $LN11+407
	DD	imagerel $unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA+116
	DD	imagerel $unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+94
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+300
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@H@std@@YAPEAHPEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Unfancy@H@std@@YAPEAHPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$03@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$??$_Get_size_of_n@$03@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Minmax_element_unchecked@PEAHU?$less@X@std@@@std@@YA?AU?$pair@PEAHPEAH@0@PEAH0U?$less@X@0@@Z DD imagerel $LN17
	DD	imagerel $LN17+569
	DD	imagerel $unwind$??$_Minmax_element_unchecked@PEAHU?$less@X@std@@@std@@YA?AU?$pair@PEAHPEAH@0@PEAH0U?$less@X@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBQEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+91
	DD	imagerel $unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBQEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@AEAV01@$0A@@?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z DD imagerel $LN3
	DD	imagerel $LN3+172
	DD	imagerel $unwind$??$?0AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@AEAV01@$0A@@?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z DD imagerel $LN13
	DD	imagerel $LN13+276
	DD	imagerel $unwind$??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RAEAHAEAH@?$less@X@std@@QEBA_NAEAH0@Z DD imagerel $LN5
	DD	imagerel $LN5+124
	DD	imagerel $unwind$??$?RAEAHAEAH@?$less@X@std@@QEBA_NAEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$is_sorted_until@PEAHU?$less@X@std@@@std@@YAPEAHQEAHPEAHU?$less@X@0@@Z DD imagerel $LN8
	DD	imagerel $LN8+241
	DD	imagerel $unwind$??$is_sorted_until@PEAHU?$less@X@std@@@std@@YAPEAHQEAHPEAHU?$less@X@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+126
	DD	imagerel $unwind$??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+168
	DD	imagerel $unwind$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0AEAPEAHAEAPEAH$0A@@?$pair@PEAHPEAH@std@@QEAA@AEAPEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+135
	DD	imagerel $unwind$??$?0AEAPEAHAEAPEAH$0A@@?$pair@PEAHPEAH@std@@QEAA@AEAPEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Adl_verify_range@PEAHPEAH@std@@YAXAEBQEAH0@Z DD imagerel $LN3
	DD	imagerel $LN3+94
	DD	imagerel $unwind$??$_Adl_verify_range@PEAHPEAH@std@@YAXAEBQEAH0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@H@std@@YAPEAHQEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Get_unwrapped@H@std@@YAPEAHQEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Seek_wrapped@H@std@@YAXAEAPEAHQEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+86
	DD	imagerel $unwind$??$_Seek_wrapped@H@std@@YAXAEAPEAHQEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEAPEAH@std@@YAAEAPEAHAEAPEAH@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEAPEAH@std@@YAAEAPEAHAEAPEAH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Verify_range@H@std@@YAXQEBH0@Z DD imagerel $LN12
	DD	imagerel $LN12+207
	DD	imagerel $unwind$??$_Verify_range@H@std@@YAXQEBH0@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
CONST	SEGMENT
??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@
CONST	SEGMENT
??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'D', 00H
	DB	'e', 00H, 'b', 00H, 'u', 00H, 'g', 00H, '_', 00H, 'l', 00H, 't'
	DB	00H, '_', 00H, 'p', 00H, 'r', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@FEEMDEPI@invalid?5comparator@
CONST	SEGMENT
??_C@_0BD@FEEMDEPI@invalid?5comparator@ DB 'invalid comparator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, ' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H
	DB	'g', 00H, 'e', 00H, ' ', 00H, 't', 00H, 'r', 00H, 'a', 00H, 'n'
	DB	00H, 's', 00H, 'p', 00H, 'o', 00H, 's', 00H, 'e', 00H, 'd', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
CONST	SEGMENT
??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@ DB 'vector iterato'
	DB	'r range transposed', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	' ', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' '
	DB	00H, 'a', 00H, 'r', 00H, 'e', 00H, ' ', 00H, 'f', 00H, 'r', 00H
	DB	'o', 00H, 'm', 00H, ' ', 00H, 'd', 00H, 'i', 00H, 'f', 00H, 'f'
	DB	00H, 'e', 00H, 'r', 00H, 'e', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'c', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'a', 00H, 'i', 00H, 'n'
	DB	00H, 'e', 00H, 'r', 00H, 's', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
CONST	SEGMENT
??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@ DB 'vector itera'
	DB	'tors in range are from different containers', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
CONST	SEGMENT
??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
CONST	SEGMENT
??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@ DB '"'
	DB	00H, 't', 00H, 'r', 00H, 'a', 00H, 'n', 00H, 's', 00H, 'p', 00H
	DB	'o', 00H, 's', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'p', 00H, 'o'
	DB	00H, 'i', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, ' ', 00H
	DB	'r', 00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
CONST	SEGMENT
??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'r', 00H, 'i', 00H, 'f', 00H, 'y', 00H, '_', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1NE@PFDEEMPK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NE@PFDEEMPK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'E'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'p', 00H, 'r', 00H
	DB	'i', 00H, 's', 00H, 'e', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'u', 00H, 't', 00H, 'i', 00H, 'l', 00H, 'i', 00H, 't', 00H, 'y'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
CONST	SEGMENT
??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@ DB 'transposed pointer ran'
	DB	'ge', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1FG@LDPPKMGP@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@
CONST	SEGMENT
??_C@_1FG@LDPPKMGP@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e'
	DB	00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H
	DB	'p', 00H, 'a', 00H, 's', 00H, 't', 00H, ' ', 00H, 'e', 00H, 'n'
	DB	00H, 'd', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CJ@OAAAAGPM@can?8t?5increment?5vector?5iterator@
CONST	SEGMENT
??_C@_0CJ@OAAAAGPM@can?8t?5increment?5vector?5iterator@ DB 'can''t increm'
	DB	'ent vector iterator past end', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1GI@EDCILPL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@
CONST	SEGMENT
??_C@_1GI@EDCILPL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'i', 00H, 'n', 00H, 'c', 00H, 'r', 00H, 'e', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, ' ', 00H, 'v', 00H, 'a', 00H, 'l', 00H
	DB	'u', 00H, 'e', 00H, '-', 00H, 'i', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, ' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H
	DB	'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MG@OPNGNDCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
CONST	SEGMENT
??_C@_1MG@OPNGNDCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '+', 00H, '+', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0DC@KEKNBAEB@can?8t?5increment?5value?9initializ@
CONST	SEGMENT
??_C@_0DC@KEKNBAEB@can?8t?5increment?5value?9initializ@ DB 'can''t increm'
	DB	'ent value-initialized vector iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
CONST	SEGMENT
??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'o', 00H
	DB	'u', 00H, 't', 00H, ' ', 00H, 'o', 00H, 'f', 00H, ' ', 00H, 'r'
	DB	00H, 'a', 00H, 'n', 00H, 'g', 00H, 'e', 00H, ' ', 00H, 'v', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i'
	DB	00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H
	DB	'r', 00H, '"', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
CONST	SEGMENT
??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@ DB 'can''t dere'
	DB	'ference out of range vector iterator', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
CONST	SEGMENT
??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@ DB '"'
	DB	00H, 'c', 00H, 'a', 00H, 'n', 00H, '''', 00H, 't', 00H, ' ', 00H
	DB	'd', 00H, 'e', 00H, 'r', 00H, 'e', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'e', 00H, 'n', 00H, 'c', 00H, 'e', 00H, ' ', 00H, 'v', 00H
	DB	'a', 00H, 'l', 00H, 'u', 00H, 'e', 00H, '-', 00H, 'i', 00H, 'n'
	DB	00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'z', 00H, 'e', 00H, 'd', 00H, ' ', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, 'i', 00H, 't', 00H
	DB	'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r', 00H, '"'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1ME@LLCFNFIO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
CONST	SEGMENT
??_C@_1ME@LLCFNFIO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	':', 00H, ':', 00H, 'o', 00H, 'p', 00H, 'e', 00H, 'r', 00H, 'a'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, ' ', 00H, '*', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
CONST	SEGMENT
??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@ DB 'can''t derefe'
	DB	'rence value-initialized vector iterator', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
CONST	SEGMENT
??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't'
	DB	00H, 'o', 00H, 'r', 00H, 's', 00H, ' ', 00H, 'i', 00H, 'n', 00H
	DB	'c', 00H, 'o', 00H, 'm', 00H, 'p', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'b', 00H, 'l', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1LO@MGELDLOO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
CONST	SEGMENT
??_C@_1LO@MGELDLOO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'V', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'c'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 't', 00H, '_', 00H, 'i', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '<', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's', 00H
	DB	' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_'
	DB	00H, 'V', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	'_', 00H, 'v', 00H, 'a', 00H, 'l', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 's', 00H
	DB	't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'S', 00H, 'i'
	DB	00H, 'm', 00H, 'p', 00H, 'l', 00H, 'e', 00H, '_', 00H, 't', 00H
	DB	'y', 00H, 'p', 00H, 'e', 00H, 's', 00H, '<', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, '>', 00H, ' ', 00H, '>', 00H, ' ', 00H, '>', 00H
	DB	':', 00H, ':', 00H, '_', 00H, 'C', 00H, 'o', 00H, 'm', 00H, 'p'
	DB	00H, 'a', 00H, 't', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@GCNAHLKO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@GCNAHLKO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'E'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'p', 00H, 'r', 00H
	DB	'i', 00H, 's', 00H, 'e', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H
	DB	'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@GNFKJBEL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@GNFKJBEL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\T'
	DB	'ools\MSVC\14.23.28105\include\vector', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@
CONST	SEGMENT
??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@ DB 'vector iterators '
	DB	'incompatible', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0GK@FAHAKJIH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GK@FAHAKJIH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\T'
	DB	'ools\MSVC\14.23.28105\include\xutility', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06OPIKJNJO@pos?3?$DN?5@
CONST	SEGMENT
??_C@_06OPIKJNJO@pos?3?$DN?5@ DB 'pos:= ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FHNJFLFF@?5?0?5is_sorted?5?3?$DN?5@
CONST	SEGMENT
??_C@_0BB@FHNJFLFF@?5?0?5is_sorted?5?3?$DN?5@ DB ' , is_sorted := ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_06JOLCJBIP@max?5?3?5@
CONST	SEGMENT
??_C@_06JOLCJBIP@max?5?3?5@ DB 'max : ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0L@FANOCPDH@?5?0?5min?3?5?$DN?5@
CONST	SEGMENT
??_C@_0L@FANOCPDH@?5?0?5min?3?5?$DN?5@ DB ' , min: = ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_01EEMJAFIK@?6@
CONST	SEGMENT
??_C@_01EEMJAFIK@?6@ DB 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_01CLKCMJKC@?5@
CONST	SEGMENT
??_C@_01CLKCMJKC@?5@ DB ' ', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
CONST	SEGMENT
??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'I', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '_', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '1', 00H
	DB	'2', 00H, ':', 00H, ':', 00H, '_', 00H, 'O', 00H, 'r', 00H, 'p'
	DB	00H, 'h', 00H, 'a', 00H, 'n', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'E'
	DB	00H, 'n', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'p', 00H, 'r', 00H
	DB	'i', 00H, 's', 00H, 'e', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\'
	DB	00H, 'T', 00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H
	DB	'M', 00H, 'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4'
	DB	00H, '.', 00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H
	DB	'1', 00H, '0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H
	DB	'm', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\T'
	DB	'ools\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA DD 066H ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Verify_range@H@std@@YAXQEBH0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Verify_range@H@std@@YAXQEBH0@Z DB 060H
	DD	imagerel $ip2state$??$_Verify_range@H@std@@YAXQEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Verify_range@H@std@@YAXQEBH0@Z DD 035052f19H
	DD	01133318H
	DD	0700c001fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Verify_range@H@std@@YAXQEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEAPEAH@std@@YAAEAPEAHAEAPEAH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEAPEAH@std@@YAAEAPEAHAEAPEAH@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEAPEAH@std@@YAAEAPEAHAEAPEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAPEAH@std@@YAAEAPEAHAEAPEAH@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEAPEAH@std@@YAAEAPEAHAEAPEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z DB 060H
	DD	imagerel $ip2state$??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z DD 025053401H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@H@std@@YAXAEAPEAHQEAH@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@H@std@@YAPEAHQEAH@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@PEAHPEAH@std@@YAXAEBQEAH0@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEAPEAHAEAPEAH$0A@@?$pair@PEAHPEAH@std@@QEAA@AEAPEAH0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEAPEAHAEAPEAH$0A@@?$pair@PEAHPEAH@std@@QEAA@AEAPEAH0@Z DB 060H
	DD	imagerel $ip2state$??$?0AEAPEAHAEAPEAH$0A@@?$pair@PEAHPEAH@std@@QEAA@AEAPEAH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAPEAHAEAPEAH$0A@@?$pair@PEAHPEAH@std@@QEAA@AEAPEAH0@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEAPEAHAEAPEAH$0A@@?$pair@PEAHPEAH@std@@QEAA@AEAPEAH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z DD 025053901H
	DD	011d2322H
	DD	070160025H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z DD 025052f01H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$is_sorted_until@PEAHU?$less@X@std@@@std@@YAPEAHQEAHPEAHU?$less@X@0@@Z DD 025053401H
	DD	0118231dH
	DD	070110029H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?RAEAHAEAH@?$less@X@std@@QEBA_NAEAH0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?RAEAHAEAH@?$less@X@std@@QEBA_NAEAH0@Z DB 060H
	DD	imagerel $ip2state$??$?RAEAHAEAH@?$less@X@std@@QEBA_NAEAH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RAEAHAEAH@?$less@X@std@@QEBA_NAEAH0@Z DD 025053419H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?RAEAHAEAH@?$less@X@std@@QEBA_NAEAH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z DB 060H
	DD	imagerel $ip2state$??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z DD 035053419H
	DD	0118331dH
	DD	070110023H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@AEAV01@$0A@@?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@AEAV01@$0A@@?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z DB 060H
	DD	imagerel $ip2state$??$?0AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@AEAV01@$0A@@?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@AEAV01@$0A@@?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z DD 025053419H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@AEAV01@$0A@@?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBQEAH@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Minmax_element_unchecked@PEAHU?$less@X@std@@@std@@YA?AU?$pair@PEAHPEAH@0@PEAH0U?$less@X@0@@Z DD 025064b19H
	DD	011e2323H
	DD	070170026H
	DD	050156016H
	DD	imagerel __GSHandlerCheck
	DD	0128H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Minmax_element_unchecked@PEAHU?$less@X@std@@@std@@YA?AU?$pair@PEAHPEAH@0@PEAH0U?$less@X@0@@Z$rtcName$0 DB 05fH ; std::_Minmax_element_unchecked<int *,std::less<void> >
	DB	046H
	DB	06fH
	DB	075H
	DB	06eH
	DB	064H
	DB	00H
	ORG $+9
??$_Minmax_element_unchecked@PEAHU?$less@X@std@@@std@@YA?AU?$pair@PEAHPEAH@0@PEAH0U?$less@X@0@@Z$rtcVarDesc DD 028H ; std::_Minmax_element_unchecked<int *,std::less<void> >
	DD	010H
	DQ	FLAT:??$_Minmax_element_unchecked@PEAHU?$less@X@std@@@std@@YA?AU?$pair@PEAHPEAH@0@PEAH0U?$less@X@0@@Z$rtcName$0
	ORG $+48
??$_Minmax_element_unchecked@PEAHU?$less@X@std@@@std@@YA?AU?$pair@PEAHPEAH@0@PEAH0U?$less@X@0@@Z$rtcFrameData DD 01H ; std::_Minmax_element_unchecked<int *,std::less<void> >
	DD	00H
	DQ	FLAT:??$_Minmax_element_unchecked@PEAHU?$less@X@std@@@std@@YA?AU?$pair@PEAHPEAH@0@PEAH0U?$less@X@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z DD 025052901H
	DD	010d2312H
	DD	07006001dH
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$03@std@@YA_K_K@Z DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@H@std@@YAPEAHPEAH@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 035052a01H
	DD	010e3313H
	DD	07007002bH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 06H
	DB	00H
	DB	00H
	DB	05H, 04H
	DB	02H
	DB	0d2H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $tryMap$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 025053419H
	DD	0118231dH
	DD	07011003dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z DB 08H
	DB	00H
	DB	00H
	DB	'h'
	DB	04H
	DB	'=', 02H
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z
	DD	imagerel $ip2state$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z DD 025053411H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z DB 08H
	DB	00H
	DB	00H
	DB	0a8H
	DB	04H
	DB	'9', 03H
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z
	DD	imagerel $ip2state$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z DD 025054a19H
	DD	011d2322H
	DD	07016002dH
	DD	05015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z
	DD	015aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z$rtcName$0 DB 05fH ; std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
	DB	055H
	DB	04cH
	DB	061H
	DB	073H
	DB	074H
	DB	00H
	ORG $+9
??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z$rtcVarDesc DD 048H ; std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
	DD	08H
	DQ	FLAT:??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z$rtcName$0
	ORG $+48
??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z$rtcFrameData DD 01H ; std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
	DD	00H
	DQ	FLAT:??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped_unverified@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YAAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z DB 08H
	DB	00H
	DB	00H
	DB	0a8H
	DB	04H
	DB	'e', 03H
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z
	DD	imagerel $ip2state$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z DD 025054a19H
	DD	011d2322H
	DD	070160035H
	DD	05015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z
	DD	019aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z$rtcName$0 DB 05fH ; std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
	DB	052H
	DB	065H
	DB	073H
	DB	075H
	DB	06cH
	DB	074H
	DB	00H
	ORG $+8
??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z$rtcVarDesc DD 028H ; std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
	DD	010H
	DQ	FLAT:??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z$rtcName$0
	ORG $+48
??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z$rtcFrameData DD 01H ; std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
	DD	00H
	DQ	FLAT:??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 06H
	DB	00H
	DB	00H
	DB	09eH
	DB	02H
	DB	0f1H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
	DD	imagerel $ip2state$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025052f11H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'9', 02H
	DB	02H
	DB	'V'
	DB	04H
	DB	'r'
	DB	02H
	DB	','
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	imagerel $ip2state$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 025054519H
	DD	0118231dH
	DD	070110033H
	DD	05010H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
	DD	018aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$0 DB 024H ; std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DB	053H
	DB	031H
	DB	037H
	DB	00H
	ORG $+3
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$1 DB 05fH ; std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$2 DB 05fH ; std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+1
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcFrameData DD 03H ; std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DD	00H
	DQ	FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcVarDesc
	ORG $+8
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcVarDesc DD 0b8H ; std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
	DD	08H
	DQ	FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$2
	DD	088H
	DD	010H
	DQ	FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$1
	DD	044H
	DD	01H
	DQ	FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcName$0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 025052f01H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z DB 060H
	DD	imagerel $ip2state$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z DD 025053401H
	DD	0118231dH
	DD	070110039H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DB 08H
	DB	00H
	DB	00H
	DB	'^'
	DB	04H
	DB	0cdH, 02H
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DB 028H
	DD	imagerel $stateUnwindMap$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
	DD	imagerel $ip2state$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DD 025052f11H
	DD	01132318H
	DD	0700c0045H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z DB 08H
	DB	00H
	DB	00H
	DB	'|'
	DB	04H
	DB	0dH, 03H
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z DB 028H
	DD	imagerel $stateUnwindMap$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z
	DD	imagerel $ip2state$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z DD 025053411H
	DD	0118231dH
	DD	070110045H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DB 08H
	DB	00H
	DB	00H
	DB	'^'
	DB	04H
	DB	'L'
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DB 028H
	DD	imagerel $stateUnwindMap$??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
	DD	imagerel $ip2state$??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DD 025052f11H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$3@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$2@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z DB 0eH
	DB	00H
	DB	00H
	DB	0a8H
	DB	06H
	DB	0ccH
	DB	08H
	DB	'-', 02H
	DB	06H
	DB	014H
	DB	04H
	DB	01aH
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z DB 08H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$2@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$3@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z DB 028H
	DD	imagerel $stateUnwindMap$??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z
	DD	imagerel $ip2state$??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z DD 025054a19H
	DD	011d2322H
	DD	07016002fH
	DD	05015H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z
	DD	016aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z$rtcName$0 DB 05fH ; std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >
	DB	055H
	DB	044H
	DB	065H
	DB	073H
	DB	074H
	DB	00H
	ORG $+9
??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z$rtcVarDesc DD 068H ; std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >
	DD	018H
	DQ	FLAT:??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z$rtcName$0
	ORG $+48
??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z$rtcFrameData DD 01H ; std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >
	DD	00H
	DQ	FLAT:??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@QEBA@H@Z DD 025052e01H
	DD	01122317H
	DD	0700b001fH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DB 08H
	DB	00H
	DB	00H
	DB	'|'
	DB	04H
	DB	0dH, 03H
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DB 028H
	DD	imagerel $stateUnwindMap$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
	DD	imagerel $ip2state$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z DD 025053411H
	DD	0118231dH
	DD	070110045H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 0aH
	DB	00H
	DB	00H
	DB	'9', 04H
	DB	02H
	DB	'<'
	DB	04H
	DB	0d1H, 0aH
	DB	02H
	DB	08aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 02H
	DB	02H
	DB	02H
	DB	04H
	DD	imagerel $handlerMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 06H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA
	DB	028H
	DB	030H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DB 038H
	DD	imagerel $stateUnwindMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $tryMap$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	imagerel $ip2state$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z DD 025054019H
	DD	01132318H
	DD	0700c0047H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
	DD	0223H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0 DB 05fH ; std::operator<<<std::char_traits<char> >
	DB	04fH
	DB	06bH
	DB	00H
	ORG $+12
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc DD 088H ; std::operator<<<std::char_traits<char> >
	DD	010H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcName$0
	ORG $+48
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData DD 01H ; std::operator<<<std::char_traits<char> >
	DD	00H
	DQ	FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z DB 08H
	DB	00H
	DB	00H
	DB	'h'
	DB	04H
	DB	0e6H
	DB	02H
	DB	01aH
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z DB 028H
	DD	imagerel $stateUnwindMap$??$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z
	DD	imagerel $ip2state$??$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z DD 025053411H
	DD	0118231dH
	DD	070110025H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z DD 035052f01H
	DD	01133318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAXAEBV12@@Z DD 035052f01H
	DD	01133318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_NAEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_JAEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ DD 035052a01H
	DD	010e3313H
	DD	070070023H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ DD 035052a01H
	DD	010e3313H
	DD	070070023H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__autoclassinit2@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z DD 05052d01H
	DD	01130316H
	DD	0700c0019H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z DD 025054519H
	DD	0118231dH
	DD	070110029H
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcName$0 DB 05fH ; std::vector<int,std::allocator<int> >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcVarDesc DD 024H ; std::vector<int,std::allocator<int> >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcFrameData DD 01H ; std::vector<int,std::allocator<int> >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	07007002fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z DD 025053901H
	DD	011d2322H
	DD	07016002fH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c0031H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00@Z DD 035053901H
	DD	011d3322H
	DD	070160023H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00U?$integral_constant@_N$00@2@@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Ufill@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHPEAH_KU_Value_init_tag@2@@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DB 060H
	DD	imagerel $ip2state$?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD 025052a19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DB 060H
	DD	imagerel $ip2state$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD 025052a19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DB 060H
	DD	imagerel $ip2state$?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ DD 025052a19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ DB 060H
	DD	imagerel $ip2state$?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ DB 060H
	DD	imagerel $ip2state$?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ DB 060H
	DD	imagerel $ip2state$?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ DD 025052f19H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ DB 060H
	DD	imagerel $ip2state$?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ DD 025052f19H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ DD 025053b19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
	DD	013bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	DD	01H
	DQ	FLAT:??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
	DD	00H
	DQ	FLAT:??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z DD 025053401H
	DD	0118231dH
	DD	070110025H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z DB 060H
	DD	imagerel $ip2state$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@H@std@@QEAAPEAH_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$allocator@H@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$allocator@H@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$allocator@H@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@H@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$allocator@H@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DB 060H
	DD	imagerel $ip2state$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DB 060H
	DD	imagerel $ip2state$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ DD 025051e19H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DB 060H
	DD	imagerel $ip2state$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z DD 025052f19H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DB 060H
	DD	imagerel $ip2state$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD 035052a19H
	DD	010e3313H
	DD	070070023H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 060H
	DD	imagerel $ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD 025054019H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
	DD	013bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::_Adopt
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$1 DB 05fH ; std::_Iterator_base12::_Adopt
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcVarDesc DD 064H ; std::_Iterator_base12::_Adopt
	DD	04H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$1
	DD	044H
	DD	04H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$0
	ORG $+96
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcFrameData DD 02H ; std::_Iterator_base12::_Adopt
	DD	00H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Iterator_base12@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Iterator_base12@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Iterator_base12@std@@QEAA@XZ DD 025053b19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??1_Iterator_base12@std@@QEAA@XZ
	DD	0fbH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1_Iterator_base12@std@@QEAA@XZ$rtcName$0 DB 05fH	; std::_Iterator_base12::~_Iterator_base12
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??1_Iterator_base12@std@@QEAA@XZ$rtcVarDesc DD 024H	; std::_Iterator_base12::~_Iterator_base12
	DD	04H
	DQ	FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1_Iterator_base12@std@@QEAA@XZ$rtcFrameData DD 01H	; std::_Iterator_base12::~_Iterator_base12
	DD	00H
	DQ	FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 060H
	DD	imagerel $ip2state$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD 025054019H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
	DD	0fbH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::operator=
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcVarDesc DD 024H ; std::_Iterator_base12::operator=
	DD	04H
	DQ	FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcName$0
	ORG $+48
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcFrameData DD 01H ; std::_Iterator_base12::operator=
	DD	00H
	DQ	FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DB 060H
	DD	imagerel $ip2state$??0_Iterator_base12@std@@QEAA@AEBU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_Iterator_base12@std@@QEAA@AEBU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Iterator_base12@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_Iterator_base12@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	011bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DB 060H
	DD	imagerel $ip2state$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 035052f01H
	DD	01133318H
	DD	0700c002fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max@?$numeric_limits@_J@std@@SA_JXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max@?$numeric_limits@_J@std@@SA_JXZ DB 060H
	DD	imagerel $ip2state$?max@?$numeric_limits@_J@std@@SA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 025051e19H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?max@?$numeric_limits@_J@std@@SA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 025051e01H
	DD	010a230fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 060H
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 060H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 060H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@QEBDH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@QEBDH@Z DB 060H
	DD	imagerel $ip2state$??0exception@std@@QEAA@QEBDH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@QEBDH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??2@YAPEAX_KPEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??2@YAPEAX_KPEAX@Z DB 060H
	DD	imagerel $ip2state$??2@YAPEAX_KPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??2@YAPEAX_KPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$18@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$15@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$10@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$6@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?foo@AlgorithmCpp@@AEAAXXZ DB 01aH
	DB	00H
	DB	00H
	DB	0e6H
	DB	02H
	DB	092H
	DB	04H
	DB	'm', 06H
	DB	06H
	DB	']', 06H
	DB	08H
	DB	0d9H, 06H
	DB	0aH
	DB	0f9H, 02H
	DB	0cH
	DB	0e6H
	DB	0aH
	DB	01aH
	DB	08H
	DB	01aH
	DB	06H
	DB	01aH
	DB	04H
	DB	01aH
	DB	02H
	DB	014H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?foo@AlgorithmCpp@@AEAAXXZ DB 0cH
	DB	0eH
	DD	imagerel ?dtor$0@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$6@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$10@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$15@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
	DB	02eH
	DD	imagerel ?dtor$18@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?foo@AlgorithmCpp@@AEAAXXZ DB 028H
	DD	imagerel $stateUnwindMap$?foo@AlgorithmCpp@@AEAAXXZ
	DD	imagerel $ip2state$?foo@AlgorithmCpp@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?foo@AlgorithmCpp@@AEAAXXZ DD 035053b19H
	DD	010e3313H
	DD	070070157H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?foo@AlgorithmCpp@@AEAAXXZ
	DD	0aaaH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?foo@AlgorithmCpp@@AEAAXXZ$rtcName$0 DB 076H		; AlgorithmCpp::foo
	DB	00H
	ORG $+2
?foo@AlgorithmCpp@@AEAAXXZ$rtcName$1 DB 076H		; AlgorithmCpp::foo
	DB	031H
	DB	00H
	ORG $+1
?foo@AlgorithmCpp@@AEAAXXZ$rtcName$2 DB 072H		; AlgorithmCpp::foo
	DB	065H
	DB	074H
	DB	00H
?foo@AlgorithmCpp@@AEAAXXZ$rtcName$3 DB 069H		; AlgorithmCpp::foo
	DB	074H
	DB	00H
	ORG $+1
?foo@AlgorithmCpp@@AEAAXXZ$rtcName$4 DB 070H		; AlgorithmCpp::foo
	DB	06fH
	DB	073H
	DB	00H
	ORG $+12
?foo@AlgorithmCpp@@AEAAXXZ$rtcVarDesc DD 0238H		; AlgorithmCpp::foo
	DD	018H
	DQ	FLAT:?foo@AlgorithmCpp@@AEAAXXZ$rtcName$4
	DD	0188H
	DD	018H
	DQ	FLAT:?foo@AlgorithmCpp@@AEAAXXZ$rtcName$3
	DD	0138H
	DD	030H
	DQ	FLAT:?foo@AlgorithmCpp@@AEAAXXZ$rtcName$2
	DD	078H
	DD	020H
	DQ	FLAT:?foo@AlgorithmCpp@@AEAAXXZ$rtcName$1
	DD	038H
	DD	020H
	DQ	FLAT:?foo@AlgorithmCpp@@AEAAXXZ$rtcName$0
	ORG $+240
?foo@AlgorithmCpp@@AEAAXXZ$rtcFrameData DD 05H		; AlgorithmCpp::foo
	DD	00H
	DQ	FLAT:?foo@AlgorithmCpp@@AEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?run@AlgorithmCpp@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX@Z
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Verify_range@H@std@@YAXQEBH0@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
??$_Verify_range@H@std@@YAXQEBH0@Z PROC			; std::_Verify_range<int>, COMDAT

; 191  :     const _Ty* const _First, const _Ty* const _Last) noexcept { // special case range verification for pointers

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
$LN4@Verify_ran:

; 192  :     _STL_VERIFY(_First <= _Last, "transposed pointer range");

  0003c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Last$[rbp]
  00043	48 39 85 e0 00
	00 00		 cmp	 QWORD PTR _First$[rbp], rax
  0004a	77 02		 ja	 SHORT $LN7@Verify_ran
  0004c	eb 6d		 jmp	 SHORT $LN9@Verify_ran
$LN7@Verify_ran:
  0004e	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@HAJGEHKO@transposed?5pointer?5range@
  00055	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0005a	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00061	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00066	45 33 c9	 xor	 r9d, r9d
  00069	41 b8 c0 00 00
	00		 mov	 r8d, 192		; 000000c0H
  0006f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GK@FAHAKJIH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00076	b9 02 00 00 00	 mov	 ecx, 2
  0007b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00081	90		 npad	 1
  00082	83 f8 01	 cmp	 eax, 1
  00085	75 03		 jne	 SHORT $LN11@Verify_ran
  00087	cc		 int	 3
  00088	33 c0		 xor	 eax, eax
$LN11@Verify_ran:
  0008a	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00093	41 b9 c0 00 00
	00		 mov	 r9d, 192		; 000000c0H
  00099	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NE@PFDEEMPK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  000a7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@FJIKMGFD@?$AA?$CC?$AAt?$AAr?$AAa?$AAn?$AAs?$AAp?$AAo?$AAs?$AAe?$AAd?$AA?5?$AAp?$AAo?$AAi@
  000ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000b4	90		 npad	 1
  000b5	33 c0		 xor	 eax, eax
  000b7	85 c0		 test	 eax, eax
  000b9	75 93		 jne	 SHORT $LN7@Verify_ran
$LN9@Verify_ran:
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	0f 85 77 ff ff
	ff		 jne	 $LN4@Verify_ran

; 193  : }

  000c5	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  000cc	5f		 pop	 rdi
  000cd	5d		 pop	 rbp
  000ce	c3		 ret	 0
??$_Verify_range@H@std@@YAXQEBH0@Z ENDP			; std::_Verify_range<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAPEAH@std@@YAAEAPEAHAEAPEAH@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAPEAH@std@@YAAEAPEAHAEAPEAH@Z PROC		; std::forward<int * &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEAPEAH@std@@YAAEAPEAHAEAPEAH@Z ENDP		; std::forward<int * &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z PROC		; std::_Refancy<int *,0>, COMDAT

; 315  : _Pointer _Refancy(_Pointer _Ptr) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 316  :     return _Ptr;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]

; 317  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z ENDP		; std::_Refancy<int *,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z
_TEXT	SEGMENT
_First_ch$ = 8
_Last_ch$ = 40
_Dest_ch$ = 72
_Count$ = 104
_First$ = 352
_Last$ = 360
_Dest$ = 368
??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z PROC	; std::_Copy_memmove<int *,int *>, COMDAT

; 1739 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) { // implement copy-like function as memmove

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR [rsp+392]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1740 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

  00040	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  00047	48 89 45 08	 mov	 QWORD PTR _First_ch$[rbp], rax

; 1741 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

  0004b	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR _Last$[rbp]
  00052	48 89 45 28	 mov	 QWORD PTR _Last_ch$[rbp], rax

; 1742 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

  00056	48 8b 85 70 01
	00 00		 mov	 rax, QWORD PTR _Dest$[rbp]
  0005d	48 89 45 48	 mov	 QWORD PTR _Dest_ch$[rbp], rax

; 1743 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

  00061	48 8b 45 08	 mov	 rax, QWORD PTR _First_ch$[rbp]
  00065	48 8b 4d 28	 mov	 rcx, QWORD PTR _Last_ch$[rbp]
  00069	48 2b c8	 sub	 rcx, rax
  0006c	48 8b c1	 mov	 rax, rcx
  0006f	48 89 45 68	 mov	 QWORD PTR _Count$[rbp], rax

; 1744 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

  00073	4c 8b 45 68	 mov	 r8, QWORD PTR _Count$[rbp]
  00077	48 8b 55 08	 mov	 rdx, QWORD PTR _First_ch$[rbp]
  0007b	48 8b 4d 48	 mov	 rcx, QWORD PTR _Dest_ch$[rbp]
  0007f	e8 00 00 00 00	 call	 memmove

; 1745 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

  00084	48 8b 45 68	 mov	 rax, QWORD PTR _Count$[rbp]
  00088	48 8b 4d 48	 mov	 rcx, QWORD PTR _Dest_ch$[rbp]
  0008c	48 03 c8	 add	 rcx, rax
  0008f	48 8b c1	 mov	 rax, rcx

; 1746 : }

  00092	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  00099	5f		 pop	 rdi
  0009a	5d		 pop	 rbp
  0009b	c3		 ret	 0
??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z ENDP	; std::_Copy_memmove<int *,int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Seek_wrapped@H@std@@YAXAEAPEAHQEAH@Z
_TEXT	SEGMENT
_It$ = 224
_UIt$ = 232
??$_Seek_wrapped@H@std@@YAXAEAPEAHQEAH@Z PROC		; std::_Seek_wrapped<int>, COMDAT

; 435  : constexpr void _Seek_wrapped(_Ty*& _It, _Ty* const _UIt) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 436  :     _It = _UIt;

  0003b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _It$[rbp]
  00042	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _UIt$[rbp]
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx

; 437  : }

  0004c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00053	5f		 pop	 rdi
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
??$_Seek_wrapped@H@std@@YAXAEAPEAHQEAH@Z ENDP		; std::_Seek_wrapped<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@H@std@@YAPEAHQEAH@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Get_unwrapped@H@std@@YAPEAHQEAH@Z PROC		; std::_Get_unwrapped<int>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 276  :     return _Ptr;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]

; 277  : }

  0003d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00044	5f		 pop	 rdi
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
??$_Get_unwrapped@H@std@@YAPEAHQEAH@Z ENDP		; std::_Get_unwrapped<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@PEAHPEAH@std@@YAXAEBQEAH0@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
??$_Adl_verify_range@PEAHPEAH@std@@YAXAEBQEAH0@Z PROC	; std::_Adl_verify_range<int *,int *>, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  0003b	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Last$[rbp]
  00042	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00045	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  0004c	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0004f	e8 00 00 00 00	 call	 ??$_Verify_range@H@std@@YAXQEBH0@Z ; std::_Verify_range<int>

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  00054	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005b	5f		 pop	 rdi
  0005c	5d		 pop	 rbp
  0005d	c3		 ret	 0
??$_Adl_verify_range@PEAHPEAH@std@@YAXAEBQEAH0@Z ENDP	; std::_Adl_verify_range<int *,int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEAV10@@Z PROC ; std::forward<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEAV10@@Z ENDP ; std::forward<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0AEAPEAHAEAPEAH$0A@@?$pair@PEAHPEAH@std@@QEAA@AEAPEAH0@Z
_TEXT	SEGMENT
this$ = 224
_Val1$ = 232
_Val2$ = 240
??$?0AEAPEAHAEAPEAH$0A@@?$pair@PEAHPEAH@std@@QEAA@AEAPEAH0@Z PROC ; std::pair<int *,int *>::pair<int *,int *><int * &,int * &,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__18CBD245_utility
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1
  00041	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Val1$[rbp]
  00048	e8 00 00 00 00	 call	 ??$forward@AEAPEAH@std@@YAAEAPEAHAEAPEAH@Z ; std::forward<int * &>
  0004d	90		 npad	 1
  0004e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00058	48 89 01	 mov	 QWORD PTR [rcx], rax
  0005b	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Val2$[rbp]
  00062	e8 00 00 00 00	 call	 ??$forward@AEAPEAH@std@@YAAEAPEAHAEAPEAH@Z ; std::forward<int * &>
  00067	90		 npad	 1
  00068	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00072	48 89 41 08	 mov	 QWORD PTR [rcx+8], rax
  00076	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0007d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00084	5f		 pop	 rdi
  00085	5d		 pop	 rbp
  00086	c3		 ret	 0
??$?0AEAPEAHAEAPEAH$0A@@?$pair@PEAHPEAH@std@@QEAA@AEAPEAH0@Z ENDP ; std::pair<int *,int *>::pair<int *,int *><int * &,int * &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_First$ = 288
_Last$ = 296
_Dest$ = 304
_Al$ = 312
??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_move<int *,std::allocator<int> >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

  00045	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0004c	e8 00 00 00 00	 call	 ??$_Get_unwrapped@H@std@@YAPEAHQEAH@Z ; std::_Get_unwrapped<int>
  00051	48 89 45 08	 mov	 QWORD PTR _UFirst$[rbp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

  00055	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0005c	e8 00 00 00 00	 call	 ??$_Get_unwrapped@H@std@@YAPEAHQEAH@Z ; std::_Get_unwrapped<int>
  00061	48 89 45 28	 mov	 QWORD PTR _ULast$[rbp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

  00065	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  0006c	e8 00 00 00 00	 call	 ??$_Unfancy@H@std@@YAPEAHPEAH@Z ; std::_Unfancy<int>
  00071	4c 8b c0	 mov	 r8, rax
  00074	48 8b 55 28	 mov	 rdx, QWORD PTR _ULast$[rbp]
  00078	48 8b 4d 08	 mov	 rcx, QWORD PTR _UFirst$[rbp]
  0007c	e8 00 00 00 00	 call	 ??$_Copy_memmove@PEAHPEAH@std@@YAPEAHPEAH00@Z ; std::_Copy_memmove<int *,int *>

; 1738 :         return _Dest + (_ULast - _UFirst);

  00081	48 8b 45 08	 mov	 rax, QWORD PTR _UFirst$[rbp]
  00085	48 8b 4d 28	 mov	 rcx, QWORD PTR _ULast$[rbp]
  00089	48 2b c8	 sub	 rcx, rax
  0008c	48 8b c1	 mov	 rax, rcx
  0008f	48 c1 f8 02	 sar	 rax, 2
  00093	48 8b 8d 30 01
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  0009a	48 8d 04 81	 lea	 rax, QWORD PTR [rcx+rax*4]

; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1744 :         }
; 1745 : 
; 1746 :         return _Backout._Release();
; 1747 :     }
; 1748 : }

  0009e	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000a5	5f		 pop	 rdi
  000a6	5d		 pop	 rbp
  000a7	c3		 ret	 0
??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_move<int *,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z
_TEXT	SEGMENT
_First_ch$ = 8
_Last_ch$ = 40
_First$ = 288
_Last$ = 296
??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z PROC		; std::_Zero_range<int *>, COMDAT

; 1898 : _Ptr _Zero_range(const _Ptr _First, const _Ptr _Last) { // fill [_First, _Last) with zeroes

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1899 :     char* const _First_ch = reinterpret_cast<char*>(_First);

  0003b	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  00042	48 89 45 08	 mov	 QWORD PTR _First_ch$[rbp], rax

; 1900 :     char* const _Last_ch  = reinterpret_cast<char*>(_Last);

  00046	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Last$[rbp]
  0004d	48 89 45 28	 mov	 QWORD PTR _Last_ch$[rbp], rax

; 1901 :     _CSTD memset(_First_ch, 0, static_cast<size_t>(_Last_ch - _First_ch));

  00051	48 8b 45 08	 mov	 rax, QWORD PTR _First_ch$[rbp]
  00055	48 8b 4d 28	 mov	 rcx, QWORD PTR _Last_ch$[rbp]
  00059	48 2b c8	 sub	 rcx, rax
  0005c	48 8b c1	 mov	 rax, rcx
  0005f	4c 8b c0	 mov	 r8, rax
  00062	33 d2		 xor	 edx, edx
  00064	48 8b 4d 08	 mov	 rcx, QWORD PTR _First_ch$[rbp]
  00068	e8 00 00 00 00	 call	 memset

; 1902 :     return _Last;

  0006d	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Last$[rbp]

; 1903 : }

  00074	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0007b	5f		 pop	 rdi
  0007c	5d		 pop	 rbp
  0007d	c3		 ret	 0
??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z ENDP		; std::_Zero_range<int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

  00040	48 6b 85 f0 00
	00 00 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
  00048	48 8b d0	 mov	 rdx, rax
  0004b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00052	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

  00057	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005e	5f		 pop	 rdi
  0005f	5d		 pop	 rbp
  00060	c3		 ret	 0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$is_sorted_until@PEAHU?$less@X@std@@@std@@YAPEAHQEAHPEAHU?$less@X@0@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UNext$1 = 72
_First$ = 320
_Last$ = 328
_Pred$ = 336
??$is_sorted_until@PEAHU?$less@X@std@@@std@@YAPEAHQEAHPEAHU?$less@X@0@@Z PROC ; std::is_sorted_until<int *,std::less<void> >, COMDAT

; 4619 : _NODISCARD _FwdIt is_sorted_until(const _FwdIt _First, _FwdIt _Last, _Pr _Pred) {

$LN8:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4EB666AB_algorithm
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4620 :     // find extent of range that is ordered by predicate
; 4621 :     _Adl_verify_range(_First, _Last);

  00040	48 8d 95 48 01
	00 00		 lea	 rdx, QWORD PTR _Last$[rbp]
  00047	48 8d 8d 40 01
	00 00		 lea	 rcx, QWORD PTR _First$[rbp]
  0004e	e8 00 00 00 00	 call	 ??$_Adl_verify_range@PEAHPEAH@std@@YAXAEBQEAH0@Z ; std::_Adl_verify_range<int *,int *>

; 4622 :     auto _UFirst = _Get_unwrapped(_First);

  00053	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@H@std@@YAPEAHQEAH@Z ; std::_Get_unwrapped<int>
  0005f	48 89 45 08	 mov	 QWORD PTR _UFirst$[rbp], rax

; 4623 :     auto _ULast  = _Get_unwrapped(_Last);

  00063	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0006a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@H@std@@YAPEAHQEAH@Z ; std::_Get_unwrapped<int>
  0006f	48 89 45 28	 mov	 QWORD PTR _ULast$[rbp], rax

; 4624 :     if (_UFirst != _ULast) {

  00073	48 8b 45 28	 mov	 rax, QWORD PTR _ULast$[rbp]
  00077	48 39 45 08	 cmp	 QWORD PTR _UFirst$[rbp], rax
  0007b	74 53		 je	 SHORT $LN5@is_sorted_

; 4625 :         for (auto _UNext = _UFirst; ++_UNext != _ULast; ++_UFirst) {

  0007d	48 8b 45 08	 mov	 rax, QWORD PTR _UFirst$[rbp]
  00081	48 89 45 48	 mov	 QWORD PTR _UNext$1[rbp], rax
  00085	eb 0c		 jmp	 SHORT $LN4@is_sorted_
$LN2@is_sorted_:
  00087	48 8b 45 08	 mov	 rax, QWORD PTR _UFirst$[rbp]
  0008b	48 83 c0 04	 add	 rax, 4
  0008f	48 89 45 08	 mov	 QWORD PTR _UFirst$[rbp], rax
$LN4@is_sorted_:
  00093	48 8b 45 48	 mov	 rax, QWORD PTR _UNext$1[rbp]
  00097	48 83 c0 04	 add	 rax, 4
  0009b	48 89 45 48	 mov	 QWORD PTR _UNext$1[rbp], rax
  0009f	48 8b 45 28	 mov	 rax, QWORD PTR _ULast$[rbp]
  000a3	48 39 45 48	 cmp	 QWORD PTR _UNext$1[rbp], rax
  000a7	74 27		 je	 SHORT $LN3@is_sorted_

; 4626 :             if (_DEBUG_LT_PRED(_Pred, *_UNext, *_UFirst)) {

  000a9	4c 8b 45 08	 mov	 r8, QWORD PTR _UFirst$[rbp]
  000ad	48 8b 55 48	 mov	 rdx, QWORD PTR _UNext$1[rbp]
  000b1	48 8d 8d 50 01
	00 00		 lea	 rcx, QWORD PTR _Pred$[rbp]
  000b8	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z ; std::_Debug_lt_pred<std::less<void> &,int &,int &,0>
  000bd	0f b6 c0	 movzx	 eax, al
  000c0	85 c0		 test	 eax, eax
  000c2	74 0a		 je	 SHORT $LN6@is_sorted_

; 4627 :                 _ULast = _UNext;

  000c4	48 8b 45 48	 mov	 rax, QWORD PTR _UNext$1[rbp]
  000c8	48 89 45 28	 mov	 QWORD PTR _ULast$[rbp], rax

; 4628 :                 break;

  000cc	eb 02		 jmp	 SHORT $LN3@is_sorted_
$LN6@is_sorted_:

; 4629 :             }
; 4630 :         }

  000ce	eb b7		 jmp	 SHORT $LN2@is_sorted_
$LN3@is_sorted_:
$LN5@is_sorted_:

; 4631 :     }
; 4632 : 
; 4633 :     _Seek_wrapped(_Last, _ULast);

  000d0	48 8b 55 28	 mov	 rdx, QWORD PTR _ULast$[rbp]
  000d4	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR _Last$[rbp]
  000db	e8 00 00 00 00	 call	 ??$_Seek_wrapped@H@std@@YAXAEAPEAHQEAH@Z ; std::_Seek_wrapped<int>

; 4634 :     return _Last;

  000e0	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR _Last$[rbp]

; 4635 : }

  000e7	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  000ee	5f		 pop	 rdi
  000ef	5d		 pop	 rbp
  000f0	c3		 ret	 0
??$is_sorted_until@PEAHU?$less@X@std@@@std@@YAPEAHQEAHPEAHU?$less@X@0@@Z ENDP ; std::is_sorted_until<int *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$?RAEAHAEAH@?$less@X@std@@QEBA_NAEAH0@Z
_TEXT	SEGMENT
tv65 = 192
this$ = 240
_Left$ = 248
_Right$ = 256
??$?RAEAHAEAH@?$less@X@std@@QEBA_NAEAH0@Z PROC		; std::less<void>::operator()<int &,int &>, COMDAT

; 244  :             static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right)) { // transparently apply operator< to operands

$LN5:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 245  :         return static_cast<_Ty1&&>(_Left) < static_cast<_Ty2&&>(_Right);

  00041	48 8b 85 f8 00
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00048	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004f	8b 09		 mov	 ecx, DWORD PTR [rcx]
  00051	39 08		 cmp	 DWORD PTR [rax], ecx
  00053	7d 0c		 jge	 SHORT $LN3@operator
  00055	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv65[rbp], 1
  0005f	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00061	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv65[rbp], 0
$LN4@operator:
  0006b	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv65[rbp]

; 246  :     }

  00072	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00079	5f		 pop	 rdi
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
??$?RAEAHAEAH@?$less@X@std@@QEBA_NAEAH0@Z ENDP		; std::less<void>::operator()<int &,int &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z
_TEXT	SEGMENT
_Result$ = 4
_Pred$ = 256
_Left$ = 264
_Right$ = 272
??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z PROC ; std::_Debug_lt_pred<std::less<void> &,int &,int &,0>, COMDAT

; 617  :     _NOEXCEPT_COND(noexcept(_Pred(_Left, _Right)) && noexcept(_Pred(_Right, _Left))) {

$LN13:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00018	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 618  :     // test if _Pred(_Left, _Right) and _Pred is strict weak ordering, when the arguments are the cv-same-type
; 619  :     const auto _Result = static_cast<bool>(_Pred(_Left, _Right));

  00041	4c 8b 85 10 01
	00 00		 mov	 r8, QWORD PTR _Right$[rbp]
  00048	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Left$[rbp]
  0004f	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Pred$[rbp]
  00056	e8 00 00 00 00	 call	 ??$?RAEAHAEAH@?$less@X@std@@QEBA_NAEAH0@Z ; std::less<void>::operator()<int &,int &>
  0005b	90		 npad	 1
  0005c	88 45 04	 mov	 BYTE PTR _Result$[rbp], al

; 620  :     if (_Result) {

  0005f	0f b6 45 04	 movzx	 eax, BYTE PTR _Result$[rbp]
  00063	85 c0		 test	 eax, eax
  00065	0f 84 9b 00 00
	00		 je	 $LN8@Debug_lt_p
$LN4@Debug_lt_p:

; 621  :         _STL_VERIFY(!_Pred(_Right, _Left), "invalid comparator");

  0006b	4c 8b 85 08 01
	00 00		 mov	 r8, QWORD PTR _Left$[rbp]
  00072	48 8b 95 10 01
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  00079	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Pred$[rbp]
  00080	e8 00 00 00 00	 call	 ??$?RAEAHAEAH@?$less@X@std@@QEBA_NAEAH0@Z ; std::less<void>::operator()<int &,int &>
  00085	90		 npad	 1
  00086	0f b6 c0	 movzx	 eax, al
  00089	85 c0		 test	 eax, eax
  0008b	75 02		 jne	 SHORT $LN7@Debug_lt_p
  0008d	eb 6d		 jmp	 SHORT $LN10@Debug_lt_p
$LN7@Debug_lt_p:
  0008f	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BD@FEEMDEPI@invalid?5comparator@
  00096	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0009b	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000a2	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000a7	45 33 c9	 xor	 r9d, r9d
  000aa	41 b8 6d 02 00
	00		 mov	 r8d, 621		; 0000026dH
  000b0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GK@FAHAKJIH@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000b7	b9 02 00 00 00	 mov	 ecx, 2
  000bc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000c2	90		 npad	 1
  000c3	83 f8 01	 cmp	 eax, 1
  000c6	75 03		 jne	 SHORT $LN12@Debug_lt_p
  000c8	cc		 int	 3
  000c9	33 c0		 xor	 eax, eax
$LN12@Debug_lt_p:
  000cb	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000d4	41 b9 6d 02 00
	00		 mov	 r9d, 621		; 0000026dH
  000da	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NE@PFDEEMPK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000e1	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CI@JONCLBEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAD?$AAe?$AAb?$AAu?$AAg?$AA_?$AAl?$AAt?$AA_@
  000e8	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CK@NDNHPKPI@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAc?$AAo?$AAm?$AAp?$AAa?$AAr@
  000ef	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000f5	90		 npad	 1
  000f6	33 c0		 xor	 eax, eax
  000f8	85 c0		 test	 eax, eax
  000fa	75 93		 jne	 SHORT $LN7@Debug_lt_p
$LN10@Debug_lt_p:
  000fc	33 c0		 xor	 eax, eax
  000fe	85 c0		 test	 eax, eax
  00100	0f 85 65 ff ff
	ff		 jne	 $LN4@Debug_lt_p
$LN8@Debug_lt_p:

; 622  :     }
; 623  : 
; 624  :     return _Result;

  00106	0f b6 45 04	 movzx	 eax, BYTE PTR _Result$[rbp]

; 625  : }

  0010a	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00111	5f		 pop	 rdi
  00112	5d		 pop	 rbp
  00113	c3		 ret	 0
??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z ENDP ; std::_Debug_lt_pred<std::less<void> &,int &,int &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$?0AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@AEAV01@$0A@@?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv81 = 192
tv71 = 192
this$ = 240
_Val1$ = 248
_Val2$ = 256
??$?0AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@AEAV01@$0A@@?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z PROC ; std::pair<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >::pair<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > ><std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &,0>, COMDAT

; 127  :         : first(_STD forward<_Other1>(_Val1)), second(_STD forward<_Other2>(_Val2)) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__18CBD245_utility
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1
  00041	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00048	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv71[rbp], rax
  0004f	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Val1$[rbp]
  00056	e8 00 00 00 00	 call	 ??$forward@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEAV10@@Z ; std::forward<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &>
  0005b	90		 npad	 1
  0005c	48 8b d0	 mov	 rdx, rax
  0005f	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv71[rbp]
  00066	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
  0006b	90		 npad	 1
  0006c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00073	48 83 c0 18	 add	 rax, 24
  00077	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  0007e	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Val2$[rbp]
  00085	e8 00 00 00 00	 call	 ??$forward@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YAAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEAV10@@Z ; std::forward<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &>
  0008a	90		 npad	 1
  0008b	48 8b d0	 mov	 rdx, rax
  0008e	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv81[rbp]
  00095	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
  0009a	90		 npad	 1
  0009b	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a2	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000a9	5f		 pop	 rdi
  000aa	5d		 pop	 rbp
  000ab	c3		 ret	 0
??$?0AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@AEAV01@$0A@@?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z ENDP ; std::pair<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >::pair<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > ><std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBQEAH@Z
_TEXT	SEGMENT
_It$ = 224
_UIt$ = 232
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBQEAH@Z PROC ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int *>, COMDAT

; 415  : constexpr void _Seek_wrapped(_Iter& _It, const _UIter& _UIt) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 416  :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 417  :         _It._Seek_to(_UIt);

  0003b	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _UIt$[rbp]
  00042	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00045	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _It$[rbp]
  0004c	e8 00 00 00 00	 call	 ?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Seek_to

; 418  :     } else {
; 419  :         _It = _UIt;
; 420  :     }
; 421  : }

  00051	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00058	5f		 pop	 rdi
  00059	5d		 pop	 rbp
  0005a	c3		 ret	 0
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBQEAH@Z ENDP ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$_Minmax_element_unchecked@PEAHU?$less@X@std@@@std@@YA?AU?$pair@PEAHPEAH@0@PEAH0U?$less@X@0@@Z
_TEXT	SEGMENT
_Found$ = 8
_Next$4 = 56
__$ArrayPad$ = 264
__$ReturnUdt$ = 304
_First$ = 312
_Last$ = 320
_Pred$ = 328
??$_Minmax_element_unchecked@PEAHU?$less@X@std@@@std@@YA?AU?$pair@PEAHPEAH@0@PEAH0U?$less@X@0@@Z PROC ; std::_Minmax_element_unchecked<int *,std::less<void> >, COMDAT

; 4366 : constexpr pair<_FwdIt, _FwdIt> _Minmax_element_unchecked(_FwdIt _First, _FwdIt _Last, _Pr _Pred) {

$LN17:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	56		 push	 rsi
  00016	57		 push	 rdi
  00017	48 81 ec 30 01
	00 00		 sub	 rsp, 304		; 00000130H
  0001e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00023	48 8b fc	 mov	 rdi, rsp
  00026	b9 4c 00 00 00	 mov	 ecx, 76			; 0000004cH
  0002b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00030	f3 ab		 rep stosd
  00032	48 8b 8c 24 58
	01 00 00	 mov	 rcx, QWORD PTR [rsp+344]
  0003a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00041	48 33 c5	 xor	 rax, rbp
  00044	48 89 85 08 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0004b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4EB666AB_algorithm
  00052	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4367 :     // find smallest and largest elements, using _Pred
; 4368 :     pair<_FwdIt, _FwdIt> _Found(_First, _First);

  00057	4c 8d 85 38 01
	00 00		 lea	 r8, QWORD PTR _First$[rbp]
  0005e	48 8d 95 38 01
	00 00		 lea	 rdx, QWORD PTR _First$[rbp]
  00065	48 8d 4d 08	 lea	 rcx, QWORD PTR _Found$[rbp]
  00069	e8 00 00 00 00	 call	 ??$?0AEAPEAHAEAPEAH$0A@@?$pair@PEAHPEAH@std@@QEAA@AEAPEAH0@Z ; std::pair<int *,int *>::pair<int *,int *><int * &,int * &,0>

; 4369 : 
; 4370 :     if (_First != _Last) {

  0006e	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR _Last$[rbp]
  00075	48 39 85 38 01
	00 00		 cmp	 QWORD PTR _First$[rbp], rax
  0007c	0f 84 6b 01 00
	00		 je	 $LN4@Minmax_ele
$LN2@Minmax_ele:

; 4371 :         while (++_First != _Last) { // process one or two elements

  00082	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  00089	48 83 c0 04	 add	 rax, 4
  0008d	48 89 85 38 01
	00 00		 mov	 QWORD PTR _First$[rbp], rax
  00094	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR _Last$[rbp]
  0009b	48 39 85 38 01
	00 00		 cmp	 QWORD PTR _First$[rbp], rax
  000a2	0f 84 45 01 00
	00		 je	 $LN3@Minmax_ele

; 4372 :             _FwdIt _Next = _First;

  000a8	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  000af	48 89 45 38	 mov	 QWORD PTR _Next$4[rbp], rax

; 4373 :             if (++_Next == _Last) { // process last element

  000b3	48 8b 45 38	 mov	 rax, QWORD PTR _Next$4[rbp]
  000b7	48 83 c0 04	 add	 rax, 4
  000bb	48 89 45 38	 mov	 QWORD PTR _Next$4[rbp], rax
  000bf	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR _Last$[rbp]
  000c6	48 39 45 38	 cmp	 QWORD PTR _Next$4[rbp], rax
  000ca	75 59		 jne	 SHORT $LN5@Minmax_ele

; 4374 :                 if (_DEBUG_LT_PRED(_Pred, *_First, *_Found.first)) {

  000cc	4c 8b 45 08	 mov	 r8, QWORD PTR _Found$[rbp]
  000d0	48 8b 95 38 01
	00 00		 mov	 rdx, QWORD PTR _First$[rbp]
  000d7	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR _Pred$[rbp]
  000de	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z ; std::_Debug_lt_pred<std::less<void> &,int &,int &,0>
  000e3	0f b6 c0	 movzx	 eax, al
  000e6	85 c0		 test	 eax, eax
  000e8	74 0d		 je	 SHORT $LN7@Minmax_ele

; 4375 :                     _Found.first = _First;

  000ea	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  000f1	48 89 45 08	 mov	 QWORD PTR _Found$[rbp], rax
  000f5	eb 29		 jmp	 SHORT $LN8@Minmax_ele
$LN7@Minmax_ele:

; 4376 :                 } else if (!_DEBUG_LT_PRED(_Pred, *_First, *_Found.second)) {

  000f7	4c 8b 45 10	 mov	 r8, QWORD PTR _Found$[rbp+8]
  000fb	48 8b 95 38 01
	00 00		 mov	 rdx, QWORD PTR _First$[rbp]
  00102	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR _Pred$[rbp]
  00109	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z ; std::_Debug_lt_pred<std::less<void> &,int &,int &,0>
  0010e	0f b6 c0	 movzx	 eax, al
  00111	85 c0		 test	 eax, eax
  00113	75 0b		 jne	 SHORT $LN9@Minmax_ele

; 4377 :                     _Found.second = _First;

  00115	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  0011c	48 89 45 10	 mov	 QWORD PTR _Found$[rbp+8], rax
$LN9@Minmax_ele:
$LN8@Minmax_ele:

; 4378 :                 }
; 4379 :             } else { // process next two elements

  00120	e9 c3 00 00 00	 jmp	 $LN6@Minmax_ele
$LN5@Minmax_ele:

; 4380 :                 if (_DEBUG_LT_PRED(_Pred, *_Next, *_First)) { // test _Next for new smallest

  00125	4c 8b 85 38 01
	00 00		 mov	 r8, QWORD PTR _First$[rbp]
  0012c	48 8b 55 38	 mov	 rdx, QWORD PTR _Next$4[rbp]
  00130	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR _Pred$[rbp]
  00137	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z ; std::_Debug_lt_pred<std::less<void> &,int &,int &,0>
  0013c	0f b6 c0	 movzx	 eax, al
  0013f	85 c0		 test	 eax, eax
  00141	74 4e		 je	 SHORT $LN10@Minmax_ele

; 4381 :                     if (_DEBUG_LT_PRED(_Pred, *_Next, *_Found.first)) {

  00143	4c 8b 45 08	 mov	 r8, QWORD PTR _Found$[rbp]
  00147	48 8b 55 38	 mov	 rdx, QWORD PTR _Next$4[rbp]
  0014b	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR _Pred$[rbp]
  00152	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z ; std::_Debug_lt_pred<std::less<void> &,int &,int &,0>
  00157	0f b6 c0	 movzx	 eax, al
  0015a	85 c0		 test	 eax, eax
  0015c	74 08		 je	 SHORT $LN12@Minmax_ele

; 4382 :                         _Found.first = _Next;

  0015e	48 8b 45 38	 mov	 rax, QWORD PTR _Next$4[rbp]
  00162	48 89 45 08	 mov	 QWORD PTR _Found$[rbp], rax
$LN12@Minmax_ele:

; 4383 :                     }
; 4384 :                     if (!_DEBUG_LT_PRED(_Pred, *_First, *_Found.second)) {

  00166	4c 8b 45 10	 mov	 r8, QWORD PTR _Found$[rbp+8]
  0016a	48 8b 95 38 01
	00 00		 mov	 rdx, QWORD PTR _First$[rbp]
  00171	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR _Pred$[rbp]
  00178	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z ; std::_Debug_lt_pred<std::less<void> &,int &,int &,0>
  0017d	0f b6 c0	 movzx	 eax, al
  00180	85 c0		 test	 eax, eax
  00182	75 0b		 jne	 SHORT $LN13@Minmax_ele

; 4385 :                         _Found.second = _First;

  00184	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  0018b	48 89 45 10	 mov	 QWORD PTR _Found$[rbp+8], rax
$LN13@Minmax_ele:

; 4386 :                     }
; 4387 :                 } else { // test _First for new smallest

  0018f	eb 4c		 jmp	 SHORT $LN11@Minmax_ele
$LN10@Minmax_ele:

; 4388 :                     if (_DEBUG_LT_PRED(_Pred, *_First, *_Found.first)) {

  00191	4c 8b 45 08	 mov	 r8, QWORD PTR _Found$[rbp]
  00195	48 8b 95 38 01
	00 00		 mov	 rdx, QWORD PTR _First$[rbp]
  0019c	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR _Pred$[rbp]
  001a3	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z ; std::_Debug_lt_pred<std::less<void> &,int &,int &,0>
  001a8	0f b6 c0	 movzx	 eax, al
  001ab	85 c0		 test	 eax, eax
  001ad	74 0b		 je	 SHORT $LN14@Minmax_ele

; 4389 :                         _Found.first = _First;

  001af	48 8b 85 38 01
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  001b6	48 89 45 08	 mov	 QWORD PTR _Found$[rbp], rax
$LN14@Minmax_ele:

; 4390 :                     }
; 4391 :                     if (!_DEBUG_LT_PRED(_Pred, *_Next, *_Found.second)) {

  001ba	4c 8b 45 10	 mov	 r8, QWORD PTR _Found$[rbp+8]
  001be	48 8b 55 38	 mov	 rdx, QWORD PTR _Next$4[rbp]
  001c2	48 8d 8d 48 01
	00 00		 lea	 rcx, QWORD PTR _Pred$[rbp]
  001c9	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z ; std::_Debug_lt_pred<std::less<void> &,int &,int &,0>
  001ce	0f b6 c0	 movzx	 eax, al
  001d1	85 c0		 test	 eax, eax
  001d3	75 08		 jne	 SHORT $LN15@Minmax_ele

; 4392 :                         _Found.second = _Next;

  001d5	48 8b 45 38	 mov	 rax, QWORD PTR _Next$4[rbp]
  001d9	48 89 45 10	 mov	 QWORD PTR _Found$[rbp+8], rax
$LN15@Minmax_ele:
$LN11@Minmax_ele:

; 4393 :                     }
; 4394 :                 }
; 4395 :                 _First = _Next;

  001dd	48 8b 45 38	 mov	 rax, QWORD PTR _Next$4[rbp]
  001e1	48 89 85 38 01
	00 00		 mov	 QWORD PTR _First$[rbp], rax
$LN6@Minmax_ele:

; 4396 :             }
; 4397 :         }

  001e8	e9 95 fe ff ff	 jmp	 $LN2@Minmax_ele
$LN3@Minmax_ele:
$LN4@Minmax_ele:

; 4398 :     }
; 4399 : 
; 4400 :     return _Found;

  001ed	48 8d 45 08	 lea	 rax, QWORD PTR _Found$[rbp]
  001f1	48 8b bd 30 01
	00 00		 mov	 rdi, QWORD PTR __$ReturnUdt$[rbp]
  001f8	48 8b f0	 mov	 rsi, rax
  001fb	b9 10 00 00 00	 mov	 ecx, 16
  00200	f3 a4		 rep movsb
  00202	48 8b 85 30 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 4401 : }

  00209	48 8b f8	 mov	 rdi, rax
  0020c	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00210	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Minmax_element_unchecked@PEAHU?$less@X@std@@@std@@YA?AU?$pair@PEAHPEAH@0@PEAH0U?$less@X@0@@Z$rtcFrameData
  00217	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0021c	48 8b c7	 mov	 rax, rdi
  0021f	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00226	48 33 cd	 xor	 rcx, rbp
  00229	e8 00 00 00 00	 call	 __security_check_cookie
  0022e	48 8d a5 10 01
	00 00		 lea	 rsp, QWORD PTR [rbp+272]
  00235	5f		 pop	 rdi
  00236	5e		 pop	 rsi
  00237	5d		 pop	 rbp
  00238	c3		 ret	 0
??$_Minmax_element_unchecked@PEAHU?$less@X@std@@@std@@YA?AU?$pair@PEAHPEAH@0@PEAH0U?$less@X@0@@Z ENDP ; std::_Minmax_element_unchecked<int *,std::less<void> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z PROC ; std::_Pass_fn<std::less<void>,0>, COMDAT

; 55   : constexpr _Fn _Pass_fn(_Fn _Val) { // pass functor by value

$LN3:
  00000	88 4c 24 08	 mov	 BYTE PTR [rsp+8], cl
  00004	55		 push	 rbp
  00005	57		 push	 rdi
  00006	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00012	48 8b fc	 mov	 rdi, rsp
  00015	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001f	f3 ab		 rep stosd
  00021	0f b6 8c 24 08
	01 00 00	 movzx	 ecx, BYTE PTR [rsp+264]
  00029	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00030	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 56   :     return _Val;

  00035	0f b6 85 e0 00
	00 00		 movzx	 eax, BYTE PTR _Val$[rbp]

; 57   : }

  0003c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z ENDP ; std::_Pass_fn<std::less<void>,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$03@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Max_possible$1 = 40
_Count$ = 288
??$_Get_size_of_n@$03@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<4>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  00036	c6 45 04 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0003a	48 b8 ff ff ff
	ff ff ff ff 3f	 mov	 rax, 4611686018427387903 ; 3fffffffffffffffH
  00044	48 89 45 28	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 30   :             if (_Count > _Max_possible) {

  00048	48 b8 ff ff ff
	ff ff ff ff 3f	 mov	 rax, 4611686018427387903 ; 3fffffffffffffffH
  00052	48 39 85 20 01
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00059	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  0005b	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00060	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  00067	48 c1 e0 02	 shl	 rax, 2
$LN3@Get_size_o:

; 36   : }

  0006b	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??$_Get_size_of_n@$03@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<4>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z
_TEXT	SEGMENT
_PFirst$1 = 8
_First$ = 256
_Count$ = 264
_Al$ = 272
??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z PROC ; std::_Uninitialized_value_construct_n<std::allocator<int> >, COMDAT

; 1908 :     _Alloc_ptr_t<_Alloc> _First, _Alloc_size_t<_Alloc> _Count, _Alloc& _Al) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1909 :     // value-initialize _Count objects to raw _First, using _Al
; 1910 :     using _Ptrty = typename _Alloc::value_type*;
; 1911 :     if constexpr (_Use_memset_value_construct_v<_Ptrty> && _Uses_default_construct<_Alloc, _Ptrty>::value) {
; 1912 :         (void) _Al;
; 1913 :         auto _PFirst = _Unfancy(_First);

  00040	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00047	e8 00 00 00 00	 call	 ??$_Unfancy@H@std@@YAPEAHPEAH@Z ; std::_Unfancy<int>
  0004c	48 89 45 08	 mov	 QWORD PTR _PFirst$1[rbp], rax

; 1914 :         _Zero_range(_PFirst, _PFirst + _Count);

  00050	48 8b 45 08	 mov	 rax, QWORD PTR _PFirst$1[rbp]
  00054	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  0005b	48 8d 04 88	 lea	 rax, QWORD PTR [rax+rcx*4]
  0005f	48 8b d0	 mov	 rdx, rax
  00062	48 8b 4d 08	 mov	 rcx, QWORD PTR _PFirst$1[rbp]
  00066	e8 00 00 00 00	 call	 ??$_Zero_range@PEAH@std@@YAPEAHQEAH0@Z ; std::_Zero_range<int *>

; 1915 :         return _First + _Count;

  0006b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  00072	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00079	48 8d 04 88	 lea	 rax, QWORD PTR [rax+rcx*4]

; 1916 :     } else {
; 1917 :         _Uninitialized_backout_al<_Alloc> _Backout{_First, _Al};
; 1918 :         for (; 0 < _Count; --_Count) {
; 1919 :             _Backout._Emplace_back();
; 1920 :         }
; 1921 : 
; 1922 :         return _Backout._Release();
; 1923 :     }
; 1924 : }

  0007d	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00084	5f		 pop	 rdi
  00085	5d		 pop	 rbp
  00086	c3		 ret	 0
??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z ENDP ; std::_Uninitialized_value_construct_n<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@H@std@@YAPEAHPEAH@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@H@std@@YAPEAHPEAH@Z PROC			; std::_Unfancy<int>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 294  :     return _Ptr;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]

; 295  : }

  0003d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00044	5f		 pop	 rdi
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
??$_Unfancy@H@std@@YAPEAHPEAH@Z ENDP			; std::_Unfancy<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 8
_Ptr_container$ = 40
_Ptr$ = 72
_Bytes$ = 320
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 58 01
	00 00		 sub	 rsp, 344		; 00000158H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 56 00 00 00	 mov	 ecx, 86			; 00000056H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 78
	01 00 00	 mov	 rcx, QWORD PTR [rsp+376]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

  00036	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR _Bytes$[rbp]
  0003d	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00041	48 89 45 08	 mov	 QWORD PTR _Block_size$[rbp], rax

; 86   :     if (_Block_size <= _Bytes) {

  00045	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR _Bytes$[rbp]
  0004c	48 39 45 08	 cmp	 QWORD PTR _Block_size$[rbp], rax
  00050	77 05		 ja	 SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

  00052	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  00057	48 8b 4d 08	 mov	 rcx, QWORD PTR _Block_size$[rbp]
  0005b	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00060	48 89 45 28	 mov	 QWORD PTR _Ptr_container$[rbp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

  00064	48 83 7d 28 00	 cmp	 QWORD PTR _Ptr_container$[rbp], 0
  00069	74 02		 je	 SHORT $LN9@Allocate_m
  0006b	eb 6b		 jmp	 SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
  0006d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00074	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00079	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00080	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00085	45 33 c9	 xor	 r9d, r9d
  00088	41 b8 5b 00 00
	00		 mov	 r8d, 91			; 0000005bH
  0008e	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00095	b9 02 00 00 00	 mov	 ecx, 2
  0009a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000a0	83 f8 01	 cmp	 eax, 1
  000a3	75 03		 jne	 SHORT $LN12@Allocate_m
  000a5	cc		 int	 3
  000a6	33 c0		 xor	 eax, eax
$LN12@Allocate_m:
  000a8	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000b1	41 b9 5b 00 00
	00		 mov	 r9d, 91			; 0000005bH
  000b7	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000be	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
  000c5	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  000cc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000d2	33 c0		 xor	 eax, eax
  000d4	85 c0		 test	 eax, eax
  000d6	75 95		 jne	 SHORT $LN7@Allocate_m
$LN10@Allocate_m:
  000d8	33 c0		 xor	 eax, eax
  000da	85 c0		 test	 eax, eax
  000dc	75 86		 jne	 SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

  000de	48 8b 45 28	 mov	 rax, QWORD PTR _Ptr_container$[rbp]
  000e2	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  000e6	48 83 e0 e0	 and	 rax, -32		; ffffffffffffffe0H
  000ea	48 89 45 48	 mov	 QWORD PTR _Ptr$[rbp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

  000ee	b8 08 00 00 00	 mov	 eax, 8
  000f3	48 6b c0 ff	 imul	 rax, rax, -1
  000f7	48 8b 4d 48	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  000fb	48 8b 55 28	 mov	 rdx, QWORD PTR _Ptr_container$[rbp]
  000ff	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

  00103	b8 08 00 00 00	 mov	 eax, 8
  00108	48 6b c0 fe	 imul	 rax, rax, -2
  0010c	48 8b 4d 48	 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00110	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  0011a	48 89 14 01	 mov	 QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

  0011e	48 8b 45 48	 mov	 rax, QWORD PTR _Ptr$[rbp]
$LN11@Allocate_m:

; 99   : }

  00122	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  00129	5f		 pop	 rdi
  0012a	5d		 pop	 rbp
  0012b	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >, COMDAT

; 3526 :     ~_Tidy_guard() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 3527 :         if (_Target) {

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00042	74 10		 je	 SHORT $LN2@Tidy_guard

; 3528 :             _Target->_Tidy();

  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0004e	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ; std::vector<int,std::allocator<int> >::_Tidy
  00053	90		 npad	 1
$LN2@Tidy_guard:

; 3529 :         }
; 3530 :     }

  00054	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005b	5f		 pop	 rdi
  0005c	5d		 pop	 rbp
  0005d	c3		 ret	 0
??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z PROC ; std::forward<std::allocator<int> const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z ENDP ; std::forward<std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

  0003c	41 b8 01 00 00
	00		 mov	 r8d, 1
  00042	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00049	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  00050	e8 00 00 00 00	 call	 ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
  00055	90		 npad	 1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

  00056	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0005d	5f		 pop	 rdi
  0005e	5d		 pop	 rbp
  0005f	c3		 ret	 0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Oldsize$ = 104
_Newcapacity$ = 136
_Newvec$ = 168
_Appended_first$ = 200
_Appended_last$ = 232
tv148 = 440
tv139 = 440
tv84 = 440
this$ = 480
_Newsize$ = 488
_Val$ = 496
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>, COMDAT

; 1133 :     void _Resize_reallocate(const size_type _Newsize, const _Ty2& _Val) {

$LN11:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 01
	00 00		 sub	 rsp, 488		; 000001e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 7a 00 00 00	 mov	 ecx, 122		; 0000007aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	02 00 00	 mov	 rcx, QWORD PTR [rsp+520]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1134 :         if (_Newsize > max_size()) {

  00040	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00047	e8 00 00 00 00	 call	 ?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::max_size
  0004c	48 39 85 e8 01
	00 00		 cmp	 QWORD PTR _Newsize$[rbp], rax
  00053	76 05		 jbe	 SHORT $LN2@Resize_rea

; 1135 :             _Xlength();

  00055	e8 00 00 00 00	 call	 ?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
$LN2@Resize_rea:

; 1136 :         }
; 1137 : 
; 1138 :         auto& _My_data    = _Mypair._Myval2;

  0005a	48 8b 85 e0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00061	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 1139 :         pointer& _Myfirst = _My_data._Myfirst;

  00065	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00069	48 83 c0 08	 add	 rax, 8
  0006d	48 89 45 28	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 1140 :         pointer& _Mylast  = _My_data._Mylast;

  00071	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00075	48 83 c0 10	 add	 rax, 16
  00079	48 89 45 48	 mov	 QWORD PTR _Mylast$[rbp], rax

; 1141 : 
; 1142 :         const auto _Oldsize          = static_cast<size_type>(_Mylast - _Myfirst);

  0007d	48 8b 45 48	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00081	48 8b 4d 28	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  00085	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00088	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0008b	48 2b c1	 sub	 rax, rcx
  0008e	48 c1 f8 02	 sar	 rax, 2
  00092	48 89 45 68	 mov	 QWORD PTR _Oldsize$[rbp], rax

; 1143 :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

  00096	48 8b 95 e8 01
	00 00		 mov	 rdx, QWORD PTR _Newsize$[rbp]
  0009d	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000a4	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z ; std::vector<int,std::allocator<int> >::_Calculate_growth
  000a9	48 89 85 88 00
	00 00		 mov	 QWORD PTR _Newcapacity$[rbp], rax

; 1144 : 
; 1145 :         const pointer _Newvec         = _Getal().allocate(_Newcapacity);

  000b0	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b7	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  000bc	48 89 85 b8 01
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  000c3	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR _Newcapacity$[rbp]
  000ca	48 8b 8d b8 01
	00 00		 mov	 rcx, QWORD PTR tv84[rbp]
  000d1	e8 00 00 00 00	 call	 ?allocate@?$allocator@H@std@@QEAAPEAH_K@Z ; std::allocator<int>::allocate
  000d6	48 89 85 a8 00
	00 00		 mov	 QWORD PTR _Newvec$[rbp], rax

; 1146 :         const pointer _Appended_first = _Newvec + _Oldsize;

  000dd	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR _Newvec$[rbp]
  000e4	48 8b 4d 68	 mov	 rcx, QWORD PTR _Oldsize$[rbp]
  000e8	48 8d 04 88	 lea	 rax, QWORD PTR [rax+rcx*4]
  000ec	48 89 85 c8 00
	00 00		 mov	 QWORD PTR _Appended_first$[rbp], rax

; 1147 :         pointer _Appended_last        = _Appended_first;

  000f3	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR _Appended_first$[rbp]
  000fa	48 89 85 e8 00
	00 00		 mov	 QWORD PTR _Appended_last$[rbp], rax

; 1148 : 
; 1149 :         _TRY_BEGIN
; 1150 :         _Appended_last = _Ufill(_Appended_first, _Newsize - _Oldsize, _Val);

  00101	48 8b 45 68	 mov	 rax, QWORD PTR _Oldsize$[rbp]
  00105	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR _Newsize$[rbp]
  0010c	48 2b c8	 sub	 rcx, rax
  0010f	48 8b c1	 mov	 rax, rcx
  00112	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  00119	44 0f b6 09	 movzx	 r9d, BYTE PTR [rcx]
  0011d	4c 8b c0	 mov	 r8, rax
  00120	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR _Appended_first$[rbp]
  00127	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0012e	e8 00 00 00 00	 call	 ?_Ufill@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHPEAH_KU_Value_init_tag@2@@Z ; std::vector<int,std::allocator<int> >::_Ufill
  00133	48 89 85 b8 01
	00 00		 mov	 QWORD PTR tv148[rbp], rax
  0013a	48 8b 85 b8 01
	00 00		 mov	 rax, QWORD PTR tv148[rbp]
  00141	48 89 85 e8 00
	00 00		 mov	 QWORD PTR _Appended_last$[rbp], rax

; 1151 :         _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

  00148	4c 8b 8d a8 00
	00 00		 mov	 r9, QWORD PTR _Newvec$[rbp]
  0014f	48 8b 45 48	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00153	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00156	48 8b 45 28	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0015a	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0015d	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00164	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00@Z ; std::vector<int,std::allocator<int> >::_Umove_if_noexcept
  00169	90		 npad	 1
  0016a	eb 00		 jmp	 SHORT $LN7@Resize_rea
$LN8@Resize_rea:
$LN7@Resize_rea:

; 1152 :         _CATCH_ALL
; 1153 :         _Destroy(_Appended_first, _Appended_last);
; 1154 :         _Getal().deallocate(_Newvec, _Newcapacity);
; 1155 :         _RERAISE;
; 1156 :         _CATCH_END
; 1157 : 
; 1158 :         _Change_array(_Newvec, _Newsize, _Newcapacity);

  0016c	4c 8b 8d 88 00
	00 00		 mov	 r9, QWORD PTR _Newcapacity$[rbp]
  00173	4c 8b 85 e8 01
	00 00		 mov	 r8, QWORD PTR _Newsize$[rbp]
  0017a	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR _Newvec$[rbp]
  00181	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00188	e8 00 00 00 00	 call	 ?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z ; std::vector<int,std::allocator<int> >::_Change_array

; 1159 :     }

  0018d	48 8d a5 c8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+456]
  00194	5f		 pop	 rdi
  00195	5d		 pop	 rbp
  00196	c3		 ret	 0
$LN9@Resize_rea:
??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Oldsize$ = 104
_Newcapacity$ = 136
_Newvec$ = 168
_Appended_first$ = 200
_Appended_last$ = 232
tv148 = 440
tv139 = 440
tv84 = 440
this$ = 480
_Newsize$ = 488
_Val$ = 496
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0

; 1152 :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$0:

; 1152 :         _CATCH_ALL
; 1153 :         _Destroy(_Appended_first, _Appended_last);

  00014	4c 8b 85 e8 00
	00 00		 mov	 r8, QWORD PTR _Appended_last$[rbp]
  0001b	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR _Appended_first$[rbp]
  00022	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00029	e8 00 00 00 00	 call	 ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy

; 1152 :         _CATCH_ALL
; 1153 :         _Destroy(_Appended_first, _Appended_last);
; 1154 :         _Getal().deallocate(_Newvec, _Newcapacity);

  0002e	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  0003a	48 89 85 b8 01
	00 00		 mov	 QWORD PTR tv139[rbp], rax
  00041	4c 8b 85 88 00
	00 00		 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00048	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0004f	48 8b 8d b8 01
	00 00		 mov	 rcx, QWORD PTR tv139[rbp]
  00056	e8 00 00 00 00	 call	 ?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ; std::allocator<int>::deallocate

; 1152 :         _CATCH_ALL
; 1153 :         _Destroy(_Appended_first, _Appended_last);
; 1154 :         _Getal().deallocate(_Newvec, _Newcapacity);
; 1155 :         _RERAISE;

  0005b	33 d2		 xor	 edx, edx
  0005d	33 c9		 xor	 ecx, ecx
  0005f	e8 00 00 00 00	 call	 _CxxThrowException
  00064	90		 npad	 1

; 1152 :         _CATCH_ALL
; 1153 :         _Destroy(_Appended_first, _Appended_last);
; 1154 :         _Getal().deallocate(_Newvec, _Newcapacity);
; 1155 :         _RERAISE;
; 1156 :         _CATCH_END

  00065	48 8d 05 00 00
	00 00		 lea	 rax, $LN8@catch$0
  0006c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00070	5f		 pop	 rdi
  00071	5d		 pop	 rbp
  00072	c3		 ret	 0
  00073	cc		 int	 3
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Oldsize$ = 104
_Newcapacity$ = 136
_Newvec$ = 168
_Appended_first$ = 200
_Appended_last$ = 232
tv148 = 440
tv139 = 440
tv84 = 440
this$ = 480
_Newsize$ = 488
_Val$ = 496
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0

; 1152 :         _CATCH_ALL

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$0:

; 1153 :         _Destroy(_Appended_first, _Appended_last);

  00014	4c 8b 85 e8 00
	00 00		 mov	 r8, QWORD PTR _Appended_last$[rbp]
  0001b	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR _Appended_first$[rbp]
  00022	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00029	e8 00 00 00 00	 call	 ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy

; 1154 :         _Getal().deallocate(_Newvec, _Newcapacity);

  0002e	48 8b 8d e0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  0003a	48 89 85 b8 01
	00 00		 mov	 QWORD PTR tv139[rbp], rax
  00041	4c 8b 85 88 00
	00 00		 mov	 r8, QWORD PTR _Newcapacity$[rbp]
  00048	48 8b 95 a8 00
	00 00		 mov	 rdx, QWORD PTR _Newvec$[rbp]
  0004f	48 8b 8d b8 01
	00 00		 mov	 rcx, QWORD PTR tv139[rbp]
  00056	e8 00 00 00 00	 call	 ?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ; std::allocator<int>::deallocate

; 1155 :         _RERAISE;

  0005b	33 d2		 xor	 edx, edx
  0005d	33 c9		 xor	 ecx, ecx
  0005f	e8 00 00 00 00	 call	 _CxxThrowException
  00064	90		 npad	 1

; 1156 :         _CATCH_END

  00065	48 8d 05 00 00
	00 00		 lea	 rax, $LN8@catch$0
  0006c	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00070	5f		 pop	 rdi
  00071	5d		 pop	 rbp
  00072	c3		 ret	 0
  00073	cc		 int	 3
?catch$0@?0???$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
$T1 = 260
$T2 = 292
tv79 = 308
_First$ = 352
_Last$ = 360
_Pred$ = 368
??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z PROC ; std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >, COMDAT

; 4638 : _NODISCARD bool is_sorted(_FwdIt _First, _FwdIt _Last, _Pr _Pred) { // test if range is ordered by predicate

$LN7:
  00000	44 88 44 24 18	 mov	 BYTE PTR [rsp+24], r8b
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR [rsp+392]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4EB666AB_algorithm
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4639 :     _Adl_verify_range(_First, _Last);

  00040	48 8b 95 68 01
	00 00		 mov	 rdx, QWORD PTR _Last$[rbp]
  00047	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0004e	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >

; 4640 :     const auto _UFirst = _Get_unwrapped(_First);

  00053	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
  0005f	48 89 45 08	 mov	 QWORD PTR _UFirst$[rbp], rax

; 4641 :     const auto _ULast  = _Get_unwrapped(_Last);

  00063	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0006a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
  0006f	48 89 45 28	 mov	 QWORD PTR _ULast$[rbp], rax

; 4642 :     return _STD is_sorted_until(_UFirst, _ULast, _Pass_fn(_Pred)) == _ULast;

  00073	0f b6 8d 70 01
	00 00		 movzx	 ecx, BYTE PTR _Pred$[rbp]
  0007a	e8 00 00 00 00	 call	 ??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z ; std::_Pass_fn<std::less<void>,0>
  0007f	88 85 24 01 00
	00		 mov	 BYTE PTR $T2[rbp], al
  00085	44 0f b6 85 24
	01 00 00	 movzx	 r8d, BYTE PTR $T2[rbp]
  0008d	48 8b 55 28	 mov	 rdx, QWORD PTR _ULast$[rbp]
  00091	48 8b 4d 08	 mov	 rcx, QWORD PTR _UFirst$[rbp]
  00095	e8 00 00 00 00	 call	 ??$is_sorted_until@PEAHU?$less@X@std@@@std@@YAPEAHQEAHPEAHU?$less@X@0@@Z ; std::is_sorted_until<int *,std::less<void> >
  0009a	48 3b 45 28	 cmp	 rax, QWORD PTR _ULast$[rbp]
  0009e	75 0c		 jne	 SHORT $LN3@is_sorted
  000a0	c7 85 34 01 00
	00 01 00 00 00	 mov	 DWORD PTR tv79[rbp], 1
  000aa	eb 0a		 jmp	 SHORT $LN4@is_sorted
$LN3@is_sorted:
  000ac	c7 85 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR tv79[rbp], 0
$LN4@is_sorted:
  000b6	0f b6 85 34 01
	00 00		 movzx	 eax, BYTE PTR tv79[rbp]
  000bd	88 85 04 01 00
	00		 mov	 BYTE PTR $T1[rbp], al
  000c3	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  000ca	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  000cf	90		 npad	 1
  000d0	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  000d7	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  000dc	0f b6 85 04 01
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]

; 4643 : }

  000e3	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  000ea	5f		 pop	 rdi
  000eb	5d		 pop	 rbp
  000ec	c3		 ret	 0
??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z ENDP ; std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
$T1 = 260
$T2 = 292
tv79 = 308
_First$ = 352
_Last$ = 360
_Pred$ = 368
?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA PROC ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA ENDP ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
$T1 = 260
$T2 = 292
tv79 = 308
_First$ = 352
_Last$ = 360
_Pred$ = 368
?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA PROC ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA ENDP ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
$T1 = 260
$T2 = 292
tv79 = 308
_First$ = 352
_Last$ = 360
_Pred$ = 368
?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA PROC ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA ENDP ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
$T1 = 260
$T2 = 292
tv79 = 308
_First$ = 352
_Last$ = 360
_Pred$ = 368
?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA PROC ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA ENDP ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UNext$4 = 72
$T5 = 292
__$ArrayPad$ = 312
__$ReturnUdt$ = 352
_First$ = 360
_Last$ = 368
_Pred$ = 376
??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z PROC ; std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >, COMDAT

; 4619 : _NODISCARD _FwdIt is_sorted_until(const _FwdIt _First, _FwdIt _Last, _Pr _Pred) {

$LN12:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 68 01
	00 00		 sub	 rsp, 360		; 00000168H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 5a 00 00 00	 mov	 ecx, 90			; 0000005aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 88
	01 00 00	 mov	 rcx, QWORD PTR [rsp+392]
  00039	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00040	48 33 c5	 xor	 rax, rbp
  00043	48 89 85 38 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0004a	c7 85 24 01 00
	00 00 00 00 00	 mov	 DWORD PTR $T5[rbp], 0
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4EB666AB_algorithm
  0005b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4620 :     // find extent of range that is ordered by predicate
; 4621 :     _Adl_verify_range(_First, _Last);

  00060	48 8b 95 70 01
	00 00		 mov	 rdx, QWORD PTR _Last$[rbp]
  00067	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0006e	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >

; 4622 :     auto _UFirst = _Get_unwrapped(_First);

  00073	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0007a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
  0007f	48 89 45 08	 mov	 QWORD PTR _UFirst$[rbp], rax

; 4623 :     auto _ULast  = _Get_unwrapped(_Last);

  00083	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0008a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
  0008f	48 89 45 28	 mov	 QWORD PTR _ULast$[rbp], rax

; 4624 :     if (_UFirst != _ULast) {

  00093	48 8b 45 28	 mov	 rax, QWORD PTR _ULast$[rbp]
  00097	48 39 45 08	 cmp	 QWORD PTR _UFirst$[rbp], rax
  0009b	74 53		 je	 SHORT $LN5@is_sorted_

; 4625 :         for (auto _UNext = _UFirst; ++_UNext != _ULast; ++_UFirst) {

  0009d	48 8b 45 08	 mov	 rax, QWORD PTR _UFirst$[rbp]
  000a1	48 89 45 48	 mov	 QWORD PTR _UNext$4[rbp], rax
  000a5	eb 0c		 jmp	 SHORT $LN4@is_sorted_
$LN2@is_sorted_:
  000a7	48 8b 45 08	 mov	 rax, QWORD PTR _UFirst$[rbp]
  000ab	48 83 c0 04	 add	 rax, 4
  000af	48 89 45 08	 mov	 QWORD PTR _UFirst$[rbp], rax
$LN4@is_sorted_:
  000b3	48 8b 45 48	 mov	 rax, QWORD PTR _UNext$4[rbp]
  000b7	48 83 c0 04	 add	 rax, 4
  000bb	48 89 45 48	 mov	 QWORD PTR _UNext$4[rbp], rax
  000bf	48 8b 45 28	 mov	 rax, QWORD PTR _ULast$[rbp]
  000c3	48 39 45 48	 cmp	 QWORD PTR _UNext$4[rbp], rax
  000c7	74 27		 je	 SHORT $LN5@is_sorted_

; 4626 :             if (_DEBUG_LT_PRED(_Pred, *_UNext, *_UFirst)) {

  000c9	4c 8b 45 08	 mov	 r8, QWORD PTR _UFirst$[rbp]
  000cd	48 8b 55 48	 mov	 rdx, QWORD PTR _UNext$4[rbp]
  000d1	48 8d 8d 78 01
	00 00		 lea	 rcx, QWORD PTR _Pred$[rbp]
  000d8	e8 00 00 00 00	 call	 ??$_Debug_lt_pred@AEAU?$less@X@std@@AEAHAEAH$0A@@std@@YA_NAEAU?$less@X@0@AEAH1@Z ; std::_Debug_lt_pred<std::less<void> &,int &,int &,0>
  000dd	0f b6 c0	 movzx	 eax, al
  000e0	85 c0		 test	 eax, eax
  000e2	74 0a		 je	 SHORT $LN6@is_sorted_

; 4627 :                 _ULast = _UNext;

  000e4	48 8b 45 48	 mov	 rax, QWORD PTR _UNext$4[rbp]
  000e8	48 89 45 28	 mov	 QWORD PTR _ULast$[rbp], rax

; 4628 :                 break;

  000ec	eb 02		 jmp	 SHORT $LN5@is_sorted_
$LN6@is_sorted_:

; 4629 :             }
; 4630 :         }

  000ee	eb b7		 jmp	 SHORT $LN2@is_sorted_
$LN5@is_sorted_:

; 4631 :     }
; 4632 : 
; 4633 :     _Seek_wrapped(_Last, _ULast);

  000f0	48 8d 55 28	 lea	 rdx, QWORD PTR _ULast$[rbp]
  000f4	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  000fb	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBQEAH@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int *>

; 4634 :     return _Last;

  00100	48 8b 95 70 01
	00 00		 mov	 rdx, QWORD PTR _Last$[rbp]
  00107	48 8b 8d 60 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0010e	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  00113	8b 85 24 01 00
	00		 mov	 eax, DWORD PTR $T5[rbp]
  00119	83 c8 01	 or	 eax, 1
  0011c	89 85 24 01 00
	00		 mov	 DWORD PTR $T5[rbp], eax
  00122	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00129	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  0012e	90		 npad	 1
  0012f	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  00136	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  0013b	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 4635 : }

  00142	48 8b f8	 mov	 rdi, rax
  00145	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00149	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z$rtcFrameData
  00150	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00155	48 8b c7	 mov	 rax, rdi
  00158	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0015f	48 33 cd	 xor	 rcx, rbp
  00162	e8 00 00 00 00	 call	 __security_check_cookie
  00167	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  0016e	5f		 pop	 rdi
  0016f	5d		 pop	 rbp
  00170	c3		 ret	 0
??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z ENDP ; std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UNext$4 = 72
$T5 = 292
__$ArrayPad$ = 312
__$ReturnUdt$ = 352
_First$ = 360
_Last$ = 368
_Pred$ = 376
?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA PROC ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA ENDP ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UNext$4 = 72
$T5 = 292
__$ArrayPad$ = 312
__$ReturnUdt$ = 352
_First$ = 360
_Last$ = 368
_Pred$ = 376
?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA PROC ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA ENDP ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UNext$4 = 72
$T5 = 292
__$ArrayPad$ = 312
__$ReturnUdt$ = 352
_First$ = 360
_Last$ = 368
_Pred$ = 376
?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA PROC ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA ENDP ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UNext$4 = 72
$T5 = 292
__$ArrayPad$ = 312
__$ReturnUdt$ = 352
_First$ = 360
_Last$ = 368
_Pred$ = 376
?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA PROC ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z@4HA ENDP ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_It$ = 224
_UIt$ = 232
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z PROC ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >, COMDAT

; 415  : constexpr void _Seek_wrapped(_Iter& _It, const _UIter& _UIt) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 416  :     if constexpr (_Wrapped_seekable_v<_Iter, _UIter>) {
; 417  :         _It._Seek_to(_UIt);
; 418  :     } else {
; 419  :         _It = _UIt;

  0003b	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _UIt$[rbp]
  00042	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _It$[rbp]
  00049	e8 00 00 00 00	 call	 ??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z

; 420  :     }
; 421  : }

  0004e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00055	5f		 pop	 rdi
  00056	5d		 pop	 rbp
  00057	c3		 ret	 0
??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z ENDP ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped_unverified@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YAAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z
_TEXT	SEGMENT
_It$ = 224
??$_Get_unwrapped_unverified@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YAAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z PROC ; std::_Get_unwrapped_unverified<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>, COMDAT

; 303  : _NODISCARD constexpr const _Iter& _Get_unwrapped_unverified(const _Iter& _It) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 304  :     // (don't) unwrap an iterator not previously subjected to _Adl_verify_range
; 305  :     return _It;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _It$[rbp]

; 306  : }

  0003d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00044	5f		 pop	 rdi
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
??$_Get_unwrapped_unverified@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YAAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z ENDP ; std::_Get_unwrapped_unverified<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z
_TEXT	SEGMENT
_Result$ = 8
$T4 = 244
$T5 = 276
$T6 = 308
$T7 = 340
tv82 = 360
tv80 = 368
__$ArrayPad$ = 376
__$ReturnUdt$ = 416
_First$ = 424
_Last$ = 432
_Pred$ = 440
??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z PROC ; std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >, COMDAT

; 4404 : _NODISCARD constexpr pair<_FwdIt, _FwdIt> minmax_element(_FwdIt _First, _FwdIt _Last, _Pr _Pred) {

$LN7:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec a8 01
	00 00		 sub	 rsp, 424		; 000001a8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 6a 00 00 00	 mov	 ecx, 106		; 0000006aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 c8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+456]
  00039	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00040	48 33 c5	 xor	 rax, rbp
  00043	48 89 85 78 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0004a	c7 85 54 01 00
	00 00 00 00 00	 mov	 DWORD PTR $T7[rbp], 0
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4EB666AB_algorithm
  0005b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4405 :     // find smallest and largest elements, using _Pred
; 4406 :     _Adl_verify_range(_First, _Last);

  00060	48 8b 95 b0 01
	00 00		 mov	 rdx, QWORD PTR _Last$[rbp]
  00067	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0006e	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >

; 4407 :     const auto _Result = _Minmax_element_unchecked(_Get_unwrapped(_First), _Get_unwrapped(_Last), _Pass_fn(_Pred));

  00073	0f b6 8d b8 01
	00 00		 movzx	 ecx, BYTE PTR _Pred$[rbp]
  0007a	e8 00 00 00 00	 call	 ??$_Pass_fn@U?$less@X@std@@$0A@@std@@YA?AU?$less@X@0@U10@@Z ; std::_Pass_fn<std::less<void>,0>
  0007f	88 85 f4 00 00
	00		 mov	 BYTE PTR $T4[rbp], al
  00085	0f b6 85 f4 00
	00 00		 movzx	 eax, BYTE PTR $T4[rbp]
  0008c	88 85 14 01 00
	00		 mov	 BYTE PTR $T5[rbp], al
  00092	0f b6 85 14 01
	00 00		 movzx	 eax, BYTE PTR $T5[rbp]
  00099	88 85 34 01 00
	00		 mov	 BYTE PTR $T6[rbp], al
  0009f	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  000a6	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
  000ab	48 89 85 68 01
	00 00		 mov	 QWORD PTR tv82[rbp], rax
  000b2	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  000b9	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
  000be	48 89 85 70 01
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  000c5	44 0f b6 8d 34
	01 00 00	 movzx	 r9d, BYTE PTR $T6[rbp]
  000cd	4c 8b 85 68 01
	00 00		 mov	 r8, QWORD PTR tv82[rbp]
  000d4	48 8b 95 70 01
	00 00		 mov	 rdx, QWORD PTR tv80[rbp]
  000db	48 8d 4d 08	 lea	 rcx, QWORD PTR _Result$[rbp]
  000df	e8 00 00 00 00	 call	 ??$_Minmax_element_unchecked@PEAHU?$less@X@std@@@std@@YA?AU?$pair@PEAHPEAH@0@PEAH0U?$less@X@0@@Z ; std::_Minmax_element_unchecked<int *,std::less<void> >

; 4408 :     _Seek_wrapped(_Last, _Result.second);

  000e4	48 8d 55 10	 lea	 rdx, QWORD PTR _Result$[rbp+8]
  000e8	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  000ef	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBQEAH@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int *>

; 4409 :     _Seek_wrapped(_First, _Result.first);

  000f4	48 8d 55 08	 lea	 rdx, QWORD PTR _Result$[rbp]
  000f8	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  000ff	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@PEAH@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBQEAH@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int *>

; 4410 :     return {_First, _Last};

  00104	4c 8b 85 b0 01
	00 00		 mov	 r8, QWORD PTR _Last$[rbp]
  0010b	48 8b 95 a8 01
	00 00		 mov	 rdx, QWORD PTR _First$[rbp]
  00112	48 8b 8d a0 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00119	e8 00 00 00 00	 call	 ??$?0AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@AEAV01@$0A@@?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@AEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z ; std::pair<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >::pair<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > ><std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > &,0>
  0011e	8b 85 54 01 00
	00		 mov	 eax, DWORD PTR $T7[rbp]
  00124	83 c8 01	 or	 eax, 1
  00127	89 85 54 01 00
	00		 mov	 DWORD PTR $T7[rbp], eax
  0012d	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00134	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00139	90		 npad	 1
  0013a	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  00141	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00146	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 4411 : }

  0014d	48 8b f8	 mov	 rdi, rax
  00150	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00154	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z$rtcFrameData
  0015b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00160	48 8b c7	 mov	 rax, rdi
  00163	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0016a	48 33 cd	 xor	 rcx, rbp
  0016d	e8 00 00 00 00	 call	 __security_check_cookie
  00172	48 8d a5 88 01
	00 00		 lea	 rsp, QWORD PTR [rbp+392]
  00179	5f		 pop	 rdi
  0017a	5d		 pop	 rbp
  0017b	c3		 ret	 0
??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z ENDP ; std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 8
$T4 = 244
$T5 = 276
$T6 = 308
$T7 = 340
tv82 = 360
tv80 = 368
__$ArrayPad$ = 376
__$ReturnUdt$ = 416
_First$ = 424
_Last$ = 432
_Pred$ = 440
?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA PROC ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA ENDP ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 8
$T4 = 244
$T5 = 276
$T6 = 308
$T7 = 340
tv82 = 360
tv80 = 368
__$ArrayPad$ = 376
__$ReturnUdt$ = 416
_First$ = 424
_Last$ = 432
_Pred$ = 440
?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA PROC ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA ENDP ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 8
$T4 = 244
$T5 = 276
$T6 = 308
$T7 = 340
tv82 = 360
tv80 = 368
__$ArrayPad$ = 376
__$ReturnUdt$ = 416
_First$ = 424
_Last$ = 432
_Pred$ = 440
?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA PROC ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d b0 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA ENDP ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Result$ = 8
$T4 = 244
$T5 = 276
$T6 = 308
$T7 = 340
tv82 = 360
tv80 = 368
__$ArrayPad$ = 376
__$ReturnUdt$ = 416
_First$ = 424
_Last$ = 432
_Pred$ = 440
?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA PROC ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d a8 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z@4HA ENDP ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z
_TEXT	SEGMENT
_It$ = 224
??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z PROC ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>, COMDAT

; 257  : _NODISCARD constexpr auto _Get_unwrapped(const _Iter& _It) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 258  :     // unwrap an iterator previously subjected to _Adl_verify_range or otherwise validated
; 259  :     return _It._Unwrapped();

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _It$[rbp]
  0003d	e8 00 00 00 00	 call	 ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Unwrapped

; 260  : }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ENDP ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z PROC ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >, COMDAT

; 217  :     const _Iter& _First, const _Sentinel& _Last) { // check that [_First, _Last) forms an iterator range

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 218  :     if constexpr (_Range_verifiable_v<_Iter, _Sentinel>) {
; 219  :         _Verify_range(_First, _Last);

  0003b	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Last$[rbp]
  00042	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00049	e8 00 00 00 00	 call	 ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z ; std::_Verify_range

; 220  :     } else {
; 221  :         (void) _First; // TRANSITION, VSO#486357
; 222  :         (void) _Last; // TRANSITION, VSO#486357
; 223  :     }
; 224  : }

  0004e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00055	5f		 pop	 rdi
  00056	5d		 pop	 rbp
  00057	c3		 ret	 0
??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ENDP ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__C8593937_type_traits
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :     return static_cast<_Ty&&>(_Arg);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Arg$[rbp]

; 1422 : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
_Al$ = 240
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z PROC ; std::_Destroy_range<std::allocator<int> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ENDP ; std::_Destroy_range<std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Max_possible$1 = 40
_Count$ = 288
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

  00036	c6 45 04 01	 mov	 BYTE PTR _Overflow_is_possible$[rbp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  0003a	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  00044	48 89 45 28	 mov	 QWORD PTR _Max_possible$1[rbp], rax

; 30   :             if (_Count > _Max_possible) {

  00048	48 b8 ff ff ff
	ff ff ff ff 0f	 mov	 rax, 1152921504606846975 ; 0fffffffffffffffH
  00052	48 39 85 20 01
	00 00		 cmp	 QWORD PTR _Count$[rbp], rax
  00059	76 05		 jbe	 SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

  0005b	e8 00 00 00 00	 call	 ?_Throw_bad_array_new_length@std@@YAXXZ ; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

  00060	48 6b 85 20 01
	00 00 10	 imul	 rax, QWORD PTR _Count$[rbp], 16
$LN3@Get_size_o:

; 36   : }

  00068	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 224
_Bytes$ = 232
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  0003c	48 81 bd e8 00
	00 00 00 10 00
	00		 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  00047	72 14		 jb	 SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

  00049	48 8d 95 e8 00
	00 00		 lea	 rdx, QWORD PTR _Bytes$[rbp]
  00050	48 8d 8d e0 00
	00 00		 lea	 rcx, QWORD PTR _Ptr$[rbp]
  00057	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
  0005c	90		 npad	 1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

  0005d	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Bytes$[rbp]
  00064	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  0006b	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
  00070	90		 npad	 1

; 192  : }

  00071	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00078	5f		 pop	 rdi
  00079	5d		 pop	 rbp
  0007a	c3		 ret	 0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

  00036	48 81 bd e0 00
	00 00 00 10 00
	00		 cmp	 QWORD PTR _Bytes$[rbp], 4096 ; 00001000H
  00041	72 0e		 jb	 SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Bytes$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  0004f	eb 1a		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

  00051	48 83 bd e0 00
	00 00 00	 cmp	 QWORD PTR _Bytes$[rbp], 0
  00059	74 0e		 je	 SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

  0005b	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00062	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
  00067	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

  00069	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 180  : }

  0006b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 294  :     return _Ptr;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]

; 295  : }

  0003d	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00044	5f		 pop	 rdi
  00045	5d		 pop	 rbp
  00046	c3		 ret	 0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1383 :         if (_Ptr) {

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00042	74 1b		 je	 SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0004e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00055	48 8b 48 08	 mov	 rcx, QWORD PTR [rax+8]
  00059	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  0005e	90		 npad	 1
$LN2@Container_:

; 1385 :         }
; 1386 :     }

  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Al_$ = 264
_Mycont$ = 272
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

  00040	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Al_$[rbp]
  0004e	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

  00052	ba 01 00 00 00	 mov	 edx, 1
  00057	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Al_$[rbp]
  0005e	e8 00 00 00 00	 call	 ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
  00063	48 8b c8	 mov	 rcx, rax
  00066	e8 00 00 00 00	 call	 ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
  0006b	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00072	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

  00075	48 8b 8d 10 01
	00 00		 mov	 rcx, QWORD PTR _Mycont$[rbp]
  0007c	e8 00 00 00 00	 call	 ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
  00081	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00088	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  0008f	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00096	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  00099	e8 00 00 00 00	 call	 ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

  0009e	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR _Mycont$[rbp]
  000a5	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000ac	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000af	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1373 :     }

  000b2	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b9	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000c0	5f		 pop	 rdi
  000c1	5d		 pop	 rbp
  000c2	c3		 ret	 0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ
_TEXT	SEGMENT
this$ = 224
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool, COMDAT

; 130  :         explicit __CLR_OR_THIS_CALL operator bool() const { // test if stream state okay

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 131  :             return _Ok;

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	0f b6 40 08	 movzx	 eax, BYTE PTR [rax+8]

; 132  :         }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry, COMDAT

; 115  :         __CLR_OR_THIS_CALL ~sentry() noexcept {

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 116  : #if _HAS_EXCEPTIONS
; 117  :             if (!_STD uncaught_exception()) { // TRANSITION, OS#15518458

  00037	e8 00 00 00 00	 call	 ?uncaught_exception@std@@YA_NXZ ; std::uncaught_exception
  0003c	90		 npad	 1
  0003d	0f b6 c0	 movzx	 eax, al
  00040	85 c0		 test	 eax, eax
  00042	75 11		 jne	 SHORT $LN2@sentry

; 118  :                 this->_Myostr._Osfx();

  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 08	 mov	 rcx, QWORD PTR [rax]
  0004e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00054	90		 npad	 1
$LN2@sentry:

; 119  :             }
; 120  : #else // _HAS_EXCEPTIONS
; 121  :             this->_Myostr._Osfx();
; 122  : #endif // _HAS_EXCEPTIONS
; 123  :         }

  00055	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005c	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00061	90		 npad	 1
  00062	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry, COMDAT

; 90   :         explicit __CLR_OR_THIS_CALL sentry(basic_ostream& _Ostr)

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 91   :             : _Sentry_base(_Ostr) { // construct locking and testing stream

  0003b	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Ostr$[rbp]
  00042	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	e8 00 00 00 00	 call	 ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
  0004e	90		 npad	 1

; 92   :             if (!_Ostr.good()) {

  0004f	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00056	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00059	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0005d	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00064	48 03 c8	 add	 rcx, rax
  00067	48 8b c1	 mov	 rax, rcx
  0006a	48 8b c8	 mov	 rcx, rax
  0006d	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  00073	0f b6 c0	 movzx	 eax, al
  00076	85 c0		 test	 eax, eax
  00078	75 10		 jne	 SHORT $LN2@sentry

; 93   :                 _Ok = false;

  0007a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00081	c6 40 08 00	 mov	 BYTE PTR [rax+8], 0

; 94   :                 return;

  00085	e9 81 00 00 00	 jmp	 $LN1@sentry
$LN2@sentry:

; 95   :             }
; 96   : 
; 97   :             const auto _Tied = _Ostr.tie();

  0008a	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00091	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00094	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00098	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0009f	48 03 c8	 add	 rcx, rax
  000a2	48 8b c1	 mov	 rax, rcx
  000a5	48 8b c8	 mov	 rcx, rax
  000a8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?tie@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_ostream@DU?$char_traits@D@std@@@2@XZ
  000ae	48 89 45 08	 mov	 QWORD PTR _Tied$[rbp], rax

; 98   :             if (!_Tied || _Tied == &_Ostr) {

  000b2	48 83 7d 08 00	 cmp	 QWORD PTR _Tied$[rbp], 0
  000b7	74 0d		 je	 SHORT $LN4@sentry
  000b9	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000c0	48 39 45 08	 cmp	 QWORD PTR _Tied$[rbp], rax
  000c4	75 0d		 jne	 SHORT $LN3@sentry
$LN4@sentry:

; 99   :                 _Ok = true;

  000c6	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000cd	c6 40 08 01	 mov	 BYTE PTR [rax+8], 1

; 100  :                 return;

  000d1	eb 38		 jmp	 SHORT $LN1@sentry
$LN3@sentry:

; 101  :             }
; 102  : 
; 103  : 
; 104  :             _Tied->flush();

  000d3	48 8b 4d 08	 mov	 rcx, QWORD PTR _Tied$[rbp]
  000d7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 105  :             _Ok = _Ostr.good(); // store test only after flushing tie

  000dd	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000e4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000e7	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000eb	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000f2	48 03 c8	 add	 rcx, rax
  000f5	48 8b c1	 mov	 rax, rcx
  000f8	48 8b c8	 mov	 rcx, rax
  000fb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?good@ios_base@std@@QEBA_NXZ
  00101	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00108	88 41 08	 mov	 BYTE PTR [rcx+8], al
$LN1@sentry:

; 106  :         }

  0010b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00112	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00119	5f		 pop	 rdi
  0011a	5d		 pop	 rbp
  0011b	c3		 ret	 0
??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Tied$ = 8
this$ = 256
_Ostr$ = 264
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA PROC ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA ENDP ; `std::basic_ostream<char,std::char_traits<char> >::sentry::sentry'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Rdbuf$ = 8
tv72 = 216
this$ = 256
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base, COMDAT

; 76   :         __CLR_OR_THIS_CALL ~_Sentry_base() noexcept { // destroy after unlocking

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 77   :             const auto _Rdbuf = _Myostr.rdbuf();

  00037	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00041	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv72[rbp], rax
  00048	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv72[rbp]
  0004f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00052	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00056	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv72[rbp]
  0005d	48 03 c8	 add	 rcx, rax
  00060	48 8b c1	 mov	 rax, rcx
  00063	48 8b c8	 mov	 rcx, rax
  00066	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  0006c	90		 npad	 1
  0006d	48 89 45 08	 mov	 QWORD PTR _Rdbuf$[rbp], rax

; 78   :             if (_Rdbuf) {

  00071	48 83 7d 08 00	 cmp	 QWORD PTR _Rdbuf$[rbp], 0
  00076	74 0f		 je	 SHORT $LN2@Sentry_bas

; 79   :                 _Rdbuf->_Unlock();

  00078	48 8b 45 08	 mov	 rax, QWORD PTR _Rdbuf$[rbp]
  0007c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007f	48 8b 4d 08	 mov	 rcx, QWORD PTR _Rdbuf$[rbp]
  00083	ff 50 10	 call	 QWORD PTR [rax+16]
  00086	90		 npad	 1
$LN2@Sentry_bas:

; 80   :             }
; 81   :         }

  00087	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008e	5f		 pop	 rdi
  0008f	5d		 pop	 rbp
  00090	c3		 ret	 0
??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::~_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
_TEXT	SEGMENT
_Rdbuf$ = 8
tv73 = 216
this$ = 256
_Ostr$ = 264
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z PROC ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base, COMDAT

; 69   :         __CLR_OR_THIS_CALL _Sentry_base(basic_ostream& _Ostr) : _Myostr(_Ostr) { // lock the stream buffer, if there

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00049	48 89 08	 mov	 QWORD PTR [rax], rcx

; 70   :             const auto _Rdbuf = _Myostr.rdbuf();

  0004c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00056	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv73[rbp], rax
  0005d	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv73[rbp]
  00064	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00067	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0006b	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR tv73[rbp]
  00072	48 03 c8	 add	 rcx, rax
  00075	48 8b c1	 mov	 rax, rcx
  00078	48 8b c8	 mov	 rcx, rax
  0007b	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00081	48 89 45 08	 mov	 QWORD PTR _Rdbuf$[rbp], rax

; 71   :             if (_Rdbuf) {

  00085	48 83 7d 08 00	 cmp	 QWORD PTR _Rdbuf$[rbp], 0
  0008a	74 0e		 je	 SHORT $LN2@Sentry_bas

; 72   :                 _Rdbuf->_Lock();

  0008c	48 8b 45 08	 mov	 rax, QWORD PTR _Rdbuf$[rbp]
  00090	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00093	48 8b 4d 08	 mov	 rcx, QWORD PTR _Rdbuf$[rbp]
  00097	ff 50 08	 call	 QWORD PTR [rax+8]
$LN2@Sentry_bas:

; 73   :             }
; 74   :         }

  0009a	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000a1	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000a8	5f		 pop	 rdi
  000a9	5d		 pop	 rbp
  000aa	c3		 ret	 0
??0_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ENDP ; std::basic_ostream<char,std::char_traits<char> >::_Sentry_base::_Sentry_base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_Alproxy$ = 8
$S17$ = 36
_My_data$ = 72
_Proxy$ = 104
_Guard$6 = 152
__$ArrayPad$ = 360
this$ = 400
_Count$ = 408
_Val$ = 416
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>, COMDAT

; 397  :     void _Construct_n_copies_of_ty(_CRT_GUARDOVERFLOW const size_type _Count, const _Ty2& _Val) {

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 98 01
	00 00		 sub	 rsp, 408		; 00000198H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 66 00 00 00	 mov	 ecx, 102		; 00000066H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 b8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+440]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c5	 xor	 rax, rbp
  0003e	48 89 85 68 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00045	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  0004c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 398  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00051	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00058	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  0005d	48 8b d0	 mov	 rdx, rax
  00060	48 8d 4d 24	 lea	 rcx, QWORD PTR $S17$[rbp]
  00064	e8 00 00 00 00	 call	 ??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
  00069	48 8d 45 24	 lea	 rax, QWORD PTR $S17$[rbp]
  0006d	48 89 45 08	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 399  :         auto& _My_data  = _Mypair._Myval2;

  00071	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00078	48 89 45 48	 mov	 QWORD PTR _My_data$[rbp], rax

; 400  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

  0007c	4c 8b 45 48	 mov	 r8, QWORD PTR _My_data$[rbp]
  00080	48 8b 55 08	 mov	 rdx, QWORD PTR _Alproxy$[rbp]
  00084	48 8d 4d 68	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00088	e8 00 00 00 00	 call	 ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0008d	90		 npad	 1

; 401  :         if (_Count != 0) {

  0008e	48 83 bd 98 01
	00 00 00	 cmp	 QWORD PTR _Count$[rbp], 0
  00096	74 66		 je	 SHORT $LN2@Construct_

; 402  :             _Buy_nonzero(_Count);

  00098	48 8b 95 98 01
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  0009f	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000a6	e8 00 00 00 00	 call	 ?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ; std::vector<int,std::allocator<int> >::_Buy_nonzero

; 403  :             _Tidy_guard<vector> _Guard{this};

  000ab	48 8b 85 90 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000b2	48 89 85 98 00
	00 00		 mov	 QWORD PTR _Guard$6[rbp], rax

; 404  :             _My_data._Mylast = _Ufill(_My_data._Myfirst, _Count, _Val);

  000b9	48 8b 85 a0 01
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]
  000c0	44 0f b6 08	 movzx	 r9d, BYTE PTR [rax]
  000c4	4c 8b 85 98 01
	00 00		 mov	 r8, QWORD PTR _Count$[rbp]
  000cb	48 8b 45 48	 mov	 rax, QWORD PTR _My_data$[rbp]
  000cf	48 8b 50 08	 mov	 rdx, QWORD PTR [rax+8]
  000d3	48 8b 8d 90 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000da	e8 00 00 00 00	 call	 ?_Ufill@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHPEAH_KU_Value_init_tag@2@@Z ; std::vector<int,std::allocator<int> >::_Ufill
  000df	48 8b 4d 48	 mov	 rcx, QWORD PTR _My_data$[rbp]
  000e3	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 405  :             _Guard._Target   = nullptr;

  000e7	48 c7 85 98 00
	00 00 00 00 00
	00		 mov	 QWORD PTR _Guard$6[rbp], 0

; 406  :         }

  000f2	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rbp]
  000f9	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >
$LN2@Construct_:

; 407  : 
; 408  :         _Proxy._Release();

  000fe	48 8d 4d 68	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00102	e8 00 00 00 00	 call	 ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
  00107	90		 npad	 1

; 409  :     }

  00108	48 8d 4d 68	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  0010c	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  00111	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00115	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z$rtcFrameData
  0011c	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00121	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00128	48 33 cd	 xor	 rcx, rbp
  0012b	e8 00 00 00 00	 call	 __security_check_cookie
  00130	48 8d a5 78 01
	00 00		 lea	 rsp, QWORD PTR [rbp+376]
  00137	5f		 pop	 rdi
  00138	5d		 pop	 rbp
  00139	c3		 ret	 0
??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S17$ = 36
_My_data$ = 72
_Proxy$ = 104
_Guard$6 = 152
__$ArrayPad$ = 360
this$ = 400
_Count$ = 408
_Val$ = 416
?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 68	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S17$ = 36
_My_data$ = 72
_Proxy$ = 104
_Guard$6 = 152
__$ArrayPad$ = 360
this$ = 400
_Count$ = 408
_Val$ = 416
?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S17$ = 36
_My_data$ = 72
_Proxy$ = 104
_Guard$6 = 152
__$ArrayPad$ = 360
this$ = 400
_Count$ = 408
_Val$ = 416
?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 68	 lea	 rcx, QWORD PTR _Proxy$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S17$ = 36
_My_data$ = 72
_Proxy$ = 104
_Guard$6 = 152
__$ArrayPad$ = 360
this$ = 400
_Count$ = 408
_Val$ = 416
?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA PROC ; `std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 8d 98 00
	00 00		 lea	 rcx, QWORD PTR _Guard$6[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Tidy_guard@V?$vector@HV?$allocator@H@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<int,std::allocator<int> > >::~_Tidy_guard<std::vector<int,std::allocator<int> > >
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z@4HA ENDP ; `std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
_Val1$ = 240
??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><std::allocator<int> const &>, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	88 54 24 10	 mov	 BYTE PTR [rsp+16], dl
  00009	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000e	55		 push	 rbp
  0000f	57		 push	 rdi
  00010	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00017	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001c	48 8b fc	 mov	 rdi, rsp
  0001f	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00024	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00029	f3 ab		 rep stosd
  0002b	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00033	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003f	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Val1$[rbp]
  00046	e8 00 00 00 00	 call	 ??$forward@AEBV?$allocator@H@std@@@std@@YAAEBV?$allocator@H@0@AEBV10@@Z ; std::forward<std::allocator<int> const &>
  0004b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00052	48 8b c8	 mov	 rcx, rax
  00055	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
  0005a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00061	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00068	5f		 pop	 rdi
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><std::allocator<int> const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

  0003c	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Ptr$[rbp]
  00043	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Al$[rbp]
  0004a	e8 00 00 00 00	 call	 ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
  0004f	90		 npad	 1

; 1114 : }

  00050	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 8
_Val$ = 256
_New_val$ = 264
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__18CBD245_utility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

  0003b	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 89 45 08	 mov	 QWORD PTR _Old_val$[rbp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

  00049	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]
  00050	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _New_val$[rbp]
  00057	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0005a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 529  :     return _Old_val;

  0005d	48 8b 45 08	 mov	 rax, QWORD PTR _Old_val$[rbp]

; 530  : }

  00061	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00068	5f		 pop	 rdi
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00042	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ; std::_Get_size_of_n<16>
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Oldsize$ = 104
_Newlast$1 = 136
_Oldcapacity$2 = 168
_Oldlast$3 = 200
this$ = 448
_Newsize$ = 456
_Val$ = 464
??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z PROC ; std::vector<int,std::allocator<int> >::_Resize<std::_Value_init_tag>, COMDAT

; 1162 :     void _Resize(const size_type _Newsize, const _Ty2& _Val) { // trim or append elements, provide strong guarantee

$LN6:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec c8 01
	00 00		 sub	 rsp, 456		; 000001c8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 72 00 00 00	 mov	 ecx, 114		; 00000072H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 e8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+488]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1163 :         auto& _My_data      = _Mypair._Myval2;

  00040	48 8b 85 c0 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 1164 :         pointer& _Myfirst   = _My_data._Myfirst;

  0004b	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0004f	48 83 c0 08	 add	 rax, 8
  00053	48 89 45 28	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 1165 :         pointer& _Mylast    = _My_data._Mylast;

  00057	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0005b	48 83 c0 10	 add	 rax, 16
  0005f	48 89 45 48	 mov	 QWORD PTR _Mylast$[rbp], rax

; 1166 :         const auto _Oldsize = static_cast<size_type>(_Mylast - _Myfirst);

  00063	48 8b 45 48	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00067	48 8b 4d 28	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  0006b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0006e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00071	48 2b c1	 sub	 rax, rcx
  00074	48 c1 f8 02	 sar	 rax, 2
  00078	48 89 45 68	 mov	 QWORD PTR _Oldsize$[rbp], rax

; 1167 :         if (_Newsize < _Oldsize) { // trim

  0007c	48 8b 45 68	 mov	 rax, QWORD PTR _Oldsize$[rbp]
  00080	48 39 85 c8 01
	00 00		 cmp	 QWORD PTR _Newsize$[rbp], rax
  00087	73 60		 jae	 SHORT $LN2@Resize

; 1168 :             const pointer _Newlast = _Myfirst + _Newsize;

  00089	48 8b 45 28	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0008d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00090	48 8b 8d c8 01
	00 00		 mov	 rcx, QWORD PTR _Newsize$[rbp]
  00097	48 8d 04 88	 lea	 rax, QWORD PTR [rax+rcx*4]
  0009b	48 89 85 88 00
	00 00		 mov	 QWORD PTR _Newlast$1[rbp], rax

; 1169 :             _Orphan_range(_Newlast, _Mylast);

  000a2	48 8b 45 48	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000a6	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000a9	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR _Newlast$1[rbp]
  000b0	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b7	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range

; 1170 :             _Destroy(_Newlast, _Mylast);

  000bc	48 8b 45 48	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000c0	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  000c3	48 8b 95 88 00
	00 00		 mov	 rdx, QWORD PTR _Newlast$1[rbp]
  000ca	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000d1	e8 00 00 00 00	 call	 ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy

; 1171 :             _Mylast = _Newlast;

  000d6	48 8b 45 48	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000da	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _Newlast$1[rbp]
  000e1	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1172 :             return;

  000e4	e9 bb 00 00 00	 jmp	 $LN1@Resize
$LN2@Resize:

; 1173 :         }
; 1174 : 
; 1175 :         if (_Newsize > _Oldsize) { // append

  000e9	48 8b 45 68	 mov	 rax, QWORD PTR _Oldsize$[rbp]
  000ed	48 39 85 c8 01
	00 00		 cmp	 QWORD PTR _Newsize$[rbp], rax
  000f4	0f 86 aa 00 00
	00		 jbe	 $LN3@Resize

; 1176 :             const auto _Oldcapacity = static_cast<size_type>(_My_data._Myend - _Myfirst);

  000fa	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  000fe	48 8b 4d 28	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  00102	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  00105	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00109	48 2b c1	 sub	 rax, rcx
  0010c	48 c1 f8 02	 sar	 rax, 2
  00110	48 89 85 a8 00
	00 00		 mov	 QWORD PTR _Oldcapacity$2[rbp], rax

; 1177 :             if (_Newsize > _Oldcapacity) { // reallocate

  00117	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR _Oldcapacity$2[rbp]
  0011e	48 39 85 c8 01
	00 00		 cmp	 QWORD PTR _Newsize$[rbp], rax
  00125	76 1c		 jbe	 SHORT $LN4@Resize

; 1178 :                 _Resize_reallocate(_Newsize, _Val);

  00127	4c 8b 85 d0 01
	00 00		 mov	 r8, QWORD PTR _Val$[rbp]
  0012e	48 8b 95 c8 01
	00 00		 mov	 rdx, QWORD PTR _Newsize$[rbp]
  00135	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0013c	e8 00 00 00 00	 call	 ??$_Resize_reallocate@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize_reallocate<std::_Value_init_tag>

; 1179 :                 return;

  00141	eb 61		 jmp	 SHORT $LN1@Resize
$LN4@Resize:

; 1180 :             }
; 1181 : 
; 1182 :             const pointer _Oldlast = _Mylast;

  00143	48 8b 45 48	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00147	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0014a	48 89 85 c8 00
	00 00		 mov	 QWORD PTR _Oldlast$3[rbp], rax

; 1183 :             _Mylast                = _Ufill(_Oldlast, _Newsize - _Oldsize, _Val);

  00151	48 8b 45 68	 mov	 rax, QWORD PTR _Oldsize$[rbp]
  00155	48 8b 8d c8 01
	00 00		 mov	 rcx, QWORD PTR _Newsize$[rbp]
  0015c	48 2b c8	 sub	 rcx, rax
  0015f	48 8b c1	 mov	 rax, rcx
  00162	48 8b 8d d0 01
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  00169	44 0f b6 09	 movzx	 r9d, BYTE PTR [rcx]
  0016d	4c 8b c0	 mov	 r8, rax
  00170	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR _Oldlast$3[rbp]
  00177	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0017e	e8 00 00 00 00	 call	 ?_Ufill@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHPEAH_KU_Value_init_tag@2@@Z ; std::vector<int,std::allocator<int> >::_Ufill
  00183	48 8b 4d 48	 mov	 rcx, QWORD PTR _Mylast$[rbp]
  00187	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1184 :             _Orphan_range(_Oldlast, _Oldlast);

  0018a	4c 8b 85 c8 00
	00 00		 mov	 r8, QWORD PTR _Oldlast$3[rbp]
  00191	48 8b 95 c8 00
	00 00		 mov	 rdx, QWORD PTR _Oldlast$3[rbp]
  00198	48 8b 8d c0 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0019f	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Orphan_range
$LN3@Resize:
$LN1@Resize:

; 1185 :         }
; 1186 : 
; 1187 :         // if _Newsize == _Oldsize, do nothing; avoid invalidating iterators
; 1188 :     }

  001a4	48 8d a5 a8 01
	00 00		 lea	 rsp, QWORD PTR [rbp+424]
  001ab	5f		 pop	 rdi
  001ac	5d		 pop	 rbp
  001ad	c3		 ret	 0
??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ENDP ; std::vector<int,std::allocator<int> >::_Resize<std::_Value_init_tag>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<int> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 264
$T4 = 312
$T5 = 344
$T6 = 392
$T7 = 420
$T8 = 452
tv129 = 472
tv81 = 480
tv131 = 488
tv89 = 496
_First$ = 544
_Last$ = 552
??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z PROC ; std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >, COMDAT

; 4651 : _NODISCARD bool is_sorted(_FwdIt _First, _FwdIt _Last) { // test if range is ordered by operator<

$LN7:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 02
	00 00		 sub	 rsp, 552		; 00000228H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 8a 00 00 00	 mov	 ecx, 138		; 0000008aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR [rsp+584]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4EB666AB_algorithm
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4652 :     return _STD is_sorted(_First, _Last, less<>());

  0003b	0f b6 85 e4 00
	00 00		 movzx	 eax, BYTE PTR $T2[rbp]
  00042	88 85 a4 01 00
	00		 mov	 BYTE PTR $T7[rbp], al
  00048	0f b6 85 a4 01
	00 00		 movzx	 eax, BYTE PTR $T7[rbp]
  0004f	88 85 c4 01 00
	00		 mov	 BYTE PTR $T8[rbp], al
  00055	48 8d 85 08 01
	00 00		 lea	 rax, QWORD PTR $T3[rbp]
  0005c	48 89 85 38 01
	00 00		 mov	 QWORD PTR $T4[rbp], rax
  00063	48 8b 95 28 02
	00 00		 mov	 rdx, QWORD PTR _Last$[rbp]
  0006a	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR $T4[rbp]
  00071	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
  00076	48 89 85 d8 01
	00 00		 mov	 QWORD PTR tv129[rbp], rax
  0007d	48 8b 85 d8 01
	00 00		 mov	 rax, QWORD PTR tv129[rbp]
  00084	48 89 85 e0 01
	00 00		 mov	 QWORD PTR tv81[rbp], rax
  0008b	48 8d 85 58 01
	00 00		 lea	 rax, QWORD PTR $T5[rbp]
  00092	48 89 85 88 01
	00 00		 mov	 QWORD PTR $T6[rbp], rax
  00099	48 8b 95 20 02
	00 00		 mov	 rdx, QWORD PTR _First$[rbp]
  000a0	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR $T6[rbp]
  000a7	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
  000ac	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv131[rbp], rax
  000b3	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv131[rbp]
  000ba	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv89[rbp], rax
  000c1	44 0f b6 85 c4
	01 00 00	 movzx	 r8d, BYTE PTR $T8[rbp]
  000c9	48 8b 95 e0 01
	00 00		 mov	 rdx, QWORD PTR tv81[rbp]
  000d0	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR tv89[rbp]
  000d7	e8 00 00 00 00	 call	 ??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z ; std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
  000dc	88 85 c4 00 00
	00		 mov	 BYTE PTR $T1[rbp], al
  000e2	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  000e9	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  000ee	90		 npad	 1
  000ef	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  000f6	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  000fb	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]

; 4653 : }

  00102	48 8d a5 08 02
	00 00		 lea	 rsp, QWORD PTR [rbp+520]
  00109	5f		 pop	 rdi
  0010a	5d		 pop	 rbp
  0010b	c3		 ret	 0
??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ENDP ; std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 264
$T4 = 312
$T5 = 344
$T6 = 392
$T7 = 420
$T8 = 452
tv129 = 472
tv81 = 480
tv131 = 488
tv89 = 496
_First$ = 544
_Last$ = 552
?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA PROC ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA ENDP ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 264
$T4 = 312
$T5 = 344
$T6 = 392
$T7 = 420
$T8 = 452
tv129 = 472
tv81 = 480
tv131 = 488
tv89 = 496
_First$ = 544
_Last$ = 552
?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA PROC ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA ENDP ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 264
$T4 = 312
$T5 = 344
$T6 = 392
$T7 = 420
$T8 = 452
tv129 = 472
tv81 = 480
tv131 = 488
tv89 = 496
_First$ = 544
_Last$ = 552
?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA PROC ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA ENDP ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 228
$T3 = 264
$T4 = 312
$T5 = 344
$T6 = 392
$T7 = 420
$T8 = 452
tv129 = 472
tv81 = 480
tv131 = 488
tv89 = 496
_First$ = 544
_Last$ = 552
?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA PROC ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA ENDP ; `std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 280
$T4 = 312
$T5 = 360
$T6 = 388
$T7 = 420
$T8 = 452
tv131 = 472
tv90 = 480
tv133 = 488
tv79 = 496
__$ReturnUdt$ = 544
_First$ = 552
_Last$ = 560
??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z PROC ; std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >, COMDAT

; 4646 : _NODISCARD _FwdIt is_sorted_until(_FwdIt _First, _FwdIt _Last) { // find extent of range that is ordered by operator<

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 28 02
	00 00		 sub	 rsp, 552		; 00000228H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 8a 00 00 00	 mov	 ecx, 138		; 0000008aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR [rsp+584]
  00034	c7 85 c4 01 00
	00 00 00 00 00	 mov	 DWORD PTR $T8[rbp], 0
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4EB666AB_algorithm
  00045	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4647 :     return _STD is_sorted_until(_First, _Last, less<>());

  0004a	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00051	88 85 84 01 00
	00		 mov	 BYTE PTR $T6[rbp], al
  00057	0f b6 85 84 01
	00 00		 movzx	 eax, BYTE PTR $T6[rbp]
  0005e	88 85 a4 01 00
	00		 mov	 BYTE PTR $T7[rbp], al
  00064	48 8d 85 e8 00
	00 00		 lea	 rax, QWORD PTR $T2[rbp]
  0006b	48 89 85 18 01
	00 00		 mov	 QWORD PTR $T3[rbp], rax
  00072	48 8b 95 30 02
	00 00		 mov	 rdx, QWORD PTR _Last$[rbp]
  00079	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR $T3[rbp]
  00080	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
  00085	48 89 85 d8 01
	00 00		 mov	 QWORD PTR tv131[rbp], rax
  0008c	48 8b 85 d8 01
	00 00		 mov	 rax, QWORD PTR tv131[rbp]
  00093	48 89 85 e0 01
	00 00		 mov	 QWORD PTR tv90[rbp], rax
  0009a	48 8d 85 38 01
	00 00		 lea	 rax, QWORD PTR $T4[rbp]
  000a1	48 89 85 68 01
	00 00		 mov	 QWORD PTR $T5[rbp], rax
  000a8	48 8b 95 28 02
	00 00		 mov	 rdx, QWORD PTR _First$[rbp]
  000af	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  000b6	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
  000bb	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv133[rbp], rax
  000c2	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv133[rbp]
  000c9	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  000d0	44 0f b6 8d a4
	01 00 00	 movzx	 r9d, BYTE PTR $T7[rbp]
  000d8	4c 8b 85 e0 01
	00 00		 mov	 r8, QWORD PTR tv90[rbp]
  000df	48 8b 95 f0 01
	00 00		 mov	 rdx, QWORD PTR tv79[rbp]
  000e6	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000ed	e8 00 00 00 00	 call	 ??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@V10@U?$less@X@0@@Z ; std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
  000f2	8b 85 c4 01 00
	00		 mov	 eax, DWORD PTR $T8[rbp]
  000f8	83 c8 01	 or	 eax, 1
  000fb	89 85 c4 01 00
	00		 mov	 DWORD PTR $T8[rbp], eax
  00101	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00108	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  0010d	90		 npad	 1
  0010e	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  00115	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  0011a	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 4648 : }

  00121	48 8d a5 08 02
	00 00		 lea	 rsp, QWORD PTR [rbp+520]
  00128	5f		 pop	 rdi
  00129	5d		 pop	 rbp
  0012a	c3		 ret	 0
??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z ENDP ; std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 280
$T4 = 312
$T5 = 360
$T6 = 388
$T7 = 420
$T8 = 452
tv131 = 472
tv90 = 480
tv133 = 488
tv79 = 496
__$ReturnUdt$ = 544
_First$ = 552
_Last$ = 560
?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA PROC ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA ENDP ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 280
$T4 = 312
$T5 = 360
$T6 = 388
$T7 = 420
$T8 = 452
tv131 = 472
tv90 = 480
tv133 = 488
tv79 = 496
__$ReturnUdt$ = 544
_First$ = 552
_Last$ = 560
?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA PROC ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA ENDP ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 280
$T4 = 312
$T5 = 360
$T6 = 388
$T7 = 420
$T8 = 452
tv131 = 472
tv90 = 480
tv133 = 488
tv79 = 496
__$ReturnUdt$ = 544
_First$ = 552
_Last$ = 560
?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA PROC ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA ENDP ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 280
$T4 = 312
$T5 = 360
$T6 = 388
$T7 = 420
$T8 = 452
tv131 = 472
tv90 = 480
tv133 = 488
tv79 = 496
__$ReturnUdt$ = 544
_First$ = 552
_Last$ = 560
?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA PROC ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z@4HA ENDP ; `std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
_TEXT	SEGMENT
$T1 = 200
_First$ = 256
_Last$ = 264
??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z PROC ; std::distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >, COMDAT

; 781  : _NODISCARD _CONSTEXPR17 _Iter_diff_t<_InIt> distance(_InIt _First, _InIt _Last) { // return distance between iterators

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__F3238959_xutility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 782  :     if constexpr (_Is_random_iter_v<_InIt>) {
; 783  :         return _Last - _First; // assume the iterator will do debug checking

  0003b	48 8b 95 00 01
	00 00		 mov	 rdx, QWORD PTR _First$[rbp]
  00042	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  00049	e8 00 00 00 00	 call	 ??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_JAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator-
  0004e	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00055	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0005c	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00061	90		 npad	 1
  00062	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  00069	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  0006e	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR $T1[rbp]
  00075	eb 19		 jmp	 SHORT $LN1@distance

; 784  :     } else {
; 785  :         _Adl_verify_range(_First, _Last);
; 786  :         auto _UFirst             = _Get_unwrapped(_First);
; 787  :         const auto _ULast        = _Get_unwrapped(_Last);
; 788  :         _Iter_diff_t<_InIt> _Off = 0;
; 789  :         for (; _UFirst != _ULast; ++_UFirst) {
; 790  :             ++_Off;
; 791  :         }
; 792  : 
; 793  :         return _Off;
; 794  :     }
; 795  : }

  00077	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0007e	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00083	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0008a	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  0008f	90		 npad	 1
$LN1@distance:
  00090	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00097	5f		 pop	 rdi
  00098	5d		 pop	 rbp
  00099	c3		 ret	 0
??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ENDP ; std::distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
_First$ = 256
_Last$ = 264
?dtor$0@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA PROC ; `std::distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA ENDP ; `std::distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
_First$ = 256
_Last$ = 264
?dtor$1@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA PROC ; `std::distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA ENDP ; `std::distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
_First$ = 256
_Last$ = 264
?dtor$0@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA PROC ; `std::distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA ENDP ; `std::distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 200
_First$ = 256
_Last$ = 264
?dtor$1@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA PROC ; `std::distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA ENDP ; `std::distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UDest$ = 72
$T4 = 308
tv91 = 324
__$ArrayPad$ = 328
__$ReturnUdt$ = 368
_First$ = 376
_Last$ = 384
_Dest$ = 392
_Pred$ = 400
??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z PROC ; std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >, COMDAT

; 467  : _OutIt copy_if(_InIt _First, _InIt _Last, _OutIt _Dest, _Pr _Pred) { // copy each satisfying _Pred

  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  00039	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00040	48 33 c5	 xor	 rax, rbp
  00043	48 89 85 48 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0004a	c7 85 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR $T4[rbp], 0
  00054	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4EB666AB_algorithm
  0005b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 468  :     _Adl_verify_range(_First, _Last);

  00060	48 8b 95 80 01
	00 00		 mov	 rdx, QWORD PTR _Last$[rbp]
  00067	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0006e	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >

; 469  :     auto _UFirst      = _Get_unwrapped(_First);

  00073	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0007a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
  0007f	48 89 45 08	 mov	 QWORD PTR _UFirst$[rbp], rax

; 470  :     const auto _ULast = _Get_unwrapped(_Last);

  00083	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0008a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
  0008f	48 89 45 28	 mov	 QWORD PTR _ULast$[rbp], rax

; 471  :     auto _UDest       = _Get_unwrapped_unverified(_Dest);

  00093	ba 18 00 00 00	 mov	 edx, 24
  00098	48 8d 4d 48	 lea	 rcx, QWORD PTR _UDest$[rbp]
  0009c	e8 00 00 00 00	 call	 ?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAX_K@Z
  000a1	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  000a8	e8 00 00 00 00	 call	 ??$_Get_unwrapped_unverified@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YAAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z ; std::_Get_unwrapped_unverified<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
  000ad	48 8b d0	 mov	 rdx, rax
  000b0	48 8d 4d 48	 lea	 rcx, QWORD PTR _UDest$[rbp]
  000b4	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
  000b9	90		 npad	 1

; 472  :     for (; _UFirst != _ULast; ++_UFirst) {

  000ba	eb 0c		 jmp	 SHORT $LN4@copy_if
$LN2@copy_if:
  000bc	48 8b 45 08	 mov	 rax, QWORD PTR _UFirst$[rbp]
  000c0	48 83 c0 04	 add	 rax, 4
  000c4	48 89 45 08	 mov	 QWORD PTR _UFirst$[rbp], rax
$LN4@copy_if:
  000c8	48 8b 45 28	 mov	 rax, QWORD PTR _ULast$[rbp]
  000cc	48 39 45 08	 cmp	 QWORD PTR _UFirst$[rbp], rax
  000d0	74 41		 je	 SHORT $LN3@copy_if

; 473  :         if (_Pred(*_UFirst)) {

  000d2	48 8b 45 08	 mov	 rax, QWORD PTR _UFirst$[rbp]
  000d6	8b 10		 mov	 edx, DWORD PTR [rax]
  000d8	48 8d 8d 90 01
	00 00		 lea	 rcx, QWORD PTR _Pred$[rbp]
  000df	e8 00 00 00 00	 call	 ??R<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@QEBA@H@Z ; `AlgorithmCpp::foo'::`2'::<lambda_1>::operator()
  000e4	0f b6 c0	 movzx	 eax, al
  000e7	85 c0		 test	 eax, eax
  000e9	74 26		 je	 SHORT $LN5@copy_if

; 474  :             *_UDest = *_UFirst;

  000eb	48 8b 45 08	 mov	 rax, QWORD PTR _UFirst$[rbp]
  000ef	8b 00		 mov	 eax, DWORD PTR [rax]
  000f1	89 85 44 01 00
	00		 mov	 DWORD PTR tv91[rbp], eax
  000f7	48 8d 4d 48	 lea	 rcx, QWORD PTR _UDest$[rbp]
  000fb	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*
  00100	8b 8d 44 01 00
	00		 mov	 ecx, DWORD PTR tv91[rbp]
  00106	89 08		 mov	 DWORD PTR [rax], ecx

; 475  :             ++_UDest;

  00108	48 8d 4d 48	 lea	 rcx, QWORD PTR _UDest$[rbp]
  0010c	e8 00 00 00 00	 call	 ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator++
$LN5@copy_if:

; 476  :         }
; 477  :     }

  00111	eb a9		 jmp	 SHORT $LN2@copy_if
$LN3@copy_if:

; 478  : 
; 479  :     _Seek_wrapped(_Dest, _UDest);

  00113	48 8d 55 48	 lea	 rdx, QWORD PTR _UDest$[rbp]
  00117	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  0011e	e8 00 00 00 00	 call	 ??$_Seek_wrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEAV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@AEBV10@@Z ; std::_Seek_wrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >

; 480  :     return _Dest;

  00123	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR _Dest$[rbp]
  0012a	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  00131	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  00136	8b 85 34 01 00
	00		 mov	 eax, DWORD PTR $T4[rbp]
  0013c	83 c8 01	 or	 eax, 1
  0013f	89 85 34 01 00
	00		 mov	 DWORD PTR $T4[rbp], eax
  00145	48 8d 4d 48	 lea	 rcx, QWORD PTR _UDest$[rbp]
  00149	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  0014e	90		 npad	 1
  0014f	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00156	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  0015b	90		 npad	 1
  0015c	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  00163	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00168	90		 npad	 1
  00169	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  00170	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00175	48 8b 85 70 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 481  : }

  0017c	48 8b f8	 mov	 rdi, rax
  0017f	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00183	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z$rtcFrameData
  0018a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0018f	48 8b c7	 mov	 rax, rdi
  00192	48 8b 8d 48 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00199	48 33 cd	 xor	 rcx, rbp
  0019c	e8 00 00 00 00	 call	 __security_check_cookie
  001a1	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  001a8	5f		 pop	 rdi
  001a9	5d		 pop	 rbp
  001aa	c3		 ret	 0
??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z ENDP ; std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UDest$ = 72
$T4 = 308
tv91 = 324
__$ArrayPad$ = 328
__$ReturnUdt$ = 368
_First$ = 376
_Last$ = 384
_Dest$ = 392
_Pred$ = 400
?dtor$0@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA PROC ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA ENDP ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UDest$ = 72
$T4 = 308
tv91 = 324
__$ArrayPad$ = 328
__$ReturnUdt$ = 368
_First$ = 376
_Last$ = 384
_Dest$ = 392
_Pred$ = 400
?dtor$1@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA PROC ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA ENDP ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UDest$ = 72
$T4 = 308
tv91 = 324
__$ArrayPad$ = 328
__$ReturnUdt$ = 368
_First$ = 376
_Last$ = 384
_Dest$ = 392
_Pred$ = 400
?dtor$2@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA PROC ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA ENDP ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$2
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UDest$ = 72
$T4 = 308
tv91 = 324
__$ArrayPad$ = 328
__$ReturnUdt$ = 368
_First$ = 376
_Last$ = 384
_Dest$ = 392
_Pred$ = 400
?dtor$3@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA PROC ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR _UDest$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$3@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA ENDP ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UDest$ = 72
$T4 = 308
tv91 = 324
__$ArrayPad$ = 328
__$ReturnUdt$ = 368
_First$ = 376
_Last$ = 384
_Dest$ = 392
_Pred$ = 400
?dtor$0@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA PROC ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA ENDP ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UDest$ = 72
$T4 = 308
tv91 = 324
__$ArrayPad$ = 328
__$ReturnUdt$ = 368
_First$ = 376
_Last$ = 384
_Dest$ = 392
_Pred$ = 400
?dtor$1@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA PROC ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA ENDP ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UDest$ = 72
$T4 = 308
tv91 = 324
__$ArrayPad$ = 328
__$ReturnUdt$ = 368
_First$ = 376
_Last$ = 384
_Dest$ = 392
_Pred$ = 400
?dtor$2@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA PROC ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$2
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$2@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA ENDP ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$2
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_UDest$ = 72
$T4 = 308
tv91 = 324
__$ArrayPad$ = 328
__$ReturnUdt$ = 368
_First$ = 376
_Last$ = 384
_Dest$ = 392
_Pred$ = 400
?dtor$3@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA PROC ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$3
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR _UDest$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$3@?0???$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z@4HA ENDP ; `std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >'::`1'::dtor$3
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\AlgorithmCpp.cpp
;	COMDAT ??R<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@QEBA@H@Z
_TEXT	SEGMENT
tv66 = 192
this$ = 240
i$ = 248
??R<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@QEBA@H@Z PROC ; `AlgorithmCpp::foo'::`2'::<lambda_1>::operator(), COMDAT

; 26   : 	auto it = std::copy_if(v.begin(), v.end(), v1.begin(), [](int i) {return i % 2 != 0; });

  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DC63C0AB_AlgorithmCpp@cpp
  00035	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003a	8b 85 f8 00 00
	00		 mov	 eax, DWORD PTR i$[rbp]
  00040	99		 cdq
  00041	83 e0 01	 and	 eax, 1
  00044	33 c2		 xor	 eax, edx
  00046	2b c2		 sub	 eax, edx
  00048	85 c0		 test	 eax, eax
  0004a	74 0c		 je	 SHORT $LN3@operator
  0004c	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv66[rbp], 1
  00056	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00058	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv66[rbp], 0
$LN4@operator:
  00062	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv66[rbp]
  00069	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00070	5f		 pop	 rdi
  00071	5d		 pop	 rbp
  00072	c3		 ret	 0
??R<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@QEBA@H@Z ENDP ; `AlgorithmCpp::foo'::`2'::<lambda_1>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
tv80 = 192
_Ostr$ = 240
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z PROC ; std::endl<char,std::char_traits<char> >, COMDAT

; 950  :     basic_ostream<_Elem, _Traits>& _Ostr) { // insert newline and flush stream

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 951  :     _Ostr.put(_Ostr.widen('\n'));

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0003d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00040	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00044	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0004b	48 03 c8	 add	 rcx, rax
  0004e	48 8b c1	 mov	 rax, rcx
  00051	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  00058	b2 0a		 mov	 dl, 10
  0005a	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv80[rbp]
  00061	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  00067	0f b6 d0	 movzx	 edx, al
  0006a	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00071	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z

; 952  :     _Ostr.flush();

  00077	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ

; 953  :     return _Ostr;

  00084	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]

; 954  : }

  0008b	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00092	5f		 pop	 rdi
  00093	5d		 pop	 rbp
  00094	c3		 ret	 0
??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ENDP ; std::endl<char,std::char_traits<char> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@XZ PROC ; std::pair<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >::~pair<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00031	48 83 c0 18	 add	 rax, 24
  00035	48 8b c8	 mov	 rcx, rax
  00038	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  0003d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  0004c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00053	5f		 pop	 rdi
  00054	5d		 pop	 rbp
  00055	c3		 ret	 0
??1?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@XZ ENDP ; std::pair<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >::~pair<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\algorithm
;	COMDAT ??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 280
$T4 = 312
$T5 = 360
$T6 = 388
$T7 = 420
$T8 = 452
tv131 = 472
tv90 = 480
tv133 = 488
tv79 = 496
__$ReturnUdt$ = 544
_First$ = 552
_Last$ = 560
??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z PROC ; std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >, COMDAT

; 4414 : _NODISCARD constexpr pair<_FwdIt, _FwdIt> minmax_element(_FwdIt _First, _FwdIt _Last) {

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 28 02
	00 00		 sub	 rsp, 552		; 00000228H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 8a 00 00 00	 mov	 ecx, 138		; 0000008aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 48
	02 00 00	 mov	 rcx, QWORD PTR [rsp+584]
  00034	c7 85 c4 01 00
	00 00 00 00 00	 mov	 DWORD PTR $T8[rbp], 0
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__4EB666AB_algorithm
  00045	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 4415 :     // find smallest and largest elements, using operator<
; 4416 :     return _STD minmax_element(_First, _Last, less<>());

  0004a	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  00051	88 85 84 01 00
	00		 mov	 BYTE PTR $T6[rbp], al
  00057	0f b6 85 84 01
	00 00		 movzx	 eax, BYTE PTR $T6[rbp]
  0005e	88 85 a4 01 00
	00		 mov	 BYTE PTR $T7[rbp], al
  00064	48 8d 85 e8 00
	00 00		 lea	 rax, QWORD PTR $T2[rbp]
  0006b	48 89 85 18 01
	00 00		 mov	 QWORD PTR $T3[rbp], rax
  00072	48 8b 95 30 02
	00 00		 mov	 rdx, QWORD PTR _Last$[rbp]
  00079	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR $T3[rbp]
  00080	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
  00085	48 89 85 d8 01
	00 00		 mov	 QWORD PTR tv131[rbp], rax
  0008c	48 8b 85 d8 01
	00 00		 mov	 rax, QWORD PTR tv131[rbp]
  00093	48 89 85 e0 01
	00 00		 mov	 QWORD PTR tv90[rbp], rax
  0009a	48 8d 85 38 01
	00 00		 lea	 rax, QWORD PTR $T4[rbp]
  000a1	48 89 85 68 01
	00 00		 mov	 QWORD PTR $T5[rbp], rax
  000a8	48 8b 95 28 02
	00 00		 mov	 rdx, QWORD PTR _First$[rbp]
  000af	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR $T5[rbp]
  000b6	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
  000bb	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv133[rbp], rax
  000c2	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv133[rbp]
  000c9	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv79[rbp], rax
  000d0	44 0f b6 8d a4
	01 00 00	 movzx	 r9d, BYTE PTR $T7[rbp]
  000d8	4c 8b 85 e0 01
	00 00		 mov	 r8, QWORD PTR tv90[rbp]
  000df	48 8b 95 f0 01
	00 00		 mov	 rdx, QWORD PTR tv79[rbp]
  000e6	48 8b 8d 20 02
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  000ed	e8 00 00 00 00	 call	 ??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@U?$less@X@2@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0U?$less@X@0@@Z ; std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::less<void> >
  000f2	8b 85 c4 01 00
	00		 mov	 eax, DWORD PTR $T8[rbp]
  000f8	83 c8 01	 or	 eax, 1
  000fb	89 85 c4 01 00
	00		 mov	 DWORD PTR $T8[rbp], eax
  00101	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00108	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  0010d	90		 npad	 1
  0010e	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  00115	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  0011a	48 8b 85 20 02
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 4417 : }

  00121	48 8d a5 08 02
	00 00		 lea	 rsp, QWORD PTR [rbp+520]
  00128	5f		 pop	 rdi
  00129	5d		 pop	 rbp
  0012a	c3		 ret	 0
??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ENDP ; std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 280
$T4 = 312
$T5 = 360
$T6 = 388
$T7 = 420
$T8 = 452
tv131 = 472
tv90 = 480
tv133 = 488
tv79 = 496
__$ReturnUdt$ = 544
_First$ = 552
_Last$ = 560
?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA PROC ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA ENDP ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 280
$T4 = 312
$T5 = 360
$T6 = 388
$T7 = 420
$T8 = 452
tv131 = 472
tv90 = 480
tv133 = 488
tv79 = 496
__$ReturnUdt$ = 544
_First$ = 552
_Last$ = 560
?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA PROC ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA ENDP ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 280
$T4 = 312
$T5 = 360
$T6 = 388
$T7 = 420
$T8 = 452
tv131 = 472
tv90 = 480
tv133 = 488
tv79 = 496
__$ReturnUdt$ = 544
_First$ = 552
_Last$ = 560
?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA PROC ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA ENDP ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
$T1 = 196
$T2 = 232
$T3 = 280
$T4 = 312
$T5 = 360
$T6 = 388
$T7 = 420
$T8 = 452
tv131 = 472
tv90 = 480
tv133 = 488
tv79 = 496
__$ReturnUdt$ = 544
_First$ = 552
_Last$ = 560
?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA PROC ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 28 02
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z@4HA ENDP ; `std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\ostream
;	COMDAT ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
_TEXT	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z PROC ; std::operator<<<std::char_traits<char> >, COMDAT

; 738  :     const char* _Val) { // insert NTBS into char stream

$LN25:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 38 02
	00 00		 sub	 rsp, 568		; 00000238H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 8e 00 00 00	 mov	 ecx, 142		; 0000008eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 58
	02 00 00	 mov	 rcx, QWORD PTR [rsp+600]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 00 02
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__CAA399EF_ostream
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 739  :     using _Elem = char;
; 740  :     using _Myos = basic_ostream<_Elem, _Traits>;
; 741  : 
; 742  :     ios_base::iostate _State = ios_base::goodbit;

  0004c	c7 45 04 00 00
	00 00		 mov	 DWORD PTR _State$[rbp], 0

; 743  :     streamsize _Count        = static_cast<streamsize>(_Traits::length(_Val));

  00053	48 8b 8d 38 02
	00 00		 mov	 rcx, QWORD PTR _Val$[rbp]
  0005a	e8 00 00 00 00	 call	 ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ; std::_Narrow_char_traits<char,int>::length
  0005f	48 89 45 28	 mov	 QWORD PTR _Count$[rbp], rax

; 744  :     streamsize _Pad          = _Ostr.width() <= 0 || _Ostr.width() <= _Count ? 0 : _Ostr.width() - _Count;

  00063	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0006a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00071	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00078	48 03 c8	 add	 rcx, rax
  0007b	48 8b c1	 mov	 rax, rcx
  0007e	48 8b c8	 mov	 rcx, rax
  00081	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  00087	48 85 c0	 test	 rax, rax
  0008a	7e 5b		 jle	 SHORT $LN17@operator
  0008c	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00093	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00096	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0009a	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000a1	48 03 c8	 add	 rcx, rax
  000a4	48 8b c1	 mov	 rax, rcx
  000a7	48 8b c8	 mov	 rcx, rax
  000aa	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  000b0	48 3b 45 28	 cmp	 rax, QWORD PTR _Count$[rbp]
  000b4	7e 31		 jle	 SHORT $LN17@operator
  000b6	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  000bd	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c0	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  000c4	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  000cb	48 03 c8	 add	 rcx, rax
  000ce	48 8b c1	 mov	 rax, rcx
  000d1	48 8b c8	 mov	 rcx, rax
  000d4	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEBA_JXZ
  000da	48 2b 45 28	 sub	 rax, QWORD PTR _Count$[rbp]
  000de	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv137[rbp], rax
  000e5	eb 0b		 jmp	 SHORT $LN18@operator
$LN17@operator:
  000e7	48 c7 85 e8 01
	00 00 00 00 00
	00		 mov	 QWORD PTR tv137[rbp], 0
$LN18@operator:
  000f2	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv137[rbp]
  000f9	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax

; 745  :     const typename _Myos::sentry _Ok(_Ostr);

  000fd	48 8b 95 30 02
	00 00		 mov	 rdx, QWORD PTR _Ostr$[rbp]
  00104	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00108	e8 00 00 00 00	 call	 ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z ; std::basic_ostream<char,std::char_traits<char> >::sentry::sentry
  0010d	90		 npad	 1

; 746  : 
; 747  :     if (!_Ok) {

  0010e	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00112	e8 00 00 00 00	 call	 ??Bsentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEBA_NXZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::operator bool
  00117	0f b6 c0	 movzx	 eax, al
  0011a	85 c0		 test	 eax, eax
  0011c	75 0e		 jne	 SHORT $LN8@operator

; 748  :         _State |= ios_base::badbit;

  0011e	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  00121	83 c8 04	 or	 eax, 4
  00124	89 45 04	 mov	 DWORD PTR _State$[rbp], eax

; 749  :     } else { // state okay, insert

  00127	e9 b6 02 00 00	 jmp	 $LN9@operator
$LN8@operator:

; 750  :         _TRY_IO_BEGIN
; 751  :         if ((_Ostr.flags() & ios_base::adjustfield) != ios_base::left) {

  0012c	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00133	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00136	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0013a	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00141	48 03 c8	 add	 rcx, rax
  00144	48 8b c1	 mov	 rax, rcx
  00147	48 8b c8	 mov	 rcx, rax
  0014a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?flags@ios_base@std@@QEBAHXZ
  00150	89 85 e4 01 00
	00		 mov	 DWORD PTR tv139[rbp], eax
  00156	8b 85 e4 01 00
	00		 mov	 eax, DWORD PTR tv139[rbp]
  0015c	25 c0 01 00 00	 and	 eax, 448		; 000001c0H
  00161	83 f8 40	 cmp	 eax, 64			; 00000040H
  00164	0f 84 e3 00 00
	00		 je	 $LN11@operator

; 752  :             for (; 0 < _Pad; --_Pad) { // pad on left

  0016a	eb 0b		 jmp	 SHORT $LN4@operator
$LN2@operator:
  0016c	48 8b 45 48	 mov	 rax, QWORD PTR _Pad$[rbp]
  00170	48 ff c8	 dec	 rax
  00173	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax
$LN4@operator:
  00177	48 83 7d 48 00	 cmp	 QWORD PTR _Pad$[rbp], 0
  0017c	0f 8e cb 00 00
	00		 jle	 $LN11@operator

; 753  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

  00182	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00189	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0018c	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00190	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00197	48 03 c8	 add	 rcx, rax
  0019a	48 8b c1	 mov	 rax, rcx
  0019d	48 8b c8	 mov	 rcx, rax
  001a0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  001a6	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv311[rbp], rax
  001ad	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv311[rbp]
  001b4	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv194[rbp], rax
  001bb	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  001c2	48 8b 00	 mov	 rax, QWORD PTR [rax]
  001c5	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  001c9	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  001d0	48 03 c8	 add	 rcx, rax
  001d3	48 8b c1	 mov	 rax, rcx
  001d6	48 8b c8	 mov	 rcx, rax
  001d9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  001df	88 85 f8 01 00
	00		 mov	 BYTE PTR tv312[rbp], al
  001e5	0f b6 85 f8 01
	00 00		 movzx	 eax, BYTE PTR tv312[rbp]
  001ec	88 85 f9 01 00
	00		 mov	 BYTE PTR tv192[rbp], al
  001f2	0f b6 95 f9 01
	00 00		 movzx	 edx, BYTE PTR tv192[rbp]
  001f9	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR tv194[rbp]
  00200	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  00206	89 85 fc 01 00
	00		 mov	 DWORD PTR tv313[rbp], eax
  0020c	8b 85 fc 01 00
	00		 mov	 eax, DWORD PTR tv313[rbp]
  00212	89 85 54 01 00
	00		 mov	 DWORD PTR $T4[rbp], eax
  00218	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0021d	89 85 74 01 00
	00		 mov	 DWORD PTR $T5[rbp], eax
  00223	48 8d 95 54 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  0022a	48 8d 8d 74 01
	00 00		 lea	 rcx, QWORD PTR $T5[rbp]
  00231	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00236	0f b6 c0	 movzx	 eax, al
  00239	85 c0		 test	 eax, eax
  0023b	74 0b		 je	 SHORT $LN12@operator

; 754  :                     _State |= ios_base::badbit; // insertion failed, quit

  0023d	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  00240	83 c8 04	 or	 eax, 4
  00243	89 45 04	 mov	 DWORD PTR _State$[rbp], eax

; 755  :                     break;

  00246	eb 05		 jmp	 SHORT $LN11@operator
$LN12@operator:

; 756  :                 }
; 757  :             }

  00248	e9 1f ff ff ff	 jmp	 $LN2@operator
$LN11@operator:

; 758  :         }
; 759  : 
; 760  :         if (_State == ios_base::goodbit && _Ostr.rdbuf()->sputn(_Val, _Count) != _Count) {

  0024d	83 7d 04 00	 cmp	 DWORD PTR _State$[rbp], 0
  00251	75 6e		 jne	 SHORT $LN13@operator
  00253	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0025a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0025d	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00261	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00268	48 03 c8	 add	 rcx, rax
  0026b	48 8b c1	 mov	 rax, rcx
  0026e	48 8b c8	 mov	 rcx, rax
  00271	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00277	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv314[rbp], rax
  0027e	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv314[rbp]
  00285	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv219[rbp], rax
  0028c	4c 8b 45 28	 mov	 r8, QWORD PTR _Count$[rbp]
  00290	48 8b 95 38 02
	00 00		 mov	 rdx, QWORD PTR _Val$[rbp]
  00297	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR tv219[rbp]
  0029e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAA_JPEBD_J@Z
  002a4	48 89 85 f8 01
	00 00		 mov	 QWORD PTR tv315[rbp], rax
  002ab	48 8b 45 28	 mov	 rax, QWORD PTR _Count$[rbp]
  002af	48 39 85 f8 01
	00 00		 cmp	 QWORD PTR tv315[rbp], rax
  002b6	74 09		 je	 SHORT $LN13@operator

; 761  :             _State |= ios_base::badbit;

  002b8	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  002bb	83 c8 04	 or	 eax, 4
  002be	89 45 04	 mov	 DWORD PTR _State$[rbp], eax
$LN13@operator:

; 762  :         }
; 763  : 
; 764  :         if (_State == ios_base::goodbit) {

  002c1	83 7d 04 00	 cmp	 DWORD PTR _State$[rbp], 0
  002c5	0f 85 e3 00 00
	00		 jne	 $LN14@operator

; 765  :             for (; 0 < _Pad; --_Pad) { // pad on right

  002cb	eb 0b		 jmp	 SHORT $LN7@operator
$LN5@operator:
  002cd	48 8b 45 48	 mov	 rax, QWORD PTR _Pad$[rbp]
  002d1	48 ff c8	 dec	 rax
  002d4	48 89 45 48	 mov	 QWORD PTR _Pad$[rbp], rax
$LN7@operator:
  002d8	48 83 7d 48 00	 cmp	 QWORD PTR _Pad$[rbp], 0
  002dd	0f 8e cb 00 00
	00		 jle	 $LN14@operator

; 766  :                 if (_Traits::eq_int_type(_Traits::eof(), _Ostr.rdbuf()->sputc(_Ostr.fill()))) {

  002e3	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  002ea	48 8b 00	 mov	 rax, QWORD PTR [rax]
  002ed	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  002f1	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  002f8	48 03 c8	 add	 rcx, rax
  002fb	48 8b c1	 mov	 rax, rcx
  002fe	48 8b c8	 mov	 rcx, rax
  00301	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?rdbuf@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@XZ
  00307	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv316[rbp], rax
  0030e	48 8b 85 e8 01
	00 00		 mov	 rax, QWORD PTR tv316[rbp]
  00315	48 89 85 f0 01
	00 00		 mov	 QWORD PTR tv256[rbp], rax
  0031c	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  00323	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00326	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  0032a	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00331	48 03 c8	 add	 rcx, rax
  00334	48 8b c1	 mov	 rax, rcx
  00337	48 8b c8	 mov	 rcx, rax
  0033a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?fill@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADXZ
  00340	88 85 f8 01 00
	00		 mov	 BYTE PTR tv317[rbp], al
  00346	0f b6 85 f8 01
	00 00		 movzx	 eax, BYTE PTR tv317[rbp]
  0034d	88 85 f9 01 00
	00		 mov	 BYTE PTR tv254[rbp], al
  00353	0f b6 95 f9 01
	00 00		 movzx	 edx, BYTE PTR tv254[rbp]
  0035a	48 8b 8d f0 01
	00 00		 mov	 rcx, QWORD PTR tv256[rbp]
  00361	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?sputc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHD@Z
  00367	89 85 fc 01 00
	00		 mov	 DWORD PTR tv318[rbp], eax
  0036d	8b 85 fc 01 00
	00		 mov	 eax, DWORD PTR tv318[rbp]
  00373	89 85 94 01 00
	00		 mov	 DWORD PTR $T6[rbp], eax
  00379	e8 00 00 00 00	 call	 ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ; std::_Narrow_char_traits<char,int>::eof
  0037e	89 85 b4 01 00
	00		 mov	 DWORD PTR $T7[rbp], eax
  00384	48 8d 95 94 01
	00 00		 lea	 rdx, QWORD PTR $T6[rbp]
  0038b	48 8d 8d b4 01
	00 00		 lea	 rcx, QWORD PTR $T7[rbp]
  00392	e8 00 00 00 00	 call	 ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ; std::_Narrow_char_traits<char,int>::eq_int_type
  00397	0f b6 c0	 movzx	 eax, al
  0039a	85 c0		 test	 eax, eax
  0039c	74 0b		 je	 SHORT $LN15@operator

; 767  :                     _State |= ios_base::badbit; // insertion failed, quit

  0039e	8b 45 04	 mov	 eax, DWORD PTR _State$[rbp]
  003a1	83 c8 04	 or	 eax, 4
  003a4	89 45 04	 mov	 DWORD PTR _State$[rbp], eax

; 768  :                     break;

  003a7	eb 05		 jmp	 SHORT $LN14@operator
$LN15@operator:

; 769  :                 }
; 770  :             }

  003a9	e9 1f ff ff ff	 jmp	 $LN5@operator
$LN14@operator:

; 771  :         }
; 772  : 
; 773  :         _Ostr.width(0);

  003ae	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  003b5	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003b8	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  003bc	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  003c3	48 03 c8	 add	 rcx, rax
  003c6	48 8b c1	 mov	 rax, rcx
  003c9	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv277[rbp], rax
  003d0	33 d2		 xor	 edx, edx
  003d2	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR tv277[rbp]
  003d9	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?width@ios_base@std@@QEAA_J_J@Z
  003df	90		 npad	 1
  003e0	eb 00		 jmp	 SHORT $LN9@operator
$LN23@operator:
$LN9@operator:

; 774  :         _CATCH_IO_(ios_base, _Ostr)
; 775  :     }
; 776  : 
; 777  :     _Ostr.setstate(_State);

  003e2	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  003e9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  003ec	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  003f0	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  003f7	48 03 c8	 add	 rcx, rax
  003fa	48 8b c1	 mov	 rax, rcx
  003fd	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv306[rbp], rax
  00404	45 33 c0	 xor	 r8d, r8d
  00407	8b 55 04	 mov	 edx, DWORD PTR _State$[rbp]
  0040a	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR tv306[rbp]
  00411	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z

; 778  :     return _Ostr;

  00417	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0041e	48 89 85 d8 01
	00 00		 mov	 QWORD PTR $T8[rbp], rax
  00425	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00429	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0042e	48 8b 85 d8 01
	00 00		 mov	 rax, QWORD PTR $T8[rbp]

; 779  : }

  00435	48 8b f8	 mov	 rdi, rax
  00438	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  0043c	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$rtcFrameData
  00443	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00448	48 8b c7	 mov	 rax, rdi
  0044b	48 8b 8d 00 02
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00452	48 33 cd	 xor	 rcx, rbp
  00455	e8 00 00 00 00	 call	 __security_check_cookie
  0045a	48 8d a5 18 02
	00 00		 lea	 rsp, QWORD PTR [rbp+536]
  00461	5f		 pop	 rdi
  00462	5d		 pop	 rbp
  00463	c3		 ret	 0
??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ENDP ; std::operator<<<std::char_traits<char> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00018	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 774  :         _CATCH_IO_(ios_base, _Ostr)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00014	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0001b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00022	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00029	48 03 c8	 add	 rcx, rax
  0002c	48 8b c1	 mov	 rax, rcx
  0002f	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv291[rbp], rax
  00036	41 b0 01	 mov	 r8b, 1
  00039	ba 04 00 00 00	 mov	 edx, 4
  0003e	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR tv291[rbp]
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  0004b	90		 npad	 1
  0004c	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  00053	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8d 4d 68	 lea	 rcx, QWORD PTR _Ok$[rbp]
  00018	e8 00 00 00 00	 call	 ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ ; std::basic_ostream<char,std::char_traits<char> >::sentry::~sentry
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_State$ = 4
_Count$ = 40
_Pad$ = 72
_Ok$ = 104
$T4 = 340
$T5 = 372
$T6 = 404
$T7 = 436
$T8 = 472
tv139 = 484
tv316 = 488
tv314 = 488
tv311 = 488
tv306 = 488
tv291 = 488
tv277 = 488
tv137 = 488
tv256 = 496
tv219 = 496
tv194 = 496
tv317 = 504
tv315 = 504
tv312 = 504
tv254 = 505
tv192 = 505
tv318 = 508
tv313 = 508
__$ArrayPad$ = 512
_Ostr$ = 560
_Val$ = 568
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA PROC ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1

; 774  :         _CATCH_IO_(ios_base, _Ostr)

  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  00014	48 8b 85 30 02
	00 00		 mov	 rax, QWORD PTR _Ostr$[rbp]
  0001b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0001e	48 63 40 04	 movsxd	 rax, DWORD PTR [rax+4]
  00022	48 8b 8d 30 02
	00 00		 mov	 rcx, QWORD PTR _Ostr$[rbp]
  00029	48 03 c8	 add	 rcx, rax
  0002c	48 8b c1	 mov	 rax, rcx
  0002f	48 89 85 e8 01
	00 00		 mov	 QWORD PTR tv291[rbp], rax
  00036	41 b0 01	 mov	 r8b, 1
  00039	ba 04 00 00 00	 mov	 edx, 4
  0003e	48 8b 8d e8 01
	00 00		 mov	 rcx, QWORD PTR tv291[rbp]
  00045	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_?setstate@?$basic_ios@DU?$char_traits@D@std@@@std@@QEAAXH_N@Z
  0004b	90		 npad	 1
  0004c	48 8d 05 00 00
	00 00		 lea	 rax, $LN23@catch$1
  00053	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00057	5f		 pop	 rdi
  00058	5d		 pop	 rbp
  00059	c3		 ret	 0
  0005a	cc		 int	 3
?catch$1@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA ENDP ; `std::operator<<<std::char_traits<char> >'::`1'::catch$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\numeric
;	COMDAT ??$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_First$ = 288
_Last$ = 296
_Val$ = 304
??$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z PROC ; std::iota<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int>, COMDAT

; 802  : void iota(_FwdIt _First, _FwdIt _Last, _Ty _Val) {

$LN8:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__2CBBF969_numeric
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 803  :     // compute increasing sequence into [_First, _Last)
; 804  :     _Adl_verify_range(_First, _Last);

  00040	48 8b 95 28 01
	00 00		 mov	 rdx, QWORD PTR _Last$[rbp]
  00047	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0004e	e8 00 00 00 00	 call	 ??$_Adl_verify_range@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@YAXAEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ; std::_Adl_verify_range<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >

; 805  :     auto _UFirst      = _Get_unwrapped(_First);

  00053	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0005a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
  0005f	48 89 45 08	 mov	 QWORD PTR _UFirst$[rbp], rax

; 806  :     const auto _ULast = _Get_unwrapped(_Last);

  00063	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0006a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@$0A@@std@@YA@AEBV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@@Z ; std::_Get_unwrapped<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,0>
  0006f	48 89 45 28	 mov	 QWORD PTR _ULast$[rbp], rax

; 807  :     for (; _UFirst != _ULast; ++_UFirst, (void) ++_Val) {

  00073	eb 1a		 jmp	 SHORT $LN4@iota
$LN2@iota:
  00075	48 8b 45 08	 mov	 rax, QWORD PTR _UFirst$[rbp]
  00079	48 83 c0 04	 add	 rax, 4
  0007d	48 89 45 08	 mov	 QWORD PTR _UFirst$[rbp], rax
  00081	8b 85 30 01 00
	00		 mov	 eax, DWORD PTR _Val$[rbp]
  00087	ff c0		 inc	 eax
  00089	89 85 30 01 00
	00		 mov	 DWORD PTR _Val$[rbp], eax
$LN4@iota:
  0008f	48 8b 45 28	 mov	 rax, QWORD PTR _ULast$[rbp]
  00093	48 39 45 08	 cmp	 QWORD PTR _UFirst$[rbp], rax
  00097	74 0e		 je	 SHORT $LN3@iota

; 808  :         *_UFirst = _Val;

  00099	48 8b 45 08	 mov	 rax, QWORD PTR _UFirst$[rbp]
  0009d	8b 8d 30 01 00
	00		 mov	 ecx, DWORD PTR _Val$[rbp]
  000a3	89 08		 mov	 DWORD PTR [rax], ecx

; 809  :     }

  000a5	eb ce		 jmp	 SHORT $LN2@iota
$LN3@iota:

; 810  : }

  000a7	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  000ae	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  000b3	90		 npad	 1
  000b4	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  000bb	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  000c0	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000c7	5f		 pop	 rdi
  000c8	5d		 pop	 rbp
  000c9	c3		 ret	 0
??$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z ENDP ; std::iota<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_First$ = 288
_Last$ = 296
_Val$ = 304
?dtor$0@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA PROC ; `std::iota<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA ENDP ; `std::iota<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int>'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_First$ = 288
_Last$ = 296
_Val$ = 304
?dtor$1@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA PROC ; `std::iota<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA ENDP ; `std::iota<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_First$ = 288
_Last$ = 296
_Val$ = 304
?dtor$0@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA PROC ; `std::iota<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int>'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 28 01
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$0@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA ENDP ; `std::iota<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int>'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_First$ = 288
_Last$ = 296
_Val$ = 304
?dtor$1@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA PROC ; `std::iota<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int>'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 20	 lea	 rbp, QWORD PTR [rdx+32]
  00014	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$1@?0???$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z@4HA ENDP ; `std::iota<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int>'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAX_K@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::__autoclassinit2, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  00034	33 c0		 xor	 eax, eax
  00036	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR classSize$[rbp]
  0003d	f3 aa		 rep stosb
  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAX_K@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator=, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00050	5f		 pop	 rdi
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??4?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00050	5f		 pop	 rdi
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00050	5f		 pop	 rdi
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ
_TEXT	SEGMENT
this$ = 224
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Unwrapped, COMDAT

; 276  :     _NODISCARD value_type* _Unwrapped() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 277  :         return _Unfancy(this->_Ptr);

  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 8b 48 10	 mov	 rcx, QWORD PTR [rax+16]
  00041	e8 00 00 00 00	 call	 ??$_Unfancy@H@std@@YAPEAHPEAH@Z ; std::_Unfancy<int>

; 278  :     }

  00046	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004d	5f		 pop	 rdi
  0004e	5d		 pop	 rbp
  0004f	c3		 ret	 0
?_Unwrapped@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAPEAHXZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Unwrapped
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
this$ = 224
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator++, COMDAT

; 226  :     _Vector_iterator& operator++() {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 227  :         _Mybase::operator++();

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator++

; 228  :         return *this;

  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 229  :     }

  00049	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00050	5f		 pop	 rdi
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
??E?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ
_TEXT	SEGMENT
this$ = 224
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*, COMDAT

; 218  :     _NODISCARD reference operator*() const {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 219  :         return const_cast<reference>(_Mybase::operator*());

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*

; 220  :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 224
_Parg$ = 232
_Pvector$ = 240
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >, COMDAT

; 216  :     _Vector_iterator(pointer _Parg, const _Container_base* _Pvector) : _Mybase(_Parg, _Pvector) {}

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	4c 8b 85 f0 00
	00 00		 mov	 r8, QWORD PTR _Pvector$[rbp]
  00047	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Parg$[rbp]
  0004e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00055	e8 00 00 00 00	 call	 ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
  0005a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00061	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00068	5f		 pop	 rdi
  00069	5d		 pop	 rbp
  0006a	c3		 ret	 0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator=, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ; std::_Iterator_base12::operator=
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __that$[rbp]
  00050	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00054	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??4?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@AEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@AEBU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __that$[rbp]
  00050	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00054	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@AEBU01@@Z ; std::_Iterator_base12::_Iterator_base12
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR __that$[rbp]
  00050	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00054	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::~_Iterator_base12
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z
_TEXT	SEGMENT
this$ = 224
_It$ = 232
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Seek_to, COMDAT

; 188  :     void _Seek_to(const value_type* _It) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 189  :         _Ptr = _Refancy<_Tptr>(const_cast<value_type*>(_It));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _It$[rbp]
  00042	e8 00 00 00 00	 call	 ??$_Refancy@PEAH$0A@@std@@YAPEAHPEAH@Z ; std::_Refancy<int *,0>
  00047	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004e	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 190  :     }

  00052	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00059	5f		 pop	 rdi
  0005a	5d		 pop	 rbp
  0005b	c3		 ret	 0
?_Seek_to@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAXPEBH@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Seek_to
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z
_TEXT	SEGMENT
tv69 = 192
_First$ = 240
_Last$ = 248
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z PROC ; std::_Verify_range, COMDAT

; 176  :     friend void _Verify_range(const _Vector_const_iterator& _First, const _Vector_const_iterator& _Last) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@Verify_ran:

; 177  :         _STL_VERIFY(_First._Getcont() == _Last._Getcont(), "vector iterators in range are from different containers");

  0003b	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00042	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00047	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  0004e	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  00055	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0005a	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv69[rbp]
  00061	48 3b c8	 cmp	 rcx, rax
  00064	75 02		 jne	 SHORT $LN14@Verify_ran
  00066	eb 6b		 jmp	 SHORT $LN15@Verify_ran
$LN14@Verify_ran:
$LN7@Verify_ran:
  00068	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DI@PBEELKIF@vector?5iterators?5in?5range?5are?5f@
  0006f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00074	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0007b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00080	45 33 c9	 xor	 r9d, r9d
  00083	41 b8 b1 00 00
	00		 mov	 r8d, 177		; 000000b1H
  00089	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@GNFKJBEL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00090	b9 02 00 00 00	 mov	 ecx, 2
  00095	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0009b	83 f8 01	 cmp	 eax, 1
  0009e	75 03		 jne	 SHORT $LN19@Verify_ran
  000a0	cc		 int	 3
  000a1	33 c0		 xor	 eax, eax
$LN19@Verify_ran:
  000a3	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000ac	41 b9 b1 00 00
	00		 mov	 r9d, 177		; 000000b1H
  000b2	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@GCNAHLKO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000b9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  000c0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1HE@KBMFDAFB@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  000c7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000cd	33 c0		 xor	 eax, eax
  000cf	85 c0		 test	 eax, eax
  000d1	75 95		 jne	 SHORT $LN7@Verify_ran
$LN15@Verify_ran:
  000d3	33 c0		 xor	 eax, eax
  000d5	85 c0		 test	 eax, eax
  000d7	0f 85 5e ff ff
	ff		 jne	 $LN4@Verify_ran
$LN10@Verify_ran:

; 178  :         _STL_VERIFY(_First._Ptr <= _Last._Ptr, "vector iterator range transposed");

  000dd	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  000e4	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Last$[rbp]
  000eb	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000ef	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000f3	77 02		 ja	 SHORT $LN16@Verify_ran
  000f5	eb 6b		 jmp	 SHORT $LN17@Verify_ran
$LN16@Verify_ran:
$LN13@Verify_ran:
  000f7	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CB@LIAHLBAO@vector?5iterator?5range?5transpose@
  000fe	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00103	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0010a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0010f	45 33 c9	 xor	 r9d, r9d
  00112	41 b8 b2 00 00
	00		 mov	 r8d, 178		; 000000b2H
  00118	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@GNFKJBEL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0011f	b9 02 00 00 00	 mov	 ecx, 2
  00124	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0012a	83 f8 01	 cmp	 eax, 1
  0012d	75 03		 jne	 SHORT $LN20@Verify_ran
  0012f	cc		 int	 3
  00130	33 c0		 xor	 eax, eax
$LN20@Verify_ran:
  00132	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0013b	41 b9 b2 00 00
	00		 mov	 r9d, 178		; 000000b2H
  00141	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@GCNAHLKO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00148	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1CG@LJCPDKEJ@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAr?$AAi?$AAf?$AAy?$AA_?$AAr?$AAa@
  0014f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EG@ODKBEHFN@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  00156	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  0015c	33 c0		 xor	 eax, eax
  0015e	85 c0		 test	 eax, eax
  00160	75 95		 jne	 SHORT $LN13@Verify_ran
$LN17@Verify_ran:
  00162	33 c0		 xor	 eax, eax
  00164	85 c0		 test	 eax, eax
  00166	0f 85 71 ff ff
	ff		 jne	 $LN10@Verify_ran

; 179  :     }

  0016c	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00173	5f		 pop	 rdi
  00174	5d		 pop	 rbp
  00175	c3		 ret	 0
?_Verify_range@std@@YAXAEBV?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@1@0@Z ENDP ; std::_Verify_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAXAEBV12@@Z
_TEXT	SEGMENT
tv69 = 192
this$ = 240
_Right$ = 248
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAXAEBV12@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Compat, COMDAT

; 167  :     void _Compat(const _Vector_const_iterator& _Right) const { // test for compatible iterator pair

$LN12:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
$LN4@Compat:

; 168  : #if _ITERATOR_DEBUG_LEVEL == 0
; 169  :         (void) _Right;
; 170  : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 0 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 0 vvv
; 171  :         _STL_VERIFY(this->_Getcont() == _Right._Getcont(), "vector iterators incompatible");

  0003b	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00042	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00047	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  0004e	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  00055	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  0005a	48 8b 8d c0 00
	00 00		 mov	 rcx, QWORD PTR tv69[rbp]
  00061	48 3b c8	 cmp	 rcx, rax
  00064	75 02		 jne	 SHORT $LN8@Compat
  00066	eb 6b		 jmp	 SHORT $LN9@Compat
$LN8@Compat:
$LN7@Compat:
  00068	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BO@CAOBBIOC@vector?5iterators?5incompatible@
  0006f	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00074	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0007b	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  00080	45 33 c9	 xor	 r9d, r9d
  00083	41 b8 ab 00 00
	00		 mov	 r8d, 171		; 000000abH
  00089	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@GNFKJBEL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00090	b9 02 00 00 00	 mov	 ecx, 2
  00095	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0009b	83 f8 01	 cmp	 eax, 1
  0009e	75 03		 jne	 SHORT $LN11@Compat
  000a0	cc		 int	 3
  000a1	33 c0		 xor	 eax, eax
$LN11@Compat:
  000a3	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000ac	41 b9 ab 00 00
	00		 mov	 r9d, 171		; 000000abH
  000b2	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@GCNAHLKO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000b9	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1LO@MGELDLOO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  000c0	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1EA@DJDGNIII@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAi?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo@
  000c7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000cd	33 c0		 xor	 eax, eax
  000cf	85 c0		 test	 eax, eax
  000d1	75 95		 jne	 SHORT $LN7@Compat
$LN9@Compat:
  000d3	33 c0		 xor	 eax, eax
  000d5	85 c0		 test	 eax, eax
  000d7	0f 85 5e ff ff
	ff		 jne	 $LN4@Compat

; 172  : #endif // _ITERATOR_DEBUG_LEVEL == 0
; 173  :     }

  000dd	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  000e4	5f		 pop	 rdi
  000e5	5d		 pop	 rbp
  000e6	c3		 ret	 0
?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAXAEBV12@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Compat
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_NAEBV01@@Z
_TEXT	SEGMENT
tv69 = 192
this$ = 240
_Right$ = 248
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_NAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator==, COMDAT

; 141  :     _NODISCARD bool operator==(const _Vector_const_iterator& _Right) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 142  :         _Compat(_Right);

  0003b	48 8b 95 f8 00
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  00042	48 8b 8d f0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Compat

; 143  :         return _Ptr == _Right._Ptr;

  0004e	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00055	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0005c	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00060	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  00064	75 0c		 jne	 SHORT $LN3@operator
  00066	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv69[rbp], 1
  00070	eb 0a		 jmp	 SHORT $LN4@operator
$LN3@operator:
  00072	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv69[rbp], 0
$LN4@operator:
  0007c	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv69[rbp]

; 144  :     }

  00083	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  0008a	5f		 pop	 rdi
  0008b	5d		 pop	 rbp
  0008c	c3		 ret	 0
??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_NAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator==
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_JAEBV01@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_JAEBV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator-, COMDAT

; 132  :     _NODISCARD difference_type operator-(const _Vector_const_iterator& _Right) const {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 133  :         _Compat(_Right);

  0003b	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  00042	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00049	e8 00 00 00 00	 call	 ?_Compat@?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAXAEBV12@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Compat

; 134  :         return _Ptr - _Right._Ptr;

  0004e	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00055	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0005c	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  00060	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00064	48 2b c1	 sub	 rax, rcx
  00067	48 c1 f8 02	 sar	 rax, 2

; 135  :     }

  0006b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00072	5f		 pop	 rdi
  00073	5d		 pop	 rbp
  00074	c3		 ret	 0
??G?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_JAEBV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator-
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ
_TEXT	SEGMENT
_Mycont$ = 8
this$ = 256
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator++, COMDAT

; 62   :     _Vector_const_iterator& operator++() {

$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 63   : #if _ITERATOR_DEBUG_LEVEL != 0
; 64   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

  00036	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00042	48 89 45 08	 mov	 QWORD PTR _Mycont$[rbp], rax
$LN4@operator:

; 65   :         _STL_VERIFY(_Ptr, "can't increment value-initialized vector iterator");

  00046	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  00052	74 02		 je	 SHORT $LN14@operator
  00054	eb 6b		 jmp	 SHORT $LN15@operator
$LN14@operator:
$LN7@operator:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DC@KEKNBAEB@can?8t?5increment?5value?9initializ@
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 41 00 00
	00		 mov	 r8d, 65			; 00000041H
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@GNFKJBEL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN19@operator
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN19@operator:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 41 00 00
	00		 mov	 r9d, 65			; 00000041H
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@GCNAHLKO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1MG@OPNGNDCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GI@EDCILPL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@operator
$LN15@operator:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	0f 85 7b ff ff
	ff		 jne	 $LN4@operator
$LN10@operator:

; 66   :         _STL_VERIFY(_Ptr < _Mycont->_Mylast, "can't increment vector iterator past end");

  000cb	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000d2	48 8b 4d 08	 mov	 rcx, QWORD PTR _Mycont$[rbp]
  000d6	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000da	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000de	73 02		 jae	 SHORT $LN16@operator
  000e0	eb 6b		 jmp	 SHORT $LN17@operator
$LN16@operator:
$LN13@operator:
  000e2	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CJ@OAAAAGPM@can?8t?5increment?5vector?5iterator@
  000e9	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  000ee	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000f5	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000fa	45 33 c9	 xor	 r9d, r9d
  000fd	41 b8 42 00 00
	00		 mov	 r8d, 66			; 00000042H
  00103	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@GNFKJBEL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0010a	b9 02 00 00 00	 mov	 ecx, 2
  0010f	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00115	83 f8 01	 cmp	 eax, 1
  00118	75 03		 jne	 SHORT $LN20@operator
  0011a	cc		 int	 3
  0011b	33 c0		 xor	 eax, eax
$LN20@operator:
  0011d	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00126	41 b9 42 00 00
	00		 mov	 r9d, 66			; 00000042H
  0012c	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@GCNAHLKO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00133	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1MG@OPNGNDCB@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  0013a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1FG@LDPPKMGP@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAi?$AAn?$AAc?$AAr?$AAe?$AAm?$AAe?$AAn@
  00141	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00147	33 c0		 xor	 eax, eax
  00149	85 c0		 test	 eax, eax
  0014b	75 95		 jne	 SHORT $LN13@operator
$LN17@operator:
  0014d	33 c0		 xor	 eax, eax
  0014f	85 c0		 test	 eax, eax
  00151	0f 85 74 ff ff
	ff		 jne	 $LN10@operator

; 67   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 68   : 
; 69   :         ++_Ptr;

  00157	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0015e	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00162	48 83 c0 04	 add	 rax, 4
  00166	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0016d	48 89 41 10	 mov	 QWORD PTR [rcx+16], rax

; 70   :         return *this;

  00171	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 71   :     }

  00178	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0017f	5f		 pop	 rdi
  00180	5d		 pop	 rbp
  00181	c3		 ret	 0
??E?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAAEAV01@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator++
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ
_TEXT	SEGMENT
_Mycont$ = 8
this$ = 256
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*, COMDAT

; 40   :     _NODISCARD reference operator*() const {

$LN21:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 41   : #if _ITERATOR_DEBUG_LEVEL != 0
; 42   :         const auto _Mycont = static_cast<const _Myvec*>(this->_Getcont());

  00036	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
  00042	48 89 45 08	 mov	 QWORD PTR _Mycont$[rbp], rax
$LN4@operator:

; 43   :         _STL_VERIFY(_Ptr, "can't dereference value-initialized vector iterator");

  00046	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004d	48 83 78 10 00	 cmp	 QWORD PTR [rax+16], 0
  00052	74 02		 je	 SHORT $LN14@operator
  00054	eb 6b		 jmp	 SHORT $LN15@operator
$LN14@operator:
$LN7@operator:
  00056	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0DE@CHADHGFF@can?8t?5dereference?5value?9initial@
  0005d	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00062	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  00069	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0006e	45 33 c9	 xor	 r9d, r9d
  00071	41 b8 2b 00 00
	00		 mov	 r8d, 43			; 0000002bH
  00077	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@GNFKJBEL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0007e	b9 02 00 00 00	 mov	 ecx, 2
  00083	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  00089	83 f8 01	 cmp	 eax, 1
  0008c	75 03		 jne	 SHORT $LN19@operator
  0008e	cc		 int	 3
  0008f	33 c0		 xor	 eax, eax
$LN19@operator:
  00091	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0009a	41 b9 2b 00 00
	00		 mov	 r9d, 43			; 0000002bH
  000a0	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@GCNAHLKO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000a7	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1ME@LLCFNFIO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  000ae	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GM@FNBFNBEL@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
  000b5	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000bb	33 c0		 xor	 eax, eax
  000bd	85 c0		 test	 eax, eax
  000bf	75 95		 jne	 SHORT $LN7@operator
$LN15@operator:
  000c1	33 c0		 xor	 eax, eax
  000c3	85 c0		 test	 eax, eax
  000c5	0f 85 7b ff ff
	ff		 jne	 $LN4@operator
$LN10@operator:

; 44   :         _STL_VERIFY(

  000cb	48 8b 45 08	 mov	 rax, QWORD PTR _Mycont$[rbp]
  000cf	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000d6	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000da	48 39 48 08	 cmp	 QWORD PTR [rax+8], rcx
  000de	77 17		 ja	 SHORT $LN16@operator
  000e0	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000e7	48 8b 4d 08	 mov	 rcx, QWORD PTR _Mycont$[rbp]
  000eb	48 8b 49 10	 mov	 rcx, QWORD PTR [rcx+16]
  000ef	48 39 48 10	 cmp	 QWORD PTR [rax+16], rcx
  000f3	73 02		 jae	 SHORT $LN16@operator
  000f5	eb 6b		 jmp	 SHORT $LN17@operator
$LN16@operator:
$LN13@operator:
  000f7	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0CP@MDHADBHN@can?8t?5dereference?5out?5of?5range?5@
  000fe	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  00103	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0010a	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  0010f	45 33 c9	 xor	 r9d, r9d
  00112	41 b8 2d 00 00
	00		 mov	 r8d, 45			; 0000002dH
  00118	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GI@GNFKJBEL@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  0011f	b9 02 00 00 00	 mov	 ecx, 2
  00124	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0012a	83 f8 01	 cmp	 eax, 1
  0012d	75 03		 jne	 SHORT $LN20@operator
  0012f	cc		 int	 3
  00130	33 c0		 xor	 eax, eax
$LN20@operator:
  00132	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  0013b	41 b9 2d 00 00
	00		 mov	 r9d, 45			; 0000002dH
  00141	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NA@GCNAHLKO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  00148	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1ME@LLCFNFIO@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAV?$AAe?$AAc?$AAt?$AAo?$AAr?$AA_?$AAc?$AAo@
  0014f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1GC@JDCKOLAC@?$AA?$CC?$AAc?$AAa?$AAn?$AA?8?$AAt?$AA?5?$AAd?$AAe?$AAr?$AAe?$AAf?$AAe?$AAr?$AAe@
  00156	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter

; 45   :             _Mycont->_Myfirst <= _Ptr && _Ptr < _Mycont->_Mylast, "can't dereference out of range vector iterator");

  0015c	33 c0		 xor	 eax, eax
  0015e	85 c0		 test	 eax, eax
  00160	75 95		 jne	 SHORT $LN13@operator
$LN17@operator:
  00162	33 c0		 xor	 eax, eax
  00164	85 c0		 test	 eax, eax
  00166	0f 85 5f ff ff
	ff		 jne	 $LN10@operator

; 46   : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 47   : 
; 48   :         return *_Ptr;

  0016c	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00173	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 49   :     }

  00177	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0017e	5f		 pop	 rdi
  0017f	5d		 pop	 rbp
  00180	c3		 ret	 0
??D?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEBHXZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 224
_Parg$ = 232
_Pvector$ = 240
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >, COMDAT

; 36   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) : _Ptr(_Parg) {

$LN4:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00047	e8 00 00 00 00	 call	 ??0_Iterator_base12@std@@QEAA@XZ ; std::_Iterator_base12::_Iterator_base12
  0004c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00053	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Parg$[rbp]
  0005a	48 89 48 10	 mov	 QWORD PTR [rax+16], rcx

; 37   :         this->_Adopt(_Pvector);

  0005e	48 8b 95 f0 00
	00 00		 mov	 rdx, QWORD PTR _Pvector$[rbp]
  00065	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006c	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 38   :     }

  00071	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00078	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?__autoclassinit2@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
classSize$ = 232
?__autoclassinit2@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z PROC ; std::vector<int,std::allocator<int> >::__autoclassinit2, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec c8 00
	00 00		 sub	 rsp, 200		; 000000c8H
  00013	48 8b ec	 mov	 rbp, rsp
  00016	48 8b fc	 mov	 rdi, rsp
  00019	b9 32 00 00 00	 mov	 ecx, 50			; 00000032H
  0001e	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00023	f3 ab		 rep stosd
  00025	48 8b 8c 24 e8
	00 00 00	 mov	 rcx, QWORD PTR [rsp+232]
  0002d	48 8b bd e0 00
	00 00		 mov	 rdi, QWORD PTR this$[rbp]
  00034	33 c0		 xor	 eax, eax
  00036	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR classSize$[rbp]
  0003d	f3 aa		 rep stosb
  0003f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00046	5f		 pop	 rdi
  00047	5d		 pop	 rbp
  00048	c3		 ret	 0
?__autoclassinit2@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z ENDP ; std::vector<int,std::allocator<int> >::__autoclassinit2
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1425 :         return *this;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1426 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ PROC ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1421 :         return *this;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1422 :     }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ ENDP ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0_Container_base12@std@@QEAA@XZ ; std::_Container_base12::_Container_base12
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00051	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00058	48 c7 40 10 00
	00 00 00	 mov	 QWORD PTR [rax+16], 0
  00060	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00067	48 c7 40 18 00
	00 00 00	 mov	 QWORD PTR [rax+24], 0

; 315  :     }

  0006f	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00076	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0007d	5f		 pop	 rdi
  0007e	5d		 pop	 rbp
  0007f	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@H@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<int> >::_Vector_val<std::_Simple_types<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ PROC ; std::vector<int,std::allocator<int> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1693 :         return _Mypair._Get_first();

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEBAAEBV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
  00046	90		 npad	 1

; 1694 :     }

  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ ENDP ; std::vector<int,std::allocator<int> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ PROC ; std::vector<int,std::allocator<int> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1689 :         return _Mypair._Get_first();

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b c8	 mov	 rcx, rax
  00041	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAAAEAV?$allocator@H@2@XZ ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Get_first
  00046	90		 npad	 1

; 1690 :     }

  00047	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004e	5f		 pop	 rdi
  0004f	5d		 pop	 rbp
  00050	c3		 ret	 0
?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ENDP ; std::vector<int,std::allocator<int> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z
_TEXT	SEGMENT
_Lock$ = 4
_Pnext$ = 40
_Pnextptr$4 = 72
__$ArrayPad$ = 280
this$ = 320
_First$ = 328
_Last$ = 336
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  00034	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  0003b	48 33 c5	 xor	 rax, rbp
  0003e	48 89 85 18 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00045	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  0004c	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

  00051	ba 03 00 00 00	 mov	 edx, 3
  00056	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$[rbp]
  0005a	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

  00060	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00067	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006a	48 83 c0 08	 add	 rax, 8
  0006e	48 89 45 28	 mov	 QWORD PTR _Pnext$[rbp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

  00072	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00076	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0007a	74 5c		 je	 SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

  0007c	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  00080	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00083	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00087	48 89 45 48	 mov	 QWORD PTR _Pnextptr$4[rbp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

  0008b	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  00092	48 39 45 48	 cmp	 QWORD PTR _Pnextptr$4[rbp], rax
  00096	72 0d		 jb	 SHORT $LN6@Orphan_ran
  00098	48 8b 45 48	 mov	 rax, QWORD PTR _Pnextptr$4[rbp]
  0009c	48 39 85 50 01
	00 00		 cmp	 QWORD PTR _Last$[rbp], rax
  000a3	73 11		 jae	 SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  000a5	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  000a9	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000ac	48 83 c0 08	 add	 rax, 8
  000b0	48 89 45 28	 mov	 QWORD PTR _Pnext$[rbp], rax

; 1677 :             } else { // orphan the iterator

  000b4	eb 20		 jmp	 SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

  000b6	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  000ba	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bd	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

  000c4	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$[rbp]
  000c8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000cb	48 8b 4d 28	 mov	 rcx, QWORD PTR _Pnext$[rbp]
  000cf	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  000d3	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

  000d6	eb 9a		 jmp	 SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

  000d8	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$[rbp]
  000dc	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000e2	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000e6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z$rtcFrameData
  000ed	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000f2	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000f9	48 33 cd	 xor	 rcx, rbp
  000fc	e8 00 00 00 00	 call	 __security_check_cookie
  00101	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  00108	5f		 pop	 rdi
  00109	5d		 pop	 rbp
  0010a	c3		 ret	 0
?_Orphan_range@?$vector@HV?$allocator@H@std@@@std@@AEBAXPEAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ PROC ; std::vector<int,std::allocator<int> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1661 :         _Xlength_error("vector<T> too long");

  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  00031	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPEBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ENDP ; std::vector<int,std::allocator<int> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Myend$ = 104
tv90 = 312
tv88 = 320
tv86 = 328
this$ = 368
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ PROC	; std::vector<int,std::allocator<int> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1643 :         auto& _My_data    = _Mypair._Myval2;

  00037	48 8b 85 70 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

  00042	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00046	48 83 c0 08	 add	 rax, 8
  0004a	48 89 45 28	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

  0004e	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00052	48 83 c0 10	 add	 rax, 16
  00056	48 89 45 48	 mov	 QWORD PTR _Mylast$[rbp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

  0005a	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0005e	48 83 c0 18	 add	 rax, 24
  00062	48 89 45 68	 mov	 QWORD PTR _Myend$[rbp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

  00066	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0006a	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
  0006f	90		 npad	 1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

  00070	48 8b 45 28	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  00074	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00078	0f 84 95 00 00
	00		 je	 $LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

  0007e	48 8b 45 48	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00082	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  00085	48 8b 45 28	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  00089	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0008c	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00093	e8 00 00 00 00	 call	 ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy
  00098	90		 npad	 1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  00099	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000a0	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  000a5	90		 npad	 1
  000a6	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv90[rbp], rax
  000ad	48 8b 45 68	 mov	 rax, QWORD PTR _Myend$[rbp]
  000b1	48 8b 4d 28	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  000b5	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000b8	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000bb	48 2b c1	 sub	 rax, rcx
  000be	48 c1 f8 02	 sar	 rax, 2
  000c2	48 89 85 40 01
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  000c9	48 8b 45 28	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000cd	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d0	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv86[rbp], rax
  000d7	4c 8b 85 40 01
	00 00		 mov	 r8, QWORD PTR tv88[rbp]
  000de	48 8b 95 48 01
	00 00		 mov	 rdx, QWORD PTR tv86[rbp]
  000e5	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR tv90[rbp]
  000ec	e8 00 00 00 00	 call	 ?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ; std::allocator<int>::deallocate
  000f1	90		 npad	 1

; 1653 : 
; 1654 :             _Myfirst = pointer();

  000f2	48 8b 45 28	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000f6	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

  000fd	48 8b 45 48	 mov	 rax, QWORD PTR _Mylast$[rbp]
  00101	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

  00108	48 8b 45 68	 mov	 rax, QWORD PTR _Myend$[rbp]
  0010c	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

  00113	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  0011a	5f		 pop	 rdi
  0011b	5d		 pop	 rbp
  0011c	c3		 ret	 0
?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ENDP	; std::vector<int,std::allocator<int> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Myend$ = 104
tv90 = 312
tv88 = 320
tv86 = 328
this$ = 368
_Newvec$ = 376
_Newsize$ = 384
_Newcapacity$ = 392
?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z PROC ; std::vector<int,std::allocator<int> >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

  00045	48 8b 85 70 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

  00050	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00054	48 83 c0 08	 add	 rax, 8
  00058	48 89 45 28	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

  0005c	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00060	48 83 c0 10	 add	 rax, 16
  00064	48 89 45 48	 mov	 QWORD PTR _Mylast$[rbp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

  00068	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0006c	48 83 c0 18	 add	 rax, 24
  00070	48 89 45 68	 mov	 QWORD PTR _Myend$[rbp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

  00074	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  00078	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

  0007d	48 8b 45 28	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  00081	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00085	74 71		 je	 SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

  00087	48 8b 45 48	 mov	 rax, QWORD PTR _Mylast$[rbp]
  0008b	4c 8b 00	 mov	 r8, QWORD PTR [rax]
  0008e	48 8b 45 28	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  00092	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  00095	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0009c	e8 00 00 00 00	 call	 ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z ; std::vector<int,std::allocator<int> >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

  000a1	48 8b 8d 70 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000a8	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  000ad	48 89 85 38 01
	00 00		 mov	 QWORD PTR tv90[rbp], rax
  000b4	48 8b 45 68	 mov	 rax, QWORD PTR _Myend$[rbp]
  000b8	48 8b 4d 28	 mov	 rcx, QWORD PTR _Myfirst$[rbp]
  000bc	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  000bf	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000c2	48 2b c1	 sub	 rax, rcx
  000c5	48 c1 f8 02	 sar	 rax, 2
  000c9	48 89 85 40 01
	00 00		 mov	 QWORD PTR tv88[rbp], rax
  000d0	48 8b 45 28	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000d4	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000d7	48 89 85 48 01
	00 00		 mov	 QWORD PTR tv86[rbp], rax
  000de	4c 8b 85 40 01
	00 00		 mov	 r8, QWORD PTR tv88[rbp]
  000e5	48 8b 95 48 01
	00 00		 mov	 rdx, QWORD PTR tv86[rbp]
  000ec	48 8b 8d 38 01
	00 00		 mov	 rcx, QWORD PTR tv90[rbp]
  000f3	e8 00 00 00 00	 call	 ?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ; std::allocator<int>::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

  000f8	48 8b 45 28	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  000fc	48 8b 8d 78 01
	00 00		 mov	 rcx, QWORD PTR _Newvec$[rbp]
  00103	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

  00106	48 8b 85 78 01
	00 00		 mov	 rax, QWORD PTR _Newvec$[rbp]
  0010d	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR _Newsize$[rbp]
  00114	48 8d 04 88	 lea	 rax, QWORD PTR [rax+rcx*4]
  00118	48 8b 4d 48	 mov	 rcx, QWORD PTR _Mylast$[rbp]
  0011c	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

  0011f	48 8b 85 78 01
	00 00		 mov	 rax, QWORD PTR _Newvec$[rbp]
  00126	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR _Newcapacity$[rbp]
  0012d	48 8d 04 88	 lea	 rax, QWORD PTR [rax+rcx*4]
  00131	48 8b 4d 68	 mov	 rcx, QWORD PTR _Myend$[rbp]
  00135	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1640 :     }

  00138	48 8d a5 58 01
	00 00		 lea	 rsp, QWORD PTR [rbp+344]
  0013f	5f		 pop	 rdi
  00140	5d		 pop	 rbp
  00141	c3		 ret	 0
?_Change_array@?$vector@HV?$allocator@H@std@@@std@@AEAAXQEAH_K1@Z ENDP ; std::vector<int,std::allocator<int> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
this$ = 224
_Newcapacity$ = 232
?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z PROC ; std::vector<int,std::allocator<int> >::_Buy_nonzero, COMDAT

; 1605 :     void _Buy_nonzero(const size_type _Newcapacity) {

$LN4:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1606 :         // allocate array with _Newcapacity elements
; 1607 : #ifdef _ENABLE_STL_INTERNAL_CHECK
; 1608 :         auto& _My_data    = _Mypair._Myval2;
; 1609 :         pointer& _Myfirst = _My_data._Myfirst;
; 1610 :         pointer& _Mylast  = _My_data._Mylast;
; 1611 :         pointer& _Myend   = _My_data._Myend;
; 1612 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1613 :         _STL_INTERNAL_CHECK(0 < _Newcapacity);
; 1614 : #endif // _ENABLE_STL_INTERNAL_CHECK
; 1615 : 
; 1616 :         if (_Newcapacity > max_size()) {

  0003b	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00042	e8 00 00 00 00	 call	 ?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::max_size
  00047	48 39 85 e8 00
	00 00		 cmp	 QWORD PTR _Newcapacity$[rbp], rax
  0004e	76 05		 jbe	 SHORT $LN2@Buy_nonzer

; 1617 :             _Xlength();

  00050	e8 00 00 00 00	 call	 ?_Xlength@?$vector@HV?$allocator@H@std@@@std@@CAXXZ ; std::vector<int,std::allocator<int> >::_Xlength
$LN2@Buy_nonzer:

; 1618 :         }
; 1619 : 
; 1620 :         _Buy_raw(_Newcapacity);

  00055	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Newcapacity$[rbp]
  0005c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00063	e8 00 00 00 00	 call	 ?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ; std::vector<int,std::allocator<int> >::_Buy_raw
$LN3@Buy_nonzer:

; 1621 :     }

  00068	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?_Buy_nonzero@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ENDP ; std::vector<int,std::allocator<int> >::_Buy_nonzero
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Myend$ = 104
_Newvec$ = 136
tv77 = 344
this$ = 384
_Newcapacity$ = 392
?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z PROC ; std::vector<int,std::allocator<int> >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 88 01
	00 00		 sub	 rsp, 392		; 00000188H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 62 00 00 00	 mov	 ecx, 98			; 00000062H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 a8
	01 00 00	 mov	 rcx, QWORD PTR [rsp+424]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

  0003b	48 8b 85 80 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00042	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

  00046	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0004a	48 83 c0 08	 add	 rax, 8
  0004e	48 89 45 28	 mov	 QWORD PTR _Myfirst$[rbp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

  00052	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00056	48 83 c0 10	 add	 rax, 16
  0005a	48 89 45 48	 mov	 QWORD PTR _Mylast$[rbp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

  0005e	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00062	48 83 c0 18	 add	 rax, 24
  00066	48 89 45 68	 mov	 QWORD PTR _Myend$[rbp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

  0006a	48 8b 8d 80 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00071	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  00076	48 89 85 58 01
	00 00		 mov	 QWORD PTR tv77[rbp], rax
  0007d	48 8b 95 88 01
	00 00		 mov	 rdx, QWORD PTR _Newcapacity$[rbp]
  00084	48 8b 8d 58 01
	00 00		 mov	 rcx, QWORD PTR tv77[rbp]
  0008b	e8 00 00 00 00	 call	 ?allocate@?$allocator@H@std@@QEAAPEAH_K@Z ; std::allocator<int>::allocate
  00090	48 89 85 88 00
	00 00		 mov	 QWORD PTR _Newvec$[rbp], rax

; 1600 :         _Myfirst           = _Newvec;

  00097	48 8b 45 28	 mov	 rax, QWORD PTR _Myfirst$[rbp]
  0009b	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _Newvec$[rbp]
  000a2	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

  000a5	48 8b 45 48	 mov	 rax, QWORD PTR _Mylast$[rbp]
  000a9	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR _Newvec$[rbp]
  000b0	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

  000b3	48 8b 85 88 00
	00 00		 mov	 rax, QWORD PTR _Newvec$[rbp]
  000ba	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR _Newcapacity$[rbp]
  000c1	48 8d 04 88	 lea	 rax, QWORD PTR [rax+rcx*4]
  000c5	48 8b 4d 68	 mov	 rcx, QWORD PTR _Myend$[rbp]
  000c9	48 89 01	 mov	 QWORD PTR [rcx], rax

; 1603 :     }

  000cc	48 8d a5 68 01
	00 00		 lea	 rsp, QWORD PTR [rbp+360]
  000d3	5f		 pop	 rdi
  000d4	5d		 pop	 rbp
  000d5	c3		 ret	 0
?_Buy_raw@?$vector@HV?$allocator@H@std@@@std@@AEAAX_K@Z ENDP ; std::vector<int,std::allocator<int> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 8
_Geometric$ = 40
tv67 = 248
this$ = 288
_Newsize$ = 296
?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z PROC ; std::vector<int,std::allocator<int> >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

  0003b	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00042	e8 00 00 00 00	 call	 ?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::capacity
  00047	48 89 45 08	 mov	 QWORD PTR _Oldcapacity$[rbp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

  0004b	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00052	e8 00 00 00 00	 call	 ?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::max_size
  00057	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv67[rbp], rax
  0005e	33 d2		 xor	 edx, edx
  00060	48 8b 45 08	 mov	 rax, QWORD PTR _Oldcapacity$[rbp]
  00064	b9 02 00 00 00	 mov	 ecx, 2
  00069	48 f7 f1	 div	 rcx
  0006c	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR tv67[rbp]
  00073	48 2b c8	 sub	 rcx, rax
  00076	48 8b c1	 mov	 rax, rcx
  00079	48 39 45 08	 cmp	 QWORD PTR _Oldcapacity$[rbp], rax
  0007d	76 09		 jbe	 SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

  0007f	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Newsize$[rbp]
  00086	eb 36		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  00088	33 d2		 xor	 edx, edx
  0008a	48 8b 45 08	 mov	 rax, QWORD PTR _Oldcapacity$[rbp]
  0008e	b9 02 00 00 00	 mov	 ecx, 2
  00093	48 f7 f1	 div	 rcx
  00096	48 8b 4d 08	 mov	 rcx, QWORD PTR _Oldcapacity$[rbp]
  0009a	48 03 c8	 add	 rcx, rax
  0009d	48 8b c1	 mov	 rax, rcx
  000a0	48 89 45 28	 mov	 QWORD PTR _Geometric$[rbp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

  000a4	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Newsize$[rbp]
  000ab	48 39 45 28	 cmp	 QWORD PTR _Geometric$[rbp], rax
  000af	73 09		 jae	 SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

  000b1	48 8b 85 28 01
	00 00		 mov	 rax, QWORD PTR _Newsize$[rbp]
  000b8	eb 04		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

  000ba	48 8b 45 28	 mov	 rax, QWORD PTR _Geometric$[rbp]
$LN1@Calculate_:

; 1586 :     }

  000be	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000c5	5f		 pop	 rdi
  000c6	5d		 pop	 rbp
  000c7	c3		 ret	 0
?_Calculate_growth@?$vector@HV?$allocator@H@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<int,std::allocator<int> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z PROC ; std::vector<int,std::allocator<int> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1568 :         _Destroy_range(_First, _Last, _Getal());

  00040	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00047	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  0004c	4c 8b c0	 mov	 r8, rax
  0004f	48 8b 95 f0 00
	00 00		 mov	 rdx, QWORD PTR _Last$[rbp]
  00056	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  0005d	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@H@std@@@std@@YAXPEAHQEAHAEAV?$allocator@H@0@@Z ; std::_Destroy_range<std::allocator<int> >

; 1569 :     }

  00062	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00069	5f		 pop	 rdi
  0006a	5d		 pop	 rbp
  0006b	c3		 ret	 0
?_Destroy@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH0@Z ENDP ; std::vector<int,std::allocator<int> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_First$ = 264
_Last$ = 272
_Dest$ = 280
?_Umove_if_noexcept@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00@Z PROC ; std::vector<int,std::allocator<int> >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0001d	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

  00045	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  0004c	48 8b f8	 mov	 rdi, rax
  0004f	33 c0		 xor	 eax, eax
  00051	b9 01 00 00 00	 mov	 ecx, 1
  00056	f3 aa		 rep stosb
  00058	0f b6 85 c4 00
	00 00		 movzx	 eax, BYTE PTR $T1[rbp]
  0005f	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  00063	4c 8b 8d 18 01
	00 00		 mov	 r9, QWORD PTR _Dest$[rbp]
  0006a	4c 8b 85 10 01
	00 00		 mov	 r8, QWORD PTR _Last$[rbp]
  00071	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _First$[rbp]
  00078	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0007f	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00U?$integral_constant@_N$00@2@@Z ; std::vector<int,std::allocator<int> >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

  00084	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008b	5f		 pop	 rdi
  0008c	5d		 pop	 rbp
  0008d	c3		 ret	 0
?_Umove_if_noexcept@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00@Z ENDP ; std::vector<int,std::allocator<int> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
_Dest$ = 248
__formal$ = 256
?_Umove_if_noexcept1@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<int,std::allocator<int> >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
  00000	4c 89 4c 24 20	 mov	 QWORD PTR [rsp+32], r9
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

  00045	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004c	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  00051	4c 8b c8	 mov	 r9, rax
  00054	4c 8b 85 f8 00
	00 00		 mov	 r8, QWORD PTR _Dest$[rbp]
  0005b	48 8b 95 f0 00
	00 00		 mov	 rdx, QWORD PTR _Last$[rbp]
  00062	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _First$[rbp]
  00069	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PEAHV?$allocator@H@std@@@std@@YAPEAHQEAH0PEAHAEAV?$allocator@H@0@@Z ; std::_Uninitialized_move<int *,std::allocator<int> >

; 1554 :     }

  0006e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00075	5f		 pop	 rdi
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
?_Umove_if_noexcept1@?$vector@HV?$allocator@H@std@@@std@@AEAAXPEAH00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<int,std::allocator<int> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Ufill@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHPEAH_KU_Value_init_tag@2@@Z
_TEXT	SEGMENT
this$ = 224
_Dest$ = 232
_Count$ = 240
__formal$ = 248
?_Ufill@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHPEAH_KU_Value_init_tag@2@@Z PROC ; std::vector<int,std::allocator<int> >::_Ufill, COMDAT

; 1537 :     pointer _Ufill(pointer _Dest, const size_type _Count, _Value_init_tag) {

$LN3:
  00000	44 88 4c 24 20	 mov	 BYTE PTR [rsp+32], r9b
  00005	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  0000a	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000f	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00014	55		 push	 rbp
  00015	57		 push	 rdi
  00016	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0001d	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00022	48 8b fc	 mov	 rdi, rsp
  00025	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00039	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00040	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1538 :         // fill raw _Dest with _Count value-initialized objects, using allocator
; 1539 :         return _Uninitialized_value_construct_n(_Dest, _Count, _Getal());

  00045	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004c	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  00051	4c 8b c0	 mov	 r8, rax
  00054	48 8b 95 f0 00
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  0005b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Dest$[rbp]
  00062	e8 00 00 00 00	 call	 ??$_Uninitialized_value_construct_n@V?$allocator@H@std@@@std@@YAPEAHPEAH_KAEAV?$allocator@H@0@@Z ; std::_Uninitialized_value_construct_n<std::allocator<int> >

; 1540 :     }

  00067	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006e	5f		 pop	 rdi
  0006f	5d		 pop	 rbp
  00070	c3		 ret	 0
?_Ufill@?$vector@HV?$allocator@H@std@@@std@@AEAAPEAHPEAH_KU_Value_init_tag@2@@Z ENDP ; std::vector<int,std::allocator<int> >::_Ufill
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 8
this$ = 256
?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ PROC ; std::vector<int,std::allocator<int> >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1447 :         auto& _My_data = _Mypair._Myval2;

  00037	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

  00042	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0004a	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0004e	48 8b 40 18	 mov	 rax, QWORD PTR [rax+24]
  00052	48 2b c1	 sub	 rax, rcx
  00055	48 c1 f8 02	 sar	 rax, 2

; 1449 :     }

  00059	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00060	5f		 pop	 rdi
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
?capacity@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ENDP ; std::vector<int,std::allocator<int> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
this$ = 288
?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ PROC ; std::vector<int,std::allocator<int> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1442 :         return _Min_value(

  00037	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003e	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEBAAEBV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  00043	90		 npad	 1
  00044	48 8b c8	 mov	 rcx, rax
  00047	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z ; std::_Default_allocator_traits<std::allocator<int> >::max_size
  0004c	90		 npad	 1
  0004d	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  00054	e8 00 00 00 00	 call	 ?max@?$numeric_limits@_J@std@@SA_JXZ ; std::numeric_limits<__int64>::max
  00059	90		 npad	 1
  0005a	48 89 85 e8 00
	00 00		 mov	 QWORD PTR $T2[rbp], rax
  00061	48 8d 95 c8 00
	00 00		 lea	 rdx, QWORD PTR $T1[rbp]
  00068	48 8d 8d e8 00
	00 00		 lea	 rcx, QWORD PTR $T2[rbp]
  0006f	e8 00 00 00 00	 call	 ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ; std::_Min_value<unsigned __int64>
  00074	90		 npad	 1
  00075	48 8b 00	 mov	 rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

  00078	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  0007f	5f		 pop	 rdi
  00080	5d		 pop	 rbp
  00081	c3		 ret	 0
?max_size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ENDP ; std::vector<int,std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 8
this$ = 256
?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ PROC	; std::vector<int,std::allocator<int> >::size, COMDAT

; 1436 :     _NODISCARD size_type size() const noexcept { // return length of sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1437 :         auto& _My_data = _Mypair._Myval2;

  00037	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 1438 :         return static_cast<size_type>(_My_data._Mylast - _My_data._Myfirst);

  00042	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  00046	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0004a	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  0004e	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00052	48 2b c1	 sub	 rax, rcx
  00055	48 c1 f8 02	 sar	 rax, 2

; 1439 :     }

  00059	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00060	5f		 pop	 rdi
  00061	5d		 pop	 rbp
  00062	c3		 ret	 0
?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ENDP	; std::vector<int,std::allocator<int> >::size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ
_TEXT	SEGMENT
this$ = 224
?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ PROC ; std::vector<int,std::allocator<int> >::_Unchecked_end, COMDAT

; 1423 :     pointer _Unchecked_end() noexcept { // return pointer for end of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1424 :         return _Mypair._Myval2._Mylast;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]

; 1425 :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ ENDP ; std::vector<int,std::allocator<int> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ
_TEXT	SEGMENT
this$ = 224
?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ PROC ; std::vector<int,std::allocator<int> >::_Unchecked_begin, COMDAT

; 1415 :     pointer _Unchecked_begin() noexcept { // return pointer for beginning of mutable sequence

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1416 :         return _Mypair._Myval2._Myfirst;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]

; 1417 :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ ENDP ; std::vector<int,std::allocator<int> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 8
tv80 = 216
tv78 = 224
this$ = 272
__$ReturnUdt$ = 280
?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::end, COMDAT

; 1370 :     _NODISCARD iterator end() noexcept { // return iterator for end of mutable sequence

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1371 :         auto& _My_data = _Mypair._Myval2;

  0003c	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 1372 :         return iterator(_My_data._Mylast, _STD addressof(_My_data));

  00047	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0004b	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<int> > >
  00050	90		 npad	 1
  00051	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  00058	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0005c	48 8b 40 10	 mov	 rax, QWORD PTR [rax+16]
  00060	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  00067	4c 8b 85 d8 00
	00 00		 mov	 r8, QWORD PTR tv80[rbp]
  0006e	48 8b 95 e0 00
	00 00		 mov	 rdx, QWORD PTR tv78[rbp]
  00075	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0007c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
  00081	90		 npad	 1
  00082	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1373 :     }

  00089	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  00090	5f		 pop	 rdi
  00091	5d		 pop	 rbp
  00092	c3		 ret	 0
?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 8
tv80 = 216
tv78 = 224
this$ = 272
__$ReturnUdt$ = 280
?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ PROC ; std::vector<int,std::allocator<int> >::begin, COMDAT

; 1360 :     _NODISCARD iterator begin() noexcept { // return iterator for beginning of mutable sequence

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 1361 :         auto& _My_data = _Mypair._Myval2;

  0003c	48 8b 85 10 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 89 45 08	 mov	 QWORD PTR _My_data$[rbp], rax

; 1362 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

  00047	48 8b 4d 08	 mov	 rcx, QWORD PTR _My_data$[rbp]
  0004b	e8 00 00 00 00	 call	 ??$addressof@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@H@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<int> > >
  00050	90		 npad	 1
  00051	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv80[rbp], rax
  00058	48 8b 45 08	 mov	 rax, QWORD PTR _My_data$[rbp]
  0005c	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00060	48 89 85 e0 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  00067	4c 8b 85 d8 00
	00 00		 mov	 r8, QWORD PTR tv80[rbp]
  0006e	48 8b 95 e0 00
	00 00		 mov	 rdx, QWORD PTR tv78[rbp]
  00075	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR __$ReturnUdt$[rbp]
  0007c	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@PEAHPEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >
  00081	90		 npad	 1
  00082	48 8b 85 18 01
	00 00		 mov	 rax, QWORD PTR __$ReturnUdt$[rbp]

; 1363 :     }

  00089	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  00090	5f		 pop	 rdi
  00091	5d		 pop	 rbp
  00092	c3		 ret	 0
?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ENDP ; std::vector<int,std::allocator<int> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_Newsize$ = 264
?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z PROC ; std::vector<int,std::allocator<int> >::resize, COMDAT

; 1191 :     void resize(_CRT_GUARDOVERFLOW const size_type _Newsize) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 1192 :         // trim or append value-initialized elements, provide strong guarantee
; 1193 :         _Resize(_Newsize, _Value_init_tag{});

  0003b	48 8d 85 c4 00
	00 00		 lea	 rax, QWORD PTR $T1[rbp]
  00042	48 8b f8	 mov	 rdi, rax
  00045	33 c0		 xor	 eax, eax
  00047	b9 01 00 00 00	 mov	 ecx, 1
  0004c	f3 aa		 rep stosb
  0004e	4c 8d 85 c4 00
	00 00		 lea	 r8, QWORD PTR $T1[rbp]
  00055	48 8b 95 08 01
	00 00		 mov	 rdx, QWORD PTR _Newsize$[rbp]
  0005c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00063	e8 00 00 00 00	 call	 ??$_Resize@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Resize<std::_Value_init_tag>

; 1194 :     }

  00068	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0006f	5f		 pop	 rdi
  00070	5d		 pop	 rbp
  00071	c3		 ret	 0
?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z ENDP ; std::vector<int,std::allocator<int> >::resize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S1$ = 36
$T4 = 260
__$ArrayPad$ = 280
this$ = 320
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ PROC	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 18 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 624  :         _Tidy();

  00048	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0004f	e8 00 00 00 00	 call	 ?_Tidy@?$vector@HV?$allocator@H@std@@@std@@AEAAXXZ ; std::vector<int,std::allocator<int> >::_Tidy
  00054	90		 npad	 1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

  00055	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005c	e8 00 00 00 00	 call	 ?_Getal@?$vector@HV?$allocator@H@std@@@std@@AEAAAEAV?$allocator@H@2@XZ ; std::vector<int,std::allocator<int> >::_Getal
  00061	90		 npad	 1
  00062	48 8b d0	 mov	 rdx, rax
  00065	48 8d 4d 24	 lea	 rcx, QWORD PTR $S1$[rbp]
  00069	e8 00 00 00 00	 call	 ??$?0H@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@H@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><int>
  0006e	90		 npad	 1
  0006f	48 8d 45 24	 lea	 rax, QWORD PTR $S1$[rbp]
  00073	48 89 45 08	 mov	 QWORD PTR _Alproxy$[rbp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

  00077	48 c7 85 04 01
	00 00 00 00 00
	00		 mov	 QWORD PTR $T4[rbp], 0
  00082	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00089	48 8d 95 04 01
	00 00		 lea	 rdx, QWORD PTR $T4[rbp]
  00090	48 8b c8	 mov	 rcx, rax
  00093	e8 00 00 00 00	 call	 ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
  00098	90		 npad	 1
  00099	48 8b d0	 mov	 rdx, rax
  0009c	48 8b 4d 08	 mov	 rcx, QWORD PTR _Alproxy$[rbp]
  000a0	e8 00 00 00 00	 call	 ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
  000a5	90		 npad	 1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

  000a6	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000aa	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ$rtcFrameData
  000b1	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000b6	90		 npad	 1
  000b7	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000be	48 33 cd	 xor	 rcx, rbp
  000c1	e8 00 00 00 00	 call	 __security_check_cookie
  000c6	90		 npad	 1
  000c7	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  000ce	5f		 pop	 rdi
  000cf	5d		 pop	 rbp
  000d0	c3		 ret	 0
??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ENDP	; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv70 = 248
this$ = 288
_Count$ = 296
_Al$ = 304
??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z PROC ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >, COMDAT

; 412  :     explicit vector(_CRT_GUARDOVERFLOW const size_type _Count, const _Alloc& _Al = _Alloc())

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__6530EE2D_vector
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 413  :         : _Mypair(_One_then_variadic_args_t(), _Al) { // construct from _Count * _Ty(), optional allocator

  00040	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00047	48 89 85 f8 00
	00 00		 mov	 QWORD PTR tv70[rbp], rax
  0004e	4c 8b 85 30 01
	00 00		 mov	 r8, QWORD PTR _Al$[rbp]
  00055	0f b6 95 c4 00
	00 00		 movzx	 edx, BYTE PTR $T1[rbp]
  0005c	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR tv70[rbp]
  00063	e8 00 00 00 00	 call	 ??$?0AEBV?$allocator@H@std@@$$V@?$_Compressed_pair@V?$allocator@H@std@@V?$_Vector_val@U?$_Simple_types@H@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@AEBV?$allocator@H@1@@Z ; std::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1>::_Compressed_pair<std::allocator<int>,std::_Vector_val<std::_Simple_types<int> >,1><std::allocator<int> const &>

; 414  :         _Construct_n_copies_of_ty(_Count, _Value_init_tag{});

  00068	48 8d 85 e4 00
	00 00		 lea	 rax, QWORD PTR $T2[rbp]
  0006f	48 8b f8	 mov	 rdi, rax
  00072	33 c0		 xor	 eax, eax
  00074	b9 01 00 00 00	 mov	 ecx, 1
  00079	f3 aa		 rep stosb
  0007b	4c 8d 85 e4 00
	00 00		 lea	 r8, QWORD PTR $T2[rbp]
  00082	48 8b 95 28 01
	00 00		 mov	 rdx, QWORD PTR _Count$[rbp]
  00089	48 8b 8d 20 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00090	e8 00 00 00 00	 call	 ??$_Construct_n_copies_of_ty@U_Value_init_tag@std@@@?$vector@HV?$allocator@H@std@@@std@@AEAAX_KAEBU_Value_init_tag@1@@Z ; std::vector<int,std::allocator<int> >::_Construct_n_copies_of_ty<std::_Value_init_tag>

; 415  :     }

  00095	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0009c	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000a3	5f		 pop	 rdi
  000a4	5d		 pop	 rbp
  000a5	c3		 ret	 0
??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z ENDP ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z
_TEXT	SEGMENT
__formal$ = 224
?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<int> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

  00037	48 b8 ff ff ff
	ff ff ff ff 3f	 mov	 rax, 4611686018427387903 ; 3fffffffffffffffH

; 768  :     }

  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@H@std@@@std@@SA_KAEBV?$allocator@H@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<int> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@H@std@@QEAAPEAH_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@H@std@@QEAAPEAH_K@Z PROC		; std::allocator<int>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

  0003b	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Count$[rbp]
  00042	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$03@std@@YA_K_K@Z ; std::_Get_size_of_n<4>
  00047	48 8b c8	 mov	 rcx, rax
  0004a	e8 00 00 00 00	 call	 ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

  0004f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00056	5f		 pop	 rdi
  00057	5d		 pop	 rbp
  00058	c3		 ret	 0
?allocate@?$allocator@H@std@@QEAAPEAH_K@Z ENDP		; std::allocator<int>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z PROC	; std::allocator<int>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00040	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _Count$[rbp]
  00047	48 c1 e0 02	 shl	 rax, 2
  0004b	48 8b d0	 mov	 rdx, rax
  0004e	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Ptr$[rbp]
  00055	e8 00 00 00 00	 call	 ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

  0005a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
?deallocate@?$allocator@H@std@@QEAAXQEAH_K@Z ENDP	; std::allocator<int>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@H@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$allocator@H@std@@QEAA@XZ PROC			; std::allocator<int>::allocator<int>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??0?$allocator@H@std@@QEAA@XZ ENDP			; std::allocator<int>::allocator<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 200
tv65 = 216
_Left$ = 256
_Right$ = 264
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__18CBD245_utility
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 26   :     return _Right < _Left ? _Right : _Left;

  0003c	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00043	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Left$[rbp]
  0004a	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0004d	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00050	73 10		 jae	 SHORT $LN3@Min_value
  00052	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00059	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv65[rbp], rax
  00060	eb 0e		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  00062	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00069	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv65[rbp], rax
$LN4@Min_value:
  00070	48 8b 85 d8 00
	00 00		 mov	 rax, QWORD PTR tv65[rbp]
  00077	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0007e	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR $T1[rbp]

; 27   : }

  00085	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0008c	5f		 pop	 rdi
  0008d	5d		 pop	 rbp
  0008e	c3		 ret	 0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?eof@?$_Narrow_char_traits@DH@std@@SAHXZ
_TEXT	SEGMENT
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ PROC		; std::_Narrow_char_traits<char,int>::eof, COMDAT

; 410  :     _NODISCARD static constexpr int_type eof() noexcept { // return end-of-file metacharacter

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	90		 npad	 1

; 411  :         return static_cast<int_type>(EOF);

  0002b	b8 ff ff ff ff	 mov	 eax, -1

; 412  :     }

  00030	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00037	5f		 pop	 rdi
  00038	5d		 pop	 rbp
  00039	c3		 ret	 0
?eof@?$_Narrow_char_traits@DH@std@@SAHXZ ENDP		; std::_Narrow_char_traits<char,int>::eof
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z
_TEXT	SEGMENT
tv65 = 192
_Left$ = 240
_Right$ = 248
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z PROC ; std::_Narrow_char_traits<char,int>::eq_int_type, COMDAT

; 401  :     _NODISCARD static constexpr bool eq_int_type(const int_type& _Left, const int_type& _Right) noexcept {

$LN5:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 402  :         // test for metacharacter equality
; 403  :         return _Left == _Right;

  0003c	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _Left$[rbp]
  00043	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0004a	8b 09		 mov	 ecx, DWORD PTR [rcx]
  0004c	39 08		 cmp	 DWORD PTR [rax], ecx
  0004e	75 0c		 jne	 SHORT $LN3@eq_int_typ
  00050	c7 85 c0 00 00
	00 01 00 00 00	 mov	 DWORD PTR tv65[rbp], 1
  0005a	eb 0a		 jmp	 SHORT $LN4@eq_int_typ
$LN3@eq_int_typ:
  0005c	c7 85 c0 00 00
	00 00 00 00 00	 mov	 DWORD PTR tv65[rbp], 0
$LN4@eq_int_typ:
  00066	0f b6 85 c0 00
	00 00		 movzx	 eax, BYTE PTR tv65[rbp]

; 404  :     }

  0006d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?eq_int_type@?$_Narrow_char_traits@DH@std@@SA_NAEBH0@Z ENDP ; std::_Narrow_char_traits<char,int>::eq_int_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstring
;	COMDAT ?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z
_TEXT	SEGMENT
tv68 = 192
tv69 = 200
_First$ = 240
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z PROC	; std::_Narrow_char_traits<char,int>::length, COMDAT

; 310  :     _NODISCARD static _CONSTEXPR17 size_t length(_In_z_ const _Elem* const _First) noexcept { // strengthened

$LN4:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__068D371A_xstring
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 311  :         // find length of null-terminated string
; 312  : #if _HAS_CXX17
; 313  : #if _HAS_CHAR8_T
; 314  :         if constexpr (is_same_v<_Elem, char8_t>) {
; 315  : #if _HAS_U8_INTRINSICS
; 316  :             return __builtin_u8strlen(_First);
; 317  : #else // ^^^ use u8 intrinsics / no u8 intrinsics vvv
; 318  :             return _Char_traits<_Elem, _Int_type>::length(_First);
; 319  : #endif // _HAS_U8_INTRINSICS
; 320  :         } else
; 321  : #endif // _HAS_CHAR8_T
; 322  :         {
; 323  :             return __builtin_strlen(_First);

  00037	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR _First$[rbp]
  0003e	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv68[rbp], rax
  00045	48 c7 85 c8 00
	00 00 ff ff ff
	ff		 mov	 QWORD PTR tv69[rbp], -1
$LL3@length:
  00050	48 ff 85 c8 00
	00 00		 inc	 QWORD PTR tv69[rbp]
  00057	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv68[rbp]
  0005e	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR tv69[rbp]
  00065	80 3c 08 00	 cmp	 BYTE PTR [rax+rcx], 0
  00069	75 e5		 jne	 SHORT $LL3@length
  0006b	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR tv69[rbp]

; 324  :         }
; 325  : #else // _HAS_CXX17
; 326  :         return _CSTD strlen(reinterpret_cast<const char*>(_First));
; 327  : #endif // _HAS_CXX17
; 328  :     }

  00072	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00079	5f		 pop	 rdi
  0007a	5d		 pop	 rbp
  0007b	c3		 ret	 0
?length@?$_Narrow_char_traits@DH@std@@SA_KQEBD@Z ENDP	; std::_Narrow_char_traits<char,int>::length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__EFD44557_xstddef
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 280  :     return __builtin_addressof(_Val);

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR _Val$[rbp]

; 281  : }

  0003e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00045	5f		 pop	 rdi
  00046	5d		 pop	 rbp
  00047	c3		 ret	 0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1349 :         _Ptr = nullptr;

  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1350 :     }

  00045	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004c	5f		 pop	 rdi
  0004d	5d		 pop	 rbp
  0004e	c3		 ret	 0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 8
this$ = 256
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT

; 1267 :     void _Orphan_me() noexcept {

$LN15:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 38
	01 00 00	 mov	 rcx, QWORD PTR [rsp+312]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1268 :         if (_Myproxy) { // adopted, remove self from list

  00037	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00042	0f 84 dc 00 00
	00		 je	 $LN10@Orphan_me

; 1269 :             _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

  00048	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00052	48 83 c0 08	 add	 rax, 8
  00056	48 89 45 08	 mov	 QWORD PTR _Pnext$1[rbp], rax
$LN2@Orphan_me:

; 1270 :             while (*_Pnext && *_Pnext != this) {

  0005a	48 8b 45 08	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  0005e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00062	74 21		 je	 SHORT $LN6@Orphan_me
  00064	48 8b 45 08	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  00068	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0006f	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00072	74 11		 je	 SHORT $LN6@Orphan_me

; 1271 :                 _Pnext = &(*_Pnext)->_Mynextiter;

  00074	48 8b 45 08	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  00078	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007b	48 83 c0 08	 add	 rax, 8
  0007f	48 89 45 08	 mov	 QWORD PTR _Pnext$1[rbp], rax

; 1272 :             }

  00083	eb d5		 jmp	 SHORT $LN2@Orphan_me
$LN6@Orphan_me:

; 1273 : 
; 1274 :             _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

  00085	48 8b 45 08	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  00089	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0008d	74 02		 je	 SHORT $LN9@Orphan_me
  0008f	eb 6d		 jmp	 SHORT $LN12@Orphan_me
$LN9@Orphan_me:
  00091	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
  00098	48 89 44 24 28	 mov	 QWORD PTR [rsp+40], rax
  0009d	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000a4	48 89 44 24 20	 mov	 QWORD PTR [rsp+32], rax
  000a9	45 33 c9	 xor	 r9d, r9d
  000ac	41 b8 fa 04 00
	00		 mov	 r8d, 1274		; 000004faH
  000b2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000b9	b9 02 00 00 00	 mov	 ecx, 2
  000be	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000c4	90		 npad	 1
  000c5	83 f8 01	 cmp	 eax, 1
  000c8	75 03		 jne	 SHORT $LN14@Orphan_me
  000ca	cc		 int	 3
  000cb	33 c0		 xor	 eax, eax
$LN14@Orphan_me:
  000cd	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000d6	41 b9 fa 04 00
	00		 mov	 r9d, 1274		; 000004faH
  000dc	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000e3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
  000ea	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
  000f1	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  000f7	90		 npad	 1
  000f8	33 c0		 xor	 eax, eax
  000fa	85 c0		 test	 eax, eax
  000fc	75 93		 jne	 SHORT $LN9@Orphan_me
$LN12@Orphan_me:
  000fe	33 c0		 xor	 eax, eax
  00100	85 c0		 test	 eax, eax
  00102	75 81		 jne	 SHORT $LN6@Orphan_me

; 1275 :             *_Pnext  = _Mynextiter;

  00104	48 8b 45 08	 mov	 rax, QWORD PTR _Pnext$1[rbp]
  00108	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0010f	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  00113	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1276 :             _Myproxy = nullptr;

  00116	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0011d	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
$LN10@Orphan_me:

; 1277 :         }
; 1278 :     }

  00124	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  0012b	5f		 pop	 rdi
  0012c	5d		 pop	 rbp
  0012d	c3		 ret	 0
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = 192
this$ = 240
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT

; 1262 :     const _Container_base12* _Getcont() const noexcept {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 1263 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

  00037	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00042	74 16		 je	 SHORT $LN3@Getcont
  00044	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0004e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00051	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv68[rbp], rax
  00058	eb 0b		 jmp	 SHORT $LN4@Getcont
$LN3@Getcont:
  0005a	48 c7 85 c0 00
	00 00 00 00 00
	00		 mov	 QWORD PTR tv68[rbp], 0
$LN4@Getcont:
  00065	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv68[rbp]

; 1264 :     }

  0006c	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00073	5f		 pop	 rdi
  00074	5d		 pop	 rbp
  00075	c3		 ret	 0
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Parent_proxy$5 = 8
_Lock$6 = 36
_Lock$7 = 68
__$ArrayPad$ = 280
this$ = 320
_Parent$ = 328
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT

; 1234 :     void _Adopt(const _Container_base12* _Parent) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 48 01
	00 00		 sub	 rsp, 328		; 00000148H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 52 00 00 00	 mov	 ecx, 82			; 00000052H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 68
	01 00 00	 mov	 rcx, QWORD PTR [rsp+360]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 18 01
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004c	90		 npad	 1

; 1235 :         if (_Parent) {

  0004d	48 83 bd 48 01
	00 00 00	 cmp	 QWORD PTR _Parent$[rbp], 0
  00055	74 78		 je	 SHORT $LN2@Adopt

; 1236 :             // have a parent, do adoption
; 1237 :             _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

  00057	48 8b 85 48 01
	00 00		 mov	 rax, QWORD PTR _Parent$[rbp]
  0005e	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00061	48 89 45 08	 mov	 QWORD PTR _Parent_proxy$5[rbp], rax

; 1238 : 
; 1239 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1240 :             if (_Myproxy != _Parent_proxy) { // change parentage

  00065	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8b 4d 08	 mov	 rcx, QWORD PTR _Parent_proxy$5[rbp]
  00070	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00073	74 58		 je	 SHORT $LN4@Adopt

; 1241 :                 _Lockit _Lock(_LOCK_DEBUG);

  00075	ba 03 00 00 00	 mov	 edx, 3
  0007a	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  0007e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00084	90		 npad	 1

; 1242 :                 _Orphan_me();

  00085	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0008c	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00091	90		 npad	 1

; 1243 :                 _Mynextiter                 = _Parent_proxy->_Myfirstiter;

  00092	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00099	48 8b 4d 08	 mov	 rcx, QWORD PTR _Parent_proxy$5[rbp]
  0009d	48 8b 49 08	 mov	 rcx, QWORD PTR [rcx+8]
  000a1	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1244 :                 _Parent_proxy->_Myfirstiter = this;

  000a5	48 8b 45 08	 mov	 rax, QWORD PTR _Parent_proxy$5[rbp]
  000a9	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000b0	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 1245 :                 _Myproxy                    = _Parent_proxy;

  000b4	48 8b 85 40 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000bb	48 8b 4d 08	 mov	 rcx, QWORD PTR _Parent_proxy$5[rbp]
  000bf	48 89 08	 mov	 QWORD PTR [rax], rcx

; 1246 :             }

  000c2	48 8d 4d 24	 lea	 rcx, QWORD PTR _Lock$6[rbp]
  000c6	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000cc	90		 npad	 1
$LN4@Adopt:

; 1247 : 
; 1248 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1249 :             _Myproxy = _Parent_proxy;
; 1250 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1251 :         } else {

  000cd	eb 28		 jmp	 SHORT $LN3@Adopt
$LN2@Adopt:

; 1252 :             // no future parent, just disown current parent
; 1253 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1254 :             _Lockit _Lock(_LOCK_DEBUG);

  000cf	ba 03 00 00 00	 mov	 edx, 3
  000d4	48 8d 4d 44	 lea	 rcx, QWORD PTR _Lock$7[rbp]
  000d8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  000de	90		 npad	 1

; 1255 :             _Orphan_me();

  000df	48 8b 8d 40 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000e6	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  000eb	90		 npad	 1

; 1256 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1257 :             _Myproxy = nullptr;
; 1258 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1259 :         }

  000ec	48 8d 4d 44	 lea	 rcx, QWORD PTR _Lock$7[rbp]
  000f0	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000f6	90		 npad	 1
$LN3@Adopt:

; 1260 :     }

  000f7	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000fb	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcFrameData
  00102	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00107	90		 npad	 1
  00108	48 8b 8d 18 01
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  0010f	48 33 cd	 xor	 rcx, rbp
  00112	e8 00 00 00 00	 call	 __security_check_cookie
  00117	90		 npad	 1
  00118	48 8d a5 28 01
	00 00		 lea	 rsp, QWORD PTR [rbp+296]
  0011f	5f		 pop	 rdi
  00120	5d		 pop	 rbp
  00121	c3		 ret	 0
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
_Lock$ = 4
__$ArrayPad$ = 216
this$ = 256
??1_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT

; 1227 :     ~_Iterator_base12() noexcept {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 d8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 1228 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1229 :         _Lockit _Lock(_LOCK_DEBUG);

  00048	ba 03 00 00 00	 mov	 edx, 3
  0004d	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00051	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00057	90		 npad	 1

; 1230 :         _Orphan_me();

  00058	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0005f	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  00064	90		 npad	 1

; 1231 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1232 :     }

  00065	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$[rbp]
  00069	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  0006f	90		 npad	 1
  00070	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00074	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcFrameData
  0007b	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  00080	90		 npad	 1
  00081	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00088	48 33 cd	 xor	 rcx, rbp
  0008b	e8 00 00 00 00	 call	 __security_check_cookie
  00090	90		 npad	 1
  00091	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00098	5f		 pop	 rdi
  00099	5d		 pop	 rbp
  0009a	c3		 ret	 0
??1_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
_Lock$4 = 4
__$ArrayPad$ = 216
this$ = 256
_Right$ = 264
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z PROC	; std::_Iterator_base12::operator=, COMDAT

; 1210 :     _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {

$LN6:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00036	48 33 c5	 xor	 rax, rbp
  00039	48 89 85 d8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  00040	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00047	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0004c	90		 npad	 1

; 1211 :         if (_Myproxy != _Right._Myproxy) {

  0004d	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR _Right$[rbp]
  0005b	48 8b 09	 mov	 rcx, QWORD PTR [rcx]
  0005e	48 39 08	 cmp	 QWORD PTR [rax], rcx
  00061	74 51		 je	 SHORT $LN2@operator

; 1212 :             if (_Right._Myproxy) {

  00063	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  0006a	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  0006e	74 1c		 je	 SHORT $LN3@operator

; 1213 :                 _Adopt(_Right._Myproxy->_Mycont);

  00070	48 8b 85 08 01
	00 00		 mov	 rax, QWORD PTR _Right$[rbp]
  00077	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0007a	48 8b 10	 mov	 rdx, QWORD PTR [rax]
  0007d	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00084	e8 00 00 00 00	 call	 ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
  00089	90		 npad	 1

; 1214 :             } else { // becoming invalid, disown current parent

  0008a	eb 28		 jmp	 SHORT $LN2@operator
$LN3@operator:

; 1215 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1216 :                 _Lockit _Lock(_LOCK_DEBUG);

  0008c	ba 03 00 00 00	 mov	 edx, 3
  00091	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  00095	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  0009b	90		 npad	 1

; 1217 :                 _Orphan_me();

  0009c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  000a3	e8 00 00 00 00	 call	 ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
  000a8	90		 npad	 1

; 1218 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1219 :                 _Myproxy = nullptr;
; 1220 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1221 :             }

  000a9	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  000ad	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000b3	90		 npad	 1
$LN2@operator:

; 1222 :         }
; 1223 : 
; 1224 :         return *this;

  000b4	48 8b 85 00 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]

; 1225 :     }

  000bb	48 8b f8	 mov	 rdi, rax
  000be	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000c2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcFrameData
  000c9	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000ce	90		 npad	 1
  000cf	48 8b c7	 mov	 rax, rdi
  000d2	48 8b 8d d8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000d9	48 33 cd	 xor	 rcx, rbp
  000dc	e8 00 00 00 00	 call	 __security_check_cookie
  000e1	90		 npad	 1
  000e2	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  000e9	5f		 pop	 rdi
  000ea	5d		 pop	 rbp
  000eb	c3		 ret	 0
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ENDP	; std::_Iterator_base12::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??0_Iterator_base12@std@@QEAA@AEBU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1206 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  0004a	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00051	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1207 :         *this = _Right;

  00059	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Right$[rbp]
  00060	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00067	e8 00 00 00 00	 call	 ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ; std::_Iterator_base12::operator=
  0006c	90		 npad	 1

; 1208 :     }

  0006d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00074	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0007b	5f		 pop	 rdi
  0007c	5d		 pop	 rbp
  0007d	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@AEBU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1204 :     _Iterator_base12() noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {} // construct orphaned iterator

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00045	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004c	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  00054	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00062	5f		 pop	 rdi
  00063	5d		 pop	 rbp
  00064	c3		 ret	 0
??0_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 200
tv78 = 216
_Obj$ = 256
<_Args_0>$ = 264
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 08 01
	00 00		 sub	 rsp, 264		; 00000108H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 42 00 00 00	 mov	 ecx, 66			; 00000042H
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 28
	01 00 00	 mov	 rcx, QWORD PTR [rsp+296]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 8d 00 01
	00 00		 mov	 rcx, QWORD PTR _Obj$[rbp]
  00043	e8 00 00 00 00	 call	 ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
  00048	90		 npad	 1
  00049	48 8b d0	 mov	 rdx, rax
  0004c	b9 10 00 00 00	 mov	 ecx, 16
  00051	e8 00 00 00 00	 call	 ??2@YAPEAX_KPEAX@Z	; operator new
  00056	90		 npad	 1
  00057	48 89 85 c8 00
	00 00		 mov	 QWORD PTR $T1[rbp], rax
  0005e	48 8b 8d 08 01
	00 00		 mov	 rcx, QWORD PTR <_Args_0>$[rbp]
  00065	e8 00 00 00 00	 call	 ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
  0006a	90		 npad	 1
  0006b	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006e	48 89 85 d8 00
	00 00		 mov	 QWORD PTR tv78[rbp], rax
  00075	48 8b 95 d8 00
	00 00		 mov	 rdx, QWORD PTR tv78[rbp]
  0007c	48 8b 8d c8 00
	00 00		 mov	 rcx, QWORD PTR $T1[rbp]
  00083	e8 00 00 00 00	 call	 ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
  00088	90		 npad	 1

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

  00089	48 8d a5 e8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+232]
  00090	5f		 pop	 rdi
  00091	5d		 pop	 rbp
  00092	c3		 ret	 0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 4
_Pnext$5 = 40
__$ArrayPad$ = 248
this$ = 288
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN7:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec 28 01
	00 00		 sub	 rsp, 296		; 00000128H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 4a 00 00 00	 mov	 ecx, 74			; 0000004aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 48
	01 00 00	 mov	 rcx, QWORD PTR [rsp+328]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 f8 00
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00047	90		 npad	 1

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

  00048	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00053	74 6d		 je	 SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

  00055	ba 03 00 00 00	 mov	 edx, 3
  0005a	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  0005e	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
  00064	90		 npad	 1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

  00065	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006c	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0006f	48 83 c0 08	 add	 rax, 8
  00073	48 89 45 28	 mov	 QWORD PTR _Pnext$5[rbp], rax
  00077	eb 12		 jmp	 SHORT $LN4@Orphan_all
$LN2@Orphan_all:
  00079	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$5[rbp]
  0007d	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00080	48 8b 4d 28	 mov	 rcx, QWORD PTR _Pnext$5[rbp]
  00084	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  00088	48 89 01	 mov	 QWORD PTR [rcx], rax
$LN4@Orphan_all:
  0008b	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$5[rbp]
  0008f	48 83 38 00	 cmp	 QWORD PTR [rax], 0
  00093	74 10		 je	 SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

  00095	48 8b 45 28	 mov	 rax, QWORD PTR _Pnext$5[rbp]
  00099	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0009c	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0

; 1295 :         }

  000a3	eb d4		 jmp	 SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

  000a5	48 8b 85 20 01
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  000ac	48 8b 00	 mov	 rax, QWORD PTR [rax]
  000af	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0

; 1298 :     }

  000b7	48 8d 4d 04	 lea	 rcx, QWORD PTR _Lock$4[rbp]
  000bb	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
  000c1	90		 npad	 1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

  000c2	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  000c6	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
  000cd	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  000d2	90		 npad	 1
  000d3	48 8b 8d f8 00
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  000da	48 33 cd	 xor	 rcx, rbp
  000dd	e8 00 00 00 00	 call	 __security_check_cookie
  000e2	90		 npad	 1
  000e3	48 8d a5 08 01
	00 00		 lea	 rsp, QWORD PTR [rbp+264]
  000ea	5f		 pop	 rdi
  000eb	5d		 pop	 rbp
  000ec	c3		 ret	 0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 c7 00 00 00
	00 00		 mov	 QWORD PTR [rax], 0
  00044	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00052	5f		 pop	 rdi
  00053	5d		 pop	 rbp
  00054	c3		 ret	 0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 224
_Mycont_$ = 232
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Mycont_$[rbp]
  0004a	48 89 08	 mov	 QWORD PTR [rax], rcx
  0004d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	48 c7 40 08 00
	00 00 00	 mov	 QWORD PTR [rax+8], 0
  0005c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00063	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006a	5f		 pop	 rdi
  0006b	5d		 pop	 rbp
  0006c	c3		 ret	 0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 8
_Ptr_container$ = 40
_Min_back_shift$ = 72
_Back_shift$ = 104
_Ptr$ = 352
_Bytes$ = 360
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec 78 01
	00 00		 sub	 rsp, 376		; 00000178H
  00013	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 5e 00 00 00	 mov	 ecx, 94			; 0000005eH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 98
	01 00 00	 mov	 rcx, QWORD PTR [rsp+408]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

  0003b	48 8b 85 68 01
	00 00		 mov	 rax, QWORD PTR _Bytes$[rbp]
  00042	48 8b 00	 mov	 rax, QWORD PTR [rax]
  00045	48 83 c0 2f	 add	 rax, 47			; 0000002fH
  00049	48 8b 8d 68 01
	00 00		 mov	 rcx, QWORD PTR _Bytes$[rbp]
  00050	48 89 01	 mov	 QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

  00053	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  0005a	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0005d	48 89 45 08	 mov	 QWORD PTR _Ptr_user$[rbp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

  00061	b8 08 00 00 00	 mov	 eax, 8
  00066	48 6b c0 ff	 imul	 rax, rax, -1
  0006a	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptr_user$[rbp]
  0006e	48 8b 04 01	 mov	 rax, QWORD PTR [rcx+rax]
  00072	48 89 45 28	 mov	 QWORD PTR _Ptr_container$[rbp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

  00076	b8 08 00 00 00	 mov	 eax, 8
  0007b	48 6b c0 fe	 imul	 rax, rax, -2
  0007f	48 8b 4d 08	 mov	 rcx, QWORD PTR _Ptr_user$[rbp]
  00083	48 ba fa fa fa
	fa fa fa fa fa	 mov	 rdx, -361700864190383366 ; fafafafafafafafaH
  0008d	48 39 14 01	 cmp	 QWORD PTR [rcx+rax], rdx
  00091	75 02		 jne	 SHORT $LN14@Adjust_man
  00093	eb 77		 jmp	 SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
  00095	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  0009b	83 c0 09	 add	 eax, 9
  0009e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  000a5	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  000aa	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  000b1	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  000b6	45 33 c9	 xor	 r9d, r9d
  000b9	44 8b c0	 mov	 r8d, eax
  000bc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  000c3	b9 02 00 00 00	 mov	 ecx, 2
  000c8	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  000ce	83 f8 01	 cmp	 eax, 1
  000d1	75 03		 jne	 SHORT $LN19@Adjust_man
  000d3	cc		 int	 3
  000d4	33 c0		 xor	 eax, eax
$LN19@Adjust_man:
  000d6	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  000dc	83 c0 09	 add	 eax, 9
  000df	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  000e8	44 8b c8	 mov	 r9d, eax
  000eb	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  000f2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  000f9	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  00100	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  00106	33 c0		 xor	 eax, eax
  00108	85 c0		 test	 eax, eax
  0010a	75 89		 jne	 SHORT $LN7@Adjust_man
$LN15@Adjust_man:
  0010c	33 c0		 xor	 eax, eax
  0010e	85 c0		 test	 eax, eax
  00110	0f 85 60 ff ff
	ff		 jne	 $LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

  00116	48 c7 45 48 10
	00 00 00	 mov	 QWORD PTR _Min_back_shift$[rbp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  0011e	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  00125	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ptr_container$[rbp]
  00129	48 8b 00	 mov	 rax, QWORD PTR [rax]
  0012c	48 2b c1	 sub	 rax, rcx
  0012f	48 89 45 68	 mov	 QWORD PTR _Back_shift$[rbp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  00133	48 83 7d 68 10	 cmp	 QWORD PTR _Back_shift$[rbp], 16
  00138	72 09		 jb	 SHORT $LN16@Adjust_man
  0013a	48 83 7d 68 2f	 cmp	 QWORD PTR _Back_shift$[rbp], 47 ; 0000002fH
  0013f	77 02		 ja	 SHORT $LN16@Adjust_man
  00141	eb 77		 jmp	 SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
  00143	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  00149	83 c0 13	 add	 eax, 19
  0014c	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
  00153	48 89 4c 24 28	 mov	 QWORD PTR [rsp+40], rcx
  00158	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
  0015f	48 89 4c 24 20	 mov	 QWORD PTR [rsp+32], rcx
  00164	45 33 c9	 xor	 r9d, r9d
  00167	44 8b c0	 mov	 r8d, eax
  0016a	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0GJ@ICFCEKIN@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
  00171	b9 02 00 00 00	 mov	 ecx, 2
  00176	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__CrtDbgReport
  0017c	83 f8 01	 cmp	 eax, 1
  0017f	75 03		 jne	 SHORT $LN20@Adjust_man
  00181	cc		 int	 3
  00182	33 c0		 xor	 eax, eax
$LN20@Adjust_man:
  00184	8b 05 00 00 00
	00		 mov	 eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
  0018a	83 c0 13	 add	 eax, 19
  0018d	48 c7 44 24 20
	00 00 00 00	 mov	 QWORD PTR [rsp+32], 0
  00196	44 8b c8	 mov	 r9d, eax
  00199	4c 8d 05 00 00
	00 00		 lea	 r8, OFFSET FLAT:??_C@_1NC@MGDJFDEK@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
  001a0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
  001a7	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
  001ae	ff 15 00 00 00
	00		 call	 QWORD PTR __imp__invalid_parameter
  001b4	33 c0		 xor	 eax, eax
  001b6	85 c0		 test	 eax, eax
  001b8	75 89		 jne	 SHORT $LN13@Adjust_man
$LN17@Adjust_man:
  001ba	33 c0		 xor	 eax, eax
  001bc	85 c0		 test	 eax, eax
  001be	0f 85 6f ff ff
	ff		 jne	 $LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

  001c4	48 8b 85 60 01
	00 00		 mov	 rax, QWORD PTR _Ptr$[rbp]
  001cb	48 8b 4d 28	 mov	 rcx, QWORD PTR _Ptr_container$[rbp]
  001cf	48 89 08	 mov	 QWORD PTR [rax], rcx

; 123  : }

  001d2	48 8d a5 48 01
	00 00		 lea	 rsp, QWORD PTR [rbp+328]
  001d9	5f		 pop	 rdi
  001da	5d		 pop	 rbp
  001db	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__725EB186_xmemory
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 47   :         return ::operator new(_Bytes);

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR _Bytes$[rbp]
  0003d	e8 00 00 00 00	 call	 ??2@YAPEAX_K@Z		; operator new

; 48   :     }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__289D9ECD_limits
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0002a	90		 npad	 1

; 645  :         return LLONG_MAX;

  0002b	48 b8 ff ff ff
	ff ff ff ff 7f	 mov	 rax, 9223372036854775807 ; 7fffffffffffffffH

; 646  :     }

  00035	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003c	5f		 pop	 rdi
  0003d	5d		 pop	 rbp
  0003e	c3		 ret	 0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 200
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
  00000	40 55		 push	 rbp
  00002	57		 push	 rdi
  00003	48 81 ec 18 01
	00 00		 sub	 rsp, 280		; 00000118H
  0000a	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0000f	48 8b fc	 mov	 rdi, rsp
  00012	b9 46 00 00 00	 mov	 ecx, 70			; 00000046H
  00017	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0001c	f3 ab		 rep stosd
  0001e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A47A247F_exception
  00025	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 324  :     _THROW(bad_array_new_length{});

  0002a	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00031	e8 00 00 00 00	 call	 ??0bad_array_new_length@std@@QEAA@XZ ; std::bad_array_new_length::bad_array_new_length
  00036	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
  0003d	48 8d 8d c8 00
	00 00		 lea	 rcx, QWORD PTR $T1[rbp]
  00044	e8 00 00 00 00	 call	 _CxxThrowException
$LN2@Throw_bad_:

; 325  : }

  00049	48 8d a5 f8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+248]
  00050	5f		 pop	 rdi
  00051	5d		 pop	 rbp
  00052	c3		 ret	 0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1bad_array_new_length@std@@UEAA@XZ
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0bad_alloc@std@@QEAA@AEBV01@@Z
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx
  00053	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1

; 137  :         : bad_alloc("bad array new length")

  00037	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
  0003e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00045	e8 00 00 00 00	 call	 ??0bad_alloc@std@@AEAA@QEBD@Z ; std::bad_alloc::bad_alloc
  0004a	90		 npad	 1

; 138  :     {

  0004b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00052	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
  00059	48 89 08	 mov	 QWORD PTR [rax], rcx

; 139  :     }

  0005c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00063	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0006a	5f		 pop	 rdi
  0006b	5d		 pop	 rbp
  0006c	c3		 ret	 0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1bad_alloc@std@@UEAA@XZ
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR __that$[rbp]
  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@AEBV01@@Z ; std::exception::exception
  00042	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00049	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00050	48 89 08	 mov	 QWORD PTR [rax], rcx
  00053	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00061	5f		 pop	 rdi
  00062	5d		 pop	 rbp
  00063	c3		 ret	 0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00031	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  00036	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003d	5f		 pop	 rdi
  0003e	5d		 pop	 rbp
  0003f	c3		 ret	 0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 126  :         : exception(_Message, 1)

  0003c	41 b8 01 00 00
	00		 mov	 r8d, 1
  00042	48 8b 95 e8 00
	00 00		 mov	 rdx, QWORD PTR _Message$[rbp]
  00049	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00050	e8 00 00 00 00	 call	 ??0exception@std@@QEAA@QEBDH@Z ; std::exception::exception
  00055	90		 npad	 1

; 127  :     {

  00056	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005d	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
  00064	48 89 08	 mov	 QWORD PTR [rax], rcx

; 128  :     }

  00067	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006e	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00075	5f		 pop	 rdi
  00076	5d		 pop	 rbp
  00077	c3		 ret	 0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
  00000	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  00004	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00009	55		 push	 rbp
  0000a	57		 push	 rdi
  0000b	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00012	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00017	48 8b fc	 mov	 rdi, rsp
  0001a	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001f	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00024	f3 ab		 rep stosd
  00026	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002e	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00035	e8 00 00 00 00	 call	 ??1exception@std@@UEAA@XZ ; std::exception::~exception
  0003a	8b 85 e8 00 00
	00		 mov	 eax, DWORD PTR __flags$[rbp]
  00040	83 e0 01	 and	 eax, 1
  00043	85 c0		 test	 eax, eax
  00045	74 11		 je	 SHORT $LN2@scalar
  00047	ba 18 00 00 00	 mov	 edx, 24
  0004c	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  00053	e8 00 00 00 00	 call	 ??3@YAXPEAX_K@Z		; operator delete
$LN2@scalar:
  00058	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0005f	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00066	5f		 pop	 rdi
  00067	5d		 pop	 rbp
  00068	c3		 ret	 0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 192
this$ = 240
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec f8 00
	00 00		 sub	 rsp, 248		; 000000f8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3e 00 00 00	 mov	 ecx, 62			; 0000003eH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 18
	01 00 00	 mov	 rcx, QWORD PTR [rsp+280]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

  00036	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003d	48 83 78 08 00	 cmp	 QWORD PTR [rax+8], 0
  00042	74 14		 je	 SHORT $LN3@what
  00044	48 8b 85 f0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004b	48 8b 40 08	 mov	 rax, QWORD PTR [rax+8]
  0004f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
  00056	eb 0e		 jmp	 SHORT $LN4@what
$LN3@what:
  00058	48 8d 05 00 00
	00 00		 lea	 rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
  0005f	48 89 85 c0 00
	00 00		 mov	 QWORD PTR tv69[rbp], rax
$LN4@what:
  00066	48 8b 85 c0 00
	00 00		 mov	 rax, QWORD PTR tv69[rbp]

; 93   :     }

  0006d	48 8d a5 d8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+216]
  00074	5f		 pop	 rdi
  00075	5d		 pop	 rbp
  00076	c3		 ret	 0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0003e	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  00045	48 89 08	 mov	 QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

  00048	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0004f	48 83 c0 08	 add	 rax, 8
  00053	48 8b c8	 mov	 rcx, rax
  00056	e8 00 00 00 00	 call	 __std_exception_destroy
  0005b	90		 npad	 1

; 88   :     }

  0005c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00063	5f		 pop	 rdi
  00064	5d		 pop	 rbp
  00065	c3		 ret	 0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00043	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0004a	48 89 08	 mov	 QWORD PTR [rax], rcx

; 68   :         : _Data()

  0004d	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00054	48 83 c0 08	 add	 rax, 8
  00058	48 8b f8	 mov	 rdi, rax
  0005b	33 c0		 xor	 eax, eax
  0005d	b9 10 00 00 00	 mov	 ecx, 16
  00062	f3 aa		 rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

  00064	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0006b	48 83 c0 08	 add	 rax, 8
  0006f	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Other$[rbp]
  00076	48 83 c1 08	 add	 rcx, 8
  0007a	48 8b d0	 mov	 rdx, rax
  0007d	e8 00 00 00 00	 call	 __std_exception_copy
  00082	90		 npad	 1

; 71   :     }

  00083	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  0008a	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00091	5f		 pop	 rdi
  00092	5d		 pop	 rbp
  00093	c3		 ret	 0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
__formal$ = 240
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
  00000	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__96AB3BB0_vcruntime_exception@h
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1
  00041	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00048	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:??_7exception@std@@6B@
  0004f	48 89 08	 mov	 QWORD PTR [rax], rcx

; 62   :         : _Data()

  00052	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00059	48 83 c0 08	 add	 rax, 8
  0005d	48 8b f8	 mov	 rdi, rax
  00060	33 c0		 xor	 eax, eax
  00062	b9 10 00 00 00	 mov	 ecx, 16
  00067	f3 aa		 rep stosb

; 64   :         _Data._What = _Message;

  00069	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00070	48 8b 8d e8 00
	00 00		 mov	 rcx, QWORD PTR _Message$[rbp]
  00077	48 89 48 08	 mov	 QWORD PTR [rax+8], rcx

; 65   :     }

  0007b	48 8b 85 e0 00
	00 00		 mov	 rax, QWORD PTR this$[rbp]
  00082	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00089	5f		 pop	 rdi
  0008a	5d		 pop	 rbp
  0008b	c3		 ret	 0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 224
_Where$ = 232
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__7F8AB566_vcruntime_new@h
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1

; 169  :         (void)_Size;
; 170  :         return _Where;

  0003c	48 8b 85 e8 00
	00 00		 mov	 rax, QWORD PTR _Where$[rbp]

; 171  :     }

  00043	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0004a	5f		 pop	 rdi
  0004b	5d		 pop	 rbp
  0004c	c3		 ret	 0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\AlgorithmCpp.cpp
;	COMDAT ?foo@AlgorithmCpp@@AEAAXXZ
_TEXT	SEGMENT
v$ = 8
v1$ = 72
<range>$L0$8 = 136
<begin>$L0$9 = 168
<end>$L0$10 = 200
a$11 = 228
ret$ = 264
it$ = 344
<range>$L1$12 = 392
<begin>$L1$13 = 424
<end>$L1$14 = 456
i$15 = 484
pos$ = 520
is_sorted$ = 564
$T16 = 1364
$T17 = 1396
$T18 = 1432
$T19 = 1480
$T20 = 1512
$T21 = 1560
$T22 = 1592
$T23 = 1640
$T24 = 1672
$T25 = 1720
$T26 = 1748
$T27 = 1784
$T28 = 1832
$T29 = 1864
$T30 = 1912
$T31 = 1944
$T32 = 1992
$T33 = 2020
$T34 = 2052
$T35 = 2084
$T36 = 2120
$T37 = 2168
$T38 = 2200
$T39 = 2248
$T40 = 2280
$T41 = 2328
$T42 = 2360
$T43 = 2408
$T44 = 2440
$T45 = 2488
$T46 = 2520
$T47 = 2568
$T48 = 2600
tv444 = 2632
tv439 = 2632
tv435 = 2632
tv428 = 2632
tv423 = 2632
tv419 = 2632
tv404 = 2632
tv196 = 2632
tv86 = 2632
tv367 = 2640
tv350 = 2640
tv327 = 2640
tv269 = 2640
tv248 = 2640
tv194 = 2640
tv180 = 2640
tv134 = 2640
tv84 = 2640
tv448 = 2648
tv446 = 2648
tv441 = 2648
tv437 = 2648
tv430 = 2648
tv425 = 2648
tv421 = 2648
tv206 = 2648
tv402 = 2656
tv375 = 2656
tv339 = 2656
tv277 = 2656
tv246 = 2656
tv204 = 2656
tv169 = 2656
tv142 = 2656
tv432 = 2664
tv410 = 2664
tv211 = 2664
tv415 = 2672
tv235 = 2672
__$ArrayPad$ = 2680
this$ = 2720
?foo@AlgorithmCpp@@AEAAXXZ PROC				; AlgorithmCpp::foo, COMDAT

; 13   : void AlgorithmCpp::foo() {

$LN28:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec b8 0a
	00 00		 sub	 rsp, 2744		; 00000ab8H
  0000e	48 8d 6c 24 30	 lea	 rbp, QWORD PTR [rsp+48]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 ae 02 00 00	 mov	 ecx, 686		; 000002aeH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 d8
	0a 00 00	 mov	 rcx, QWORD PTR [rsp+2776]
  0002a	48 8b 05 00 00
	00 00		 mov	 rax, QWORD PTR __security_cookie
  00031	48 33 c5	 xor	 rax, rbp
  00034	48 89 85 78 0a
	00 00		 mov	 QWORD PTR __$ArrayPad$[rbp], rax
  0003b	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DC63C0AB_AlgorithmCpp@cpp
  00042	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 14   : 	std::vector<int> v(6);

  00047	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  0004c	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  00050	e8 00 00 00 00	 call	 ?__autoclassinit2@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z
  00055	48 8d 8d 54 05
	00 00		 lea	 rcx, QWORD PTR $T16[rbp]
  0005c	e8 00 00 00 00	 call	 ??0?$allocator@H@std@@QEAA@XZ ; std::allocator<int>::allocator<int>
  00061	4c 8b c0	 mov	 r8, rax
  00064	ba 06 00 00 00	 mov	 edx, 6
  00069	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  0006d	e8 00 00 00 00	 call	 ??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
  00072	90		 npad	 1

; 15   : 	std::vector<int> v1(v.size());

  00073	ba 20 00 00 00	 mov	 edx, 32			; 00000020H
  00078	48 8d 4d 48	 lea	 rcx, QWORD PTR v1$[rbp]
  0007c	e8 00 00 00 00	 call	 ?__autoclassinit2@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z
  00081	48 8d 8d 74 05
	00 00		 lea	 rcx, QWORD PTR $T17[rbp]
  00088	e8 00 00 00 00	 call	 ??0?$allocator@H@std@@QEAA@XZ ; std::allocator<int>::allocator<int>
  0008d	48 89 85 48 0a
	00 00		 mov	 QWORD PTR tv86[rbp], rax
  00094	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  00098	e8 00 00 00 00	 call	 ?size@?$vector@HV?$allocator@H@std@@@std@@QEBA_KXZ ; std::vector<int,std::allocator<int> >::size
  0009d	48 89 85 50 0a
	00 00		 mov	 QWORD PTR tv84[rbp], rax
  000a4	4c 8b 85 48 0a
	00 00		 mov	 r8, QWORD PTR tv86[rbp]
  000ab	48 8b 95 50 0a
	00 00		 mov	 rdx, QWORD PTR tv84[rbp]
  000b2	48 8d 4d 48	 lea	 rcx, QWORD PTR v1$[rbp]
  000b6	e8 00 00 00 00	 call	 ??0?$vector@HV?$allocator@H@std@@@std@@QEAA@_KAEBV?$allocator@H@1@@Z ; std::vector<int,std::allocator<int> >::vector<int,std::allocator<int> >
  000bb	90		 npad	 1

; 16   : 
; 17   : 	std::iota(v.begin(), v.end(), 2);

  000bc	48 8d 85 98 05
	00 00		 lea	 rax, QWORD PTR $T18[rbp]
  000c3	48 89 85 c8 05
	00 00		 mov	 QWORD PTR $T19[rbp], rax
  000ca	48 8b 95 c8 05
	00 00		 mov	 rdx, QWORD PTR $T19[rbp]
  000d1	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  000d5	e8 00 00 00 00	 call	 ?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
  000da	48 89 85 48 0a
	00 00		 mov	 QWORD PTR tv419[rbp], rax
  000e1	48 8b 85 48 0a
	00 00		 mov	 rax, QWORD PTR tv419[rbp]
  000e8	48 89 85 50 0a
	00 00		 mov	 QWORD PTR tv134[rbp], rax
  000ef	48 8d 85 e8 05
	00 00		 lea	 rax, QWORD PTR $T20[rbp]
  000f6	48 89 85 18 06
	00 00		 mov	 QWORD PTR $T21[rbp], rax
  000fd	48 8b 95 18 06
	00 00		 mov	 rdx, QWORD PTR $T21[rbp]
  00104	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  00108	e8 00 00 00 00	 call	 ?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
  0010d	48 89 85 58 0a
	00 00		 mov	 QWORD PTR tv421[rbp], rax
  00114	48 8b 85 58 0a
	00 00		 mov	 rax, QWORD PTR tv421[rbp]
  0011b	48 89 85 60 0a
	00 00		 mov	 QWORD PTR tv142[rbp], rax
  00122	41 b8 02 00 00
	00		 mov	 r8d, 2
  00128	48 8b 95 50 0a
	00 00		 mov	 rdx, QWORD PTR tv134[rbp]
  0012f	48 8b 8d 60 0a
	00 00		 mov	 rcx, QWORD PTR tv142[rbp]
  00136	e8 00 00 00 00	 call	 ??$iota@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@H@std@@YAXV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0H@Z ; std::iota<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,int>

; 18   : 	for (auto a : v) {

  0013b	48 8d 45 08	 lea	 rax, QWORD PTR v$[rbp]
  0013f	48 89 85 88 00
	00 00		 mov	 QWORD PTR <range>$L0$8[rbp], rax
  00146	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR <range>$L0$8[rbp]
  0014d	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ ; std::vector<int,std::allocator<int> >::_Unchecked_begin
  00152	48 89 85 a8 00
	00 00		 mov	 QWORD PTR <begin>$L0$9[rbp], rax
  00159	48 8b 8d 88 00
	00 00		 mov	 rcx, QWORD PTR <range>$L0$8[rbp]
  00160	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ ; std::vector<int,std::allocator<int> >::_Unchecked_end
  00165	48 89 85 c8 00
	00 00		 mov	 QWORD PTR <end>$L0$10[rbp], rax
  0016c	eb 12		 jmp	 SHORT $LN4@foo
$LN2@foo:
  0016e	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR <begin>$L0$9[rbp]
  00175	48 83 c0 04	 add	 rax, 4
  00179	48 89 85 a8 00
	00 00		 mov	 QWORD PTR <begin>$L0$9[rbp], rax
$LN4@foo:
  00180	48 8b 85 c8 00
	00 00		 mov	 rax, QWORD PTR <end>$L0$10[rbp]
  00187	48 39 85 a8 00
	00 00		 cmp	 QWORD PTR <begin>$L0$9[rbp], rax
  0018e	74 33		 je	 SHORT $LN3@foo
  00190	48 8b 85 a8 00
	00 00		 mov	 rax, QWORD PTR <begin>$L0$9[rbp]
  00197	8b 00		 mov	 eax, DWORD PTR [rax]
  00199	89 85 e4 00 00
	00		 mov	 DWORD PTR a$11[rbp], eax

; 19   : 		std::cout << a << " ";

  0019f	8b 95 e4 00 00
	00		 mov	 edx, DWORD PTR a$11[rbp]
  001a5	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  001ac	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
  001b2	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01CLKCMJKC@?5@
  001b9	48 8b c8	 mov	 rcx, rax
  001bc	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 20   : 	}

  001c1	eb ab		 jmp	 SHORT $LN2@foo
$LN3@foo:

; 21   : 	std::cout << "\n";

  001c3	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01EEMJAFIK@?6@
  001ca	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  001d1	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 22   : 
; 23   : 	auto ret = std::minmax_element(v.begin(), v.end());

  001d6	48 8d 85 38 06
	00 00		 lea	 rax, QWORD PTR $T22[rbp]
  001dd	48 89 85 68 06
	00 00		 mov	 QWORD PTR $T23[rbp], rax
  001e4	48 8b 95 68 06
	00 00		 mov	 rdx, QWORD PTR $T23[rbp]
  001eb	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  001ef	e8 00 00 00 00	 call	 ?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
  001f4	48 89 85 48 0a
	00 00		 mov	 QWORD PTR tv423[rbp], rax
  001fb	48 8b 85 48 0a
	00 00		 mov	 rax, QWORD PTR tv423[rbp]
  00202	48 89 85 50 0a
	00 00		 mov	 QWORD PTR tv180[rbp], rax
  00209	48 8d 85 88 06
	00 00		 lea	 rax, QWORD PTR $T24[rbp]
  00210	48 89 85 b8 06
	00 00		 mov	 QWORD PTR $T25[rbp], rax
  00217	48 8b 95 b8 06
	00 00		 mov	 rdx, QWORD PTR $T25[rbp]
  0021e	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  00222	e8 00 00 00 00	 call	 ?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
  00227	48 89 85 58 0a
	00 00		 mov	 QWORD PTR tv425[rbp], rax
  0022e	48 8b 85 58 0a
	00 00		 mov	 rax, QWORD PTR tv425[rbp]
  00235	48 89 85 60 0a
	00 00		 mov	 QWORD PTR tv169[rbp], rax
  0023c	4c 8b 85 50 0a
	00 00		 mov	 r8, QWORD PTR tv180[rbp]
  00243	48 8b 95 60 0a
	00 00		 mov	 rdx, QWORD PTR tv169[rbp]
  0024a	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR ret$[rbp]
  00251	e8 00 00 00 00	 call	 ??$minmax_element@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AU?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@0@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ; std::minmax_element<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
  00256	90		 npad	 1

; 24   : 	std::cout << "max : " << *ret.second << " , min: = " << *ret.first << std::endl;

  00257	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06JOLCJBIP@max?5?3?5@
  0025e	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00265	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0026a	48 89 85 48 0a
	00 00		 mov	 QWORD PTR tv196[rbp], rax
  00271	48 8d 8d 20 01
	00 00		 lea	 rcx, QWORD PTR ret$[rbp+24]
  00278	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*
  0027d	8b 00		 mov	 eax, DWORD PTR [rax]
  0027f	89 85 50 0a 00
	00		 mov	 DWORD PTR tv194[rbp], eax
  00285	8b 95 50 0a 00
	00		 mov	 edx, DWORD PTR tv194[rbp]
  0028b	48 8b 8d 48 0a
	00 00		 mov	 rcx, QWORD PTR tv196[rbp]
  00292	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
  00298	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0L@FANOCPDH@?5?0?5min?3?5?$DN?5@
  0029f	48 8b c8	 mov	 rcx, rax
  002a2	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  002a7	48 89 85 58 0a
	00 00		 mov	 QWORD PTR tv206[rbp], rax
  002ae	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR ret$[rbp]
  002b5	e8 00 00 00 00	 call	 ??D?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBAAEAHXZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator*
  002ba	8b 00		 mov	 eax, DWORD PTR [rax]
  002bc	89 85 60 0a 00
	00		 mov	 DWORD PTR tv204[rbp], eax
  002c2	8b 95 60 0a 00
	00		 mov	 edx, DWORD PTR tv204[rbp]
  002c8	48 8b 8d 58 0a
	00 00		 mov	 rcx, QWORD PTR tv206[rbp]
  002cf	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
  002d5	48 89 85 68 0a
	00 00		 mov	 QWORD PTR tv211[rbp], rax
  002dc	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  002e3	48 8b 8d 68 0a
	00 00		 mov	 rcx, QWORD PTR tv211[rbp]
  002ea	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 25   : 
; 26   : 	auto it = std::copy_if(v.begin(), v.end(), v1.begin(), [](int i) {return i % 2 != 0; });

  002f0	ba 18 00 00 00	 mov	 edx, 24
  002f5	48 8d 8d 58 01
	00 00		 lea	 rcx, QWORD PTR it$[rbp]
  002fc	e8 00 00 00 00	 call	 ?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAX_K@Z
  00301	0f b6 85 d4 06
	00 00		 movzx	 eax, BYTE PTR $T26[rbp]
  00308	88 85 e4 07 00
	00		 mov	 BYTE PTR $T33[rbp], al
  0030e	0f b6 85 e4 07
	00 00		 movzx	 eax, BYTE PTR $T33[rbp]
  00315	88 85 04 08 00
	00		 mov	 BYTE PTR $T34[rbp], al
  0031b	0f b6 85 04 08
	00 00		 movzx	 eax, BYTE PTR $T34[rbp]
  00322	88 85 24 08 00
	00		 mov	 BYTE PTR $T35[rbp], al
  00328	48 8d 85 f8 06
	00 00		 lea	 rax, QWORD PTR $T27[rbp]
  0032f	48 89 85 28 07
	00 00		 mov	 QWORD PTR $T28[rbp], rax
  00336	48 8b 95 28 07
	00 00		 mov	 rdx, QWORD PTR $T28[rbp]
  0033d	48 8d 4d 48	 lea	 rcx, QWORD PTR v1$[rbp]
  00341	e8 00 00 00 00	 call	 ?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
  00346	48 89 85 48 0a
	00 00		 mov	 QWORD PTR tv428[rbp], rax
  0034d	48 8b 85 48 0a
	00 00		 mov	 rax, QWORD PTR tv428[rbp]
  00354	48 89 85 50 0a
	00 00		 mov	 QWORD PTR tv248[rbp], rax
  0035b	48 8d 85 48 07
	00 00		 lea	 rax, QWORD PTR $T29[rbp]
  00362	48 89 85 78 07
	00 00		 mov	 QWORD PTR $T30[rbp], rax
  00369	48 8b 95 78 07
	00 00		 mov	 rdx, QWORD PTR $T30[rbp]
  00370	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  00374	e8 00 00 00 00	 call	 ?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
  00379	48 89 85 58 0a
	00 00		 mov	 QWORD PTR tv430[rbp], rax
  00380	48 8b 85 58 0a
	00 00		 mov	 rax, QWORD PTR tv430[rbp]
  00387	48 89 85 60 0a
	00 00		 mov	 QWORD PTR tv246[rbp], rax
  0038e	48 8d 85 98 07
	00 00		 lea	 rax, QWORD PTR $T31[rbp]
  00395	48 89 85 c8 07
	00 00		 mov	 QWORD PTR $T32[rbp], rax
  0039c	48 8b 95 c8 07
	00 00		 mov	 rdx, QWORD PTR $T32[rbp]
  003a3	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  003a7	e8 00 00 00 00	 call	 ?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
  003ac	48 89 85 68 0a
	00 00		 mov	 QWORD PTR tv432[rbp], rax
  003b3	48 8b 85 68 0a
	00 00		 mov	 rax, QWORD PTR tv432[rbp]
  003ba	48 89 85 70 0a
	00 00		 mov	 QWORD PTR tv235[rbp], rax
  003c1	0f b6 85 24 08
	00 00		 movzx	 eax, BYTE PTR $T35[rbp]
  003c8	88 44 24 20	 mov	 BYTE PTR [rsp+32], al
  003cc	4c 8b 8d 50 0a
	00 00		 mov	 r9, QWORD PTR tv248[rbp]
  003d3	4c 8b 85 60 0a
	00 00		 mov	 r8, QWORD PTR tv246[rbp]
  003da	48 8b 95 70 0a
	00 00		 mov	 rdx, QWORD PTR tv235[rbp]
  003e1	48 8d 8d 58 01
	00 00		 lea	 rcx, QWORD PTR it$[rbp]
  003e8	e8 00 00 00 00	 call	 ??$copy_if@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@00V<lambda_1>@?1??foo@AlgorithmCpp@@AEAAXXZ@@Z ; std::copy_if<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > >,`AlgorithmCpp::foo'::`2'::<lambda_1> >
  003ed	90		 npad	 1

; 27   : 	v1.resize(std::distance(v1.begin(), it));

  003ee	48 8d 85 48 08
	00 00		 lea	 rax, QWORD PTR $T36[rbp]
  003f5	48 89 85 78 08
	00 00		 mov	 QWORD PTR $T37[rbp], rax
  003fc	48 8d 95 58 01
	00 00		 lea	 rdx, QWORD PTR it$[rbp]
  00403	48 8b 8d 78 08
	00 00		 mov	 rcx, QWORD PTR $T37[rbp]
  0040a	e8 00 00 00 00	 call	 ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@AEBV01@@Z
  0040f	48 89 85 48 0a
	00 00		 mov	 QWORD PTR tv435[rbp], rax
  00416	48 8b 85 48 0a
	00 00		 mov	 rax, QWORD PTR tv435[rbp]
  0041d	48 89 85 50 0a
	00 00		 mov	 QWORD PTR tv269[rbp], rax
  00424	48 8d 85 98 08
	00 00		 lea	 rax, QWORD PTR $T38[rbp]
  0042b	48 89 85 c8 08
	00 00		 mov	 QWORD PTR $T39[rbp], rax
  00432	48 8b 95 c8 08
	00 00		 mov	 rdx, QWORD PTR $T39[rbp]
  00439	48 8d 4d 48	 lea	 rcx, QWORD PTR v1$[rbp]
  0043d	e8 00 00 00 00	 call	 ?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
  00442	48 89 85 58 0a
	00 00		 mov	 QWORD PTR tv437[rbp], rax
  00449	48 8b 85 58 0a
	00 00		 mov	 rax, QWORD PTR tv437[rbp]
  00450	48 89 85 60 0a
	00 00		 mov	 QWORD PTR tv277[rbp], rax
  00457	48 8b 95 50 0a
	00 00		 mov	 rdx, QWORD PTR tv269[rbp]
  0045e	48 8b 8d 60 0a
	00 00		 mov	 rcx, QWORD PTR tv277[rbp]
  00465	e8 00 00 00 00	 call	 ??$distance@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_JV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ; std::distance<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
  0046a	48 8b d0	 mov	 rdx, rax
  0046d	48 8d 4d 48	 lea	 rcx, QWORD PTR v1$[rbp]
  00471	e8 00 00 00 00	 call	 ?resize@?$vector@HV?$allocator@H@std@@@std@@QEAAX_K@Z ; std::vector<int,std::allocator<int> >::resize

; 28   : 
; 29   : 	for (int i : v1) {

  00476	48 8d 45 48	 lea	 rax, QWORD PTR v1$[rbp]
  0047a	48 89 85 88 01
	00 00		 mov	 QWORD PTR <range>$L1$12[rbp], rax
  00481	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR <range>$L1$12[rbp]
  00488	e8 00 00 00 00	 call	 ?_Unchecked_begin@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ ; std::vector<int,std::allocator<int> >::_Unchecked_begin
  0048d	48 89 85 a8 01
	00 00		 mov	 QWORD PTR <begin>$L1$13[rbp], rax
  00494	48 8b 8d 88 01
	00 00		 mov	 rcx, QWORD PTR <range>$L1$12[rbp]
  0049b	e8 00 00 00 00	 call	 ?_Unchecked_end@?$vector@HV?$allocator@H@std@@@std@@QEAAPEAHXZ ; std::vector<int,std::allocator<int> >::_Unchecked_end
  004a0	48 89 85 c8 01
	00 00		 mov	 QWORD PTR <end>$L1$14[rbp], rax
  004a7	eb 12		 jmp	 SHORT $LN7@foo
$LN5@foo:
  004a9	48 8b 85 a8 01
	00 00		 mov	 rax, QWORD PTR <begin>$L1$13[rbp]
  004b0	48 83 c0 04	 add	 rax, 4
  004b4	48 89 85 a8 01
	00 00		 mov	 QWORD PTR <begin>$L1$13[rbp], rax
$LN7@foo:
  004bb	48 8b 85 c8 01
	00 00		 mov	 rax, QWORD PTR <end>$L1$14[rbp]
  004c2	48 39 85 a8 01
	00 00		 cmp	 QWORD PTR <begin>$L1$13[rbp], rax
  004c9	74 33		 je	 SHORT $LN6@foo
  004cb	48 8b 85 a8 01
	00 00		 mov	 rax, QWORD PTR <begin>$L1$13[rbp]
  004d2	8b 00		 mov	 eax, DWORD PTR [rax]
  004d4	89 85 e4 01 00
	00		 mov	 DWORD PTR i$15[rbp], eax

; 30   : 		std::cout << i << " ";

  004da	8b 95 e4 01 00
	00		 mov	 edx, DWORD PTR i$15[rbp]
  004e0	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  004e7	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
  004ed	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_01CLKCMJKC@?5@
  004f4	48 8b c8	 mov	 rcx, rax
  004f7	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >

; 31   : 	}

  004fc	eb ab		 jmp	 SHORT $LN5@foo
$LN6@foo:

; 32   : 	std::cout << std::endl;

  004fe	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  00505	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  0050c	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z

; 33   : 
; 34   : 	auto pos = std::is_sorted_until(v.begin(), v.end());

  00512	ba 18 00 00 00	 mov	 edx, 24
  00517	48 8d 8d 08 02
	00 00		 lea	 rcx, QWORD PTR pos$[rbp]
  0051e	e8 00 00 00 00	 call	 ?__autoclassinit2@?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAAX_K@Z
  00523	48 8d 85 e8 08
	00 00		 lea	 rax, QWORD PTR $T40[rbp]
  0052a	48 89 85 18 09
	00 00		 mov	 QWORD PTR $T41[rbp], rax
  00531	48 8b 95 18 09
	00 00		 mov	 rdx, QWORD PTR $T41[rbp]
  00538	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  0053c	e8 00 00 00 00	 call	 ?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
  00541	48 89 85 48 0a
	00 00		 mov	 QWORD PTR tv439[rbp], rax
  00548	48 8b 85 48 0a
	00 00		 mov	 rax, QWORD PTR tv439[rbp]
  0054f	48 89 85 50 0a
	00 00		 mov	 QWORD PTR tv350[rbp], rax
  00556	48 8d 85 38 09
	00 00		 lea	 rax, QWORD PTR $T42[rbp]
  0055d	48 89 85 68 09
	00 00		 mov	 QWORD PTR $T43[rbp], rax
  00564	48 8b 95 68 09
	00 00		 mov	 rdx, QWORD PTR $T43[rbp]
  0056b	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  0056f	e8 00 00 00 00	 call	 ?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
  00574	48 89 85 58 0a
	00 00		 mov	 QWORD PTR tv441[rbp], rax
  0057b	48 8b 85 58 0a
	00 00		 mov	 rax, QWORD PTR tv441[rbp]
  00582	48 89 85 60 0a
	00 00		 mov	 QWORD PTR tv339[rbp], rax
  00589	4c 8b 85 50 0a
	00 00		 mov	 r8, QWORD PTR tv350[rbp]
  00590	48 8b 95 60 0a
	00 00		 mov	 rdx, QWORD PTR tv339[rbp]
  00597	48 8d 8d 08 02
	00 00		 lea	 rcx, QWORD PTR pos$[rbp]
  0059e	e8 00 00 00 00	 call	 ??$is_sorted_until@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@V10@0@Z ; std::is_sorted_until<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
  005a3	90		 npad	 1

; 35   : 	auto is_sorted = std::is_sorted(v.begin(), v.end());

  005a4	48 8d 85 88 09
	00 00		 lea	 rax, QWORD PTR $T44[rbp]
  005ab	48 89 85 b8 09
	00 00		 mov	 QWORD PTR $T45[rbp], rax
  005b2	48 8b 95 b8 09
	00 00		 mov	 rdx, QWORD PTR $T45[rbp]
  005b9	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  005bd	e8 00 00 00 00	 call	 ?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
  005c2	48 89 85 48 0a
	00 00		 mov	 QWORD PTR tv444[rbp], rax
  005c9	48 8b 85 48 0a
	00 00		 mov	 rax, QWORD PTR tv444[rbp]
  005d0	48 89 85 50 0a
	00 00		 mov	 QWORD PTR tv367[rbp], rax
  005d7	48 8d 85 d8 09
	00 00		 lea	 rax, QWORD PTR $T46[rbp]
  005de	48 89 85 08 0a
	00 00		 mov	 QWORD PTR $T47[rbp], rax
  005e5	48 8b 95 08 0a
	00 00		 mov	 rdx, QWORD PTR $T47[rbp]
  005ec	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  005f0	e8 00 00 00 00	 call	 ?begin@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::begin
  005f5	48 89 85 58 0a
	00 00		 mov	 QWORD PTR tv446[rbp], rax
  005fc	48 8b 85 58 0a
	00 00		 mov	 rax, QWORD PTR tv446[rbp]
  00603	48 89 85 60 0a
	00 00		 mov	 QWORD PTR tv375[rbp], rax
  0060a	48 8b 95 50 0a
	00 00		 mov	 rdx, QWORD PTR tv367[rbp]
  00611	48 8b 8d 60 0a
	00 00		 mov	 rcx, QWORD PTR tv375[rbp]
  00618	e8 00 00 00 00	 call	 ??$is_sorted@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@@std@@YA_NV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@0@0@Z ; std::is_sorted<std::_Vector_iterator<std::_Vector_val<std::_Simple_types<int> > > >
  0061d	88 85 34 02 00
	00		 mov	 BYTE PTR is_sorted$[rbp], al

; 36   : 	std::cout << "pos:= " << (pos == v.end()) << " , is_sorted := " << is_sorted << std::endl;

  00623	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_06OPIKJNJO@pos?3?$DN?5@
  0062a	48 8b 0d 00 00
	00 00		 mov	 rcx, QWORD PTR __imp_?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A
  00631	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  00636	48 89 85 48 0a
	00 00		 mov	 QWORD PTR tv404[rbp], rax
  0063d	48 8d 95 28 0a
	00 00		 lea	 rdx, QWORD PTR $T48[rbp]
  00644	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  00648	e8 00 00 00 00	 call	 ?end@?$vector@HV?$allocator@H@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@2@XZ ; std::vector<int,std::allocator<int> >::end
  0064d	48 89 85 50 0a
	00 00		 mov	 QWORD PTR tv327[rbp], rax
  00654	48 8b 85 50 0a
	00 00		 mov	 rax, QWORD PTR tv327[rbp]
  0065b	48 89 85 58 0a
	00 00		 mov	 QWORD PTR tv448[rbp], rax
  00662	48 8b 95 58 0a
	00 00		 mov	 rdx, QWORD PTR tv448[rbp]
  00669	48 8d 8d 08 02
	00 00		 lea	 rcx, QWORD PTR pos$[rbp]
  00670	e8 00 00 00 00	 call	 ??8?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEBA_NAEBV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<int> > >::operator==
  00675	88 85 60 0a 00
	00		 mov	 BYTE PTR tv402[rbp], al
  0067b	0f b6 95 60 0a
	00 00		 movzx	 edx, BYTE PTR tv402[rbp]
  00682	48 8b 8d 48 0a
	00 00		 mov	 rcx, QWORD PTR tv404[rbp]
  00689	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_N@Z
  0068f	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??_C@_0BB@FHNJFLFF@?5?0?5is_sorted?5?3?$DN?5@
  00696	48 8b c8	 mov	 rcx, rax
  00699	e8 00 00 00 00	 call	 ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z ; std::operator<<<std::char_traits<char> >
  0069e	48 89 85 68 0a
	00 00		 mov	 QWORD PTR tv410[rbp], rax
  006a5	0f b6 95 34 02
	00 00		 movzx	 edx, BYTE PTR is_sorted$[rbp]
  006ac	48 8b 8d 68 0a
	00 00		 mov	 rcx, QWORD PTR tv410[rbp]
  006b3	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_N@Z
  006b9	48 89 85 70 0a
	00 00		 mov	 QWORD PTR tv415[rbp], rax
  006c0	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z ; std::endl<char,std::char_traits<char> >
  006c7	48 8b 8d 70 0a
	00 00		 mov	 rcx, QWORD PTR tv415[rbp]
  006ce	ff 15 00 00 00
	00		 call	 QWORD PTR __imp_??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@P6AAEAV01@AEAV01@@Z@Z
  006d4	90		 npad	 1
  006d5	48 8d 8d 28 0a
	00 00		 lea	 rcx, QWORD PTR $T48[rbp]
  006dc	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  006e1	90		 npad	 1

; 37   : }

  006e2	48 8d 8d 08 02
	00 00		 lea	 rcx, QWORD PTR pos$[rbp]
  006e9	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  006ee	90		 npad	 1
  006ef	48 8d 8d 58 01
	00 00		 lea	 rcx, QWORD PTR it$[rbp]
  006f6	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  006fb	90		 npad	 1
  006fc	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR ret$[rbp]
  00703	e8 00 00 00 00	 call	 ??1?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@XZ
  00708	90		 npad	 1
  00709	48 8d 4d 48	 lea	 rcx, QWORD PTR v1$[rbp]
  0070d	e8 00 00 00 00	 call	 ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
  00712	90		 npad	 1
  00713	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  00717	e8 00 00 00 00	 call	 ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
  0071c	48 8d 4d d0	 lea	 rcx, QWORD PTR [rbp-48]
  00720	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?foo@AlgorithmCpp@@AEAAXXZ$rtcFrameData
  00727	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0072c	48 8b 8d 78 0a
	00 00		 mov	 rcx, QWORD PTR __$ArrayPad$[rbp]
  00733	48 33 cd	 xor	 rcx, rbp
  00736	e8 00 00 00 00	 call	 __security_check_cookie
  0073b	48 8d a5 88 0a
	00 00		 lea	 rsp, QWORD PTR [rbp+2696]
  00742	5f		 pop	 rdi
  00743	5d		 pop	 rbp
  00744	c3		 ret	 0
?foo@AlgorithmCpp@@AEAAXXZ ENDP				; AlgorithmCpp::foo
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
v$ = 8
v1$ = 72
<range>$L0$8 = 136
<begin>$L0$9 = 168
<end>$L0$10 = 200
a$11 = 228
ret$ = 264
it$ = 344
<range>$L1$12 = 392
<begin>$L1$13 = 424
<end>$L1$14 = 456
i$15 = 484
pos$ = 520
is_sorted$ = 564
$T16 = 1364
$T17 = 1396
$T18 = 1432
$T19 = 1480
$T20 = 1512
$T21 = 1560
$T22 = 1592
$T23 = 1640
$T24 = 1672
$T25 = 1720
$T26 = 1748
$T27 = 1784
$T28 = 1832
$T29 = 1864
$T30 = 1912
$T31 = 1944
$T32 = 1992
$T33 = 2020
$T34 = 2052
$T35 = 2084
$T36 = 2120
$T37 = 2168
$T38 = 2200
$T39 = 2248
$T40 = 2280
$T41 = 2328
$T42 = 2360
$T43 = 2408
$T44 = 2440
$T45 = 2488
$T46 = 2520
$T47 = 2568
$T48 = 2600
tv444 = 2632
tv439 = 2632
tv435 = 2632
tv428 = 2632
tv423 = 2632
tv419 = 2632
tv404 = 2632
tv196 = 2632
tv86 = 2632
tv367 = 2640
tv350 = 2640
tv327 = 2640
tv269 = 2640
tv248 = 2640
tv194 = 2640
tv180 = 2640
tv134 = 2640
tv84 = 2640
tv448 = 2648
tv446 = 2648
tv441 = 2648
tv437 = 2648
tv430 = 2648
tv425 = 2648
tv421 = 2648
tv206 = 2648
tv402 = 2656
tv375 = 2656
tv339 = 2656
tv277 = 2656
tv246 = 2656
tv204 = 2656
tv169 = 2656
tv142 = 2656
tv432 = 2664
tv410 = 2664
tv211 = 2664
tv415 = 2672
tv235 = 2672
__$ArrayPad$ = 2680
this$ = 2720
?dtor$0@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA PROC		; `AlgorithmCpp::foo'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA ENDP		; `AlgorithmCpp::foo'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v$ = 8
v1$ = 72
<range>$L0$8 = 136
<begin>$L0$9 = 168
<end>$L0$10 = 200
a$11 = 228
ret$ = 264
it$ = 344
<range>$L1$12 = 392
<begin>$L1$13 = 424
<end>$L1$14 = 456
i$15 = 484
pos$ = 520
is_sorted$ = 564
$T16 = 1364
$T17 = 1396
$T18 = 1432
$T19 = 1480
$T20 = 1512
$T21 = 1560
$T22 = 1592
$T23 = 1640
$T24 = 1672
$T25 = 1720
$T26 = 1748
$T27 = 1784
$T28 = 1832
$T29 = 1864
$T30 = 1912
$T31 = 1944
$T32 = 1992
$T33 = 2020
$T34 = 2052
$T35 = 2084
$T36 = 2120
$T37 = 2168
$T38 = 2200
$T39 = 2248
$T40 = 2280
$T41 = 2328
$T42 = 2360
$T43 = 2408
$T44 = 2440
$T45 = 2488
$T46 = 2520
$T47 = 2568
$T48 = 2600
tv444 = 2632
tv439 = 2632
tv435 = 2632
tv428 = 2632
tv423 = 2632
tv419 = 2632
tv404 = 2632
tv196 = 2632
tv86 = 2632
tv367 = 2640
tv350 = 2640
tv327 = 2640
tv269 = 2640
tv248 = 2640
tv194 = 2640
tv180 = 2640
tv134 = 2640
tv84 = 2640
tv448 = 2648
tv446 = 2648
tv441 = 2648
tv437 = 2648
tv430 = 2648
tv425 = 2648
tv421 = 2648
tv206 = 2648
tv402 = 2656
tv375 = 2656
tv339 = 2656
tv277 = 2656
tv246 = 2656
tv204 = 2656
tv169 = 2656
tv142 = 2656
tv432 = 2664
tv410 = 2664
tv211 = 2664
tv415 = 2672
tv235 = 2672
__$ArrayPad$ = 2680
this$ = 2720
?dtor$1@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA PROC		; `AlgorithmCpp::foo'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR v1$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA ENDP		; `AlgorithmCpp::foo'::`1'::dtor$1
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v$ = 8
v1$ = 72
<range>$L0$8 = 136
<begin>$L0$9 = 168
<end>$L0$10 = 200
a$11 = 228
ret$ = 264
it$ = 344
<range>$L1$12 = 392
<begin>$L1$13 = 424
<end>$L1$14 = 456
i$15 = 484
pos$ = 520
is_sorted$ = 564
$T16 = 1364
$T17 = 1396
$T18 = 1432
$T19 = 1480
$T20 = 1512
$T21 = 1560
$T22 = 1592
$T23 = 1640
$T24 = 1672
$T25 = 1720
$T26 = 1748
$T27 = 1784
$T28 = 1832
$T29 = 1864
$T30 = 1912
$T31 = 1944
$T32 = 1992
$T33 = 2020
$T34 = 2052
$T35 = 2084
$T36 = 2120
$T37 = 2168
$T38 = 2200
$T39 = 2248
$T40 = 2280
$T41 = 2328
$T42 = 2360
$T43 = 2408
$T44 = 2440
$T45 = 2488
$T46 = 2520
$T47 = 2568
$T48 = 2600
tv444 = 2632
tv439 = 2632
tv435 = 2632
tv428 = 2632
tv423 = 2632
tv419 = 2632
tv404 = 2632
tv196 = 2632
tv86 = 2632
tv367 = 2640
tv350 = 2640
tv327 = 2640
tv269 = 2640
tv248 = 2640
tv194 = 2640
tv180 = 2640
tv134 = 2640
tv84 = 2640
tv448 = 2648
tv446 = 2648
tv441 = 2648
tv437 = 2648
tv430 = 2648
tv425 = 2648
tv421 = 2648
tv206 = 2648
tv402 = 2656
tv375 = 2656
tv339 = 2656
tv277 = 2656
tv246 = 2656
tv204 = 2656
tv169 = 2656
tv142 = 2656
tv432 = 2664
tv410 = 2664
tv211 = 2664
tv415 = 2672
tv235 = 2672
__$ArrayPad$ = 2680
this$ = 2720
?dtor$6@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA PROC		; `AlgorithmCpp::foo'::`1'::dtor$6
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR ret$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$6@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA ENDP		; `AlgorithmCpp::foo'::`1'::dtor$6
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v$ = 8
v1$ = 72
<range>$L0$8 = 136
<begin>$L0$9 = 168
<end>$L0$10 = 200
a$11 = 228
ret$ = 264
it$ = 344
<range>$L1$12 = 392
<begin>$L1$13 = 424
<end>$L1$14 = 456
i$15 = 484
pos$ = 520
is_sorted$ = 564
$T16 = 1364
$T17 = 1396
$T18 = 1432
$T19 = 1480
$T20 = 1512
$T21 = 1560
$T22 = 1592
$T23 = 1640
$T24 = 1672
$T25 = 1720
$T26 = 1748
$T27 = 1784
$T28 = 1832
$T29 = 1864
$T30 = 1912
$T31 = 1944
$T32 = 1992
$T33 = 2020
$T34 = 2052
$T35 = 2084
$T36 = 2120
$T37 = 2168
$T38 = 2200
$T39 = 2248
$T40 = 2280
$T41 = 2328
$T42 = 2360
$T43 = 2408
$T44 = 2440
$T45 = 2488
$T46 = 2520
$T47 = 2568
$T48 = 2600
tv444 = 2632
tv439 = 2632
tv435 = 2632
tv428 = 2632
tv423 = 2632
tv419 = 2632
tv404 = 2632
tv196 = 2632
tv86 = 2632
tv367 = 2640
tv350 = 2640
tv327 = 2640
tv269 = 2640
tv248 = 2640
tv194 = 2640
tv180 = 2640
tv134 = 2640
tv84 = 2640
tv448 = 2648
tv446 = 2648
tv441 = 2648
tv437 = 2648
tv430 = 2648
tv425 = 2648
tv421 = 2648
tv206 = 2648
tv402 = 2656
tv375 = 2656
tv339 = 2656
tv277 = 2656
tv246 = 2656
tv204 = 2656
tv169 = 2656
tv142 = 2656
tv432 = 2664
tv410 = 2664
tv211 = 2664
tv415 = 2672
tv235 = 2672
__$ArrayPad$ = 2680
this$ = 2720
?dtor$10@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA PROC		; `AlgorithmCpp::foo'::`1'::dtor$10
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 58 01
	00 00		 lea	 rcx, QWORD PTR it$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$10@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA ENDP		; `AlgorithmCpp::foo'::`1'::dtor$10
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v$ = 8
v1$ = 72
<range>$L0$8 = 136
<begin>$L0$9 = 168
<end>$L0$10 = 200
a$11 = 228
ret$ = 264
it$ = 344
<range>$L1$12 = 392
<begin>$L1$13 = 424
<end>$L1$14 = 456
i$15 = 484
pos$ = 520
is_sorted$ = 564
$T16 = 1364
$T17 = 1396
$T18 = 1432
$T19 = 1480
$T20 = 1512
$T21 = 1560
$T22 = 1592
$T23 = 1640
$T24 = 1672
$T25 = 1720
$T26 = 1748
$T27 = 1784
$T28 = 1832
$T29 = 1864
$T30 = 1912
$T31 = 1944
$T32 = 1992
$T33 = 2020
$T34 = 2052
$T35 = 2084
$T36 = 2120
$T37 = 2168
$T38 = 2200
$T39 = 2248
$T40 = 2280
$T41 = 2328
$T42 = 2360
$T43 = 2408
$T44 = 2440
$T45 = 2488
$T46 = 2520
$T47 = 2568
$T48 = 2600
tv444 = 2632
tv439 = 2632
tv435 = 2632
tv428 = 2632
tv423 = 2632
tv419 = 2632
tv404 = 2632
tv196 = 2632
tv86 = 2632
tv367 = 2640
tv350 = 2640
tv327 = 2640
tv269 = 2640
tv248 = 2640
tv194 = 2640
tv180 = 2640
tv134 = 2640
tv84 = 2640
tv448 = 2648
tv446 = 2648
tv441 = 2648
tv437 = 2648
tv430 = 2648
tv425 = 2648
tv421 = 2648
tv206 = 2648
tv402 = 2656
tv375 = 2656
tv339 = 2656
tv277 = 2656
tv246 = 2656
tv204 = 2656
tv169 = 2656
tv142 = 2656
tv432 = 2664
tv410 = 2664
tv211 = 2664
tv415 = 2672
tv235 = 2672
__$ArrayPad$ = 2680
this$ = 2720
?dtor$15@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA PROC		; `AlgorithmCpp::foo'::`1'::dtor$15
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 08 02
	00 00		 lea	 rcx, QWORD PTR pos$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$15@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA ENDP		; `AlgorithmCpp::foo'::`1'::dtor$15
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
v$ = 8
v1$ = 72
<range>$L0$8 = 136
<begin>$L0$9 = 168
<end>$L0$10 = 200
a$11 = 228
ret$ = 264
it$ = 344
<range>$L1$12 = 392
<begin>$L1$13 = 424
<end>$L1$14 = 456
i$15 = 484
pos$ = 520
is_sorted$ = 564
$T16 = 1364
$T17 = 1396
$T18 = 1432
$T19 = 1480
$T20 = 1512
$T21 = 1560
$T22 = 1592
$T23 = 1640
$T24 = 1672
$T25 = 1720
$T26 = 1748
$T27 = 1784
$T28 = 1832
$T29 = 1864
$T30 = 1912
$T31 = 1944
$T32 = 1992
$T33 = 2020
$T34 = 2052
$T35 = 2084
$T36 = 2120
$T37 = 2168
$T38 = 2200
$T39 = 2248
$T40 = 2280
$T41 = 2328
$T42 = 2360
$T43 = 2408
$T44 = 2440
$T45 = 2488
$T46 = 2520
$T47 = 2568
$T48 = 2600
tv444 = 2632
tv439 = 2632
tv435 = 2632
tv428 = 2632
tv423 = 2632
tv419 = 2632
tv404 = 2632
tv196 = 2632
tv86 = 2632
tv367 = 2640
tv350 = 2640
tv327 = 2640
tv269 = 2640
tv248 = 2640
tv194 = 2640
tv180 = 2640
tv134 = 2640
tv84 = 2640
tv448 = 2648
tv446 = 2648
tv441 = 2648
tv437 = 2648
tv430 = 2648
tv425 = 2648
tv421 = 2648
tv206 = 2648
tv402 = 2656
tv375 = 2656
tv339 = 2656
tv277 = 2656
tv246 = 2656
tv204 = 2656
tv169 = 2656
tv142 = 2656
tv432 = 2664
tv410 = 2664
tv211 = 2664
tv415 = 2672
tv235 = 2672
__$ArrayPad$ = 2680
this$ = 2720
?dtor$18@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA PROC		; `AlgorithmCpp::foo'::`1'::dtor$18
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 28 0a
	00 00		 lea	 rcx, QWORD PTR $T48[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$18@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA ENDP		; `AlgorithmCpp::foo'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
v$ = 8
v1$ = 72
<range>$L0$8 = 136
<begin>$L0$9 = 168
<end>$L0$10 = 200
a$11 = 228
ret$ = 264
it$ = 344
<range>$L1$12 = 392
<begin>$L1$13 = 424
<end>$L1$14 = 456
i$15 = 484
pos$ = 520
is_sorted$ = 564
$T16 = 1364
$T17 = 1396
$T18 = 1432
$T19 = 1480
$T20 = 1512
$T21 = 1560
$T22 = 1592
$T23 = 1640
$T24 = 1672
$T25 = 1720
$T26 = 1748
$T27 = 1784
$T28 = 1832
$T29 = 1864
$T30 = 1912
$T31 = 1944
$T32 = 1992
$T33 = 2020
$T34 = 2052
$T35 = 2084
$T36 = 2120
$T37 = 2168
$T38 = 2200
$T39 = 2248
$T40 = 2280
$T41 = 2328
$T42 = 2360
$T43 = 2408
$T44 = 2440
$T45 = 2488
$T46 = 2520
$T47 = 2568
$T48 = 2600
tv444 = 2632
tv439 = 2632
tv435 = 2632
tv428 = 2632
tv423 = 2632
tv419 = 2632
tv404 = 2632
tv196 = 2632
tv86 = 2632
tv367 = 2640
tv350 = 2640
tv327 = 2640
tv269 = 2640
tv248 = 2640
tv194 = 2640
tv180 = 2640
tv134 = 2640
tv84 = 2640
tv448 = 2648
tv446 = 2648
tv441 = 2648
tv437 = 2648
tv430 = 2648
tv425 = 2648
tv421 = 2648
tv206 = 2648
tv402 = 2656
tv375 = 2656
tv339 = 2656
tv277 = 2656
tv246 = 2656
tv204 = 2656
tv169 = 2656
tv142 = 2656
tv432 = 2664
tv410 = 2664
tv211 = 2664
tv415 = 2672
tv235 = 2672
__$ArrayPad$ = 2680
this$ = 2720
?dtor$0@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA PROC		; `AlgorithmCpp::foo'::`1'::dtor$0
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 08	 lea	 rcx, QWORD PTR v$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$0@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA ENDP		; `AlgorithmCpp::foo'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
v$ = 8
v1$ = 72
<range>$L0$8 = 136
<begin>$L0$9 = 168
<end>$L0$10 = 200
a$11 = 228
ret$ = 264
it$ = 344
<range>$L1$12 = 392
<begin>$L1$13 = 424
<end>$L1$14 = 456
i$15 = 484
pos$ = 520
is_sorted$ = 564
$T16 = 1364
$T17 = 1396
$T18 = 1432
$T19 = 1480
$T20 = 1512
$T21 = 1560
$T22 = 1592
$T23 = 1640
$T24 = 1672
$T25 = 1720
$T26 = 1748
$T27 = 1784
$T28 = 1832
$T29 = 1864
$T30 = 1912
$T31 = 1944
$T32 = 1992
$T33 = 2020
$T34 = 2052
$T35 = 2084
$T36 = 2120
$T37 = 2168
$T38 = 2200
$T39 = 2248
$T40 = 2280
$T41 = 2328
$T42 = 2360
$T43 = 2408
$T44 = 2440
$T45 = 2488
$T46 = 2520
$T47 = 2568
$T48 = 2600
tv444 = 2632
tv439 = 2632
tv435 = 2632
tv428 = 2632
tv423 = 2632
tv419 = 2632
tv404 = 2632
tv196 = 2632
tv86 = 2632
tv367 = 2640
tv350 = 2640
tv327 = 2640
tv269 = 2640
tv248 = 2640
tv194 = 2640
tv180 = 2640
tv134 = 2640
tv84 = 2640
tv448 = 2648
tv446 = 2648
tv441 = 2648
tv437 = 2648
tv430 = 2648
tv425 = 2648
tv421 = 2648
tv206 = 2648
tv402 = 2656
tv375 = 2656
tv339 = 2656
tv277 = 2656
tv246 = 2656
tv204 = 2656
tv169 = 2656
tv142 = 2656
tv432 = 2664
tv410 = 2664
tv211 = 2664
tv415 = 2672
tv235 = 2672
__$ArrayPad$ = 2680
this$ = 2720
?dtor$1@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA PROC		; `AlgorithmCpp::foo'::`1'::dtor$1
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 4d 48	 lea	 rcx, QWORD PTR v1$[rbp]
  00018	e8 00 00 00 00	 call	 ??1?$vector@HV?$allocator@H@std@@@std@@QEAA@XZ ; std::vector<int,std::allocator<int> >::~vector<int,std::allocator<int> >
  0001d	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00021	5f		 pop	 rdi
  00022	5d		 pop	 rbp
  00023	c3		 ret	 0
?dtor$1@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA ENDP		; `AlgorithmCpp::foo'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
v$ = 8
v1$ = 72
<range>$L0$8 = 136
<begin>$L0$9 = 168
<end>$L0$10 = 200
a$11 = 228
ret$ = 264
it$ = 344
<range>$L1$12 = 392
<begin>$L1$13 = 424
<end>$L1$14 = 456
i$15 = 484
pos$ = 520
is_sorted$ = 564
$T16 = 1364
$T17 = 1396
$T18 = 1432
$T19 = 1480
$T20 = 1512
$T21 = 1560
$T22 = 1592
$T23 = 1640
$T24 = 1672
$T25 = 1720
$T26 = 1748
$T27 = 1784
$T28 = 1832
$T29 = 1864
$T30 = 1912
$T31 = 1944
$T32 = 1992
$T33 = 2020
$T34 = 2052
$T35 = 2084
$T36 = 2120
$T37 = 2168
$T38 = 2200
$T39 = 2248
$T40 = 2280
$T41 = 2328
$T42 = 2360
$T43 = 2408
$T44 = 2440
$T45 = 2488
$T46 = 2520
$T47 = 2568
$T48 = 2600
tv444 = 2632
tv439 = 2632
tv435 = 2632
tv428 = 2632
tv423 = 2632
tv419 = 2632
tv404 = 2632
tv196 = 2632
tv86 = 2632
tv367 = 2640
tv350 = 2640
tv327 = 2640
tv269 = 2640
tv248 = 2640
tv194 = 2640
tv180 = 2640
tv134 = 2640
tv84 = 2640
tv448 = 2648
tv446 = 2648
tv441 = 2648
tv437 = 2648
tv430 = 2648
tv425 = 2648
tv421 = 2648
tv206 = 2648
tv402 = 2656
tv375 = 2656
tv339 = 2656
tv277 = 2656
tv246 = 2656
tv204 = 2656
tv169 = 2656
tv142 = 2656
tv432 = 2664
tv410 = 2664
tv211 = 2664
tv415 = 2672
tv235 = 2672
__$ArrayPad$ = 2680
this$ = 2720
?dtor$6@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA PROC		; `AlgorithmCpp::foo'::`1'::dtor$6
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 08 01
	00 00		 lea	 rcx, QWORD PTR ret$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$pair@V?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@V12@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$6@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA ENDP		; `AlgorithmCpp::foo'::`1'::dtor$6
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
v$ = 8
v1$ = 72
<range>$L0$8 = 136
<begin>$L0$9 = 168
<end>$L0$10 = 200
a$11 = 228
ret$ = 264
it$ = 344
<range>$L1$12 = 392
<begin>$L1$13 = 424
<end>$L1$14 = 456
i$15 = 484
pos$ = 520
is_sorted$ = 564
$T16 = 1364
$T17 = 1396
$T18 = 1432
$T19 = 1480
$T20 = 1512
$T21 = 1560
$T22 = 1592
$T23 = 1640
$T24 = 1672
$T25 = 1720
$T26 = 1748
$T27 = 1784
$T28 = 1832
$T29 = 1864
$T30 = 1912
$T31 = 1944
$T32 = 1992
$T33 = 2020
$T34 = 2052
$T35 = 2084
$T36 = 2120
$T37 = 2168
$T38 = 2200
$T39 = 2248
$T40 = 2280
$T41 = 2328
$T42 = 2360
$T43 = 2408
$T44 = 2440
$T45 = 2488
$T46 = 2520
$T47 = 2568
$T48 = 2600
tv444 = 2632
tv439 = 2632
tv435 = 2632
tv428 = 2632
tv423 = 2632
tv419 = 2632
tv404 = 2632
tv196 = 2632
tv86 = 2632
tv367 = 2640
tv350 = 2640
tv327 = 2640
tv269 = 2640
tv248 = 2640
tv194 = 2640
tv180 = 2640
tv134 = 2640
tv84 = 2640
tv448 = 2648
tv446 = 2648
tv441 = 2648
tv437 = 2648
tv430 = 2648
tv425 = 2648
tv421 = 2648
tv206 = 2648
tv402 = 2656
tv375 = 2656
tv339 = 2656
tv277 = 2656
tv246 = 2656
tv204 = 2656
tv169 = 2656
tv142 = 2656
tv432 = 2664
tv410 = 2664
tv211 = 2664
tv415 = 2672
tv235 = 2672
__$ArrayPad$ = 2680
this$ = 2720
?dtor$10@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA PROC		; `AlgorithmCpp::foo'::`1'::dtor$10
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 58 01
	00 00		 lea	 rcx, QWORD PTR it$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$10@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA ENDP		; `AlgorithmCpp::foo'::`1'::dtor$10
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
v$ = 8
v1$ = 72
<range>$L0$8 = 136
<begin>$L0$9 = 168
<end>$L0$10 = 200
a$11 = 228
ret$ = 264
it$ = 344
<range>$L1$12 = 392
<begin>$L1$13 = 424
<end>$L1$14 = 456
i$15 = 484
pos$ = 520
is_sorted$ = 564
$T16 = 1364
$T17 = 1396
$T18 = 1432
$T19 = 1480
$T20 = 1512
$T21 = 1560
$T22 = 1592
$T23 = 1640
$T24 = 1672
$T25 = 1720
$T26 = 1748
$T27 = 1784
$T28 = 1832
$T29 = 1864
$T30 = 1912
$T31 = 1944
$T32 = 1992
$T33 = 2020
$T34 = 2052
$T35 = 2084
$T36 = 2120
$T37 = 2168
$T38 = 2200
$T39 = 2248
$T40 = 2280
$T41 = 2328
$T42 = 2360
$T43 = 2408
$T44 = 2440
$T45 = 2488
$T46 = 2520
$T47 = 2568
$T48 = 2600
tv444 = 2632
tv439 = 2632
tv435 = 2632
tv428 = 2632
tv423 = 2632
tv419 = 2632
tv404 = 2632
tv196 = 2632
tv86 = 2632
tv367 = 2640
tv350 = 2640
tv327 = 2640
tv269 = 2640
tv248 = 2640
tv194 = 2640
tv180 = 2640
tv134 = 2640
tv84 = 2640
tv448 = 2648
tv446 = 2648
tv441 = 2648
tv437 = 2648
tv430 = 2648
tv425 = 2648
tv421 = 2648
tv206 = 2648
tv402 = 2656
tv375 = 2656
tv339 = 2656
tv277 = 2656
tv246 = 2656
tv204 = 2656
tv169 = 2656
tv142 = 2656
tv432 = 2664
tv410 = 2664
tv211 = 2664
tv415 = 2672
tv235 = 2672
__$ArrayPad$ = 2680
this$ = 2720
?dtor$15@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA PROC		; `AlgorithmCpp::foo'::`1'::dtor$15
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 08 02
	00 00		 lea	 rcx, QWORD PTR pos$[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$15@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA ENDP		; `AlgorithmCpp::foo'::`1'::dtor$15
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
v$ = 8
v1$ = 72
<range>$L0$8 = 136
<begin>$L0$9 = 168
<end>$L0$10 = 200
a$11 = 228
ret$ = 264
it$ = 344
<range>$L1$12 = 392
<begin>$L1$13 = 424
<end>$L1$14 = 456
i$15 = 484
pos$ = 520
is_sorted$ = 564
$T16 = 1364
$T17 = 1396
$T18 = 1432
$T19 = 1480
$T20 = 1512
$T21 = 1560
$T22 = 1592
$T23 = 1640
$T24 = 1672
$T25 = 1720
$T26 = 1748
$T27 = 1784
$T28 = 1832
$T29 = 1864
$T30 = 1912
$T31 = 1944
$T32 = 1992
$T33 = 2020
$T34 = 2052
$T35 = 2084
$T36 = 2120
$T37 = 2168
$T38 = 2200
$T39 = 2248
$T40 = 2280
$T41 = 2328
$T42 = 2360
$T43 = 2408
$T44 = 2440
$T45 = 2488
$T46 = 2520
$T47 = 2568
$T48 = 2600
tv444 = 2632
tv439 = 2632
tv435 = 2632
tv428 = 2632
tv423 = 2632
tv419 = 2632
tv404 = 2632
tv196 = 2632
tv86 = 2632
tv367 = 2640
tv350 = 2640
tv327 = 2640
tv269 = 2640
tv248 = 2640
tv194 = 2640
tv180 = 2640
tv134 = 2640
tv84 = 2640
tv448 = 2648
tv446 = 2648
tv441 = 2648
tv437 = 2648
tv430 = 2648
tv425 = 2648
tv421 = 2648
tv206 = 2648
tv402 = 2656
tv375 = 2656
tv339 = 2656
tv277 = 2656
tv246 = 2656
tv204 = 2656
tv169 = 2656
tv142 = 2656
tv432 = 2664
tv410 = 2664
tv211 = 2664
tv415 = 2672
tv235 = 2672
__$ArrayPad$ = 2680
this$ = 2720
?dtor$18@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA PROC		; `AlgorithmCpp::foo'::`1'::dtor$18
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 83 ec 28	 sub	 rsp, 40			; 00000028H
  00010	48 8d 6a 30	 lea	 rbp, QWORD PTR [rdx+48]
  00014	48 8d 8d 28 0a
	00 00		 lea	 rcx, QWORD PTR $T48[rbp]
  0001b	e8 00 00 00 00	 call	 ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@H@std@@@std@@@std@@QEAA@XZ
  00020	48 83 c4 28	 add	 rsp, 40			; 00000028H
  00024	5f		 pop	 rdi
  00025	5d		 pop	 rbp
  00026	c3		 ret	 0
?dtor$18@?0??foo@AlgorithmCpp@@AEAAXXZ@4HA ENDP		; `AlgorithmCpp::foo'::`1'::dtor$18
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\AlgorithmCpp.cpp
;	COMDAT ?run@AlgorithmCpp@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?run@AlgorithmCpp@@QEAAXXZ PROC				; AlgorithmCpp::run, COMDAT

; 9    : {

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DC63C0AB_AlgorithmCpp@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode

; 10   : 	this->foo();

  00036	48 8b 8d e0 00
	00 00		 mov	 rcx, QWORD PTR this$[rbp]
  0003d	e8 00 00 00 00	 call	 ?foo@AlgorithmCpp@@AEAAXXZ ; AlgorithmCpp::foo

; 11   : }

  00042	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00049	5f		 pop	 rdi
  0004a	5d		 pop	 rbp
  0004b	c3		 ret	 0
?run@AlgorithmCpp@@QEAAXXZ ENDP				; AlgorithmCpp::run
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\AlgorithmCpp.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
__formal$ = 240
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
  00000	4c 89 44 24 18	 mov	 QWORD PTR [rsp+24], r8
  00005	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  0000a	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000f	55		 push	 rbp
  00010	57		 push	 rdi
  00011	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00018	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  0001d	48 8b fc	 mov	 rdi, rsp
  00020	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00025	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002a	f3 ab		 rep stosd
  0002c	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  00034	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DC63C0AB_AlgorithmCpp@cpp
  0003b	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00040	90		 npad	 1
  00041	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00048	5f		 pop	 rdi
  00049	5d		 pop	 rbp
  0004a	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\AlgorithmCpp.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DC63C0AB_AlgorithmCpp@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\AlgorithmCpp.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8b fc	 mov	 rdi, rsp
  0001b	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  00020	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00025	f3 ab		 rep stosd
  00027	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002f	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DC63C0AB_AlgorithmCpp@cpp
  00036	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0003b	90		 npad	 1
  0003c	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00043	5f		 pop	 rdi
  00044	5d		 pop	 rbp
  00045	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File E:\project\game_server\Server\AlgorithmCpp.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8b fc	 mov	 rdi, rsp
  00016	b9 3a 00 00 00	 mov	 ecx, 58			; 0000003aH
  0001b	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  00020	f3 ab		 rep stosd
  00022	48 8b 8c 24 08
	01 00 00	 mov	 rcx, QWORD PTR [rsp+264]
  0002a	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__DC63C0AB_AlgorithmCpp@cpp
  00031	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00036	90		 npad	 1
  00037	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0003e	5f		 pop	 rdi
  0003f	5d		 pop	 rbp
  00040	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
